#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Herzen Core –≤ Docker
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./dev.sh [start|stop|restart|logs|shell|clean]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

COMPOSE_FILE="docker-compose.dev.yml"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
cleanup_conflicting_containers() {
  echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
  
  # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–æ –∏–º–µ–Ω–∞–º –∏–∑ docker-compose.dev.yml
  docker rm -f herzen-core-dev 2>/dev/null || true
  docker rm -f herzen-mongo-dev 2>/dev/null || true
  
  # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –∏–º–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å)
  docker ps -a --filter "name=herzen" --format "{{.Names}}" | xargs -r docker rm -f 2>/dev/null || true
  
  echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã${NC}"
}

case "${1:-start}" in
  start)
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Herzen Core –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${NC}"
    cleanup_conflicting_containers
    docker-compose -f $COMPOSE_FILE up -d --build
           echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!${NC}"
           echo -e "${BLUE}üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8118${NC}"
           echo -e "${BLUE}üóÑÔ∏è  MongoDB: localhost:27017${NC}"
           echo -e "${YELLOW}üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: ./dev.sh logs${NC}"
    ;;
  
  stop)
    echo -e "${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
    docker-compose -f $COMPOSE_FILE down
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
    ;;
  
  restart)
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
    docker-compose -f $COMPOSE_FILE restart
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!${NC}"
    ;;
  
  logs)
    echo -e "${BLUE}üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏...${NC}"
    docker-compose -f $COMPOSE_FILE logs -f
    ;;
  
  shell)
    echo -e "${BLUE}üêö –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
    docker-compose -f $COMPOSE_FILE exec herzen sh
    ;;
  
  clean)
    echo -e "${RED}üßπ –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ...${NC}"
    docker-compose -f $COMPOSE_FILE down -v
    docker system prune -f
    echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    ;;
  
  build)
    echo -e "${BLUE}üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã...${NC}"
    cleanup_conflicting_containers
    docker-compose -f $COMPOSE_FILE build --no-cache
    docker-compose -f $COMPOSE_FILE up -d
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã –∏ –∑–∞–ø—É—â–µ–Ω—ã!${NC}"
    ;;
  
  rebuild)
    echo -e "${BLUE}üîÑ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...${NC}"
    cleanup_conflicting_containers
    docker-compose -f $COMPOSE_FILE down -v
    docker-compose -f $COMPOSE_FILE build --no-cache
    docker-compose -f $COMPOSE_FILE up -d
    echo -e "${GREEN}‚úÖ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    ;;
  
  *)
    echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [start|stop|restart|logs|shell|clean|build|rebuild]${NC}"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã (—Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π –æ–±—Ä–∞–∑–æ–≤)"
    echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  shell   - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  clean   - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  build   - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å"
    echo "  rebuild - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (—É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ)"
    exit 1
    ;;
esac
