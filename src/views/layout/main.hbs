<!DOCTYPE html>
<html>
<head>
    <title>{{data.common.siteTitle}} &middot; {{{title}}}</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="csrf-token" content="{{data.common.csrfToken}}" />
    <link rel="icon" href="{{data.common.favicon}}" />
    
    <!-- Preload critical CSS -->
    <link rel="preload" href="/css/normalize.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <link rel="preload" href="/css/plugins.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <link rel="preload" href="/css/app.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    
    <!-- Fallback for browsers that don't support preload -->
    <noscript>
        <link rel="stylesheet" href="/css/normalize.min.css">
        <link rel="stylesheet" href="/css/plugins.min.css">
        <link rel="stylesheet" href="/css/app.min.css">
    </noscript>
    
    <!-- Preload critical JavaScript -->
    <link rel="preload" href="/js/vendor.js" as="script">
    <link rel="preload" href="/js/trudesk.min.js" as="script">
    
    <!-- Prevent layout shift -->
    <style>
        /* Prevent layout shift while CSS loads */
        body { 
            visibility: hidden; 
            overflow: hidden;
        }
        body.loaded { 
            visibility: visible; 
            overflow: auto;
        }
        
        /* Ensure critical elements are hidden until loaded */
        .responsive-wrapper { 
            opacity: 0; 
            transition: opacity 0.3s ease;
            min-height: 100vh;
        }
        .responsive-wrapper.loaded { 
            opacity: 1; 
        }
        
        /* Prevent Modernizr from causing layout shift */
        .modernizr-test,
        [class*="modernizr"],
        [id*="modernizr"],
        [class*="test"],
        [id*="test"] {
            position: fixed !important;
            top: -9999px !important;
            left: -9999px !important;
            visibility: hidden !important;
            pointer-events: none !important;
            width: 0 !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: none !important;
            overflow: hidden !important;
        }
        
        /* Prevent any test elements from affecting layout */
        [style*="position:absolute"],
        [style*="visibility:hidden"],
        [style*="position: fixed"] {
            position: fixed !important;
            top: -9999px !important;
            left: -9999px !important;
            width: 0 !important;
            height: 0 !important;
        }
        
        /* Hide any elements that might cause layout shift */
        input[type="hidden"],
        input[style*="display: none"],
        div[style*="display: none"] {
            display: none !important;
        }
    </style>
    
    <!-- PWA Meta Tags -->
    <meta name="theme-color" content="#29b6f6" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="{{data.common.siteTitle}}" />
    <meta name="mobile-web-app-capable" content="yes" />
    
    <!-- PWA Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/icons/icon-32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/icons/icon-16.png" />
    <link rel="icon" type="image/png" sizes="192x192" href="/icons/icon-192.png" />
    <link rel="icon" type="image/png" sizes="512x512" href="/icons/icon-512.png" />
    
    <!-- Inline PWA Manifest -->
    <script>
        // Generate PWA Manifest as Data URL
        const pwaManifest = {
            "name": "{{data.common.siteTitle}}",
            "short_name": "Herzen Core",
            "description": "Herzen Core - Help Desk System",
            "start_url": "/",
            "display": "standalone",
            "background_color": "#ffffff",
            "theme_color": "#29b6f6",
            "orientation": "portrait-primary",
            "scope": "/",
            "icons": [
                {
                    "src": "/icons/icon-16.png",
                    "sizes": "16x16",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-32.png",
                    "sizes": "32x32",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-48.png",
                    "sizes": "48x48",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-72.png",
                    "sizes": "72x72",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-96.png",
                    "sizes": "96x96",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-144.png",
                    "sizes": "144x144",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-192.png",
                    "sizes": "192x192",
                    "type": "image/png",
                    "purpose": "any"
                },
                {
                    "src": "/icons/icon-512.png",
                    "sizes": "512x512",
                    "type": "image/png",
                    "purpose": "any"
                }
            ],
            "categories": ["productivity", "business"],
            "lang": "ru",
            "dir": "ltr"
        };
        
        // Create manifest as data URL
        const manifestBlob = new Blob([JSON.stringify(pwaManifest)], {type: 'application/json'});
        const manifestURL = URL.createObjectURL(manifestBlob);
        
        // Add manifest link to head
        const link = document.createElement('link');
        link.rel = 'manifest';
        link.href = manifestURL;
        document.head.appendChild(link);
    </script>
    <link rel="stylesheet" href="/css/normalize.min.css"/>

    {{#block 'css'}}

    {{/block}}

    <link rel="stylesheet" href="/css/plugins.min.css"/>
    <link rel="stylesheet" href="/css/app.min.css"/>

    {{#block 'plugincss'}}

    {{/block}}

    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/vendor.js"></script>
<!--    <script src="/js/truRequire.js"></script>-->
</head>
<body>
<!--<header>-->
    <!--<div aria-busy="false" aria-label="Loading, please wait." role="progressbar"></div>-->
<!--</header>-->
<div id="loader-wrapper" class="loader-wrapper">
    <div class="shadow-wrapper">
        <svg class="shadow">
            <defs>
                <radialGradient r="0.5" cy="0.5" cx="0.5" id="bigdotshadow">
                    <stop stop-color="#000000" offset="0"/>
                    <stop stop-opacity="0" stop-color="#000000" offset="1"/>
                </radialGradient>
            </defs>
            <ellipse class="shadow" opacity="0.2" ry="6" rx="10" id="svg_1" cy="65" cx="103" stroke-linecap="null" stroke-linejoin="null" stroke-width="0" stroke="#000000" fill="url(#bigdotshadow)"/>
        </svg>
    </div>
    <div class="test-wrapper">
        <svg id="t" class="bigdot" style="width: 140px; height: 75px;" viewBox="0 0 288.9 70.1" preserveAspectRatio="xMidYMid meet">
            <g id="g" style="width: 100%; height: 100%;">
                <circle class="s1" cx="35.9" cy="82" r="10" />
            </g>
        </svg>
    </div>
</div>
<div id="serverRestarting" class="loader-wrapper hide" style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: #ddd; z-index: 999998;">
    <div class="shadow-wrapper">
        <svg class="shadow">
            <defs>
                <radialGradient r="0.5" cy="0.5" cx="0.5" id="shadow">
                    <stop stop-color="#323232" offset="0"/>
                    <stop stop-opacity="0" stop-color="#323232" offset="1"/>
                </radialGradient>
            </defs>
            <ellipse class="shadow" opacity="0.2" ry="6" rx="35" id="svg_1" cy="65" cx="90" stroke-linecap="null" stroke-linejoin="null" stroke-width="0" stroke="#323232" fill="url(#shadow)"/>
        </svg>
    </div>
    <div class="test-wrapper" style="width: 280px;">
        <svg id="t" class="t" style="width: 140px; height: 75px;" viewBox="0 0 288.9 70.1" preserveAspectRatio="xMidYMid meet">
            <g id="g" style="width: 100%; height: 100%;">
                <path class="s1" d="M28.5,28.4c-0.1,1.6-0.7,3.4-1.6,5.4c-2.4-0.3-4.6-0.4-6.8-0.4h-1.7c-2.9,13.9-4.3,22.6-4.3,26.1 c0,1.8,0.4,2.7,1.2,2.7c0.8,0,2.9-0.8,6.2-2.3l1.7,3.1C17.7,67.7,12.5,70,7.8,70c-2.2,0-4-0.7-5.4-2.1c-1.4-1.4-2.1-3.2-2.1-5.5	c0-2.3,0.3-4.9,0.8-7.7c0.5-2.9,1.3-6.4,2.2-10.6c0.9-4.2,1.6-7.5,2.1-10.1c-2.3,0.2-4,0.4-5.2,0.6c-0.1-0.8-0.2-1.8-0.2-3	c0-1.3,0.1-2.3,0.3-3.1h5.9c0.5-3.4,0.8-6.6,0.8-9.6L6.8,16v-0.3c4.9-1.7,9.5-2.5,13.8-2.5c0.2,1.3,0.4,2.8,0.4,4.7	c0,1.9-0.5,5.4-1.6,10.6H28.5z" />
                <circle class="s1" cx="35.9" cy="82" r="4" />
            </g>
        </svg>
    </div>
    <div class="test-wrapper" style="height: auto; top: 52%; width: 280px;">
        <h4 style="font-size: 24px; font-weight: 300; margin-left: 25px;">Please Wait...</h4>
    </div>
</div>
<!-- Mobile overlay removed - using responsive design instead -->

<div class="disconnected loader-wrapper" style="display: none; opacity: 0; z-index: 999997;">
    <div class="shadow-wrapper">
        <svg class="shadow">
            <defs>
                <radialGradient r="0.5" cy="0.5" cx="0.5" id="shadow">
                    <stop stop-color="#323232" offset="0"/>
                    <stop stop-opacity="0" stop-color="#323232" offset="1"/>
                </radialGradient>
            </defs>
            <ellipse class="shadow" opacity="0.2" ry="6" rx="35" id="svg_1" cy="65" cx="90" stroke-linecap="null" stroke-linejoin="null" stroke-width="0" stroke="#323232" fill="url(#shadow)"/>
        </svg>
    </div>
    <div class="test-wrapper">
        <svg id="t" class="t" style="width: 140px; height: 75px;" viewBox="0 0 288.9 70.1" preserveAspectRatio="xMidYMid meet">
            <g id="g" style="width: 100%; height: 100%;">
                <path class="s1" style="fill: white !important;" d="M28.5,28.4c-0.1,1.6-0.7,3.4-1.6,5.4c-2.4-0.3-4.6-0.4-6.8-0.4h-1.7c-2.9,13.9-4.3,22.6-4.3,26.1 c0,1.8,0.4,2.7,1.2,2.7c0.8,0,2.9-0.8,6.2-2.3l1.7,3.1C17.7,67.7,12.5,70,7.8,70c-2.2,0-4-0.7-5.4-2.1c-1.4-1.4-2.1-3.2-2.1-5.5	c0-2.3,0.3-4.9,0.8-7.7c0.5-2.9,1.3-6.4,2.2-10.6c0.9-4.2,1.6-7.5,2.1-10.1c-2.3,0.2-4,0.4-5.2,0.6c-0.1-0.8-0.2-1.8-0.2-3	c0-1.3,0.1-2.3,0.3-3.1h5.9c0.5-3.4,0.8-6.6,0.8-9.6L6.8,16v-0.3c4.9-1.7,9.5-2.5,13.8-2.5c0.2,1.3,0.4,2.8,0.4,4.7	c0,1.9-0.5,5.4-1.6,10.6H28.5z" />
                <circle class="s1" cx="35.9" cy="82" r="4" />
            </g>
        </svg>
    </div>
    <div style="position:absolute;width: 400px;top:50%; left: 50%;transform: translate(-50%, -50%);">
        <p style="padding-top: 75px;">Disconnected... Trying to reconnect</p>
    </div>
</div>
<!--<div class="tour-fader hide" style="top: 0; left: 0; position: absolute; width: 100vw; height: 100vh; background: rgba(0,0,0,0.3); z-index: 1;"></div>-->

<!--Tour Start Here-->
<div id="__tourEnabled" class="hide" style="display:none; visibility: hidden; opacity: 0;">{{data.common.showTour}}</div>
<div id="__timezone" class="hide" style="display:none; visibility: hidden; opacity: 0;">{{data.common.timezone}}</div>
<div class="wrapper responsive-wrapper" style="overflow: hidden; height: 100%;">
    <div id="globals"></div>

    {{> topbar }}
    {{> nav }}

    <div class="ajaxyContent">
        <div id="page-content" style="margin-left: 57px;" ng-controller="TrudeskController">
            <div id="__sidebar_route" class="hide" style="visibility: hidden">{{nav}}</div>
            <div id="__sidebar_sub_route" class="hide" style="visibility: hidden">{{subnav}}</div>
            {{{body}}}
        </div>
    </div>
    {{> onlineListSidebar }}
    <div id="modal-wrapper"></div>
</div>

<audio id="TICKET_CREATED_audio" src="/sounds/newticket.ogg" class="uk-hidden"></audio>
<audio id="newmessageaudio" src="/sounds/newmessage.ogg" class="uk-hidden"></audio>
<audio id="sendChatMessage_audio" src="/sounds/messagesent.ogg" class="uk-hidden"></audio>
<audio id="receivedChatMessage_audio" src="/sounds/messagereceived.ogg" class="uk-hidden"></audio>
<audio id="success_audio" src="/sounds/success.ogg" class="uk-hidden"></audio>
<audio id="error_audio" src="/sounds/error.ogg" class="uk-hidden"></audio>
<audio id="clicksound" src="/sounds/click.ogg" class="uk-hidden"></audio>

{{#block "js-plugins"}}

{{/block}}
<!-- Mobile redirect removed - using responsive design instead -->

    <!-- PWA Service Worker and Install Logic -->
    <script>
    // Prevent layout shift - intercept Modernizr and other test elements
    (function() {
        // Override createElement to intercept test elements
        const originalCreateElement = document.createElement;
        document.createElement = function(tagName) {
            const element = originalCreateElement.call(this, tagName);
            
            // If it's a test element, hide it immediately
            if (tagName === 'input' || tagName === 'div' || tagName === 'span') {
                element.style.cssText = 'position: fixed !important; top: -9999px !important; left: -9999px !important; visibility: hidden !important; width: 0 !important; height: 0 !important;';
            }
            
            return element;
        };
        
        // Override appendChild to hide test elements
        const originalAppendChild = Node.prototype.appendChild;
        Node.prototype.appendChild = function(child) {
            if (child && (child.className && (child.className.includes('modernizr') || child.className.includes('test')))) {
                child.style.cssText = 'position: fixed !important; top: -9999px !important; left: -9999px !important; visibility: hidden !important; width: 0 !important; height: 0 !important;';
            }
            return originalAppendChild.call(this, child);
        };
    })();
    
    // Prevent layout shift - show content when ready
    document.addEventListener('DOMContentLoaded', function() {
        // Wait for CSS and all resources to load
        function waitForComplete() {
            if (document.readyState === 'complete') {
                // Additional delay to ensure all CSS is applied
                setTimeout(function() {
                    document.body.classList.add('loaded');
                    document.querySelector('.responsive-wrapper')?.classList.add('loaded');
                    console.log('PWA: Content loaded and visible');
                }, 100);
            } else {
                setTimeout(waitForComplete, 10);
            }
        }
        waitForComplete();
    });
    
    // Fallback - show content after 3 seconds maximum
    setTimeout(function() {
        if (!document.body.classList.contains('loaded')) {
            console.log('PWA: Fallback - showing content after timeout');
            document.body.classList.add('loaded');
            document.querySelector('.responsive-wrapper')?.classList.add('loaded');
        }
    }, 3000);
    
    // Service Worker Registration
    if ('serviceWorker' in navigator) {
        console.log('PWA: Service Worker supported, attempting registration...');
        
        window.addEventListener('load', function() {
            console.log('PWA: Page loaded, registering Service Worker...');
            
            // Register Service Worker from server file
            navigator.serviceWorker.register('/sw.js', {
                scope: '/'
            })
            .then(function(registration) {
                console.log('PWA Service Worker registered successfully:', registration);
                console.log('PWA Scope:', registration.scope);
                console.log('PWA Active Worker:', registration.active);
                
                // Check for updates
                registration.addEventListener('updatefound', function() {
                    console.log('PWA: Update found, installing new Service Worker...');
                    const newWorker = registration.installing;
                    newWorker.addEventListener('statechange', function() {
                        console.log('PWA: New Service Worker state:', newWorker.state);
                        if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                            console.log('PWA Service Worker updated successfully');
                            // Optionally show update notification
                        }
                    });
                });
            })
            .catch(function(error) {
                console.error('PWA Service Worker registration failed:', error);
                console.error('PWA Error details:', {
                    name: error.name,
                    message: error.message,
                    stack: error.stack
                });
            });
        });
    } else {
        console.log('PWA: Service Worker not supported in this browser');
    }

// PWA Install Prompt
let deferredPrompt;
let installButton;

// Create install button for PWA
function createInstallButton() {
    if (installButton) return;
    
    installButton = document.createElement('button');
    installButton.innerHTML = '📱 Установить приложение';
    installButton.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #29b6f6;
        color: white;
        border: none;
        padding: 12px 16px;
        border-radius: 8px;
        font-size: 14px;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 1000;
        display: none;
    `;
    
    installButton.addEventListener('click', function() {
        if (deferredPrompt) {
            deferredPrompt.prompt();
            deferredPrompt.userChoice.then(function(choiceResult) {
                if (choiceResult.outcome === 'accepted') {
                    console.log('PWA installation accepted');
                } else {
                    console.log('PWA installation dismissed');
                }
                deferredPrompt = null;
                installButton.style.display = 'none';
            });
        }
    });
    
    document.body.appendChild(installButton);
}

// Listen for beforeinstallprompt event
window.addEventListener('beforeinstallprompt', function(e) {
    // Prevent Chrome 67 and earlier from automatically showing the prompt
    e.preventDefault();
    // Stash the event so it can be triggered later
    deferredPrompt = e;
    
    // Show install button on mobile devices
    if (window.innerWidth <= 768) {
        createInstallButton();
        installButton.style.display = 'block';
    }
});

// Listen for app installed event
window.addEventListener('appinstalled', function(evt) {
    console.log('PWA was installed');
    if (installButton) {
        installButton.style.display = 'none';
    }
});

// Check if app is running in standalone mode
if (window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone === true) {
    console.log('PWA is running in standalone mode');
    // Hide install button if already installed
    if (installButton) {
        installButton.style.display = 'none';
    }
    }
</script>

<script src="/js/trudesk.min.js"></script>

</body>

</html>
