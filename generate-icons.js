const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∫–æ–Ω–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const iconsDir = path.join(__dirname, 'public', 'icons');
if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir, { recursive: true });
}

// –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫ –¥–ª—è PWA
const sizes = [
    { size: 16, name: 'icon-16.png' },
    { size: 32, name: 'icon-32.png' },
    { size: 48, name: 'icon-48.png' },
    { size: 72, name: 'icon-72.png' },
    { size: 96, name: 'icon-96.png' },
    { size: 144, name: 'icon-144.png' },
    { size: 192, name: 'icon-192.png' },
    { size: 512, name: 'icon-512.png' }
];

// –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É SVG
const inputPath = path.join(__dirname, 'public', 'icons', 'herzen-logo.svg');

async function generateIcons() {
    try {
        console.log('üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PWA –∏–∫–æ–Ω–∫–∏ –∏–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –ì–µ—Ä—Ü–µ–Ω–æ–≤—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!fs.existsSync(inputPath)) {
            console.error('‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', inputPath);
            return;
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        for (const { size, name } of sizes) {
            const outputPath = path.join(iconsDir, name);
            
            await sharp(inputPath)
                .resize(size, size, {
                    fit: 'contain',
                    background: { r: 255, g: 255, b: 255, alpha: 0 } // –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
                })
                .png()
                .toFile(outputPath);
            
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞ ${name} (${size}x${size})`);
        }
        
        // –°–æ–∑–¥–∞–µ–º favicon.ico (16x16)
        const faviconPath = path.join(__dirname, 'public', 'favicon.ico');
        await sharp(inputPath)
            .resize(16, 16, {
                fit: 'contain',
                background: { r: 255, g: 255, b: 255, alpha: 0 }
            })
            .png()
            .toFile(faviconPath);
        
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω favicon.ico (16x16)');
        
        // –°–æ–∑–¥–∞–µ–º apple-touch-icon (180x180)
        const appleTouchIconPath = path.join(iconsDir, 'apple-touch-icon.png');
        await sharp(inputPath)
            .resize(180, 180, {
                fit: 'contain',
                background: { r: 255, g: 255, b: 255, alpha: 0 }
            })
            .png()
            .toFile(appleTouchIconPath);
        
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω apple-touch-icon.png (180x180)');
        
        console.log('üéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∫–æ–Ω–æ–∫:', error);
    }
}

generateIcons();
