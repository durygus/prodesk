/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/*!***********************************************!*\
  !*** ./src/public/js/vendor/jquery/jquery.js ***!
  \***********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n;(function (global, factory) {\n  if ( true && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document\n      ? factory(global, true)\n      : function (w) {\n          if (!w.document) {\n            throw new Error('jQuery requires a window with a document')\n          }\n          return factory(w)\n        }\n  } else {\n    factory(global)\n  }\n\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n  // Support: Firefox 18+\n  // Can't be in strict mode, several libs including ASP.NET trace\n  // the stack via arguments.caller.callee and Firefox dies if\n  // you try to trace through \"use strict\" call chains. (#13335)\n  //\"use strict\";\n  var arr = []\n\n  var document = window.document\n\n  var slice = arr.slice\n\n  var concat = arr.concat\n\n  var push = arr.push\n\n  var indexOf = arr.indexOf\n\n  var class2type = {}\n\n  var toString = class2type.toString\n\n  var hasOwn = class2type.hasOwnProperty\n\n  var support = {}\n\n  var version = '2.2.4',\n    // Define a local copy of jQuery\n    jQuery = function (selector, context) {\n      // The jQuery object is actually just the init constructor 'enhanced'\n      // Need init if jQuery is called (just allow error to be thrown if not included)\n      return new jQuery.fn.init(selector, context)\n    },\n    // Support: Android<4.1\n    // Make sure we trim BOM and NBSP\n    rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n    // Matches dashed string for camelizing\n    rmsPrefix = /^-ms-/,\n    rdashAlpha = /-([\\da-z])/gi,\n    // Used by jQuery.camelCase as callback to replace()\n    fcamelCase = function (all, letter) {\n      return letter.toUpperCase()\n    }\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n\n    constructor: jQuery,\n\n    // Start with an empty selector\n    selector: '',\n\n    // The default length of a jQuery object is 0\n    length: 0,\n\n    toArray: function () {\n      return slice.call(this)\n    },\n\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      return num != null\n        ? // Return just the one element from the set\n          num < 0\n          ? this[num + this.length]\n          : this[num]\n        : // Return all the elements in a clean array\n          slice.call(this)\n    },\n\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems)\n\n      // Add the old object onto the stack (as a reference)\n      ret.prevObject = this\n      ret.context = this.context\n\n      // Return the newly-formed element set\n      return ret\n    },\n\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback)\n    },\n\n    map: function (callback) {\n      return this.pushStack(\n        jQuery.map(this, function (elem, i) {\n          return callback.call(elem, i, elem)\n        })\n      )\n    },\n\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments))\n    },\n\n    first: function () {\n      return this.eq(0)\n    },\n\n    last: function () {\n      return this.eq(-1)\n    },\n\n    eq: function (i) {\n      var len = this.length,\n        j = +i + (i < 0 ? len : 0)\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : [])\n    },\n\n    end: function () {\n      return this.prevObject || this.constructor()\n    },\n\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  }\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false\n\n    // Handle a deep copy situation\n    if (typeof target === 'boolean') {\n      deep = target\n\n      // Skip the boolean and the target\n      target = arguments[i] || {}\n      i++\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== 'object' && !jQuery.isFunction(target)) {\n      target = {}\n    }\n\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n      target = this\n      i--\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name]\n          copy = options[name]\n\n          // Prevent never-ending loop\n          if (target === copy) {\n            continue\n          }\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false\n              clone = src && jQuery.isArray(src) ? src : []\n            } else {\n              clone = src && jQuery.isPlainObject(src) ? src : {}\n            }\n\n            // Never move original objects, clone them\n            target[name] = jQuery.extend(deep, clone, copy)\n\n            // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy\n          }\n        }\n      }\n    }\n\n    // Return the modified object\n    return target\n  }\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: 'jQuery' + (version + Math.random()).replace(/\\D/g, ''),\n\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n\n    error: function (msg) {\n      throw new Error(msg)\n    },\n\n    noop: function () {},\n\n    isFunction: function (obj) {\n      return jQuery.type(obj) === 'function'\n    },\n\n    isArray: Array.isArray,\n\n    isWindow: function (obj) {\n      return obj != null && obj === obj.window\n    },\n\n    isNumeric: function (obj) {\n      // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n      // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n      // subtraction forces infinities to NaN\n      // adding 1 corrects loss of precision from parseFloat (#15100)\n      var realStringObj = obj && obj.toString()\n      return !jQuery.isArray(obj) && realStringObj - parseFloat(realStringObj) + 1 >= 0\n    },\n\n    isPlainObject: function (obj) {\n      var key\n\n      // Not plain objects:\n      // - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n      // - DOM nodes\n      // - window\n      if (jQuery.type(obj) !== 'object' || obj.nodeType || jQuery.isWindow(obj)) {\n        return false\n      }\n\n      // Not own constructor property must be Object\n      if (\n        obj.constructor &&\n        !hasOwn.call(obj, 'constructor') &&\n        !hasOwn.call(obj.constructor.prototype || {}, 'isPrototypeOf')\n      ) {\n        return false\n      }\n\n      // Own properties are enumerated firstly, so to speed up,\n      // if last one is own, then all properties are own\n      for (key in obj) {\n      }\n\n      return key === undefined || hasOwn.call(obj, key)\n    },\n\n    isEmptyObject: function (obj) {\n      var name\n      for (name in obj) {\n        return false\n      }\n      return true\n    },\n\n    type: function (obj) {\n      if (obj == null) {\n        return obj + ''\n      }\n\n      // Support: Android<4.0, iOS<6 (functionish RegExp)\n      return typeof obj === 'object' || typeof obj === 'function'\n        ? class2type[toString.call(obj)] || 'object'\n        : typeof obj\n    },\n\n    // Evaluates a script in a global context\n    globalEval: function (code) {\n      var script,\n        indirect = eval\n\n      code = jQuery.trim(code)\n\n      if (code) {\n        // If the code includes a valid, prologue position\n        // strict mode pragma, execute code by injecting a\n        // script tag into the document.\n        if (code.indexOf('use strict') === 1) {\n          script = document.createElement('script')\n          script.text = code\n          document.head.appendChild(script).parentNode.removeChild(script)\n        } else {\n          // Otherwise, avoid the DOM node creation, insertion\n          // and removal by using an indirect global eval\n\n          indirect(code)\n        }\n      }\n    },\n\n    // Convert dashed to camelCase; used by the css and data modules\n    // Support: IE9-11+\n    // Microsoft forgot to hump their vendor prefix (#9572)\n    camelCase: function (string) {\n      return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase)\n    },\n\n    nodeName: function (elem, name) {\n      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()\n    },\n\n    each: function (obj, callback) {\n      var length,\n        i = 0\n\n      if (isArrayLike(obj)) {\n        length = obj.length\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break\n          }\n        }\n      }\n\n      return obj\n    },\n\n    // Support: Android<4.1\n    trim: function (text) {\n      return text == null ? '' : (text + '').replace(rtrim, '')\n    },\n\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || []\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr)\n        } else {\n          push.call(ret, arr)\n        }\n      }\n\n      return ret\n    },\n\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i)\n    },\n\n    merge: function (first, second) {\n      var len = +second.length,\n        j = 0,\n        i = first.length\n\n      for (; j < len; j++) {\n        first[i++] = second[j]\n      }\n\n      first.length = i\n\n      return first\n    },\n\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n        matches = [],\n        i = 0,\n        length = elems.length,\n        callbackExpect = !invert\n\n      // Go through the array, only saving the items\n      // that pass the validator function\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i)\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i])\n        }\n      }\n\n      return matches\n    },\n\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n        value,\n        i = 0,\n        ret = []\n\n      // Go through the array, translating each of the items to their new values\n      if (isArrayLike(elems)) {\n        length = elems.length\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg)\n\n          if (value != null) {\n            ret.push(value)\n          }\n        }\n\n        // Go through every key on the object,\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg)\n\n          if (value != null) {\n            ret.push(value)\n          }\n        }\n      }\n\n      // Flatten any nested arrays\n      return concat.apply([], ret)\n    },\n\n    // A global GUID counter for objects\n    guid: 1,\n\n    // Bind a function to a context, optionally partially applying any\n    // arguments.\n    proxy: function (fn, context) {\n      var tmp, args, proxy\n\n      if (typeof context === 'string') {\n        tmp = fn[context]\n        context = fn\n        fn = tmp\n      }\n\n      // Quick check to determine if target is callable, in the spec\n      // this throws a TypeError, but we will just return undefined.\n      if (!jQuery.isFunction(fn)) {\n        return undefined\n      }\n\n      // Simulated bind\n      args = slice.call(arguments, 2)\n      proxy = function () {\n        return fn.apply(context || this, args.concat(slice.call(arguments)))\n      }\n\n      // Set the guid of unique handler to the same of original handler, so it can be removed\n      proxy.guid = fn.guid = fn.guid || jQuery.guid++\n\n      return proxy\n    },\n\n    now: Date.now,\n\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  })\n\n  // JSHint would error on this code due to the Symbol not being defined in ES5.\n  // Defining this global in .jshintrc would create a danger of using the global\n  // unguarded in another place, it seems safer to just disable JSHint for these\n  // three lines.\n  /* jshint ignore: start */\n  if (typeof Symbol === 'function') {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]\n  }\n  /* jshint ignore: end */\n\n  // Populate the class2type map\n  jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {\n    class2type['[object ' + name + ']'] = name.toLowerCase()\n  })\n\n  function isArrayLike (obj) {\n    // Support: iOS 8.2 (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && 'length' in obj && obj.length,\n      type = jQuery.type(obj)\n\n    if (type === 'function' || jQuery.isWindow(obj)) {\n      return false\n    }\n\n    return type === 'array' || length === 0 || (typeof length === 'number' && length > 0 && length - 1 in obj)\n  }\n  var Sizzle =\n    /*!\n     * Sizzle CSS Selector Engine v2.2.1\n     * http://sizzlejs.com/\n     *\n     * Copyright jQuery Foundation and other contributors\n     * Released under the MIT license\n     * http://jquery.org/license\n     *\n     * Date: 2015-10-17\n     */\n    (function (window) {\n      var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n        setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n        expando = 'sizzle' + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        sortOrder = function (a, b) {\n          if (a === b) {\n            hasDuplicate = true\n          }\n          return 0\n        },\n        // General-purpose constants\n        MAX_NEGATIVE = 1 << 31,\n        // Instance methods\n        hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        push_native = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n        // http://jsperf.com/thor-indexof-vs-for/5\n        indexOf = function (list, elem) {\n          var i = 0,\n            len = list.length\n          for (; i < len; i++) {\n            if (list[i] === elem) {\n              return i\n            }\n          }\n          return -1\n        },\n        booleans =\n          'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',\n        // Regular expressions\n\n        // http://www.w3.org/TR/css3-selectors/#whitespace\n        whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n        identifier = '(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+',\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n        attributes =\n          '\\\\[' +\n          whitespace +\n          '*(' +\n          identifier +\n          ')(?:' +\n          whitespace +\n          // Operator (capture 2)\n          '*([*^$|!~]?=)' +\n          whitespace +\n          // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n          '*(?:\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(' +\n          identifier +\n          '))|)' +\n          whitespace +\n          '*\\\\]',\n        pseudos =\n          ':(' +\n          identifier +\n          ')(?:\\\\((' +\n          // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n          // 1. quoted (capture 3; capture 4 or capture 5)\n          '(\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|' +\n          // 2. simple (capture 6)\n          '((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|' +\n          attributes +\n          ')*)|' +\n          // 3. anything else (capture 2)\n          '.*' +\n          ')\\\\)|)',\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n        rwhitespace = new RegExp(whitespace + '+', 'g'),\n        rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)' + whitespace + '+$', 'g'),\n        rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'),\n        rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'),\n        rattributeQuotes = new RegExp('=' + whitespace + '*([^\\\\]\\'\"]*?)' + whitespace + '*\\\\]', 'g'),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp('^' + identifier + '$'),\n        matchExpr = {\n          ID: new RegExp('^#(' + identifier + ')'),\n          CLASS: new RegExp('^\\\\.(' + identifier + ')'),\n          TAG: new RegExp('^(' + identifier + '|[*])'),\n          ATTR: new RegExp('^' + attributes),\n          PSEUDO: new RegExp('^' + pseudos),\n          CHILD: new RegExp(\n            '^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(' +\n              whitespace +\n              '*(even|odd|(([+-]|)(\\\\d*)n|)' +\n              whitespace +\n              '*(?:([+-]|)' +\n              whitespace +\n              '*(\\\\d+)|))' +\n              whitespace +\n              '*\\\\)|)',\n            'i'\n          ),\n          bool: new RegExp('^(?:' + booleans + ')$', 'i'),\n          // For use in libraries implementing .is()\n          // We use this for POS matching in `select`\n          needsContext: new RegExp(\n            '^' +\n              whitespace +\n              '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(' +\n              whitespace +\n              '*((?:-\\\\d)?\\\\d*)' +\n              whitespace +\n              '*\\\\)|)(?=[^-]|$)',\n            'i'\n          )\n        },\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n        rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        rescape = /'|\\\\/g,\n        // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n        runescape = new RegExp('\\\\\\\\([\\\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'),\n        funescape = function (_, escaped, escapedWhitespace) {\n          var high = '0x' + escaped - 0x10000\n          // NaN means non-codepoint\n          // Support: Firefox<24\n          // Workaround erroneous numeric interpretation of +\"0x\"\n          return high !== high || escapedWhitespace\n            ? escaped\n            : high < 0\n            ? // BMP codepoint\n              String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n              String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00)\n        },\n        // Used for iframes\n        // See setDocument()\n        // Removing the function wrapper causes a \"Permission Denied\"\n        // error in IE\n        unloadHandler = function () {\n          setDocument()\n        }\n\n      // Optimize for push.apply( _, NodeList )\n      try {\n        push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes)\n        // Support: Android<4.0\n        // Detect silently failing push.apply\n        arr[preferredDoc.childNodes.length].nodeType\n      } catch (e) {\n        push = {\n          apply: arr.length\n            ? // Leverage slice if possible\n              function (target, els) {\n                push_native.apply(target, slice.call(els))\n              }\n            : // Support: IE<9\n              // Otherwise append directly\n              function (target, els) {\n                var j = target.length,\n                  i = 0\n                // Can't trust NodeList.length\n                while ((target[j++] = els[i++])) {}\n                target.length = j - 1\n              }\n        }\n      }\n\n      function Sizzle (selector, context, results, seed) {\n        var m,\n          i,\n          elem,\n          nid,\n          nidselect,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n          nodeType = context ? context.nodeType : 9\n\n        results = results || []\n\n        // Return early from calls with invalid selector or context\n        if (typeof selector !== 'string' || !selector || (nodeType !== 1 && nodeType !== 9 && nodeType !== 11)) {\n          return results\n        }\n\n        // Try to shortcut find operations (as opposed to filters) in HTML documents\n        if (!seed) {\n          if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n            setDocument(context)\n          }\n          context = context || document\n\n          if (documentIsHTML) {\n            // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n            // (excepting DocumentFragment context, where the methods don't exist)\n            if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n              // ID selector\n              if ((m = match[1])) {\n                // Document context\n                if (nodeType === 9) {\n                  if ((elem = context.getElementById(m))) {\n                    // Support: IE, Opera, Webkit\n                    // TODO: identify versions\n                    // getElementById can match elements by name instead of ID\n                    if (elem.id === m) {\n                      results.push(elem)\n                      return results\n                    }\n                  } else {\n                    return results\n                  }\n\n                  // Element context\n                } else {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                    results.push(elem)\n                    return results\n                  }\n                }\n\n                // Type selector\n              } else if (match[2]) {\n                push.apply(results, context.getElementsByTagName(selector))\n                return results\n\n                // Class selector\n              } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n                push.apply(results, context.getElementsByClassName(m))\n                return results\n              }\n            }\n\n            // Take advantage of querySelectorAll\n            if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n              if (nodeType !== 1) {\n                newContext = context\n                newSelector = selector\n\n                // qSA looks outside Element context, which is not what we want\n                // Thanks to Andrew Dupont for this workaround technique\n                // Support: IE <=8\n                // Exclude object elements\n              } else if (context.nodeName.toLowerCase() !== 'object') {\n                // Capture the context ID, setting it first if necessary\n                if ((nid = context.getAttribute('id'))) {\n                  nid = nid.replace(rescape, '\\\\$&')\n                } else {\n                  context.setAttribute('id', (nid = expando))\n                }\n\n                // Prefix every selector in the list\n                groups = tokenize(selector)\n                i = groups.length\n                nidselect = ridentifier.test(nid) ? '#' + nid : \"[id='\" + nid + \"']\"\n                while (i--) {\n                  groups[i] = nidselect + ' ' + toSelector(groups[i])\n                }\n                newSelector = groups.join(',')\n\n                // Expand context for sibling selectors\n                newContext = (rsibling.test(selector) && testContext(context.parentNode)) || context\n              }\n\n              if (newSelector) {\n                try {\n                  push.apply(results, newContext.querySelectorAll(newSelector))\n                  return results\n                } catch (qsaError) {\n                } finally {\n                  if (nid === expando) {\n                    context.removeAttribute('id')\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // All others\n        return select(selector.replace(rtrim, '$1'), context, results, seed)\n      }\n\n      /**\n       * Create key-value caches of limited size\n       * @returns {function(string, object)} Returns the Object data after storing it on itself with\n       *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n       *\tdeleting the oldest entry\n       */\n      function createCache () {\n        var keys = []\n\n        function cache (key, value) {\n          // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n          if (keys.push(key + ' ') > Expr.cacheLength) {\n            // Only keep the most recent entries\n            delete cache[keys.shift()]\n          }\n          return (cache[key + ' '] = value)\n        }\n        return cache\n      }\n\n      /**\n       * Mark a function for special use by Sizzle\n       * @param {Function} fn The function to mark\n       */\n      function markFunction (fn) {\n        fn[expando] = true\n        return fn\n      }\n\n      /**\n       * Support testing using an element\n       * @param {Function} fn Passed the created div and expects a boolean result\n       */\n      function assert (fn) {\n        var div = document.createElement('div')\n\n        try {\n          return !!fn(div)\n        } catch (e) {\n          return false\n        } finally {\n          // Remove from its parent by default\n          if (div.parentNode) {\n            div.parentNode.removeChild(div)\n          }\n          // release memory in IE\n          div = null\n        }\n      }\n\n      /**\n       * Adds the same handler for all of the specified attrs\n       * @param {String} attrs Pipe-separated list of attributes\n       * @param {Function} handler The method that will be applied\n       */\n      function addHandle (attrs, handler) {\n        var arr = attrs.split('|'),\n          i = arr.length\n\n        while (i--) {\n          Expr.attrHandle[arr[i]] = handler\n        }\n      }\n\n      /**\n       * Checks document order of two siblings\n       * @param {Element} a\n       * @param {Element} b\n       * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n       */\n      function siblingCheck (a, b) {\n        var cur = b && a,\n          diff =\n            cur &&\n            a.nodeType === 1 &&\n            b.nodeType === 1 &&\n            (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE)\n\n        // Use IE sourceIndex if available on both nodes\n        if (diff) {\n          return diff\n        }\n\n        // Check if b follows a\n        if (cur) {\n          while ((cur = cur.nextSibling)) {\n            if (cur === b) {\n              return -1\n            }\n          }\n        }\n\n        return a ? 1 : -1\n      }\n\n      /**\n       * Returns a function to use in pseudos for input types\n       * @param {String} type\n       */\n      function createInputPseudo (type) {\n        return function (elem) {\n          var name = elem.nodeName.toLowerCase()\n          return name === 'input' && elem.type === type\n        }\n      }\n\n      /**\n       * Returns a function to use in pseudos for buttons\n       * @param {String} type\n       */\n      function createButtonPseudo (type) {\n        return function (elem) {\n          var name = elem.nodeName.toLowerCase()\n          return (name === 'input' || name === 'button') && elem.type === type\n        }\n      }\n\n      /**\n       * Returns a function to use in pseudos for positionals\n       * @param {Function} fn\n       */\n      function createPositionalPseudo (fn) {\n        return markFunction(function (argument) {\n          argument = +argument\n          return markFunction(function (seed, matches) {\n            var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length\n\n            // Match elements found at the specified indexes\n            while (i--) {\n              if (seed[(j = matchIndexes[i])]) {\n                seed[j] = !(matches[j] = seed[j])\n              }\n            }\n          })\n        })\n      }\n\n      /**\n       * Checks a node for validity as a Sizzle context\n       * @param {Element|Object=} context\n       * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n       */\n      function testContext (context) {\n        return context && typeof context.getElementsByTagName !== 'undefined' && context\n      }\n\n      // Expose support vars for convenience\n      support = Sizzle.support = {}\n\n      /**\n       * Detects XML nodes\n       * @param {Element|Object} elem An element or a document\n       * @returns {Boolean} True iff elem is a non-HTML XML node\n       */\n      isXML = Sizzle.isXML = function (elem) {\n        // documentElement is verified for cases where it doesn't yet exist\n        // (such as loading iframes in IE - #4833)\n        var documentElement = elem && (elem.ownerDocument || elem).documentElement\n        return documentElement ? documentElement.nodeName !== 'HTML' : false\n      }\n\n      /**\n       * Sets document-related variables once based on the current document\n       * @param {Element|Object} [doc] An element or document object to use to set the document\n       * @returns {Object} Returns the current document\n       */\n      setDocument = Sizzle.setDocument = function (node) {\n        var hasCompare,\n          parent,\n          doc = node ? node.ownerDocument || node : preferredDoc\n\n        // Return early if doc is invalid or already selected\n        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n          return document\n        }\n\n        // Update global variables\n        document = doc\n        docElem = document.documentElement\n        documentIsHTML = !isXML(document)\n\n        // Support: IE 9-11, Edge\n        // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n        if ((parent = document.defaultView) && parent.top !== parent) {\n          // Support: IE 11\n          if (parent.addEventListener) {\n            parent.addEventListener('unload', unloadHandler, false)\n\n            // Support: IE 9 - 10 only\n          } else if (parent.attachEvent) {\n            parent.attachEvent('onunload', unloadHandler)\n          }\n        }\n\n        /* Attributes\n\t---------------------------------------------------------------------- */\n\n        // Support: IE<8\n        // Verify that getAttribute really returns attributes and not properties\n        // (excepting IE8 booleans)\n        support.attributes = assert(function (div) {\n          div.className = 'i'\n          return !div.getAttribute('className')\n        })\n\n        /* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n        // Check if getElementsByTagName(\"*\") returns only elements\n        support.getElementsByTagName = assert(function (div) {\n          div.appendChild(document.createComment(''))\n          return !div.getElementsByTagName('*').length\n        })\n\n        // Support: IE<9\n        support.getElementsByClassName = rnative.test(document.getElementsByClassName)\n\n        // Support: IE<10\n        // Check if getElementById returns elements by name\n        // The broken getElementById methods don't pick up programatically-set names,\n        // so use a roundabout getElementsByName test\n        support.getById = assert(function (div) {\n          docElem.appendChild(div).id = expando\n          return !document.getElementsByName || !document.getElementsByName(expando).length\n        })\n\n        // ID find and filter\n        if (support.getById) {\n          Expr.find['ID'] = function (id, context) {\n            if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n              var m = context.getElementById(id)\n              return m ? [m] : []\n            }\n          }\n          Expr.filter['ID'] = function (id) {\n            var attrId = id.replace(runescape, funescape)\n            return function (elem) {\n              return elem.getAttribute('id') === attrId\n            }\n          }\n        } else {\n          // Support: IE6/7\n          // getElementById is not reliable as a find shortcut\n          delete Expr.find['ID']\n\n          Expr.filter['ID'] = function (id) {\n            var attrId = id.replace(runescape, funescape)\n            return function (elem) {\n              var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id')\n              return node && node.value === attrId\n            }\n          }\n        }\n\n        // Tag\n        Expr.find['TAG'] = support.getElementsByTagName\n          ? function (tag, context) {\n              if (typeof context.getElementsByTagName !== 'undefined') {\n                return context.getElementsByTagName(tag)\n\n                // DocumentFragment nodes don't have gEBTN\n              } else if (support.qsa) {\n                return context.querySelectorAll(tag)\n              }\n            }\n          : function (tag, context) {\n              var elem,\n                tmp = [],\n                i = 0,\n                // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n                results = context.getElementsByTagName(tag)\n\n              // Filter out possible comments\n              if (tag === '*') {\n                while ((elem = results[i++])) {\n                  if (elem.nodeType === 1) {\n                    tmp.push(elem)\n                  }\n                }\n\n                return tmp\n              }\n              return results\n            }\n\n        // Class\n        Expr.find['CLASS'] =\n          support.getElementsByClassName &&\n          function (className, context) {\n            if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {\n              return context.getElementsByClassName(className)\n            }\n          }\n\n        /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n        // QSA and matchesSelector support\n\n        // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n        rbuggyMatches = []\n\n        // qSa(:focus) reports false when true (Chrome 21)\n        // We allow this because of a bug in IE8/9 that throws an error\n        // whenever `document.activeElement` is accessed on an iframe\n        // So, we allow :focus to pass through QSA all the time to avoid the IE error\n        // See http://bugs.jquery.com/ticket/13378\n        rbuggyQSA = []\n\n        if ((support.qsa = rnative.test(document.querySelectorAll))) {\n          // Build QSA regex\n          // Regex strategy adopted from Diego Perini\n          assert(function (div) {\n            // Select is set to empty string on purpose\n            // This is to test IE's treatment of not explicitly\n            // setting a boolean content attribute,\n            // since its presence should be enough\n            // http://bugs.jquery.com/ticket/12359\n            docElem.appendChild(div).innerHTML =\n              \"<a id='\" +\n              expando +\n              \"'></a>\" +\n              \"<select id='\" +\n              expando +\n              \"-\\r\\\\' msallowcapture=''>\" +\n              \"<option selected=''></option></select>\"\n\n            // Support: IE8, Opera 11-12.16\n            // Nothing should be selected when empty strings follow ^= or $= or *=\n            // The test attribute must be unknown in Opera but \"safe\" for WinRT\n            // http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n            if (div.querySelectorAll(\"[msallowcapture^='']\").length) {\n              rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")')\n            }\n\n            // Support: IE8\n            // Boolean attributes and \"value\" are not treated correctly\n            if (!div.querySelectorAll('[selected]').length) {\n              rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')')\n            }\n\n            // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n            if (!div.querySelectorAll('[id~=' + expando + '-]').length) {\n              rbuggyQSA.push('~=')\n            }\n\n            // Webkit/Opera - :checked should return selected option elements\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n            // IE8 throws error here and will not see later tests\n            if (!div.querySelectorAll(':checked').length) {\n              rbuggyQSA.push(':checked')\n            }\n\n            // Support: Safari 8+, iOS 8+\n            // https://bugs.webkit.org/show_bug.cgi?id=136851\n            // In-page `selector#id sibing-combinator selector` fails\n            if (!div.querySelectorAll('a#' + expando + '+*').length) {\n              rbuggyQSA.push('.#.+[+~]')\n            }\n          })\n\n          assert(function (div) {\n            // Support: Windows 8 Native Apps\n            // The type and name attributes are restricted during .innerHTML assignment\n            var input = document.createElement('input')\n            input.setAttribute('type', 'hidden')\n            div.appendChild(input).setAttribute('name', 'D')\n\n            // Support: IE8\n            // Enforce case-sensitivity of name attribute\n            if (div.querySelectorAll('[name=d]').length) {\n              rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=')\n            }\n\n            // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n            // IE8 throws error here and will not see later tests\n            if (!div.querySelectorAll(':enabled').length) {\n              rbuggyQSA.push(':enabled', ':disabled')\n            }\n\n            // Opera 10-11 does not throw on post-comma invalid pseudos\n            div.querySelectorAll('*,:x')\n            rbuggyQSA.push(',.*:')\n          })\n        }\n\n        if (\n          (support.matchesSelector = rnative.test(\n            (matches =\n              docElem.matches ||\n              docElem.webkitMatchesSelector ||\n              docElem.mozMatchesSelector ||\n              docElem.oMatchesSelector ||\n              docElem.msMatchesSelector)\n          ))\n        ) {\n          assert(function (div) {\n            // Check to see if it's possible to do matchesSelector\n            // on a disconnected node (IE 9)\n            support.disconnectedMatch = matches.call(div, 'div')\n\n            // This should fail with an exception\n            // Gecko does not error, returns false instead\n            matches.call(div, \"[s!='']:x\")\n            rbuggyMatches.push('!=', pseudos)\n          })\n        }\n\n        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'))\n        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'))\n\n        /* Contains\n\t---------------------------------------------------------------------- */\n        hasCompare = rnative.test(docElem.compareDocumentPosition)\n\n        // Element contains another\n        // Purposefully self-exclusive\n        // As in, an element does not contain itself\n        contains =\n          hasCompare || rnative.test(docElem.contains)\n            ? function (a, b) {\n                var adown = a.nodeType === 9 ? a.documentElement : a,\n                  bup = b && b.parentNode\n                return (\n                  a === bup ||\n                  !!(\n                    bup &&\n                    bup.nodeType === 1 &&\n                    (adown.contains\n                      ? adown.contains(bup)\n                      : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16)\n                  )\n                )\n              }\n            : function (a, b) {\n                if (b) {\n                  while ((b = b.parentNode)) {\n                    if (b === a) {\n                      return true\n                    }\n                  }\n                }\n                return false\n              }\n\n        /* Sorting\n\t---------------------------------------------------------------------- */\n\n        // Document order sorting\n        sortOrder = hasCompare\n          ? function (a, b) {\n              // Flag for duplicate removal\n              if (a === b) {\n                hasDuplicate = true\n                return 0\n              }\n\n              // Sort on method existence if only one input has compareDocumentPosition\n              var compare = !a.compareDocumentPosition - !b.compareDocumentPosition\n              if (compare) {\n                return compare\n              }\n\n              // Calculate position if both inputs belong to the same document\n              compare =\n                (a.ownerDocument || a) === (b.ownerDocument || b)\n                  ? a.compareDocumentPosition(b)\n                  : // Otherwise we know they are disconnected\n                    1\n\n              // Disconnected nodes\n              if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {\n                // Choose the first element that is related to our preferred document\n                if (a === document || (a.ownerDocument === preferredDoc && contains(preferredDoc, a))) {\n                  return -1\n                }\n                if (b === document || (b.ownerDocument === preferredDoc && contains(preferredDoc, b))) {\n                  return 1\n                }\n\n                // Maintain original order\n                return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0\n              }\n\n              return compare & 4 ? -1 : 1\n            }\n          : function (a, b) {\n              // Exit early if the nodes are identical\n              if (a === b) {\n                hasDuplicate = true\n                return 0\n              }\n\n              var cur,\n                i = 0,\n                aup = a.parentNode,\n                bup = b.parentNode,\n                ap = [a],\n                bp = [b]\n\n              // Parentless nodes are either documents or disconnected\n              if (!aup || !bup) {\n                return a === document\n                  ? -1\n                  : b === document\n                  ? 1\n                  : aup\n                  ? -1\n                  : bup\n                  ? 1\n                  : sortInput\n                  ? indexOf(sortInput, a) - indexOf(sortInput, b)\n                  : 0\n\n                // If the nodes are siblings, we can do a quick check\n              } else if (aup === bup) {\n                return siblingCheck(a, b)\n              }\n\n              // Otherwise we need full lists of their ancestors for comparison\n              cur = a\n              while ((cur = cur.parentNode)) {\n                ap.unshift(cur)\n              }\n              cur = b\n              while ((cur = cur.parentNode)) {\n                bp.unshift(cur)\n              }\n\n              // Walk down the tree looking for a discrepancy\n              while (ap[i] === bp[i]) {\n                i++\n              }\n\n              return i\n                ? // Do a sibling check if the nodes have a common ancestor\n                  siblingCheck(ap[i], bp[i])\n                : // Otherwise nodes in our document sort first\n                ap[i] === preferredDoc\n                ? -1\n                : bp[i] === preferredDoc\n                ? 1\n                : 0\n            }\n\n        return document\n      }\n\n      Sizzle.matches = function (expr, elements) {\n        return Sizzle(expr, null, null, elements)\n      }\n\n      Sizzle.matchesSelector = function (elem, expr) {\n        // Set document vars if needed\n        if ((elem.ownerDocument || elem) !== document) {\n          setDocument(elem)\n        }\n\n        // Make sure that attribute selectors are quoted\n        expr = expr.replace(rattributeQuotes, \"='$1']\")\n\n        if (\n          support.matchesSelector &&\n          documentIsHTML &&\n          !compilerCache[expr + ' '] &&\n          (!rbuggyMatches || !rbuggyMatches.test(expr)) &&\n          (!rbuggyQSA || !rbuggyQSA.test(expr))\n        ) {\n          try {\n            var ret = matches.call(elem, expr)\n\n            // IE 9's matchesSelector returns false on disconnected nodes\n            if (\n              ret ||\n              support.disconnectedMatch ||\n              // As well, disconnected nodes are said to be in a document\n              // fragment in IE 9\n              (elem.document && elem.document.nodeType !== 11)\n            ) {\n              return ret\n            }\n          } catch (e) {}\n        }\n\n        return Sizzle(expr, document, null, [elem]).length > 0\n      }\n\n      Sizzle.contains = function (context, elem) {\n        // Set document vars if needed\n        if ((context.ownerDocument || context) !== document) {\n          setDocument(context)\n        }\n        return contains(context, elem)\n      }\n\n      Sizzle.attr = function (elem, name) {\n        // Set document vars if needed\n        if ((elem.ownerDocument || elem) !== document) {\n          setDocument(elem)\n        }\n\n        var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined\n\n        return val !== undefined\n          ? val\n          : support.attributes || !documentIsHTML\n          ? elem.getAttribute(name)\n          : (val = elem.getAttributeNode(name)) && val.specified\n          ? val.value\n          : null\n      }\n\n      Sizzle.error = function (msg) {\n        throw new Error('Syntax error, unrecognized expression: ' + msg)\n      }\n\n      /**\n       * Document sorting and removing duplicates\n       * @param {ArrayLike} results\n       */\n      Sizzle.uniqueSort = function (results) {\n        var elem,\n          duplicates = [],\n          j = 0,\n          i = 0\n\n        // Unless we *know* we can detect duplicates, assume their presence\n        hasDuplicate = !support.detectDuplicates\n        sortInput = !support.sortStable && results.slice(0)\n        results.sort(sortOrder)\n\n        if (hasDuplicate) {\n          while ((elem = results[i++])) {\n            if (elem === results[i]) {\n              j = duplicates.push(i)\n            }\n          }\n          while (j--) {\n            results.splice(duplicates[j], 1)\n          }\n        }\n\n        // Clear input after sorting to release objects\n        // See https://github.com/jquery/sizzle/pull/225\n        sortInput = null\n\n        return results\n      }\n\n      /**\n       * Utility function for retrieving the text value of an array of DOM nodes\n       * @param {Array|Element} elem\n       */\n      getText = Sizzle.getText = function (elem) {\n        var node,\n          ret = '',\n          i = 0,\n          nodeType = elem.nodeType\n\n        if (!nodeType) {\n          // If no nodeType, this is expected to be an array\n          while ((node = elem[i++])) {\n            // Do not traverse comment nodes\n            ret += getText(node)\n          }\n        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n          // Use textContent for elements\n          // innerText usage removed for consistency of new lines (jQuery #11153)\n          if (typeof elem.textContent === 'string') {\n            return elem.textContent\n          } else {\n            // Traverse its children\n            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n              ret += getText(elem)\n            }\n          }\n        } else if (nodeType === 3 || nodeType === 4) {\n          return elem.nodeValue\n        }\n        // Do not include comment or processing instruction nodes\n\n        return ret\n      }\n\n      Expr = Sizzle.selectors = {\n        // Can be adjusted by the user\n        cacheLength: 50,\n\n        createPseudo: markFunction,\n\n        match: matchExpr,\n\n        attrHandle: {},\n\n        find: {},\n\n        relative: {\n          '>': { dir: 'parentNode', first: true },\n          ' ': { dir: 'parentNode' },\n          '+': { dir: 'previousSibling', first: true },\n          '~': { dir: 'previousSibling' }\n        },\n\n        preFilter: {\n          ATTR: function (match) {\n            match[1] = match[1].replace(runescape, funescape)\n\n            // Move the given value to match[3] whether quoted or unquoted\n            match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape)\n\n            if (match[2] === '~=') {\n              match[3] = ' ' + match[3] + ' '\n            }\n\n            return match.slice(0, 4)\n          },\n\n          CHILD: function (match) {\n            /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n            match[1] = match[1].toLowerCase()\n\n            if (match[1].slice(0, 3) === 'nth') {\n              // nth-* requires argument\n              if (!match[3]) {\n                Sizzle.error(match[0])\n              }\n\n              // numeric x and y parameters for Expr.filter.CHILD\n              // remember that false/true cast respectively to 0/1\n              match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'))\n              match[5] = +(match[7] + match[8] || match[3] === 'odd')\n\n              // other types prohibit arguments\n            } else if (match[3]) {\n              Sizzle.error(match[0])\n            }\n\n            return match\n          },\n\n          PSEUDO: function (match) {\n            var excess,\n              unquoted = !match[6] && match[2]\n\n            if (matchExpr['CHILD'].test(match[0])) {\n              return null\n            }\n\n            // Accept quoted arguments as-is\n            if (match[3]) {\n              match[2] = match[4] || match[5] || ''\n\n              // Strip excess characters from unquoted arguments\n            } else if (\n              unquoted &&\n              rpseudo.test(unquoted) &&\n              // Get excess from tokenize (recursively)\n              (excess = tokenize(unquoted, true)) &&\n              // advance to the next closing parenthesis\n              (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)\n            ) {\n              // excess is a negative index\n              match[0] = match[0].slice(0, excess)\n              match[2] = unquoted.slice(0, excess)\n            }\n\n            // Return only captures needed by the pseudo filter method (type and argument)\n            return match.slice(0, 3)\n          }\n        },\n\n        filter: {\n          TAG: function (nodeNameSelector) {\n            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase()\n            return nodeNameSelector === '*'\n              ? function () {\n                  return true\n                }\n              : function (elem) {\n                  return elem.nodeName && elem.nodeName.toLowerCase() === nodeName\n                }\n          },\n\n          CLASS: function (className) {\n            var pattern = classCache[className + ' ']\n\n            return (\n              pattern ||\n              ((pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) &&\n                classCache(className, function (elem) {\n                  return pattern.test(\n                    (typeof elem.className === 'string' && elem.className) ||\n                      (typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class')) ||\n                      ''\n                  )\n                }))\n            )\n          },\n\n          ATTR: function (name, operator, check) {\n            return function (elem) {\n              var result = Sizzle.attr(elem, name)\n\n              if (result == null) {\n                return operator === '!='\n              }\n              if (!operator) {\n                return true\n              }\n\n              result += ''\n\n              return operator === '='\n                ? result === check\n                : operator === '!='\n                ? result !== check\n                : operator === '^='\n                ? check && result.indexOf(check) === 0\n                : operator === '*='\n                ? check && result.indexOf(check) > -1\n                : operator === '$='\n                ? check && result.slice(-check.length) === check\n                : operator === '~='\n                ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1\n                : operator === '|='\n                ? result === check || result.slice(0, check.length + 1) === check + '-'\n                : false\n            }\n          },\n\n          CHILD: function (type, what, argument, first, last) {\n            var simple = type.slice(0, 3) !== 'nth',\n              forward = type.slice(-4) !== 'last',\n              ofType = what === 'of-type'\n\n            return first === 1 && last === 0\n              ? // Shortcut for :nth-*(n)\n                function (elem) {\n                  return !!elem.parentNode\n                }\n              : function (elem, context, xml) {\n                  var cache,\n                    uniqueCache,\n                    outerCache,\n                    node,\n                    nodeIndex,\n                    start,\n                    dir = simple !== forward ? 'nextSibling' : 'previousSibling',\n                    parent = elem.parentNode,\n                    name = ofType && elem.nodeName.toLowerCase(),\n                    useCache = !xml && !ofType,\n                    diff = false\n\n                  if (parent) {\n                    // :(first|last|only)-(child|of-type)\n                    if (simple) {\n                      while (dir) {\n                        node = elem\n                        while ((node = node[dir])) {\n                          if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                            return false\n                          }\n                        }\n                        // Reverse direction for :only-* (if we haven't yet done so)\n                        start = dir = type === 'only' && !start && 'nextSibling'\n                      }\n                      return true\n                    }\n\n                    start = [forward ? parent.firstChild : parent.lastChild]\n\n                    // non-xml :nth-child(...) stores cache data on `parent`\n                    if (forward && useCache) {\n                      // Seek `elem` from a previously-cached index\n\n                      // ...in a gzip-friendly way\n                      node = parent\n                      outerCache = node[expando] || (node[expando] = {})\n\n                      // Support: IE <9 only\n                      // Defend against cloned attroperties (jQuery gh-1709)\n                      uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {})\n\n                      cache = uniqueCache[type] || []\n                      nodeIndex = cache[0] === dirruns && cache[1]\n                      diff = nodeIndex && cache[2]\n                      node = nodeIndex && parent.childNodes[nodeIndex]\n\n                      while (\n                        (node =\n                          (++nodeIndex && node && node[dir]) ||\n                          // Fallback to seeking `elem` from the start\n                          (diff = nodeIndex = 0) ||\n                          start.pop())\n                      ) {\n                        // When found, cache indexes on `parent` and break\n                        if (node.nodeType === 1 && ++diff && node === elem) {\n                          uniqueCache[type] = [dirruns, nodeIndex, diff]\n                          break\n                        }\n                      }\n                    } else {\n                      // Use previously-cached element index if available\n                      if (useCache) {\n                        // ...in a gzip-friendly way\n                        node = elem\n                        outerCache = node[expando] || (node[expando] = {})\n\n                        // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {})\n\n                        cache = uniqueCache[type] || []\n                        nodeIndex = cache[0] === dirruns && cache[1]\n                        diff = nodeIndex\n                      }\n\n                      // xml :nth-child(...)\n                      // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                      if (diff === false) {\n                        // Use the same loop as above to seek `elem` from the start\n                        while ((node = (++nodeIndex && node && node[dir]) || (diff = nodeIndex = 0) || start.pop())) {\n                          if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                            // Cache the index of each encountered element\n                            if (useCache) {\n                              outerCache = node[expando] || (node[expando] = {})\n\n                              // Support: IE <9 only\n                              // Defend against cloned attroperties (jQuery gh-1709)\n                              uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {})\n\n                              uniqueCache[type] = [dirruns, diff]\n                            }\n\n                            if (node === elem) {\n                              break\n                            }\n                          }\n                        }\n                      }\n                    }\n\n                    // Incorporate the offset, then check against cycle size\n                    diff -= last\n                    return diff === first || (diff % first === 0 && diff / first >= 0)\n                  }\n                }\n          },\n\n          PSEUDO: function (pseudo, argument) {\n            // pseudo-class names are case-insensitive\n            // http://www.w3.org/TR/selectors/#pseudo-classes\n            // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n            // Remember that setFilters inherits from pseudos\n            var args,\n              fn =\n                Expr.pseudos[pseudo] ||\n                Expr.setFilters[pseudo.toLowerCase()] ||\n                Sizzle.error('unsupported pseudo: ' + pseudo)\n\n            // The user may use createPseudo to indicate that\n            // arguments are needed to create the filter function\n            // just as Sizzle does\n            if (fn[expando]) {\n              return fn(argument)\n            }\n\n            // But maintain support for old signatures\n            if (fn.length > 1) {\n              args = [pseudo, pseudo, '', argument]\n              return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())\n                ? markFunction(function (seed, matches) {\n                    var idx,\n                      matched = fn(seed, argument),\n                      i = matched.length\n                    while (i--) {\n                      idx = indexOf(seed, matched[i])\n                      seed[idx] = !(matches[idx] = matched[i])\n                    }\n                  })\n                : function (elem) {\n                    return fn(elem, 0, args)\n                  }\n            }\n\n            return fn\n          }\n        },\n\n        pseudos: {\n          // Potentially complex pseudos\n          not: markFunction(function (selector) {\n            // Trim the selector passed to compile\n            // to avoid treating leading and trailing\n            // spaces as combinators\n            var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, '$1'))\n\n            return matcher[expando]\n              ? markFunction(function (seed, matches, context, xml) {\n                  var elem,\n                    unmatched = matcher(seed, null, xml, []),\n                    i = seed.length\n\n                  // Match elements unmatched by `matcher`\n                  while (i--) {\n                    if ((elem = unmatched[i])) {\n                      seed[i] = !(matches[i] = elem)\n                    }\n                  }\n                })\n              : function (elem, context, xml) {\n                  input[0] = elem\n                  matcher(input, null, xml, results)\n                  // Don't keep the element (issue #299)\n                  input[0] = null\n                  return !results.pop()\n                }\n          }),\n\n          has: markFunction(function (selector) {\n            return function (elem) {\n              return Sizzle(selector, elem).length > 0\n            }\n          }),\n\n          contains: markFunction(function (text) {\n            text = text.replace(runescape, funescape)\n            return function (elem) {\n              return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1\n            }\n          }),\n\n          // \"Whether an element is represented by a :lang() selector\n          // is based solely on the element's language value\n          // being equal to the identifier C,\n          // or beginning with the identifier C immediately followed by \"-\".\n          // The matching of C against the element's language value is performed case-insensitively.\n          // The identifier C does not have to be a valid language name.\"\n          // http://www.w3.org/TR/selectors/#lang-pseudo\n          lang: markFunction(function (lang) {\n            // lang value must be a valid identifier\n            if (!ridentifier.test(lang || '')) {\n              Sizzle.error('unsupported lang: ' + lang)\n            }\n            lang = lang.replace(runescape, funescape).toLowerCase()\n            return function (elem) {\n              var elemLang\n              do {\n                if (\n                  (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang'))\n                ) {\n                  elemLang = elemLang.toLowerCase()\n                  return elemLang === lang || elemLang.indexOf(lang + '-') === 0\n                }\n              } while ((elem = elem.parentNode) && elem.nodeType === 1)\n              return false\n            }\n          }),\n\n          // Miscellaneous\n          target: function (elem) {\n            var hash = window.location && window.location.hash\n            return hash && hash.slice(1) === elem.id\n          },\n\n          root: function (elem) {\n            return elem === docElem\n          },\n\n          focus: function (elem) {\n            return (\n              elem === document.activeElement &&\n              (!document.hasFocus || document.hasFocus()) &&\n              !!(elem.type || elem.href || ~elem.tabIndex)\n            )\n          },\n\n          // Boolean properties\n          enabled: function (elem) {\n            return elem.disabled === false\n          },\n\n          disabled: function (elem) {\n            return elem.disabled === true\n          },\n\n          checked: function (elem) {\n            // In CSS3, :checked should return both checked and selected elements\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n            var nodeName = elem.nodeName.toLowerCase()\n            return (nodeName === 'input' && !!elem.checked) || (nodeName === 'option' && !!elem.selected)\n          },\n\n          selected: function (elem) {\n            // Accessing this property makes selected-by-default\n            // options in Safari work properly\n            if (elem.parentNode) {\n              elem.parentNode.selectedIndex\n            }\n\n            return elem.selected === true\n          },\n\n          // Contents\n          empty: function (elem) {\n            // http://www.w3.org/TR/selectors/#empty-pseudo\n            // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n            //   but not by others (comment: 8; processing instruction: 7; etc.)\n            // nodeType < 6 works because attributes (2) do not appear as children\n            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n              if (elem.nodeType < 6) {\n                return false\n              }\n            }\n            return true\n          },\n\n          parent: function (elem) {\n            return !Expr.pseudos['empty'](elem)\n          },\n\n          // Element/input types\n          header: function (elem) {\n            return rheader.test(elem.nodeName)\n          },\n\n          input: function (elem) {\n            return rinputs.test(elem.nodeName)\n          },\n\n          button: function (elem) {\n            var name = elem.nodeName.toLowerCase()\n            return (name === 'input' && elem.type === 'button') || name === 'button'\n          },\n\n          text: function (elem) {\n            var attr\n            return (\n              elem.nodeName.toLowerCase() === 'input' &&\n              elem.type === 'text' &&\n              // Support: IE<8\n              // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n              ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text')\n            )\n          },\n\n          // Position-in-collection\n          first: createPositionalPseudo(function () {\n            return [0]\n          }),\n\n          last: createPositionalPseudo(function (matchIndexes, length) {\n            return [length - 1]\n          }),\n\n          eq: createPositionalPseudo(function (matchIndexes, length, argument) {\n            return [argument < 0 ? argument + length : argument]\n          }),\n\n          even: createPositionalPseudo(function (matchIndexes, length) {\n            var i = 0\n            for (; i < length; i += 2) {\n              matchIndexes.push(i)\n            }\n            return matchIndexes\n          }),\n\n          odd: createPositionalPseudo(function (matchIndexes, length) {\n            var i = 1\n            for (; i < length; i += 2) {\n              matchIndexes.push(i)\n            }\n            return matchIndexes\n          }),\n\n          lt: createPositionalPseudo(function (matchIndexes, length, argument) {\n            var i = argument < 0 ? argument + length : argument\n            for (; --i >= 0; ) {\n              matchIndexes.push(i)\n            }\n            return matchIndexes\n          }),\n\n          gt: createPositionalPseudo(function (matchIndexes, length, argument) {\n            var i = argument < 0 ? argument + length : argument\n            for (; ++i < length; ) {\n              matchIndexes.push(i)\n            }\n            return matchIndexes\n          })\n        }\n      }\n\n      Expr.pseudos['nth'] = Expr.pseudos['eq']\n\n      // Add button/input type pseudos\n      for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {\n        Expr.pseudos[i] = createInputPseudo(i)\n      }\n      for (i in { submit: true, reset: true }) {\n        Expr.pseudos[i] = createButtonPseudo(i)\n      }\n\n      // Easy API for creating new setFilters\n      function setFilters () {}\n      setFilters.prototype = Expr.filters = Expr.pseudos\n      Expr.setFilters = new setFilters()\n\n      tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n        var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + ' ']\n\n        if (cached) {\n          return parseOnly ? 0 : cached.slice(0)\n        }\n\n        soFar = selector\n        groups = []\n        preFilters = Expr.preFilter\n\n        while (soFar) {\n          // Comma and first run\n          if (!matched || (match = rcomma.exec(soFar))) {\n            if (match) {\n              // Don't consume trailing commas as valid\n              soFar = soFar.slice(match[0].length) || soFar\n            }\n            groups.push((tokens = []))\n          }\n\n          matched = false\n\n          // Combinators\n          if ((match = rcombinators.exec(soFar))) {\n            matched = match.shift()\n            tokens.push({\n              value: matched,\n              // Cast descendant combinators to space\n              type: match[0].replace(rtrim, ' ')\n            })\n            soFar = soFar.slice(matched.length)\n          }\n\n          // Filters\n          for (type in Expr.filter) {\n            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n              matched = match.shift()\n              tokens.push({\n                value: matched,\n                type: type,\n                matches: match\n              })\n              soFar = soFar.slice(matched.length)\n            }\n          }\n\n          if (!matched) {\n            break\n          }\n        }\n\n        // Return the length of the invalid excess\n        // if we're just parsing\n        // Otherwise, throw an error or return tokens\n        return parseOnly\n          ? soFar.length\n          : soFar\n          ? Sizzle.error(selector)\n          : // Cache the tokens\n            tokenCache(selector, groups).slice(0)\n      }\n\n      function toSelector (tokens) {\n        var i = 0,\n          len = tokens.length,\n          selector = ''\n        for (; i < len; i++) {\n          selector += tokens[i].value\n        }\n        return selector\n      }\n\n      function addCombinator (matcher, combinator, base) {\n        var dir = combinator.dir,\n          checkNonElements = base && dir === 'parentNode',\n          doneName = done++\n\n        return combinator.first\n          ? // Check against closest ancestor/preceding element\n            function (elem, context, xml) {\n              while ((elem = elem[dir])) {\n                if (elem.nodeType === 1 || checkNonElements) {\n                  return matcher(elem, context, xml)\n                }\n              }\n            }\n          : // Check against all ancestor/preceding elements\n            function (elem, context, xml) {\n              var oldCache,\n                uniqueCache,\n                outerCache,\n                newCache = [dirruns, doneName]\n\n              // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n              if (xml) {\n                while ((elem = elem[dir])) {\n                  if (elem.nodeType === 1 || checkNonElements) {\n                    if (matcher(elem, context, xml)) {\n                      return true\n                    }\n                  }\n                }\n              } else {\n                while ((elem = elem[dir])) {\n                  if (elem.nodeType === 1 || checkNonElements) {\n                    outerCache = elem[expando] || (elem[expando] = {})\n\n                    // Support: IE <9 only\n                    // Defend against cloned attroperties (jQuery gh-1709)\n                    uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {})\n\n                    if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                      // Assign to newCache so results back-propagate to previous elements\n                      return (newCache[2] = oldCache[2])\n                    } else {\n                      // Reuse newcache so results back-propagate to previous elements\n                      uniqueCache[dir] = newCache\n\n                      // A match means we're done; a fail means we have to keep checking\n                      if ((newCache[2] = matcher(elem, context, xml))) {\n                        return true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n      }\n\n      function elementMatcher (matchers) {\n        return matchers.length > 1\n          ? function (elem, context, xml) {\n              var i = matchers.length\n              while (i--) {\n                if (!matchers[i](elem, context, xml)) {\n                  return false\n                }\n              }\n              return true\n            }\n          : matchers[0]\n      }\n\n      function multipleContexts (selector, contexts, results) {\n        var i = 0,\n          len = contexts.length\n        for (; i < len; i++) {\n          Sizzle(selector, contexts[i], results)\n        }\n        return results\n      }\n\n      function condense (unmatched, map, filter, context, xml) {\n        var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null\n\n        for (; i < len; i++) {\n          if ((elem = unmatched[i])) {\n            if (!filter || filter(elem, context, xml)) {\n              newUnmatched.push(elem)\n              if (mapped) {\n                map.push(i)\n              }\n            }\n          }\n        }\n\n        return newUnmatched\n      }\n\n      function setMatcher (preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n        if (postFilter && !postFilter[expando]) {\n          postFilter = setMatcher(postFilter)\n        }\n        if (postFinder && !postFinder[expando]) {\n          postFinder = setMatcher(postFinder, postSelector)\n        }\n        return markFunction(function (seed, results, context, xml) {\n          var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n            elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher\n              ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                postFinder || (seed ? preFilter : preexisting || postFilter)\n                ? // ...intermediate processing is necessary\n                  []\n                : // ...otherwise use results directly\n                  results\n              : matcherIn\n\n          // Find primary matches\n          if (matcher) {\n            matcher(matcherIn, matcherOut, context, xml)\n          }\n\n          // Apply postFilter\n          if (postFilter) {\n            temp = condense(matcherOut, postMap)\n            postFilter(temp, [], context, xml)\n\n            // Un-match failing elements by moving them back to matcherIn\n            i = temp.length\n            while (i--) {\n              if ((elem = temp[i])) {\n                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem)\n              }\n            }\n          }\n\n          if (seed) {\n            if (postFinder || preFilter) {\n              if (postFinder) {\n                // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                temp = []\n                i = matcherOut.length\n                while (i--) {\n                  if ((elem = matcherOut[i])) {\n                    // Restore matcherIn since elem is not yet a final match\n                    temp.push((matcherIn[i] = elem))\n                  }\n                }\n                postFinder(null, (matcherOut = []), temp, xml)\n              }\n\n              // Move matched elements from seed to results to keep them synchronized\n              i = matcherOut.length\n              while (i--) {\n                if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                  seed[temp] = !(results[temp] = elem)\n                }\n              }\n            }\n\n            // Add elements to results, through postFinder if defined\n          } else {\n            matcherOut = condense(\n              matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut\n            )\n            if (postFinder) {\n              postFinder(null, results, matcherOut, xml)\n            } else {\n              push.apply(results, matcherOut)\n            }\n          }\n        })\n      }\n\n      function matcherFromTokens (tokens) {\n        var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[' '],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n          matchContext = addCombinator(\n            function (elem) {\n              return elem === checkContext\n            },\n            implicitRelative,\n            true\n          ),\n          matchAnyContext = addCombinator(\n            function (elem) {\n              return indexOf(checkContext, elem) > -1\n            },\n            implicitRelative,\n            true\n          ),\n          matchers = [\n            function (elem, context, xml) {\n              var ret =\n                (!leadingRelative && (xml || context !== outermostContext)) ||\n                ((checkContext = context).nodeType\n                  ? matchContext(elem, context, xml)\n                  : matchAnyContext(elem, context, xml))\n              // Avoid hanging onto element (issue #299)\n              checkContext = null\n              return ret\n            }\n          ]\n\n        for (; i < len; i++) {\n          if ((matcher = Expr.relative[tokens[i].type])) {\n            matchers = [addCombinator(elementMatcher(matchers), matcher)]\n          } else {\n            matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches)\n\n            // Return special upon seeing a positional matcher\n            if (matcher[expando]) {\n              // Find the next relative operator (if any) for proper handling\n              j = ++i\n              for (; j < len; j++) {\n                if (Expr.relative[tokens[j].type]) {\n                  break\n                }\n              }\n              return setMatcher(\n                i > 1 && elementMatcher(matchers),\n                i > 1 &&\n                  toSelector(\n                    // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                    tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })\n                  ).replace(rtrim, '$1'),\n                matcher,\n                i < j && matcherFromTokens(tokens.slice(i, j)),\n                j < len && matcherFromTokens((tokens = tokens.slice(j))),\n                j < len && toSelector(tokens)\n              )\n            }\n            matchers.push(matcher)\n          }\n        }\n\n        return elementMatcher(matchers)\n      }\n\n      function matcherFromGroupMatchers (elementMatchers, setMatchers) {\n        var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n            var elem,\n              j,\n              matcher,\n              matchedCount = 0,\n              i = '0',\n              unmatched = seed && [],\n              setMatched = [],\n              contextBackup = outermostContext,\n              // We must always have either seed elements or outermost context\n              elems = seed || (byElement && Expr.find['TAG']('*', outermost)),\n              // Use integer dirruns iff this is the outermost matcher\n              dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n              len = elems.length\n\n            if (outermost) {\n              outermostContext = context === document || context || outermost\n            }\n\n            // Add elements passing elementMatchers directly to results\n            // Support: IE<9, Safari\n            // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n            for (; i !== len && (elem = elems[i]) != null; i++) {\n              if (byElement && elem) {\n                j = 0\n                if (!context && elem.ownerDocument !== document) {\n                  setDocument(elem)\n                  xml = !documentIsHTML\n                }\n                while ((matcher = elementMatchers[j++])) {\n                  if (matcher(elem, context || document, xml)) {\n                    results.push(elem)\n                    break\n                  }\n                }\n                if (outermost) {\n                  dirruns = dirrunsUnique\n                }\n              }\n\n              // Track unmatched elements for set filters\n              if (bySet) {\n                // They will have gone through all possible matchers\n                if ((elem = !matcher && elem)) {\n                  matchedCount--\n                }\n\n                // Lengthen the array for every element, matched or not\n                if (seed) {\n                  unmatched.push(elem)\n                }\n              }\n            }\n\n            // `i` is now the count of elements visited above, and adding it to `matchedCount`\n            // makes the latter nonnegative.\n            matchedCount += i\n\n            // Apply set filters to unmatched elements\n            // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n            // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n            // no element matchers and no seed.\n            // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n            // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n            // numerically zero.\n            if (bySet && i !== matchedCount) {\n              j = 0\n              while ((matcher = setMatchers[j++])) {\n                matcher(unmatched, setMatched, context, xml)\n              }\n\n              if (seed) {\n                // Reintegrate element matches to eliminate the need for sorting\n                if (matchedCount > 0) {\n                  while (i--) {\n                    if (!(unmatched[i] || setMatched[i])) {\n                      setMatched[i] = pop.call(results)\n                    }\n                  }\n                }\n\n                // Discard index placeholder values to get only actual matches\n                setMatched = condense(setMatched)\n              }\n\n              // Add matches to results\n              push.apply(results, setMatched)\n\n              // Seedless set matches succeeding multiple successful matchers stipulate sorting\n              if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                Sizzle.uniqueSort(results)\n              }\n            }\n\n            // Override manipulation of globals by nested matchers\n            if (outermost) {\n              dirruns = dirrunsUnique\n              outermostContext = contextBackup\n            }\n\n            return unmatched\n          }\n\n        return bySet ? markFunction(superMatcher) : superMatcher\n      }\n\n      compile = Sizzle.compile = function (selector, match /* Internal Use Only */) {\n        var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + ' ']\n\n        if (!cached) {\n          // Generate a function of recursive functions that can be used to check each element\n          if (!match) {\n            match = tokenize(selector)\n          }\n          i = match.length\n          while (i--) {\n            cached = matcherFromTokens(match[i])\n            if (cached[expando]) {\n              setMatchers.push(cached)\n            } else {\n              elementMatchers.push(cached)\n            }\n          }\n\n          // Cache the compiled function\n          cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers))\n\n          // Save selector and tokenization\n          cached.selector = selector\n        }\n        return cached\n      }\n\n      /**\n       * A low-level selection function that works with Sizzle's compiled\n       *  selector functions\n       * @param {String|Function} selector A selector or a pre-compiled\n       *  selector function built with Sizzle.compile\n       * @param {Element} context\n       * @param {Array} [results]\n       * @param {Array} [seed] A set of elements to match against\n       */\n      select = Sizzle.select = function (selector, context, results, seed) {\n        var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === 'function' && selector,\n          match = !seed && tokenize((selector = compiled.selector || selector))\n\n        results = results || []\n\n        // Try to minimize operations if there is only one selector in the list and no seed\n        // (the latter of which guarantees us context)\n        if (match.length === 1) {\n          // Reduce context if the leading compound selector is an ID\n          tokens = match[0] = match[0].slice(0)\n          if (\n            tokens.length > 2 &&\n            (token = tokens[0]).type === 'ID' &&\n            support.getById &&\n            context.nodeType === 9 &&\n            documentIsHTML &&\n            Expr.relative[tokens[1].type]\n          ) {\n            context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0]\n            if (!context) {\n              return results\n\n              // Precompiled matchers will still verify ancestry, so step up a level\n            } else if (compiled) {\n              context = context.parentNode\n            }\n\n            selector = selector.slice(tokens.shift().value.length)\n          }\n\n          // Fetch a seed set for right-to-left matching\n          i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length\n          while (i--) {\n            token = tokens[i]\n\n            // Abort if we hit a combinator\n            if (Expr.relative[(type = token.type)]) {\n              break\n            }\n            if ((find = Expr.find[type])) {\n              // Search, expanding context for leading sibling combinators\n              if (\n                (seed = find(\n                  token.matches[0].replace(runescape, funescape),\n                  (rsibling.test(tokens[0].type) && testContext(context.parentNode)) || context\n                ))\n              ) {\n                // If seed is empty or no tokens remain, we can return early\n                tokens.splice(i, 1)\n                selector = seed.length && toSelector(tokens)\n                if (!selector) {\n                  push.apply(results, seed)\n                  return results\n                }\n\n                break\n              }\n            }\n          }\n        }\n\n        // Compile and execute a filtering function if one is not provided\n        // Provide `match` to avoid retokenization if we modified the selector above\n        ;(compiled || compile(selector, match))(\n          seed,\n          context,\n          !documentIsHTML,\n          results,\n          !context || (rsibling.test(selector) && testContext(context.parentNode)) || context\n        )\n        return results\n      }\n\n      // One-time assignments\n\n      // Sort stability\n      support.sortStable =\n        expando\n          .split('')\n          .sort(sortOrder)\n          .join('') === expando\n\n      // Support: Chrome 14-35+\n      // Always assume duplicates if they aren't passed to the comparison function\n      support.detectDuplicates = !!hasDuplicate\n\n      // Initialize against the default document\n      setDocument()\n\n      // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n      // Detached nodes confoundingly follow *each other*\n      support.sortDetached = assert(function (div1) {\n        // Should return 1, but returns 4 (following)\n        return div1.compareDocumentPosition(document.createElement('div')) & 1\n      })\n\n      // Support: IE<8\n      // Prevent attribute/property \"interpolation\"\n      // http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n      if (\n        !assert(function (div) {\n          div.innerHTML = \"<a href='#'></a>\"\n          return div.firstChild.getAttribute('href') === '#'\n        })\n      ) {\n        addHandle('type|href|height|width', function (elem, name, isXML) {\n          if (!isXML) {\n            return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2)\n          }\n        })\n      }\n\n      // Support: IE<9\n      // Use defaultValue in place of getAttribute(\"value\")\n      if (\n        !support.attributes ||\n        !assert(function (div) {\n          div.innerHTML = '<input/>'\n          div.firstChild.setAttribute('value', '')\n          return div.firstChild.getAttribute('value') === ''\n        })\n      ) {\n        addHandle('value', function (elem, name, isXML) {\n          if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n            return elem.defaultValue\n          }\n        })\n      }\n\n      // Support: IE<9\n      // Use getAttributeNode to fetch booleans when getAttribute lies\n      if (\n        !assert(function (div) {\n          return div.getAttribute('disabled') == null\n        })\n      ) {\n        addHandle(booleans, function (elem, name, isXML) {\n          var val\n          if (!isXML) {\n            return elem[name] === true\n              ? name.toLowerCase()\n              : (val = elem.getAttributeNode(name)) && val.specified\n              ? val.value\n              : null\n          }\n        })\n      }\n\n      return Sizzle\n    })(window)\n\n  jQuery.find = Sizzle\n  jQuery.expr = Sizzle.selectors\n  jQuery.expr[':'] = jQuery.expr.pseudos\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort\n  jQuery.text = Sizzle.getText\n  jQuery.isXMLDoc = Sizzle.isXML\n  jQuery.contains = Sizzle.contains\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n      truncate = until !== undefined\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break\n        }\n        matched.push(elem)\n      }\n    }\n    return matched\n  }\n\n  var siblings = function (n, elem) {\n    var matched = []\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n)\n      }\n    }\n\n    return matched\n  }\n\n  var rneedsContext = jQuery.expr.match.needsContext\n\n  var rsingleTag = /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/\n\n  var risSimple = /^.[^:#\\[\\.,]*$/\n\n  // Implement the identical functionality for filter and not\n  function winnow (elements, qualifier, not) {\n    if (jQuery.isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        /* jshint -W018 */\n        return !!qualifier.call(elem, i, elem) !== not\n      })\n    }\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return (elem === qualifier) !== not\n      })\n    }\n\n    if (typeof qualifier === 'string') {\n      if (risSimple.test(qualifier)) {\n        return jQuery.filter(qualifier, elements, not)\n      }\n\n      qualifier = jQuery.filter(qualifier, elements)\n    }\n\n    return jQuery.grep(elements, function (elem) {\n      return indexOf.call(qualifier, elem) > -1 !== not\n    })\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0]\n\n    if (not) {\n      expr = ':not(' + expr + ')'\n    }\n\n    return elems.length === 1 && elem.nodeType === 1\n      ? jQuery.find.matchesSelector(elem, expr)\n        ? [elem]\n        : []\n      : jQuery.find.matches(\n          expr,\n          jQuery.grep(elems, function (elem) {\n            return elem.nodeType === 1\n          })\n        )\n  }\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n        len = this.length,\n        ret = [],\n        self = this\n\n      if (typeof selector !== 'string') {\n        return this.pushStack(\n          jQuery(selector).filter(function () {\n            for (i = 0; i < len; i++) {\n              if (jQuery.contains(self[i], this)) {\n                return true\n              }\n            }\n          })\n        )\n      }\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret)\n      }\n\n      // Needed because $( selector, context ) becomes $( context ).find( selector )\n      ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret)\n      ret.selector = this.selector ? this.selector + ' ' + selector : selector\n      return ret\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false))\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true))\n    },\n    is: function (selector) {\n      return !!winnow(\n        this,\n\n        // If this is a positional/relative selector, check membership in the returned set\n        // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n        typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [],\n        false\n      ).length\n    }\n  })\n\n  // Initialize a jQuery object\n\n  // A central reference to the root jQuery(document)\n  var rootjQuery,\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n    // Strict HTML recognition (#11290: must start with <)\n    rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n    init = (jQuery.fn.init = function (selector, context, root) {\n      var match, elem\n\n      // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n      if (!selector) {\n        return this\n      }\n\n      // Method init() accepts an alternate rootjQuery\n      // so migrate can support jQuery.sub (gh-2101)\n      root = root || rootjQuery\n\n      // Handle HTML strings\n      if (typeof selector === 'string') {\n        if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\n          // Assume that strings that start and end with <> are HTML and skip the regex check\n          match = [null, selector, null]\n        } else {\n          match = rquickExpr.exec(selector)\n        }\n\n        // Match html or make sure no context is specified for #id\n        if (match && (match[1] || !context)) {\n          // HANDLE: $(html) -> $(array)\n          if (match[1]) {\n            context = context instanceof jQuery ? context[0] : context\n\n            // Option to run scripts is true for back-compat\n            // Intentionally let the error be thrown if parseHTML is not present\n            jQuery.merge(\n              this,\n              jQuery.parseHTML(\n                match[1],\n                context && context.nodeType ? context.ownerDocument || context : document,\n                true\n              )\n            )\n\n            // HANDLE: $(html, props)\n            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n              for (match in context) {\n                // Properties of context are called as methods if possible\n                if (jQuery.isFunction(this[match])) {\n                  this[match](context[match])\n\n                  // ...and otherwise set as attributes\n                } else {\n                  this.attr(match, context[match])\n                }\n              }\n            }\n\n            return this\n\n            // HANDLE: $(#id)\n          } else {\n            elem = document.getElementById(match[2])\n\n            // Support: Blackberry 4.6\n            // gEBID returns nodes no longer in the document (#6963)\n            if (elem && elem.parentNode) {\n              // Inject the element directly into the jQuery object\n              this.length = 1\n              this[0] = elem\n            }\n\n            this.context = document\n            this.selector = selector\n            return this\n          }\n\n          // HANDLE: $(expr, $(...))\n        } else if (!context || context.jquery) {\n          return (context || root).find(selector)\n\n          // HANDLE: $(expr, context)\n          // (which is just equivalent to: $(context).find(expr)\n        } else {\n          return this.constructor(context).find(selector)\n        }\n\n        // HANDLE: $(DOMElement)\n      } else if (selector.nodeType) {\n        this.context = this[0] = selector\n        this.length = 1\n        return this\n\n        // HANDLE: $(function)\n        // Shortcut for document ready\n      } else if (jQuery.isFunction(selector)) {\n        return root.ready !== undefined\n          ? root.ready(selector)\n          : // Execute immediately if ready is not present\n            selector(jQuery)\n      }\n\n      if (selector.selector !== undefined) {\n        this.selector = selector.selector\n        this.context = selector.context\n      }\n\n      return jQuery.makeArray(selector, this)\n    })\n\n  // Give the init function the jQuery prototype for later instantiation\n  init.prototype = jQuery.fn\n\n  // Initialize central reference\n  rootjQuery = jQuery(document)\n\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n    // Methods guaranteed to produce a unique set when starting from a unique set\n    guaranteedUnique = {\n      children: true,\n      contents: true,\n      next: true,\n      prev: true\n    }\n\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n        l = targets.length\n\n      return this.filter(function () {\n        var i = 0\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true\n          }\n        }\n      })\n    },\n\n    closest: function (selectors, context) {\n      var cur,\n        i = 0,\n        l = this.length,\n        matched = [],\n        pos =\n          rneedsContext.test(selectors) || typeof selectors !== 'string'\n            ? jQuery(selectors, context || this.context)\n            : 0\n\n      for (; i < l; i++) {\n        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n          // Always skip document fragments\n          if (\n            cur.nodeType < 11 &&\n            (pos\n              ? pos.index(cur) > -1\n              : // Don't pass non-elements to Sizzle\n                cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))\n          ) {\n            matched.push(cur)\n            break\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched)\n    },\n\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1\n      }\n\n      // Index in selector\n      if (typeof elem === 'string') {\n        return indexOf.call(jQuery(elem), this[0])\n      }\n\n      // Locate the position of the desired element\n      return indexOf.call(\n        this,\n\n        // If it receives a jQuery object, the first element is used\n        elem.jquery ? elem[0] : elem\n      )\n    },\n\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))))\n    },\n\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector))\n    }\n  })\n\n  function sibling (cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n    return cur\n  }\n\n  jQuery.each(\n    {\n      parent: function (elem) {\n        var parent = elem.parentNode\n        return parent && parent.nodeType !== 11 ? parent : null\n      },\n      parents: function (elem) {\n        return dir(elem, 'parentNode')\n      },\n      parentsUntil: function (elem, i, until) {\n        return dir(elem, 'parentNode', until)\n      },\n      next: function (elem) {\n        return sibling(elem, 'nextSibling')\n      },\n      prev: function (elem) {\n        return sibling(elem, 'previousSibling')\n      },\n      nextAll: function (elem) {\n        return dir(elem, 'nextSibling')\n      },\n      prevAll: function (elem) {\n        return dir(elem, 'previousSibling')\n      },\n      nextUntil: function (elem, i, until) {\n        return dir(elem, 'nextSibling', until)\n      },\n      prevUntil: function (elem, i, until) {\n        return dir(elem, 'previousSibling', until)\n      },\n      siblings: function (elem) {\n        return siblings((elem.parentNode || {}).firstChild, elem)\n      },\n      children: function (elem) {\n        return siblings(elem.firstChild)\n      },\n      contents: function (elem) {\n        return elem.contentDocument || jQuery.merge([], elem.childNodes)\n      }\n    },\n    function (name, fn) {\n      jQuery.fn[name] = function (until, selector) {\n        var matched = jQuery.map(this, fn, until)\n\n        if (name.slice(-5) !== 'Until') {\n          selector = until\n        }\n\n        if (selector && typeof selector === 'string') {\n          matched = jQuery.filter(selector, matched)\n        }\n\n        if (this.length > 1) {\n          // Remove duplicates\n          if (!guaranteedUnique[name]) {\n            jQuery.uniqueSort(matched)\n          }\n\n          // Reverse order for parents* and prev-derivatives\n          if (rparentsprev.test(name)) {\n            matched.reverse()\n          }\n        }\n\n        return this.pushStack(matched)\n      }\n    }\n  )\n  var rnotwhite = /\\S+/g\n\n  // Convert String-formatted options into Object-formatted ones\n  function createOptions (options) {\n    var object = {}\n    jQuery.each(options.match(rnotwhite) || [], function (_, flag) {\n      object[flag] = true\n    })\n    return object\n  }\n\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options)\n\n    var // Flag to know if list is currently firing\n      firing,\n      // Last fire value for non-forgettable lists\n      memory,\n      // Flag to know if list was already fired\n      fired,\n      // Flag to prevent firing\n      locked,\n      // Actual callback list\n      list = [],\n      // Queue of execution data for repeatable lists\n      queue = [],\n      // Index of currently firing callback (modified by add/remove as needed)\n      firingIndex = -1,\n      // Fire callbacks\n      fire = function () {\n        // Enforce single-firing\n        locked = options.once\n\n        // Execute callbacks for all pending executions,\n        // respecting firingIndex overrides and runtime changes\n        fired = firing = true\n        for (; queue.length; firingIndex = -1) {\n          memory = queue.shift()\n          while (++firingIndex < list.length) {\n            // Run callback and check for early termination\n            if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n              // Jump to end and forget the data so .add doesn't re-fire\n              firingIndex = list.length\n              memory = false\n            }\n          }\n        }\n\n        // Forget the data if we're done with it\n        if (!options.memory) {\n          memory = false\n        }\n\n        firing = false\n\n        // Clean up if we're done firing for good\n        if (locked) {\n          // Keep an empty list if we have data for future add calls\n          if (memory) {\n            list = []\n\n            // Otherwise, this object is spent\n          } else {\n            list = ''\n          }\n        }\n      },\n      // Actual Callbacks object\n      self = {\n        // Add a callback or a collection of callbacks to the list\n        add: function () {\n          if (list) {\n            // If we have memory from a past run, we should fire after adding\n            if (memory && !firing) {\n              firingIndex = list.length - 1\n              queue.push(memory)\n            }\n\n            ;(function add (args) {\n              jQuery.each(args, function (_, arg) {\n                if (jQuery.isFunction(arg)) {\n                  if (!options.unique || !self.has(arg)) {\n                    list.push(arg)\n                  }\n                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {\n                  // Inspect recursively\n                  add(arg)\n                }\n              })\n            })(arguments)\n\n            if (memory && !firing) {\n              fire()\n            }\n          }\n          return this\n        },\n\n        // Remove a callback from the list\n        remove: function () {\n          jQuery.each(arguments, function (_, arg) {\n            var index\n            while ((index = jQuery.inArray(arg, list, index)) > -1) {\n              list.splice(index, 1)\n\n              // Handle firing indexes\n              if (index <= firingIndex) {\n                firingIndex--\n              }\n            }\n          })\n          return this\n        },\n\n        // Check if a given callback is in the list.\n        // If no argument is given, return whether or not list has callbacks attached.\n        has: function (fn) {\n          return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0\n        },\n\n        // Remove all callbacks from the list\n        empty: function () {\n          if (list) {\n            list = []\n          }\n          return this\n        },\n\n        // Disable .fire and .add\n        // Abort any current/pending executions\n        // Clear all callbacks and values\n        disable: function () {\n          locked = queue = []\n          list = memory = ''\n          return this\n        },\n        disabled: function () {\n          return !list\n        },\n\n        // Disable .fire\n        // Also disable .add unless we have memory (since it would have no effect)\n        // Abort any pending executions\n        lock: function () {\n          locked = queue = []\n          if (!memory) {\n            list = memory = ''\n          }\n          return this\n        },\n        locked: function () {\n          return !!locked\n        },\n\n        // Call all callbacks with the given context and arguments\n        fireWith: function (context, args) {\n          if (!locked) {\n            args = args || []\n            args = [context, args.slice ? args.slice() : args]\n            queue.push(args)\n            if (!firing) {\n              fire()\n            }\n          }\n          return this\n        },\n\n        // Call all the callbacks with the given arguments\n        fire: function () {\n          self.fireWith(this, arguments)\n          return this\n        },\n\n        // To know if the callbacks have already been called at least once\n        fired: function () {\n          return !!fired\n        }\n      }\n\n    return self\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [\n          // action, add listener, listener list, final state\n          ['resolve', 'done', jQuery.Callbacks('once memory'), 'resolved'],\n          ['reject', 'fail', jQuery.Callbacks('once memory'), 'rejected'],\n          ['notify', 'progress', jQuery.Callbacks('memory')]\n        ],\n        state = 'pending',\n        promise = {\n          state: function () {\n            return state\n          },\n          always: function () {\n            deferred.done(arguments).fail(arguments)\n            return this\n          },\n          then: function (/* fnDone, fnFail, fnProgress */) {\n            var fns = arguments\n            return jQuery\n              .Deferred(function (newDefer) {\n                jQuery.each(tuples, function (i, tuple) {\n                  var fn = jQuery.isFunction(fns[i]) && fns[i]\n\n                  // deferred[ done | fail | progress ] for forwarding actions to newDefer\n                  deferred[tuple[1]](function () {\n                    var returned = fn && fn.apply(this, arguments)\n                    if (returned && jQuery.isFunction(returned.promise)) {\n                      returned\n                        .promise()\n                        .progress(newDefer.notify)\n                        .done(newDefer.resolve)\n                        .fail(newDefer.reject)\n                    } else {\n                      newDefer[tuple[0] + 'With'](\n                        this === promise ? newDefer.promise() : this,\n                        fn ? [returned] : arguments\n                      )\n                    }\n                  })\n                })\n                fns = null\n              })\n              .promise()\n          },\n\n          // Get a promise for this deferred\n          // If obj is provided, the promise aspect is added to the object\n          promise: function (obj) {\n            return obj != null ? jQuery.extend(obj, promise) : promise\n          }\n        },\n        deferred = {}\n\n      // Keep pipe for back-compat\n      promise.pipe = promise.then\n\n      // Add list-specific methods\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n          stateString = tuple[3]\n\n        // promise[ done | fail | progress ] = list.add\n        promise[tuple[1]] = list.add\n\n        // Handle state\n        if (stateString) {\n          list.add(\n            function () {\n              // state = [ resolved | rejected ]\n              state = stateString\n\n              // [ reject_list | resolve_list ].disable; progress_list.lock\n            },\n            tuples[i ^ 1][2].disable,\n            tuples[2][2].lock\n          )\n        }\n\n        // deferred[ resolve | reject | notify ]\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments)\n          return this\n        }\n        deferred[tuple[0] + 'With'] = list.fireWith\n      })\n\n      // Make the deferred a promise\n      promise.promise(deferred)\n\n      // Call given func if any\n      if (func) {\n        func.call(deferred, deferred)\n      }\n\n      // All done!\n      return deferred\n    },\n\n    // Deferred helper\n    when: function (subordinate /* , ..., subordinateN */) {\n      var i = 0,\n        resolveValues = slice.call(arguments),\n        length = resolveValues.length,\n        // the count of uncompleted subordinates\n        remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,\n        // the master Deferred.\n        // If resolveValues consist of only a single Deferred, just use that.\n        deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n        // Update function for both resolve and progress values\n        updateFunc = function (i, contexts, values) {\n          return function (value) {\n            contexts[i] = this\n            values[i] = arguments.length > 1 ? slice.call(arguments) : value\n            if (values === progressValues) {\n              deferred.notifyWith(contexts, values)\n            } else if (!--remaining) {\n              deferred.resolveWith(contexts, values)\n            }\n          }\n        },\n        progressValues,\n        progressContexts,\n        resolveContexts\n\n      // Add listeners to Deferred subordinates; treat others as resolved\n      if (length > 1) {\n        progressValues = new Array(length)\n        progressContexts = new Array(length)\n        resolveContexts = new Array(length)\n        for (; i < length; i++) {\n          if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\n            resolveValues[i]\n              .promise()\n              .progress(updateFunc(i, progressContexts, progressValues))\n              .done(updateFunc(i, resolveContexts, resolveValues))\n              .fail(deferred.reject)\n          } else {\n            --remaining\n          }\n        }\n      }\n\n      // If we're not waiting on anything, resolve the master\n      if (!remaining) {\n        deferred.resolveWith(resolveContexts, resolveValues)\n      }\n\n      return deferred.promise()\n    }\n  })\n\n  // The deferred used on DOM ready\n  var readyList\n\n  jQuery.fn.ready = function (fn) {\n    // Add the callback\n    jQuery.ready.promise().done(fn)\n\n    return this\n  }\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n\n    // Hold (or release) the ready event\n    holdReady: function (hold) {\n      if (hold) {\n        jQuery.readyWait++\n      } else {\n        jQuery.ready(true)\n      }\n    },\n\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return\n      }\n\n      // Remember that the DOM is ready\n      jQuery.isReady = true\n\n      // If a normal DOM Ready event fired, decrement, and wait if need be\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return\n      }\n\n      // If there are functions bound, to execute\n      readyList.resolveWith(document, [jQuery])\n\n      // Trigger any bound ready events\n      if (jQuery.fn.triggerHandler) {\n        jQuery(document).triggerHandler('ready')\n        jQuery(document).off('ready')\n      }\n    }\n  })\n\n  /**\n   * The ready event handler and self cleanup method\n   */\n  function completed () {\n    document.removeEventListener('DOMContentLoaded', completed)\n    window.removeEventListener('load', completed)\n    jQuery.ready()\n  }\n\n  jQuery.ready.promise = function (obj) {\n    if (!readyList) {\n      readyList = jQuery.Deferred()\n\n      // Catch cases where $(document).ready() is called\n      // after the browser event has already occurred.\n      // Support: IE9-10 only\n      // Older IE sometimes signals \"interactive\" too soon\n      if (\n        document.readyState === 'complete' ||\n        (document.readyState !== 'loading' && !document.documentElement.doScroll)\n      ) {\n        // Handle it asynchronously to allow scripts the opportunity to delay ready\n        window.setTimeout(jQuery.ready)\n      } else {\n        // Use the handy event callback\n        document.addEventListener('DOMContentLoaded', completed)\n\n        // A fallback to window.onload, that will always work\n        window.addEventListener('load', completed)\n      }\n    }\n    return readyList.promise(obj)\n  }\n\n  // Kick off the DOM ready check even if the user does not\n  jQuery.ready.promise()\n\n  // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n      len = elems.length,\n      bulk = key == null\n\n    // Sets many values\n    if (jQuery.type(key) === 'object') {\n      chainable = true\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw)\n      }\n\n      // Sets one value\n    } else if (value !== undefined) {\n      chainable = true\n\n      if (!jQuery.isFunction(value)) {\n        raw = true\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value)\n          fn = null\n\n          // ...except when executing function values\n        } else {\n          bulk = fn\n          fn = function (elem, key, value) {\n            return bulk.call(jQuery(elem), value)\n          }\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)))\n        }\n      }\n    }\n\n    return chainable\n      ? elems\n      : // Gets\n      bulk\n      ? fn.call(elems)\n      : len\n      ? fn(elems[0], key)\n      : emptyGet\n  }\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    /* jshint -W018 */\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType\n  }\n\n  function Data () {\n    this.expando = jQuery.expando + Data.uid++\n  }\n\n  Data.uid = 1\n\n  Data.prototype = {\n    register: function (owner, initial) {\n      var value = initial || {}\n\n      // If it is a node unlikely to be stringify-ed or looped over\n      // use plain assignment\n      if (owner.nodeType) {\n        owner[this.expando] = value\n\n        // Otherwise secure it in a non-enumerable, non-writable property\n        // configurability must be true to allow the property to be\n        // deleted with the delete operator\n      } else {\n        Object.defineProperty(owner, this.expando, {\n          value: value,\n          writable: true,\n          configurable: true\n        })\n      }\n      return owner[this.expando]\n    },\n    cache: function (owner) {\n      // We can accept data for non-element nodes in modern browsers,\n      // but we should not, see #8335.\n      // Always return an empty object.\n      if (!acceptData(owner)) {\n        return {}\n      }\n\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]\n\n      // If not, create one\n      if (!value) {\n        value = {}\n\n        // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value\n\n            // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            })\n          }\n        }\n      }\n\n      return value\n    },\n    set: function (owner, data, value) {\n      var prop,\n        cache = this.cache(owner)\n\n      // Handle: [ owner, key, value ] args\n      if (typeof data === 'string') {\n        cache[data] = value\n\n        // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[prop] = data[prop]\n        }\n      }\n      return cache\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][key]\n    },\n    access: function (owner, key, value) {\n      var stored\n\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || (key && typeof key === 'string' && value === undefined)) {\n        stored = this.get(owner, key)\n\n        return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key))\n      }\n\n      // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n      this.set(owner, key, value)\n\n      // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n      return value !== undefined ? value : key\n    },\n    remove: function (owner, key) {\n      var i,\n        name,\n        camel,\n        cache = owner[this.expando]\n\n      if (cache === undefined) {\n        return\n      }\n\n      if (key === undefined) {\n        this.register(owner)\n      } else {\n        // Support array or space separated string of keys\n        if (jQuery.isArray(key)) {\n          // If \"name\" is an array of keys...\n          // When data is initially created, via (\"key\", \"val\") signature,\n          // keys will be converted to camelCase.\n          // Since there is no way to tell _how_ a key was added, remove\n          // both plain key and camelCase key. #12786\n          // This will only penalize the array argument path.\n          name = key.concat(key.map(jQuery.camelCase))\n        } else {\n          camel = jQuery.camelCase(key)\n\n          // Try the string as a key before any manipulation\n          if (key in cache) {\n            name = [key, camel]\n          } else {\n            // If a key with the spaces exists, use it.\n            // Otherwise, create an array by matching non-whitespace\n            name = camel\n            name = name in cache ? [name] : name.match(rnotwhite) || []\n          }\n        }\n\n        i = name.length\n\n        while (i--) {\n          delete cache[name[i]]\n        }\n      }\n\n      // Remove the expando if there's no more data\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <= 35-45+\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://code.google.com/p/chromium/issues/detail?id=378607\n        if (owner.nodeType) {\n          owner[this.expando] = undefined\n        } else {\n          delete owner[this.expando]\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando]\n      return cache !== undefined && !jQuery.isEmptyObject(cache)\n    }\n  }\n  var dataPriv = new Data()\n\n  var dataUser = new Data()\n\n  //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n    rmultiDash = /[A-Z]/g\n\n  function dataAttr (elem, key, data) {\n    var name\n\n    // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n    if (data === undefined && elem.nodeType === 1) {\n      name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase()\n      data = elem.getAttribute(name)\n\n      if (typeof data === 'string') {\n        try {\n          data =\n            data === 'true'\n              ? true\n              : data === 'false'\n              ? false\n              : data === 'null'\n              ? null\n              : // Only convert to a number if it doesn't change the string\n              +data + '' === data\n              ? +data\n              : rbrace.test(data)\n              ? jQuery.parseJSON(data)\n              : data\n        } catch (e) {}\n\n        // Make sure we set the data so it isn't changed later\n        dataUser.set(elem, key, data)\n      } else {\n        data = undefined\n      }\n    }\n    return data\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem)\n    },\n\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data)\n    },\n\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name)\n    },\n\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data)\n    },\n\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name)\n    }\n  })\n\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n        name,\n        data,\n        elem = this[0],\n        attrs = elem && elem.attributes\n\n      // Gets all values\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem)\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {\n            i = attrs.length\n            while (i--) {\n              // Support: IE11+\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name\n                if (name.indexOf('data-') === 0) {\n                  name = jQuery.camelCase(name.slice(5))\n                  dataAttr(elem, name, data[name])\n                }\n              }\n            }\n            dataPriv.set(elem, 'hasDataAttrs', true)\n          }\n        }\n\n        return data\n      }\n\n      // Sets multiple values\n      if (typeof key === 'object') {\n        return this.each(function () {\n          dataUser.set(this, key)\n        })\n      }\n\n      return access(\n        this,\n        function (value) {\n          var data, camelKey\n\n          // The calling jQuery object (element matches) is not empty\n          // (and therefore has an element appears at this[ 0 ]) and the\n          // `value` parameter was not undefined. An empty jQuery object\n          // will result in `undefined` for elem = this[ 0 ] which will\n          // throw an exception if an attempt to read a data cache is made.\n          if (elem && value === undefined) {\n            // Attempt to get data from the cache\n            // with the key as-is\n            data =\n              dataUser.get(elem, key) ||\n              // Try to find dashed key if it exists (gh-2779)\n              // This is for 2.2.x only\n              dataUser.get(elem, key.replace(rmultiDash, '-$&').toLowerCase())\n\n            if (data !== undefined) {\n              return data\n            }\n\n            camelKey = jQuery.camelCase(key)\n\n            // Attempt to get data from the cache\n            // with the key camelized\n            data = dataUser.get(elem, camelKey)\n            if (data !== undefined) {\n              return data\n            }\n\n            // Attempt to \"discover\" the data in\n            // HTML5 custom data-* attrs\n            data = dataAttr(elem, camelKey, undefined)\n            if (data !== undefined) {\n              return data\n            }\n\n            // We tried really hard, but the data doesn't exist.\n            return\n          }\n\n          // Set the data...\n          camelKey = jQuery.camelCase(key)\n          this.each(function () {\n            // First, attempt to store a copy or reference of any\n            // data that might've been store with a camelCased key.\n            var data = dataUser.get(this, camelKey)\n\n            // For HTML5 data-* attribute interop, we have to\n            // store property names with dashes in a camelCase form.\n            // This might not apply to all properties...*\n            dataUser.set(this, camelKey, value)\n\n            // *... In the case of properties that might _actually_\n            // have dashes, we need to also store a copy of that\n            // unchanged property.\n            if (key.indexOf('-') > -1 && data !== undefined) {\n              dataUser.set(this, key, value)\n            }\n          })\n        },\n        null,\n        value,\n        arguments.length > 1,\n        null,\n        true\n      )\n    },\n\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key)\n      })\n    }\n  })\n\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue\n\n      if (elem) {\n        type = (type || 'fx') + 'queue'\n        queue = dataPriv.get(elem, type)\n\n        // Speed up dequeue by getting out quickly if this is just a lookup\n        if (data) {\n          if (!queue || jQuery.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data))\n          } else {\n            queue.push(data)\n          }\n        }\n        return queue || []\n      }\n    },\n\n    dequeue: function (elem, type) {\n      type = type || 'fx'\n\n      var queue = jQuery.queue(elem, type),\n        startLength = queue.length,\n        fn = queue.shift(),\n        hooks = jQuery._queueHooks(elem, type),\n        next = function () {\n          jQuery.dequeue(elem, type)\n        }\n\n      // If the fx queue is dequeued, always remove the progress sentinel\n      if (fn === 'inprogress') {\n        fn = queue.shift()\n        startLength--\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === 'fx') {\n          queue.unshift('inprogress')\n        }\n\n        // Clear up the last queue stop function\n        delete hooks.stop\n        fn.call(elem, next, hooks)\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire()\n      }\n    },\n\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + 'queueHooks'\n      return (\n        dataPriv.get(elem, key) ||\n        dataPriv.access(elem, key, {\n          empty: jQuery.Callbacks('once memory').add(function () {\n            dataPriv.remove(elem, [type + 'queue', key])\n          })\n        })\n      )\n    }\n  })\n\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2\n\n      if (typeof type !== 'string') {\n        data = type\n        type = 'fx'\n        setter--\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type)\n      }\n\n      return data === undefined\n        ? this\n        : this.each(function () {\n            var queue = jQuery.queue(this, type, data)\n\n            // Ensure a hooks for this queue\n            jQuery._queueHooks(this, type)\n\n            if (type === 'fx' && queue[0] !== 'inprogress') {\n              jQuery.dequeue(this, type)\n            }\n          })\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type)\n      })\n    },\n    clearQueue: function (type) {\n      return this.queue(type || 'fx', [])\n    },\n\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n        count = 1,\n        defer = jQuery.Deferred(),\n        elements = this,\n        i = this.length,\n        resolve = function () {\n          if (!--count) {\n            defer.resolveWith(elements, [elements])\n          }\n        }\n\n      if (typeof type !== 'string') {\n        obj = type\n        type = undefined\n      }\n      type = type || 'fx'\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + 'queueHooks')\n        if (tmp && tmp.empty) {\n          count++\n          tmp.empty.add(resolve)\n        }\n      }\n      resolve()\n      return defer.promise(obj)\n    }\n  })\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source\n\n  var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i')\n\n  var cssExpand = ['Top', 'Right', 'Bottom', 'Left']\n\n  var isHidden = function (elem, el) {\n    // isHidden might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem\n    return jQuery.css(elem, 'display') === 'none' || !jQuery.contains(elem.ownerDocument, elem)\n  }\n\n  function adjustCSS (elem, prop, valueParts, tween) {\n    var adjusted,\n      scale = 1,\n      maxIterations = 20,\n      currentValue = tween\n        ? function () {\n            return tween.cur()\n          }\n        : function () {\n            return jQuery.css(elem, prop, '')\n          },\n      initial = currentValue(),\n      unit = (valueParts && valueParts[3]) || (jQuery.cssNumber[prop] ? '' : 'px'),\n      // Starting value computation is required for potential unit mismatches\n      initialInUnit = (jQuery.cssNumber[prop] || (unit !== 'px' && +initial)) && rcssNum.exec(jQuery.css(elem, prop))\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Trust units reported by jQuery.css\n      unit = unit || initialInUnit[3]\n\n      // Make sure we update the tween properties later on\n      valueParts = valueParts || []\n\n      // Iteratively approximate from a nonzero starting point\n      initialInUnit = +initial || 1\n\n      do {\n        // If previous iteration zeroed out, double until we get *something*.\n        // Use string for doubling so we don't accidentally see scale as unchanged below\n        scale = scale || '.5'\n\n        // Adjust and apply\n        initialInUnit = initialInUnit / scale\n        jQuery.style(elem, prop, initialInUnit + unit)\n\n        // Update scale, tolerating zero or NaN from tween.cur()\n        // Break the loop if scale is unchanged or perfect, or if we've just had enough.\n      } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations)\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0\n\n      // Apply relative offset (+=/-=) if specified\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2]\n      if (tween) {\n        tween.unit = unit\n        tween.start = initialInUnit\n        tween.end = adjusted\n      }\n    }\n    return adjusted\n  }\n  var rcheckableType = /^(?:checkbox|radio)$/i\n\n  var rtagName = /<([\\w:-]+)/\n\n  var rscriptType = /^$|\\/(?:java|ecma)script/i\n\n  // We have to close these tags to support XHTML (#13200)\n  var wrapMap = {\n    // Support: IE9\n    option: [1, \"<select multiple='multiple'>\", '</select>'],\n\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, '<table>', '</table>'],\n    col: [2, '<table><colgroup>', '</colgroup></table>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n\n    _default: [0, '', '']\n  }\n\n  // Support: IE9\n  wrapMap.optgroup = wrapMap.option\n\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead\n  wrapMap.th = wrapMap.td\n\n  function getAll (context, tag) {\n    // Support: IE9-11+\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret =\n      typeof context.getElementsByTagName !== 'undefined'\n        ? context.getElementsByTagName(tag || '*')\n        : typeof context.querySelectorAll !== 'undefined'\n        ? context.querySelectorAll(tag || '*')\n        : []\n\n    return tag === undefined || (tag && jQuery.nodeName(context, tag)) ? jQuery.merge([context], ret) : ret\n  }\n\n  // Mark scripts as having already been evaluated\n  function setGlobalEval (elems, refElements) {\n    var i = 0,\n      l = elems.length\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'))\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/\n\n  function buildFragment (elems, context, scripts, selection, ignored) {\n    var elem,\n      tmp,\n      tag,\n      wrap,\n      contains,\n      j,\n      fragment = context.createDocumentFragment(),\n      nodes = [],\n      i = 0,\n      l = elems.length\n\n    for (; i < l; i++) {\n      elem = elems[i]\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (jQuery.type(elem) === 'object') {\n          // Support: Android<4.1, PhantomJS<2\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem)\n\n          // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem))\n\n          // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement('div'))\n\n          // Deserialize a standard representation\n          tag = (rtagName.exec(elem) || ['', ''])[1].toLowerCase()\n          wrap = wrapMap[tag] || wrapMap._default\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]\n\n          // Descend through wrappers to the right content\n          j = wrap[0]\n          while (j--) {\n            tmp = tmp.lastChild\n          }\n\n          // Support: Android<4.1, PhantomJS<2\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, tmp.childNodes)\n\n          // Remember the top-level container\n          tmp = fragment.firstChild\n\n          // Ensure the created nodes are orphaned (#12392)\n          tmp.textContent = ''\n        }\n      }\n    }\n\n    // Remove wrapper from fragment\n    fragment.textContent = ''\n\n    i = 0\n    while ((elem = nodes[i++])) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem)\n        }\n        continue\n      }\n\n      contains = jQuery.contains(elem.ownerDocument, elem)\n\n      // Append to fragment\n      tmp = getAll(fragment.appendChild(elem), 'script')\n\n      // Preserve script evaluation history\n      if (contains) {\n        setGlobalEval(tmp)\n      }\n\n      // Capture executables\n      if (scripts) {\n        j = 0\n        while ((elem = tmp[j++])) {\n          if (rscriptType.test(elem.type || '')) {\n            scripts.push(elem)\n          }\n        }\n      }\n    }\n\n    return fragment\n  }\n\n  ;(function () {\n    var fragment = document.createDocumentFragment(),\n      div = fragment.appendChild(document.createElement('div')),\n      input = document.createElement('input')\n\n    // Support: Android 4.0-4.3, Safari<=5.1\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n    input.setAttribute('type', 'radio')\n    input.setAttribute('checked', 'checked')\n    input.setAttribute('name', 't')\n\n    div.appendChild(input)\n\n    // Support: Safari<=5.1, Android<4.2\n    // Older WebKit doesn't clone checked state correctly in fragments\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked\n\n    // Support: IE<=11+\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n    div.innerHTML = '<textarea>x</textarea>'\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue\n  })()\n\n  var rkeyEvent = /^key/,\n    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n    rtypenamespace = /^([^.]*)(?:\\.(.+)|)/\n\n  function returnTrue () {\n    return true\n  }\n\n  function returnFalse () {\n    return false\n  }\n\n  // Support: IE9\n  // See #13393 for more info\n  function safeActiveElement () {\n    try {\n      return document.activeElement\n    } catch (err) {}\n  }\n\n  function on (elem, types, selector, data, fn, one) {\n    var origFn, type\n\n    // Types can be a map of types/handlers\n    if (typeof types === 'object') {\n      // ( types-Object, selector, data )\n      if (typeof selector !== 'string') {\n        // ( types-Object, data )\n        data = data || selector\n        selector = undefined\n      }\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one)\n      }\n      return elem\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector\n      data = selector = undefined\n    } else if (fn == null) {\n      if (typeof selector === 'string') {\n        // ( types, selector, fn )\n        fn = data\n        data = undefined\n      } else {\n        // ( types, data, fn )\n        fn = data\n        data = selector\n        selector = undefined\n      }\n    }\n    if (fn === false) {\n      fn = returnFalse\n    } else if (!fn) {\n      return elem\n    }\n\n    if (one === 1) {\n      origFn = fn\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event)\n        return origFn.apply(this, arguments)\n      }\n\n      // Use same guid so caller can remove using origFn\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)\n    }\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector)\n    })\n  }\n\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n  jQuery.event = {\n    global: {},\n\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n        eventHandle,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.get(elem)\n\n      // Don't attach events to noData or text/comment nodes (but allow plain objects)\n      if (!elemData) {\n        return\n      }\n\n      // Caller can pass in an object of custom data in lieu of the handler\n      if (handler.handler) {\n        handleObjIn = handler\n        handler = handleObjIn.handler\n        selector = handleObjIn.selector\n      }\n\n      // Make sure that the handler has a unique ID, used to find/remove it later\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++\n      }\n\n      // Init the element's event structure and main handler, if this is the first\n      if (!(events = elemData.events)) {\n        events = elemData.events = {}\n      }\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type\n            ? jQuery.event.dispatch.apply(elem, arguments)\n            : undefined\n        }\n      }\n\n      // Handle multiple events separated by a space\n      types = (types || '').match(rnotwhite) || ['']\n      t = types.length\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || []\n        type = origType = tmp[1]\n        namespaces = (tmp[2] || '').split('.').sort()\n\n        // There *must* be a type, no attaching namespace-only handlers\n        if (!type) {\n          continue\n        }\n\n        // If event changes its type, use the special event handlers for the changed type\n        special = jQuery.event.special[type] || {}\n\n        // If selector defined, determine special event api type, otherwise given type\n        type = (selector ? special.delegateType : special.bindType) || type\n\n        // Update special based on newly reset type\n        special = jQuery.event.special[type] || {}\n\n        // handleObj is passed to all event handlers\n        handleObj = jQuery.extend(\n          {\n            type: type,\n            origType: origType,\n            data: data,\n            handler: handler,\n            guid: handler.guid,\n            selector: selector,\n            needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n            namespace: namespaces.join('.')\n          },\n          handleObjIn\n        )\n\n        // Init the event handler queue if we're the first\n        if (!(handlers = events[type])) {\n          handlers = events[type] = []\n          handlers.delegateCount = 0\n\n          // Only use addEventListener if the special events handler returns false\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle)\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj)\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid\n          }\n        }\n\n        // Add to the element's handler list, delegates in front\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj)\n        } else {\n          handlers.push(handleObj)\n        }\n\n        // Keep track of which events have ever been used, for event optimization\n        jQuery.event.global[type] = true\n      }\n    },\n\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n        origCount,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.hasData(elem) && dataPriv.get(elem)\n\n      if (!elemData || !(events = elemData.events)) {\n        return\n      }\n\n      // Once for each type.namespace in types; type may be omitted\n      types = (types || '').match(rnotwhite) || ['']\n      t = types.length\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || []\n        type = origType = tmp[1]\n        namespaces = (tmp[2] || '').split('.').sort()\n\n        // Unbind all events (on this namespace, if provided) for the element\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true)\n          }\n          continue\n        }\n\n        special = jQuery.event.special[type] || {}\n        type = (selector ? special.delegateType : special.bindType) || type\n        handlers = events[type] || []\n        tmp = tmp[2] && new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)')\n\n        // Remove matching events\n        origCount = j = handlers.length\n        while (j--) {\n          handleObj = handlers[j]\n\n          if (\n            (mappedTypes || origType === handleObj.origType) &&\n            (!handler || handler.guid === handleObj.guid) &&\n            (!tmp || tmp.test(handleObj.namespace)) &&\n            (!selector || selector === handleObj.selector || (selector === '**' && handleObj.selector))\n          ) {\n            handlers.splice(j, 1)\n\n            if (handleObj.selector) {\n              handlers.delegateCount--\n            }\n            if (special.remove) {\n              special.remove.call(elem, handleObj)\n            }\n          }\n        }\n\n        // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle)\n          }\n\n          delete events[type]\n        }\n      }\n\n      // Remove data and the expando if it's no longer used\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, 'handle events')\n      }\n    },\n\n    dispatch: function (event) {\n      // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(event)\n\n      var i,\n        j,\n        ret,\n        matched,\n        handleObj,\n        handlerQueue = [],\n        args = slice.call(arguments),\n        handlers = (dataPriv.get(this, 'events') || {})[event.type] || [],\n        special = jQuery.event.special[event.type] || {}\n\n      // Use the fix-ed jQuery.Event rather than the (read-only) native event\n      args[0] = event\n      event.delegateTarget = this\n\n      // Call the preDispatch hook for the mapped type, and let it bail if desired\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return\n      }\n\n      // Determine handlers\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers)\n\n      // Run delegates first; they may want to stop propagation beneath us\n      i = 0\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem\n\n        j = 0\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n          // a subset or equal to those in the bound event (both can have no namespace).\n          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj\n            event.data = handleObj.data\n\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(\n              matched.elem,\n              args\n            )\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault()\n                event.stopPropagation()\n              }\n            }\n          }\n        }\n      }\n\n      // Call the postDispatch hook for the mapped type\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event)\n      }\n\n      return event.result\n    },\n\n    handlers: function (event, handlers) {\n      var i,\n        matches,\n        sel,\n        handleObj,\n        handlerQueue = [],\n        delegateCount = handlers.delegateCount,\n        cur = event.target\n\n      // Support (at least): Chrome, IE9\n      // Find delegate handlers\n      // Black-hole SVG <use> instance trees (#13180)\n      //\n      // Support: Firefox<=42+\n      // Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n      if (delegateCount && cur.nodeType && (event.type !== 'click' || isNaN(event.button) || event.button < 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && (cur.disabled !== true || event.type !== 'click')) {\n            matches = []\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]\n\n              // Don't conflict with Object.prototype properties (#13203)\n              sel = handleObj.selector + ' '\n\n              if (matches[sel] === undefined) {\n                matches[sel] = handleObj.needsContext\n                  ? jQuery(sel, this).index(cur) > -1\n                  : jQuery.find(sel, this, null, [cur]).length\n              }\n              if (matches[sel]) {\n                matches.push(handleObj)\n              }\n            }\n            if (matches.length) {\n              handlerQueue.push({ elem: cur, handlers: matches })\n            }\n          }\n        }\n      }\n\n      // Add the remaining (directly-bound) handlers\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({ elem: this, handlers: handlers.slice(delegateCount) })\n      }\n\n      return handlerQueue\n    },\n\n    // Includes some event props shared by KeyEvent and MouseEvent\n    props: (\n      'altKey bubbles cancelable ctrlKey currentTarget detail eventPhase ' +\n      'metaKey relatedTarget shiftKey target timeStamp view which'\n    ).split(' '),\n\n    fixHooks: {},\n\n    keyHooks: {\n      props: 'char charCode key keyCode'.split(' '),\n      filter: function (event, original) {\n        // Add which for key events\n        if (event.which == null) {\n          event.which = original.charCode != null ? original.charCode : original.keyCode\n        }\n\n        return event\n      }\n    },\n\n    mouseHooks: {\n      props: ('button buttons clientX clientY offsetX offsetY pageX pageY ' + 'screenX screenY toElement').split(' '),\n      filter: function (event, original) {\n        var eventDoc,\n          doc,\n          body,\n          button = original.button\n\n        // Calculate pageX/Y if missing and clientX/Y available\n        if (event.pageX == null && original.clientX != null) {\n          eventDoc = event.target.ownerDocument || document\n          doc = eventDoc.documentElement\n          body = eventDoc.body\n\n          event.pageX =\n            original.clientX +\n            ((doc && doc.scrollLeft) || (body && body.scrollLeft) || 0) -\n            ((doc && doc.clientLeft) || (body && body.clientLeft) || 0)\n          event.pageY =\n            original.clientY +\n            ((doc && doc.scrollTop) || (body && body.scrollTop) || 0) -\n            ((doc && doc.clientTop) || (body && body.clientTop) || 0)\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right\n        // Note: button is not normalized, so don't use it\n        if (!event.which && button !== undefined) {\n          event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0\n        }\n\n        return event\n      }\n    },\n\n    fix: function (event) {\n      if (event[jQuery.expando]) {\n        return event\n      }\n\n      // Create a writable copy of the event object and normalize some properties\n      var i,\n        prop,\n        copy,\n        type = event.type,\n        originalEvent = event,\n        fixHook = this.fixHooks[type]\n\n      if (!fixHook) {\n        this.fixHooks[type] = fixHook = rmouseEvent.test(type)\n          ? this.mouseHooks\n          : rkeyEvent.test(type)\n          ? this.keyHooks\n          : {}\n      }\n      copy = fixHook.props ? this.props.concat(fixHook.props) : this.props\n\n      event = new jQuery.Event(originalEvent)\n\n      i = copy.length\n      while (i--) {\n        prop = copy[i]\n        event[prop] = originalEvent[prop]\n      }\n\n      // Support: Cordova 2.5 (WebKit) (#13255)\n      // All events should have a target; Cordova deviceready doesn't\n      if (!event.target) {\n        event.target = document\n      }\n\n      // Support: Safari 6.0+, Chrome<28\n      // Target should not be a text node (#504, #13143)\n      if (event.target.nodeType === 3) {\n        event.target = event.target.parentNode\n      }\n\n      return fixHook.filter ? fixHook.filter(event, originalEvent) : event\n    },\n\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      focus: {\n        // Fire native event if possible so blur/focus sequence is correct\n        trigger: function () {\n          if (this !== safeActiveElement() && this.focus) {\n            this.focus()\n            return false\n          }\n        },\n        delegateType: 'focusin'\n      },\n      blur: {\n        trigger: function () {\n          if (this === safeActiveElement() && this.blur) {\n            this.blur()\n            return false\n          }\n        },\n        delegateType: 'focusout'\n      },\n      click: {\n        // For checkbox, fire native event so checked state will be right\n        trigger: function () {\n          if (this.type === 'checkbox' && this.click && jQuery.nodeName(this, 'input')) {\n            this.click()\n            return false\n          }\n        },\n\n        // For cross-browser consistency, don't fire native .click() on links\n        _default: function (event) {\n          return jQuery.nodeName(event.target, 'a')\n        }\n      },\n\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result\n          }\n        }\n      }\n    }\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle)\n    }\n  }\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props)\n    }\n\n    // Event object\n    if (src && src.type) {\n      this.originalEvent = src\n      this.type = src.type\n\n      // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n      this.isDefaultPrevented =\n        src.defaultPrevented ||\n        (src.defaultPrevented === undefined &&\n          // Support: Android<4.0\n          src.returnValue === false)\n          ? returnTrue\n          : returnFalse\n\n      // Event type\n    } else {\n      this.type = src\n    }\n\n    // Put explicitly provided properties onto the event object\n    if (props) {\n      jQuery.extend(this, props)\n    }\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = (src && src.timeStamp) || jQuery.now()\n\n    // Mark it as fixed\n    this[jQuery.expando] = true\n  }\n\n  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n\n    preventDefault: function () {\n      var e = this.originalEvent\n\n      this.isDefaultPrevented = returnTrue\n\n      if (e && !this.isSimulated) {\n        e.preventDefault()\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent\n\n      this.isPropagationStopped = returnTrue\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation()\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent\n\n      this.isImmediatePropagationStopped = returnTrue\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation()\n      }\n\n      this.stopPropagation()\n    }\n  }\n\n  // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://code.google.com/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n  jQuery.each(\n    {\n      mouseenter: 'mouseover',\n      mouseleave: 'mouseout',\n      pointerenter: 'pointerover',\n      pointerleave: 'pointerout'\n    },\n    function (orig, fix) {\n      jQuery.event.special[orig] = {\n        delegateType: fix,\n        bindType: fix,\n\n        handle: function (event) {\n          var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj\n\n          // For mouseenter/leave call the handler if related is outside the target.\n          // NB: No relatedTarget if the mouse left/entered the browser window\n          if (!related || (related !== target && !jQuery.contains(target, related))) {\n            event.type = handleObj.origType\n            ret = handleObj.handler.apply(this, arguments)\n            event.type = fix\n          }\n          return ret\n        }\n      }\n    }\n  )\n\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn)\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1)\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj\n        jQuery(types.delegateTarget).off(\n          handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType,\n          handleObj.selector,\n          handleObj.handler\n        )\n        return this\n      }\n      if (typeof types === 'object') {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type])\n        }\n        return this\n      }\n      if (selector === false || typeof selector === 'function') {\n        // ( types [, fn] )\n        fn = selector\n        selector = undefined\n      }\n      if (fn === false) {\n        fn = returnFalse\n      }\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector)\n      })\n    }\n  })\n\n  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n    // Support: IE 10-11, Edge 10240+\n    // In IE/Edge using regex groups here causes severe slowdowns.\n    // See https://connect.microsoft.com/IE/feedback/details/1736512/\n    rnoInnerhtml = /<script|<style|<link/i,\n    // checked=\"checked\" or checked\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n    rscriptTypeMasked = /^true\\/(.*)/,\n    rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g\n\n  // Manipulating tables requires a tbody\n  function manipulationTarget (elem, content) {\n    return jQuery.nodeName(elem, 'table') &&\n      jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')\n      ? elem.getElementsByTagName('tbody')[0] || elem.appendChild(elem.ownerDocument.createElement('tbody'))\n      : elem\n  }\n\n  // Replace/restore the type attribute of script elements for safe DOM manipulation\n  function disableScript (elem) {\n    elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type\n    return elem\n  }\n  function restoreScript (elem) {\n    var match = rscriptTypeMasked.exec(elem.type)\n\n    if (match) {\n      elem.type = match[1]\n    } else {\n      elem.removeAttribute('type')\n    }\n\n    return elem\n  }\n\n  function cloneCopyEvent (src, dest) {\n    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events\n\n    if (dest.nodeType !== 1) {\n      return\n    }\n\n    // 1. Copy private data: events, handlers, etc.\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.access(src)\n      pdataCur = dataPriv.set(dest, pdataOld)\n      events = pdataOld.events\n\n      if (events) {\n        delete pdataCur.handle\n        pdataCur.events = {}\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i])\n          }\n        }\n      }\n    }\n\n    // 2. Copy user data\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src)\n      udataCur = jQuery.extend({}, udataOld)\n\n      dataUser.set(dest, udataCur)\n    }\n  }\n\n  // Fix IE bugs, see support tests\n  function fixInput (src, dest) {\n    var nodeName = dest.nodeName.toLowerCase()\n\n    // Fails to persist the checked state of a cloned checkbox or radio button.\n    if (nodeName === 'input' && rcheckableType.test(src.type)) {\n      dest.checked = src.checked\n\n      // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === 'input' || nodeName === 'textarea') {\n      dest.defaultValue = src.defaultValue\n    }\n  }\n\n  function domManip (collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = concat.apply([], args)\n\n    var fragment,\n      first,\n      scripts,\n      hasScripts,\n      node,\n      doc,\n      i = 0,\n      l = collection.length,\n      iNoClone = l - 1,\n      value = args[0],\n      isFunction = jQuery.isFunction(value)\n\n    // We can't cloneNode fragments that contain checked, in WebKit\n    if (isFunction || (l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value))) {\n      return collection.each(function (index) {\n        var self = collection.eq(index)\n        if (isFunction) {\n          args[0] = value.call(this, index, self.html())\n        }\n        domManip(self, args, callback, ignored)\n      })\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored)\n      first = fragment.firstChild\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first\n      }\n\n      // Require either new content or an interest in ignored elements to invoke the callback\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, 'script'), disableScript)\n        hasScripts = scripts.length\n\n        // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n        for (; i < l; i++) {\n          node = fragment\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true)\n\n            // Keep references to cloned scripts for later restoration\n            if (hasScripts) {\n              // Support: Android<4.1, PhantomJS<2\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, 'script'))\n            }\n          }\n\n          callback.call(collection[i], node, i)\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument\n\n          // Reenable scripts\n          jQuery.map(scripts, restoreScript)\n\n          // Evaluate executable scripts on first document insertion\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i]\n            if (\n              rscriptType.test(node.type || '') &&\n              !dataPriv.access(node, 'globalEval') &&\n              jQuery.contains(doc, node)\n            ) {\n              if (node.src) {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl) {\n                  jQuery._evalUrl(node.src)\n                }\n              } else {\n                jQuery.globalEval(node.textContent.replace(rcleanScript, ''))\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection\n  }\n\n  function remove (elem, selector, keepData) {\n    var node,\n      nodes = selector ? jQuery.filter(selector, elem) : elem,\n      i = 0\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node))\n      }\n\n      if (node.parentNode) {\n        if (keepData && jQuery.contains(node.ownerDocument, node)) {\n          setGlobalEval(getAll(node, 'script'))\n        }\n        node.parentNode.removeChild(node)\n      }\n    }\n\n    return elem\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html.replace(rxhtmlTag, '<$1></$2>')\n    },\n\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n        l,\n        srcElements,\n        destElements,\n        clone = elem.cloneNode(true),\n        inPage = jQuery.contains(elem.ownerDocument, elem)\n\n      // Fix IE cloning issues\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone)\n        srcElements = getAll(elem)\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i])\n        }\n      }\n\n      // Copy the events from the original to the clone\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem)\n          destElements = destElements || getAll(clone)\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i])\n          }\n        } else {\n          cloneCopyEvent(elem, clone)\n        }\n      }\n\n      // Preserve script evaluation history\n      destElements = getAll(clone, 'script')\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, 'script'))\n      }\n\n      // Return the cloned set\n      return clone\n    },\n\n    cleanData: function (elems) {\n      var data,\n        elem,\n        type,\n        special = jQuery.event.special,\n        i = 0\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if ((data = elem[dataPriv.expando])) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type)\n\n                  // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle)\n                }\n              }\n            }\n\n            // Support: Chrome <= 35-45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataPriv.expando] = undefined\n          }\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <= 35-45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined\n          }\n        }\n      }\n    }\n  })\n\n  jQuery.fn.extend({\n    // Keep domManip exposed until 3.0 (gh-2225)\n    domManip: domManip,\n\n    detach: function (selector) {\n      return remove(this, selector, true)\n    },\n\n    remove: function (selector) {\n      return remove(this, selector)\n    },\n\n    text: function (value) {\n      return access(\n        this,\n        function (value) {\n          return value === undefined\n            ? jQuery.text(this)\n            : this.empty().each(function () {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                  this.textContent = value\n                }\n              })\n        },\n        null,\n        value,\n        arguments.length\n      )\n    },\n\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem)\n          target.appendChild(elem)\n        }\n      })\n    },\n\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem)\n          target.insertBefore(elem, target.firstChild)\n        }\n      })\n    },\n\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this)\n        }\n      })\n    },\n\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling)\n        }\n      })\n    },\n\n    empty: function () {\n      var elem,\n        i = 0\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false))\n\n          // Remove any remaining nodes\n          elem.textContent = ''\n        }\n      }\n\n      return this\n    },\n\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents\n\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents)\n      })\n    },\n\n    html: function (value) {\n      return access(\n        this,\n        function (value) {\n          var elem = this[0] || {},\n            i = 0,\n            l = this.length\n\n          if (value === undefined && elem.nodeType === 1) {\n            return elem.innerHTML\n          }\n\n          // See if we can take a shortcut and just use innerHTML\n          if (\n            typeof value === 'string' &&\n            !rnoInnerhtml.test(value) &&\n            !wrapMap[(rtagName.exec(value) || ['', ''])[1].toLowerCase()]\n          ) {\n            value = jQuery.htmlPrefilter(value)\n\n            try {\n              for (; i < l; i++) {\n                elem = this[i] || {}\n\n                // Remove element nodes and prevent memory leaks\n                if (elem.nodeType === 1) {\n                  jQuery.cleanData(getAll(elem, false))\n                  elem.innerHTML = value\n                }\n              }\n\n              elem = 0\n\n              // If using innerHTML throws an exception, use the fallback method\n            } catch (e) {}\n          }\n\n          if (elem) {\n            this.empty().append(value)\n          }\n        },\n        null,\n        value,\n        arguments.length\n      )\n    },\n\n    replaceWith: function () {\n      var ignored = []\n\n      // Make the changes, replacing each non-ignored context element with the new content\n      return domManip(\n        this,\n        arguments,\n        function (elem) {\n          var parent = this.parentNode\n\n          if (jQuery.inArray(this, ignored) < 0) {\n            jQuery.cleanData(getAll(this))\n            if (parent) {\n              parent.replaceChild(elem, this)\n            }\n          }\n\n          // Force callback invocation\n        },\n        ignored\n      )\n    }\n  })\n\n  jQuery.each(\n    {\n      appendTo: 'append',\n      prependTo: 'prepend',\n      insertBefore: 'before',\n      insertAfter: 'after',\n      replaceAll: 'replaceWith'\n    },\n    function (name, original) {\n      jQuery.fn[name] = function (selector) {\n        var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0\n\n        for (; i <= last; i++) {\n          elems = i === last ? this : this.clone(true)\n          jQuery(insert[i])[original](elems)\n\n          // Support: QtWebKit\n          // .get() because push.apply(_, arraylike) throws\n          push.apply(ret, elems.get())\n        }\n\n        return this.pushStack(ret)\n      }\n    }\n  )\n\n  var iframe,\n    elemdisplay = {\n      // Support: Firefox\n      // We have to pre-define these values for FF (#10227)\n      HTML: 'block',\n      BODY: 'block'\n    }\n\n  /**\n   * Retrieve the actual display of a element\n   * @param {String} name nodeName of the element\n   * @param {Object} doc Document object\n   */\n\n  // Called only from within defaultDisplay\n  function actualDisplay (name, doc) {\n    var elem = jQuery(doc.createElement(name)).appendTo(doc.body),\n      display = jQuery.css(elem[0], 'display')\n\n    // We don't have any data stored on the element,\n    // so use \"detach\" method as fast way to get rid of the element\n    elem.detach()\n\n    return display\n  }\n\n  /**\n   * Try to determine the default display value of an element\n   * @param {String} nodeName\n   */\n  function defaultDisplay (nodeName) {\n    var doc = document,\n      display = elemdisplay[nodeName]\n\n    if (!display) {\n      display = actualDisplay(nodeName, doc)\n\n      // If the simple way fails, read from inside an iframe\n      if (display === 'none' || !display) {\n        // Use the already-created iframe if possible\n        iframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement)\n\n        // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n        doc = iframe[0].contentDocument\n\n        // Support: IE\n        doc.write()\n        doc.close()\n\n        display = actualDisplay(nodeName, doc)\n        iframe.detach()\n      }\n\n      // Store the correct default display\n      elemdisplay[nodeName] = display\n    }\n\n    return display\n  }\n  var rmargin = /^margin/\n\n  var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i')\n\n  var getStyles = function (elem) {\n    // Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView\n\n    if (!view || !view.opener) {\n      view = window\n    }\n\n    return view.getComputedStyle(elem)\n  }\n\n  var swap = function (elem, options, callback, args) {\n    var ret,\n      name,\n      old = {}\n\n    // Remember the old values, and insert the new ones\n    for (name in options) {\n      old[name] = elem.style[name]\n      elem.style[name] = options[name]\n    }\n\n    ret = callback.apply(elem, args || [])\n\n    // Revert the old values\n    for (name in options) {\n      elem.style[name] = old[name]\n    }\n\n    return ret\n  }\n\n  var documentElement = document.documentElement\n\n  ;(function () {\n    var pixelPositionVal,\n      boxSizingReliableVal,\n      pixelMarginRightVal,\n      reliableMarginLeftVal,\n      container = document.createElement('div'),\n      div = document.createElement('div')\n\n    // Finish early in limited (non-browser) environments\n    if (!div.style) {\n      return\n    }\n\n    // Support: IE9-11+\n    // Style of cloned element affects source element cloned (#8908)\n    div.style.backgroundClip = 'content-box'\n    div.cloneNode(true).style.backgroundClip = ''\n    support.clearCloneStyle = div.style.backgroundClip === 'content-box'\n\n    container.style.cssText =\n      'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute'\n    container.appendChild(div)\n\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests () {\n      div.style.cssText =\n        // Support: Firefox<29, Android 2.3\n        // Vendor-prefix box-sizing\n        '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;' +\n        'position:relative;display:block;' +\n        'margin:auto;border:1px;padding:1px;' +\n        'top:1%;width:50%'\n      div.innerHTML = ''\n      documentElement.appendChild(container)\n\n      var divStyle = window.getComputedStyle(div)\n      pixelPositionVal = divStyle.top !== '1%'\n      reliableMarginLeftVal = divStyle.marginLeft === '2px'\n      boxSizingReliableVal = divStyle.width === '4px'\n\n      // Support: Android 4.0 - 4.3 only\n      // Some styles come back with percentage values, even though they shouldn't\n      div.style.marginRight = '50%'\n      pixelMarginRightVal = divStyle.marginRight === '4px'\n\n      documentElement.removeChild(container)\n    }\n\n    jQuery.extend(support, {\n      pixelPosition: function () {\n        // This test is executed only once but we still do memoizing\n        // since we can use the boxSizingReliable pre-computing.\n        // No need to check if the test was already performed, though.\n        computeStyleTests()\n        return pixelPositionVal\n      },\n      boxSizingReliable: function () {\n        if (boxSizingReliableVal == null) {\n          computeStyleTests()\n        }\n        return boxSizingReliableVal\n      },\n      pixelMarginRight: function () {\n        // Support: Android 4.0-4.3\n        // We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n        // since that compresses better and they're computed together anyway.\n        if (boxSizingReliableVal == null) {\n          computeStyleTests()\n        }\n        return pixelMarginRightVal\n      },\n      reliableMarginLeft: function () {\n        // Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n        if (boxSizingReliableVal == null) {\n          computeStyleTests()\n        }\n        return reliableMarginLeftVal\n      },\n      reliableMarginRight: function () {\n        // Support: Android 2.3\n        // Check if div with explicit width and no margin-right incorrectly\n        // gets computed margin-right based on width of container. (#3333)\n        // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n        // This support function is only executed once so no memoizing is needed.\n        var ret,\n          marginDiv = div.appendChild(document.createElement('div'))\n\n        // Reset CSS: box-sizing; display; margin; border; padding\n        marginDiv.style.cssText = div.style.cssText =\n          // Support: Android 2.3\n          // Vendor-prefix box-sizing\n          '-webkit-box-sizing:content-box;box-sizing:content-box;' + 'display:block;margin:0;border:0;padding:0'\n        marginDiv.style.marginRight = marginDiv.style.width = '0'\n        div.style.width = '1px'\n        documentElement.appendChild(container)\n\n        ret = !parseFloat(window.getComputedStyle(marginDiv).marginRight)\n\n        documentElement.removeChild(container)\n        div.removeChild(marginDiv)\n\n        return ret\n      }\n    })\n  })()\n\n  function curCSS (elem, name, computed) {\n    var width,\n      minWidth,\n      maxWidth,\n      ret,\n      style = elem.style\n\n    computed = computed || getStyles(elem)\n    ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined\n\n    // Support: Opera 12.1x only\n    // Fall back to style even without computed\n    // computed is undefined for elems on document fragments\n    if ((ret === '' || ret === undefined) && !jQuery.contains(elem.ownerDocument, elem)) {\n      ret = jQuery.style(elem, name)\n    }\n\n    // Support: IE9\n    // getPropertyValue is only needed for .css('filter') (#12537)\n    if (computed) {\n      // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // http://dev.w3.org/csswg/cssom/#resolved-values\n      if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n        // Remember the original values\n        width = style.width\n        minWidth = style.minWidth\n        maxWidth = style.maxWidth\n\n        // Put in the new values to get a computed value out\n        style.minWidth = style.maxWidth = style.width = ret\n        ret = computed.width\n\n        // Revert the changed values\n        style.width = width\n        style.minWidth = minWidth\n        style.maxWidth = maxWidth\n      }\n    }\n\n    return ret !== undefined\n      ? // Support: IE9-11+\n        // IE returns zIndex value as an integer.\n        ret + ''\n      : ret\n  }\n\n  function addGetHookIf (conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get\n          return\n        }\n\n        // Hook needed; redefine it so that the support test is not executed again.\n        return (this.get = hookFn).apply(this, arguments)\n      }\n    }\n  }\n\n  var // Swappable if display is none or starts with table\n    // except \"table\", \"table-cell\", or \"table-caption\"\n    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n    cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' },\n    cssNormalTransform = {\n      letterSpacing: '0',\n      fontWeight: '400'\n    },\n    cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],\n    emptyStyle = document.createElement('div').style\n\n  // Return a css property mapped to a potentially vendor prefixed property\n  function vendorPropName (name) {\n    // Shortcut for names that are not vendor prefixed\n    if (name in emptyStyle) {\n      return name\n    }\n\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n      i = cssPrefixes.length\n\n    while (i--) {\n      name = cssPrefixes[i] + capName\n      if (name in emptyStyle) {\n        return name\n      }\n    }\n  }\n\n  function setPositiveNumber (elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value)\n    return matches\n      ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px')\n      : value\n  }\n\n  function augmentWidthOrHeight (elem, name, extra, isBorderBox, styles) {\n    var i =\n        extra === (isBorderBox ? 'border' : 'content')\n          ? // If we already have the right measurement, avoid augmentation\n            4\n          : // Otherwise initialize for horizontal or vertical properties\n          name === 'width'\n          ? 1\n          : 0,\n      val = 0\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin, so add it if we want it\n      if (extra === 'margin') {\n        val += jQuery.css(elem, extra + cssExpand[i], true, styles)\n      }\n\n      if (isBorderBox) {\n        // border-box includes padding, so remove it if we want content\n        if (extra === 'content') {\n          val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles)\n        }\n\n        // At this point, extra isn't border nor margin, so remove border\n        if (extra !== 'margin') {\n          val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles)\n        }\n      } else {\n        // At this point, extra isn't content, so add padding\n        val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles)\n\n        // At this point, extra isn't content nor padding, so add border\n        if (extra !== 'padding') {\n          val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles)\n        }\n      }\n    }\n\n    return val\n  }\n\n  function getWidthOrHeight (elem, name, extra) {\n    // Start with offset property, which is equivalent to the border-box value\n    var valueIsBorderBox = true,\n      val = name === 'width' ? elem.offsetWidth : elem.offsetHeight,\n      styles = getStyles(elem),\n      isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box'\n\n    // Some non-html elements return undefined for offsetWidth, so check for null/undefined\n    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n    if (val <= 0 || val == null) {\n      // Fall back to computed then uncomputed css if necessary\n      val = curCSS(elem, name, styles)\n      if (val < 0 || val == null) {\n        val = elem.style[name]\n      }\n\n      // Computed unit is not pixels. Stop here and return.\n      if (rnumnonpx.test(val)) {\n        return val\n      }\n\n      // Check for style in case a browser which returns unreliable values\n      // for getComputedStyle silently falls back to the reliable elem.style\n      valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name])\n\n      // Normalize \"\", auto, and prepare for extra\n      val = parseFloat(val) || 0\n    }\n\n    // Use the active box-sizing model to add/subtract irrelevant styles\n    return (\n      val +\n      augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) +\n      'px'\n    )\n  }\n\n  function showHide (elements, show) {\n    var display,\n      elem,\n      hidden,\n      values = [],\n      index = 0,\n      length = elements.length\n\n    for (; index < length; index++) {\n      elem = elements[index]\n      if (!elem.style) {\n        continue\n      }\n\n      values[index] = dataPriv.get(elem, 'olddisplay')\n      display = elem.style.display\n      if (show) {\n        // Reset the inline display of this element to learn if it is\n        // being hidden by cascaded rules or not\n        if (!values[index] && display === 'none') {\n          elem.style.display = ''\n        }\n\n        // Set elements which have been overridden with display: none\n        // in a stylesheet to whatever the default browser style is\n        // for such an element\n        if (elem.style.display === '' && isHidden(elem)) {\n          values[index] = dataPriv.access(elem, 'olddisplay', defaultDisplay(elem.nodeName))\n        }\n      } else {\n        hidden = isHidden(elem)\n\n        if (display !== 'none' || !hidden) {\n          dataPriv.set(elem, 'olddisplay', hidden ? display : jQuery.css(elem, 'display'))\n        }\n      }\n    }\n\n    // Set the display of most of the elements in a second loop\n    // to avoid the constant reflow\n    for (index = 0; index < length; index++) {\n      elem = elements[index]\n      if (!elem.style) {\n        continue\n      }\n      if (!show || elem.style.display === 'none' || elem.style.display === '') {\n        elem.style.display = show ? values[index] || '' : 'none'\n      }\n    }\n\n    return elements\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, 'opacity')\n            return ret === '' ? '1' : ret\n          }\n        }\n      }\n    },\n\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      animationIterationCount: true,\n      columnCount: true,\n      fillOpacity: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      widows: true,\n      zIndex: true,\n      zoom: true\n    },\n\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {\n      float: 'cssFloat'\n    },\n\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return\n      }\n\n      // Make sure that we're working with the right name\n      var ret,\n        type,\n        hooks,\n        origName = jQuery.camelCase(name),\n        style = elem.style\n\n      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName)\n\n      // Gets hook for the prefixed version, then unprefixed version\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]\n\n      // Check if we're setting a value\n      if (value !== undefined) {\n        type = typeof value\n\n        // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n        if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret)\n\n          // Fixes bug #9237\n          type = 'number'\n        }\n\n        // Make sure that null and NaN values aren't set (#7116)\n        if (value == null || value !== value) {\n          return\n        }\n\n        // If a number was passed in, add the unit (except for certain CSS properties)\n        if (type === 'number') {\n          value += (ret && ret[3]) || (jQuery.cssNumber[origName] ? '' : 'px')\n        }\n\n        // Support: IE9-11+\n        // background-* props affect original clone's values\n        if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {\n          style[name] = 'inherit'\n        }\n\n        // If a hook was provided, use that value, otherwise just set the specified value\n        if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          style[name] = value\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret\n        }\n\n        // Otherwise just get the value from the style object\n        return style[name]\n      }\n    },\n\n    css: function (elem, name, extra, styles) {\n      var val,\n        num,\n        hooks,\n        origName = jQuery.camelCase(name)\n\n      // Make sure that we're working with the right name\n      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName)\n\n      // Try prefixed name followed by the unprefixed name\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]\n\n      // If a hook was provided get the computed value from there\n      if (hooks && 'get' in hooks) {\n        val = hooks.get(elem, true, extra)\n      }\n\n      // Otherwise, if a way to get the computed value exists, use that\n      if (val === undefined) {\n        val = curCSS(elem, name, styles)\n      }\n\n      // Convert \"normal\" to computed value\n      if (val === 'normal' && name in cssNormalTransform) {\n        val = cssNormalTransform[name]\n      }\n\n      // Make numeric if forced or a qualifier was provided and val looks numeric\n      if (extra === '' || extra) {\n        num = parseFloat(val)\n        return extra === true || isFinite(num) ? num || 0 : val\n      }\n      return val\n    }\n  })\n\n  jQuery.each(['height', 'width'], function (i, name) {\n    jQuery.cssHooks[name] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, 'display')) && elem.offsetWidth === 0\n            ? swap(elem, cssShow, function () {\n                return getWidthOrHeight(elem, name, extra)\n              })\n            : getWidthOrHeight(elem, name, extra)\n        }\n      },\n\n      set: function (elem, value, extra) {\n        var matches,\n          styles = extra && getStyles(elem),\n          subtract =\n            extra &&\n            augmentWidthOrHeight(\n              elem,\n              name,\n              extra,\n              jQuery.css(elem, 'boxSizing', false, styles) === 'border-box',\n              styles\n            )\n\n        // Convert to pixels if value adjustment is needed\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {\n          elem.style[name] = value\n          value = jQuery.css(elem, name)\n        }\n\n        return setPositiveNumber(elem, value, subtract)\n      }\n    }\n  })\n\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (\n        (parseFloat(curCSS(elem, 'marginLeft')) ||\n          elem.getBoundingClientRect().left -\n            swap(elem, { marginLeft: 0 }, function () {\n              return elem.getBoundingClientRect().left\n            })) + 'px'\n      )\n    }\n  })\n\n  // Support: Android 2.3\n  jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function (elem, computed) {\n    if (computed) {\n      return swap(elem, { display: 'inline-block' }, curCSS, [elem, 'marginRight'])\n    }\n  })\n\n  // These hooks are used by animate to expand properties\n  jQuery.each(\n    {\n      margin: '',\n      padding: '',\n      border: 'Width'\n    },\n    function (prefix, suffix) {\n      jQuery.cssHooks[prefix + suffix] = {\n        expand: function (value) {\n          var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n            parts = typeof value === 'string' ? value.split(' ') : [value]\n\n          for (; i < 4; i++) {\n            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0]\n          }\n\n          return expanded\n        }\n      }\n\n      if (!rmargin.test(prefix)) {\n        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber\n      }\n    }\n  )\n\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(\n        this,\n        function (elem, name, value) {\n          var styles,\n            len,\n            map = {},\n            i = 0\n\n          if (jQuery.isArray(name)) {\n            styles = getStyles(elem)\n            len = name.length\n\n            for (; i < len; i++) {\n              map[name[i]] = jQuery.css(elem, name[i], false, styles)\n            }\n\n            return map\n          }\n\n          return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name)\n        },\n        name,\n        value,\n        arguments.length > 1\n      )\n    },\n    show: function () {\n      return showHide(this, true)\n    },\n    hide: function () {\n      return showHide(this)\n    },\n    toggle: function (state) {\n      if (typeof state === 'boolean') {\n        return state ? this.show() : this.hide()\n      }\n\n      return this.each(function () {\n        if (isHidden(this)) {\n          jQuery(this).show()\n        } else {\n          jQuery(this).hide()\n        }\n      })\n    }\n  })\n\n  function Tween (elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing)\n  }\n  jQuery.Tween = Tween\n\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem\n      this.prop = prop\n      this.easing = easing || jQuery.easing._default\n      this.options = options\n      this.start = this.now = this.cur()\n      this.end = end\n      this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px')\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop]\n\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)\n    },\n    run: function (percent) {\n      var eased,\n        hooks = Tween.propHooks[this.prop]\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](\n          percent,\n          this.options.duration * percent,\n          0,\n          1,\n          this.options.duration\n        )\n      } else {\n        this.pos = eased = percent\n      }\n      this.now = (this.end - this.start) * eased + this.start\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this)\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this)\n      } else {\n        Tween.propHooks._default.set(this)\n      }\n      return this\n    }\n  }\n\n  Tween.prototype.init.prototype = Tween.prototype\n\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result\n\n        // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n        if (tween.elem.nodeType !== 1 || (tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null)) {\n          return tween.elem[tween.prop]\n        }\n\n        // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n        result = jQuery.css(tween.elem, tween.prop, '')\n\n        // Empty strings, null, undefined and \"auto\" are converted to 0.\n        return !result || result === 'auto' ? 0 : result\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween)\n        } else if (\n          tween.elem.nodeType === 1 &&\n          (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])\n        ) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit)\n        } else {\n          tween.elem[tween.prop] = tween.now\n        }\n      }\n    }\n  }\n\n  // Support: IE9\n  // Panic based approach to setting things on disconnected nodes\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now\n      }\n    }\n  }\n\n  jQuery.easing = {\n    linear: function (p) {\n      return p\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2\n    },\n    _default: 'swing'\n  }\n\n  jQuery.fx = Tween.prototype.init\n\n  // Back Compat <1.8 extension point\n  jQuery.fx.step = {}\n\n  var fxNow,\n    timerId,\n    rfxtypes = /^(?:toggle|show|hide)$/,\n    rrun = /queueHooks$/\n\n  // Animations created synchronously will run synchronously\n  function createFxNow () {\n    window.setTimeout(function () {\n      fxNow = undefined\n    })\n    return (fxNow = jQuery.now())\n  }\n\n  // Generate parameters to create a standard animation\n  function genFx (type, includeWidth) {\n    var which,\n      i = 0,\n      attrs = { height: type }\n\n    // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n    includeWidth = includeWidth ? 1 : 0\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i]\n      attrs['margin' + which] = attrs['padding' + which] = type\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type\n    }\n\n    return attrs\n  }\n\n  function createTween (value, prop, animation) {\n    var tween,\n      collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']),\n      index = 0,\n      length = collection.length\n    for (; index < length; index++) {\n      if ((tween = collection[index].call(animation, prop, value))) {\n        // We're done with this property\n        return tween\n      }\n    }\n  }\n\n  function defaultPrefilter (elem, props, opts) {\n    /* jshint validthis: true */\n    var prop,\n      value,\n      toggle,\n      tween,\n      hooks,\n      oldfire,\n      display,\n      checkDisplay,\n      anim = this,\n      orig = {},\n      style = elem.style,\n      hidden = elem.nodeType && isHidden(elem),\n      dataShow = dataPriv.get(elem, 'fxshow')\n\n    // Handle queue: false promises\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, 'fx')\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0\n        oldfire = hooks.empty.fire\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire()\n          }\n        }\n      }\n      hooks.unqueued++\n\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--\n          if (!jQuery.queue(elem, 'fx').length) {\n            hooks.empty.fire()\n          }\n        })\n      })\n    }\n\n    // Height/width overflow pass\n    if (elem.nodeType === 1 && ('height' in props || 'width' in props)) {\n      // Make sure that nothing sneaks out\n      // Record all 3 overflow attributes because IE9-10 do not\n      // change the overflow attribute when overflowX and\n      // overflowY are set to the same value\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]\n\n      // Set display property to inline-block for height/width\n      // animations on inline elements that are having width/height animated\n      display = jQuery.css(elem, 'display')\n\n      // Test default display if display is currently \"none\"\n      checkDisplay = display === 'none' ? dataPriv.get(elem, 'olddisplay') || defaultDisplay(elem.nodeName) : display\n\n      if (checkDisplay === 'inline' && jQuery.css(elem, 'float') === 'none') {\n        style.display = 'inline-block'\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = 'hidden'\n      anim.always(function () {\n        style.overflow = opts.overflow[0]\n        style.overflowX = opts.overflow[1]\n        style.overflowY = opts.overflow[2]\n      })\n    }\n\n    // show/hide pass\n    for (prop in props) {\n      value = props[prop]\n      if (rfxtypes.exec(value)) {\n        delete props[prop]\n        toggle = toggle || value === 'toggle'\n        if (value === (hidden ? 'hide' : 'show')) {\n          // If there is dataShow left over from a stopped hide or show\n          // and we are going to proceed with show, we should pretend to be hidden\n          if (value === 'show' && dataShow && dataShow[prop] !== undefined) {\n            hidden = true\n          } else {\n            continue\n          }\n        }\n        orig[prop] = (dataShow && dataShow[prop]) || jQuery.style(elem, prop)\n\n        // Any non-fx value stops us from restoring the original display value\n      } else {\n        display = undefined\n      }\n    }\n\n    if (!jQuery.isEmptyObject(orig)) {\n      if (dataShow) {\n        if ('hidden' in dataShow) {\n          hidden = dataShow.hidden\n        }\n      } else {\n        dataShow = dataPriv.access(elem, 'fxshow', {})\n      }\n\n      // Store state if its toggle - enables .stop().toggle() to \"reverse\"\n      if (toggle) {\n        dataShow.hidden = !hidden\n      }\n      if (hidden) {\n        jQuery(elem).show()\n      } else {\n        anim.done(function () {\n          jQuery(elem).hide()\n        })\n      }\n      anim.done(function () {\n        var prop\n\n        dataPriv.remove(elem, 'fxshow')\n        for (prop in orig) {\n          jQuery.style(elem, prop, orig[prop])\n        }\n      })\n      for (prop in orig) {\n        tween = createTween(hidden ? dataShow[prop] : 0, prop, anim)\n\n        if (!(prop in dataShow)) {\n          dataShow[prop] = tween.start\n          if (hidden) {\n            tween.end = tween.start\n            tween.start = prop === 'width' || prop === 'height' ? 1 : 0\n          }\n        }\n      }\n\n      // If this is a noop like .hide().hide(), restore an overwritten display value\n    } else if ((display === 'none' ? defaultDisplay(elem.nodeName) : display) === 'inline') {\n      style.display = display\n    }\n  }\n\n  function propFilter (props, specialEasing) {\n    var index, name, easing, value, hooks\n\n    // camelCase, specialEasing and expand cssHook pass\n    for (index in props) {\n      name = jQuery.camelCase(index)\n      easing = specialEasing[name]\n      value = props[index]\n      if (jQuery.isArray(value)) {\n        easing = value[1]\n        value = props[index] = value[0]\n      }\n\n      if (index !== name) {\n        props[name] = value\n        delete props[index]\n      }\n\n      hooks = jQuery.cssHooks[name]\n      if (hooks && 'expand' in hooks) {\n        value = hooks.expand(value)\n        delete props[name]\n\n        // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index]\n            specialEasing[index] = easing\n          }\n        }\n      } else {\n        specialEasing[name] = easing\n      }\n    }\n  }\n\n  function Animation (elem, properties, options) {\n    var result,\n      stopped,\n      index = 0,\n      length = Animation.prefilters.length,\n      deferred = jQuery.Deferred().always(function () {\n        // Don't match elem in the :animated selector\n        delete tick.elem\n      }),\n      tick = function () {\n        if (stopped) {\n          return false\n        }\n        var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3\n          // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n          temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(percent)\n        }\n\n        deferred.notifyWith(elem, [animation, percent, remaining])\n\n        if (percent < 1 && length) {\n          return remaining\n        } else {\n          deferred.resolveWith(elem, [animation])\n          return false\n        }\n      },\n      animation = deferred.promise({\n        elem: elem,\n        props: jQuery.extend({}, properties),\n        opts: jQuery.extend(\n          true,\n          {\n            specialEasing: {},\n            easing: jQuery.easing._default\n          },\n          options\n        ),\n        originalProperties: properties,\n        originalOptions: options,\n        startTime: fxNow || createFxNow(),\n        duration: options.duration,\n        tweens: [],\n        createTween: function (prop, end) {\n          var tween = jQuery.Tween(\n            elem,\n            animation.opts,\n            prop,\n            end,\n            animation.opts.specialEasing[prop] || animation.opts.easing\n          )\n          animation.tweens.push(tween)\n          return tween\n        },\n        stop: function (gotoEnd) {\n          var index = 0,\n            // If we are going to the end, we want to run all the tweens\n            // otherwise we skip this part\n            length = gotoEnd ? animation.tweens.length : 0\n          if (stopped) {\n            return this\n          }\n          stopped = true\n          for (; index < length; index++) {\n            animation.tweens[index].run(1)\n          }\n\n          // Resolve when we played the last frame; otherwise, reject\n          if (gotoEnd) {\n            deferred.notifyWith(elem, [animation, 1, 0])\n            deferred.resolveWith(elem, [animation, gotoEnd])\n          } else {\n            deferred.rejectWith(elem, [animation, gotoEnd])\n          }\n          return this\n        }\n      }),\n      props = animation.props\n\n    propFilter(props, animation.opts.specialEasing)\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts)\n      if (result) {\n        if (jQuery.isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result)\n        }\n        return result\n      }\n    }\n\n    jQuery.map(props, createTween, animation)\n\n    if (jQuery.isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation)\n    }\n\n    jQuery.fx.timer(\n      jQuery.extend(tick, {\n        elem: elem,\n        anim: animation,\n        queue: animation.opts.queue\n      })\n    )\n\n    // attach callbacks from options\n    return animation\n      .progress(animation.opts.progress)\n      .done(animation.opts.done, animation.opts.complete)\n      .fail(animation.opts.fail)\n      .always(animation.opts.always)\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      '*': [\n        function (prop, value) {\n          var tween = this.createTween(prop, value)\n          adjustCSS(tween.elem, prop, rcssNum.exec(value), tween)\n          return tween\n        }\n      ]\n    },\n\n    tweener: function (props, callback) {\n      if (jQuery.isFunction(props)) {\n        callback = props\n        props = ['*']\n      } else {\n        props = props.match(rnotwhite)\n      }\n\n      var prop,\n        index = 0,\n        length = props.length\n\n      for (; index < length; index++) {\n        prop = props[index]\n        Animation.tweeners[prop] = Animation.tweeners[prop] || []\n        Animation.tweeners[prop].unshift(callback)\n      }\n    },\n\n    prefilters: [defaultPrefilter],\n\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback)\n      } else {\n        Animation.prefilters.push(callback)\n      }\n    }\n  })\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt =\n      speed && typeof speed === 'object'\n        ? jQuery.extend({}, speed)\n        : {\n            complete: fn || (!fn && easing) || (jQuery.isFunction(speed) && speed),\n            duration: speed,\n            easing: (fn && easing) || (easing && !jQuery.isFunction(easing) && easing)\n          }\n\n    opt.duration = jQuery.fx.off\n      ? 0\n      : typeof opt.duration === 'number'\n      ? opt.duration\n      : opt.duration in jQuery.fx.speeds\n      ? jQuery.fx.speeds[opt.duration]\n      : jQuery.fx.speeds._default\n\n    // Normalize opt.queue - true/undefined/null -> \"fx\"\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = 'fx'\n    }\n\n    // Queueing\n    opt.old = opt.complete\n\n    opt.complete = function () {\n      if (jQuery.isFunction(opt.old)) {\n        opt.old.call(this)\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue)\n      }\n    }\n\n    return opt\n  }\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return (\n        this.filter(isHidden)\n          .css('opacity', 0)\n          .show()\n\n          // Animate to the value specified\n          .end()\n          .animate({ opacity: to }, speed, easing, callback)\n      )\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n        optall = jQuery.speed(speed, easing, callback),\n        doAnimation = function () {\n          // Operate on a copy of prop so per-property easing won't be lost\n          var anim = Animation(this, jQuery.extend({}, prop), optall)\n\n          // Empty animations, or finishing resolves immediately\n          if (empty || dataPriv.get(this, 'finish')) {\n            anim.stop(true)\n          }\n        }\n      doAnimation.finish = doAnimation\n\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop\n        delete hooks.stop\n        stop(gotoEnd)\n      }\n\n      if (typeof type !== 'string') {\n        gotoEnd = clearQueue\n        clearQueue = type\n        type = undefined\n      }\n      if (clearQueue && type !== false) {\n        this.queue(type || 'fx', [])\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n          index = type != null && type + 'queueHooks',\n          timers = jQuery.timers,\n          data = dataPriv.get(this)\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index])\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index])\n            }\n          }\n        }\n\n        for (index = timers.length; index--; ) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd)\n            dequeue = false\n            timers.splice(index, 1)\n          }\n        }\n\n        // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type)\n        }\n      })\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || 'fx'\n      }\n      return this.each(function () {\n        var index,\n          data = dataPriv.get(this),\n          queue = data[type + 'queue'],\n          hooks = data[type + 'queueHooks'],\n          timers = jQuery.timers,\n          length = queue ? queue.length : 0\n\n        // Enable finishing flag on private data\n        data.finish = true\n\n        // Empty the queue first\n        jQuery.queue(this, type, [])\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true)\n        }\n\n        // Look for any active animations, and finish them\n        for (index = timers.length; index--; ) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true)\n            timers.splice(index, 1)\n          }\n        }\n\n        // Look for any animations in the old queue and finish them\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this)\n          }\n        }\n\n        // Turn off finishing flag\n        delete data.finish\n      })\n    }\n  })\n\n  jQuery.each(['toggle', 'show', 'hide'], function (i, name) {\n    var cssFn = jQuery.fn[name]\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === 'boolean'\n        ? cssFn.apply(this, arguments)\n        : this.animate(genFx(name, true), speed, easing, callback)\n    }\n  })\n\n  // Generate shortcuts for custom animations\n  jQuery.each(\n    {\n      slideDown: genFx('show'),\n      slideUp: genFx('hide'),\n      slideToggle: genFx('toggle'),\n      fadeIn: { opacity: 'show' },\n      fadeOut: { opacity: 'hide' },\n      fadeToggle: { opacity: 'toggle' }\n    },\n    function (name, props) {\n      jQuery.fn[name] = function (speed, easing, callback) {\n        return this.animate(props, speed, easing, callback)\n      }\n    }\n  )\n\n  jQuery.timers = []\n  jQuery.fx.tick = function () {\n    var timer,\n      i = 0,\n      timers = jQuery.timers\n\n    fxNow = jQuery.now()\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]\n\n      // Checks the timer has not already been removed\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1)\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop()\n    }\n    fxNow = undefined\n  }\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer)\n    if (timer()) {\n      jQuery.fx.start()\n    } else {\n      jQuery.timers.pop()\n    }\n  }\n\n  jQuery.fx.interval = 13\n  jQuery.fx.start = function () {\n    if (!timerId) {\n      timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval)\n    }\n  }\n\n  jQuery.fx.stop = function () {\n    window.clearInterval(timerId)\n\n    timerId = null\n  }\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n\n    // Default speed\n    _default: 400\n  }\n\n  // Based off of the plugin by Clint Helfers, with permission.\n  // http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time\n    type = type || 'fx'\n\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time)\n      hooks.stop = function () {\n        window.clearTimeout(timeout)\n      }\n    })\n  }\n  ;(function () {\n    var input = document.createElement('input'),\n      select = document.createElement('select'),\n      opt = select.appendChild(document.createElement('option'))\n\n    input.type = 'checkbox'\n\n    // Support: iOS<=5.1, Android<=4.2+\n    // Default value for a checkbox should be \"on\"\n    support.checkOn = input.value !== ''\n\n    // Support: IE<=11+\n    // Must access selectedIndex to make default options select\n    support.optSelected = opt.selected\n\n    // Support: Android<=2.3\n    // Options inside disabled selects are incorrectly marked as disabled\n    select.disabled = true\n    support.optDisabled = !opt.disabled\n\n    // Support: IE<=11+\n    // An input loses its value after becoming a radio\n    input = document.createElement('input')\n    input.value = 't'\n    input.type = 'radio'\n    support.radioValue = input.value === 't'\n  })()\n\n  var boolHook,\n    attrHandle = jQuery.expr.attrHandle\n\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1)\n    },\n\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name)\n      })\n    }\n  })\n\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType\n\n      // Don't get/set attributes on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return\n      }\n\n      // Fallback to prop when attributes are not supported\n      if (typeof elem.getAttribute === 'undefined') {\n        return jQuery.prop(elem, name, value)\n      }\n\n      // All attributes are lowercase\n      // Grab necessary hook if one is defined\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        name = name.toLowerCase()\n        hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined)\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name)\n          return\n        }\n\n        if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret\n        }\n\n        elem.setAttribute(name, value + '')\n        return value\n      }\n\n      if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret\n      }\n\n      ret = jQuery.find.attr(elem, name)\n\n      // Non-existent attributes return null, we normalize to undefined\n      return ret == null ? undefined : ret\n    },\n\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === 'radio' && jQuery.nodeName(elem, 'input')) {\n            var val = elem.value\n            elem.setAttribute('type', value)\n            if (val) {\n              elem.value = val\n            }\n            return value\n          }\n        }\n      }\n    },\n\n    removeAttr: function (elem, value) {\n      var name,\n        propName,\n        i = 0,\n        attrNames = value && value.match(rnotwhite)\n\n      if (attrNames && elem.nodeType === 1) {\n        while ((name = attrNames[i++])) {\n          propName = jQuery.propFix[name] || name\n\n          // Boolean attributes get special treatment (#10870)\n          if (jQuery.expr.match.bool.test(name)) {\n            // Set corresponding property to false\n            elem[propName] = false\n          }\n\n          elem.removeAttribute(name)\n        }\n      }\n    }\n  })\n\n  // Hooks for boolean attributes\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name)\n      } else {\n        elem.setAttribute(name, name)\n      }\n      return name\n    }\n  }\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret, handle\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[name]\n        attrHandle[name] = ret\n        ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null\n        attrHandle[name] = handle\n      }\n      return ret\n    }\n  })\n\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n    rclickable = /^(?:a|area)$/i\n\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1)\n    },\n\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name]\n      })\n    }\n  })\n\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType\n\n      // Don't get/set properties on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name\n        hooks = jQuery.propHooks[name]\n      }\n\n      if (value !== undefined) {\n        if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret\n        }\n\n        return (elem[name] = value)\n      }\n\n      if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret\n      }\n\n      return elem[name]\n    },\n\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, 'tabindex')\n\n          return tabindex\n            ? parseInt(tabindex, 10)\n            : rfocusable.test(elem.nodeName) || (rclickable.test(elem.nodeName) && elem.href)\n            ? 0\n            : -1\n        }\n      }\n    },\n\n    propFix: {\n      for: 'htmlFor',\n      class: 'className'\n    }\n  })\n\n  // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        var parent = elem.parentNode\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex\n        }\n        return null\n      },\n      set: function (elem) {\n        var parent = elem.parentNode\n        if (parent) {\n          parent.selectedIndex\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex\n          }\n        }\n      }\n    }\n  }\n\n  jQuery.each(\n    [\n      'tabIndex',\n      'readOnly',\n      'maxLength',\n      'cellSpacing',\n      'cellPadding',\n      'rowSpan',\n      'colSpan',\n      'useMap',\n      'frameBorder',\n      'contentEditable'\n    ],\n    function () {\n      jQuery.propFix[this.toLowerCase()] = this\n    }\n  )\n\n  var rclass = /[\\t\\r\\n\\f]/g\n\n  function getClass (elem) {\n    return (elem.getAttribute && elem.getAttribute('class')) || ''\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n        elem,\n        cur,\n        curValue,\n        clazz,\n        j,\n        finalValue,\n        i = 0\n\n      if (jQuery.isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)))\n        })\n      }\n\n      if (typeof value === 'string' && value) {\n        classes = value.match(rnotwhite) || []\n\n        while ((elem = this[i++])) {\n          curValue = getClass(elem)\n          cur = elem.nodeType === 1 && (' ' + curValue + ' ').replace(rclass, ' ')\n\n          if (cur) {\n            j = 0\n            while ((clazz = classes[j++])) {\n              if (cur.indexOf(' ' + clazz + ' ') < 0) {\n                cur += clazz + ' '\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = jQuery.trim(cur)\n            if (curValue !== finalValue) {\n              elem.setAttribute('class', finalValue)\n            }\n          }\n        }\n      }\n\n      return this\n    },\n\n    removeClass: function (value) {\n      var classes,\n        elem,\n        cur,\n        curValue,\n        clazz,\n        j,\n        finalValue,\n        i = 0\n\n      if (jQuery.isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)))\n        })\n      }\n\n      if (!arguments.length) {\n        return this.attr('class', '')\n      }\n\n      if (typeof value === 'string' && value) {\n        classes = value.match(rnotwhite) || []\n\n        while ((elem = this[i++])) {\n          curValue = getClass(elem)\n\n          // This expression is here for better compressibility (see addClass)\n          cur = elem.nodeType === 1 && (' ' + curValue + ' ').replace(rclass, ' ')\n\n          if (cur) {\n            j = 0\n            while ((clazz = classes[j++])) {\n              // Remove *all* instances\n              while (cur.indexOf(' ' + clazz + ' ') > -1) {\n                cur = cur.replace(' ' + clazz + ' ', ' ')\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = jQuery.trim(cur)\n            if (curValue !== finalValue) {\n              elem.setAttribute('class', finalValue)\n            }\n          }\n        }\n      }\n\n      return this\n    },\n\n    toggleClass: function (value, stateVal) {\n      var type = typeof value\n\n      if (typeof stateVal === 'boolean' && type === 'string') {\n        return stateVal ? this.addClass(value) : this.removeClass(value)\n      }\n\n      if (jQuery.isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal)\n        })\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames\n\n        if (type === 'string') {\n          // Toggle individual class names\n          i = 0\n          self = jQuery(this)\n          classNames = value.match(rnotwhite) || []\n\n          while ((className = classNames[i++])) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className)\n            } else {\n              self.addClass(className)\n            }\n          }\n\n          // Toggle whole class name\n        } else if (value === undefined || type === 'boolean') {\n          className = getClass(this)\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, '__className__', className)\n          }\n\n          // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n          if (this.setAttribute) {\n            this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '')\n          }\n        }\n      })\n    },\n\n    hasClass: function (selector) {\n      var className,\n        elem,\n        i = 0\n\n      className = ' ' + selector + ' '\n      while ((elem = this[i++])) {\n        if (elem.nodeType === 1 && (' ' + getClass(elem) + ' ').replace(rclass, ' ').indexOf(className) > -1) {\n          return true\n        }\n      }\n\n      return false\n    }\n  })\n\n  var rreturn = /\\r/g,\n    rspaces = /[\\x20\\t\\r\\n\\f]+/g\n\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n        ret,\n        isFunction,\n        elem = this[0]\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]\n\n          if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {\n            return ret\n          }\n\n          ret = elem.value\n\n          return typeof ret === 'string'\n            ? // Handle most common string cases\n              ret.replace(rreturn, '')\n            : // Handle cases where value is null/undef or number\n            ret == null\n            ? ''\n            : ret\n        }\n\n        return\n      }\n\n      isFunction = jQuery.isFunction(value)\n\n      return this.each(function (i) {\n        var val\n\n        if (this.nodeType !== 1) {\n          return\n        }\n\n        if (isFunction) {\n          val = value.call(this, i, jQuery(this).val())\n        } else {\n          val = value\n        }\n\n        // Treat null/undefined as \"\"; convert numbers to string\n        if (val == null) {\n          val = ''\n        } else if (typeof val === 'number') {\n          val += ''\n        } else if (jQuery.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? '' : value + ''\n          })\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]\n\n        // If set returns undefined, fall back to normal setting\n        if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {\n          this.value = val\n        }\n      })\n    }\n  })\n\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, 'value')\n          return val != null\n            ? val\n            : // Support: IE10-11+\n              // option.text throws exceptions (#14686, #14858)\n              // Strip and collapse whitespace\n              // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n              jQuery.trim(jQuery.text(elem)).replace(rspaces, ' ')\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n            option,\n            options = elem.options,\n            index = elem.selectedIndex,\n            one = elem.type === 'select-one' || index < 0,\n            values = one ? null : [],\n            max = one ? index + 1 : options.length,\n            i = index < 0 ? max : one ? index : 0\n\n          // Loop through all the selected options\n          for (; i < max; i++) {\n            option = options[i]\n\n            // IE8-9 doesn't update selected after form reset (#2551)\n            if (\n              (option.selected || i === index) &&\n              // Don't return options that are disabled or in a disabled optgroup\n              (support.optDisabled ? !option.disabled : option.getAttribute('disabled') === null) &&\n              (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, 'optgroup'))\n            ) {\n              // Get the specific value for the option\n              value = jQuery(option).val()\n\n              // We don't need an array for one selects\n              if (one) {\n                return value\n              }\n\n              // Multi-Selects return an array\n              values.push(value)\n            }\n          }\n\n          return values\n        },\n\n        set: function (elem, value) {\n          var optionSet,\n            option,\n            options = elem.options,\n            values = jQuery.makeArray(value),\n            i = options.length\n\n          while (i--) {\n            option = options[i]\n            if ((option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1)) {\n              optionSet = true\n            }\n          }\n\n          // Force browsers to behave consistently when non-matching value is set\n          if (!optionSet) {\n            elem.selectedIndex = -1\n          }\n          return values\n        }\n      }\n    }\n  })\n\n  // Radios and checkboxes getter/setter\n  jQuery.each(['radio', 'checkbox'], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (jQuery.isArray(value)) {\n          return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1)\n        }\n      }\n    }\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute('value') === null ? 'on' : elem.value\n      }\n    }\n  })\n\n  // Return jQuery for attributes-only inclusion\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n        cur,\n        tmp,\n        bubbleType,\n        ontype,\n        handle,\n        special,\n        eventPath = [elem || document],\n        type = hasOwn.call(event, 'type') ? event.type : event,\n        namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : []\n\n      cur = tmp = elem = elem || document\n\n      // Don't do events on text and comment nodes\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return\n      }\n\n      // focus/blur morphs to focusin/out; ensure we're not firing them right now\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return\n      }\n\n      if (type.indexOf('.') > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split('.')\n        type = namespaces.shift()\n        namespaces.sort()\n      }\n      ontype = type.indexOf(':') < 0 && 'on' + type\n\n      // Caller can pass in a jQuery.Event object, Object, or just an event type string\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event)\n\n      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n      event.isTrigger = onlyHandlers ? 2 : 3\n      event.namespace = namespaces.join('.')\n      event.rnamespace = event.namespace ? new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)') : null\n\n      // Clean up the event in case it is being reused\n      event.result = undefined\n      if (!event.target) {\n        event.target = elem\n      }\n\n      // Clone any incoming data and prepend the event, creating the handler arg list\n      data = data == null ? [event] : jQuery.makeArray(data, [event])\n\n      // Allow special events to draw outside the lines\n      special = jQuery.event.special[type] || {}\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return\n      }\n\n      // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n        bubbleType = special.delegateType || type\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode\n        }\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur)\n          tmp = cur\n        }\n\n        // Only add window if we got to document (e.g., not plain obj or detached DOM)\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window)\n        }\n      }\n\n      // Fire handlers on the event path\n      i = 0\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        event.type = i > 1 ? bubbleType : special.bindType || type\n\n        // jQuery handler\n        handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle')\n        if (handle) {\n          handle.apply(cur, data)\n        }\n\n        // Native handler\n        handle = ontype && cur[ontype]\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data)\n          if (event.result === false) {\n            event.preventDefault()\n          }\n        }\n      }\n      event.type = type\n\n      // If nobody prevented the default action, do it now\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype]\n\n            if (tmp) {\n              elem[ontype] = null\n            }\n\n            // Prevent re-triggering of the same event, since we already bubbled it above\n            jQuery.event.triggered = type\n            elem[type]()\n            jQuery.event.triggered = undefined\n\n            if (tmp) {\n              elem[ontype] = tmp\n            }\n          }\n        }\n      }\n\n      return event.result\n    },\n\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      })\n\n      jQuery.event.trigger(e, null, elem)\n    }\n  })\n\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this)\n      })\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0]\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true)\n      }\n    }\n  })\n\n  jQuery.each(\n    (\n      'blur focus focusin focusout load resize scroll unload click dblclick ' +\n      'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\n      'change select submit keydown keypress keyup error contextmenu'\n    ).split(' '),\n    function (i, name) {\n      // Handle event binding\n      jQuery.fn[name] = function (data, fn) {\n        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)\n      }\n    }\n  )\n\n  jQuery.fn.extend({\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)\n    }\n  })\n\n  support.focusin = 'onfocusin' in window\n\n  // Support: Firefox\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome, Safari\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\n  if (!support.focusin) {\n    jQuery.each({ focus: 'focusin', blur: 'focusout' }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event))\n      }\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          var doc = this.ownerDocument || this,\n            attaches = dataPriv.access(doc, fix)\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true)\n          }\n          dataPriv.access(doc, fix, (attaches || 0) + 1)\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this,\n            attaches = dataPriv.access(doc, fix) - 1\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true)\n            dataPriv.remove(doc, fix)\n          } else {\n            dataPriv.access(doc, fix, attaches)\n          }\n        }\n      }\n    })\n  }\n  var location = window.location\n\n  var nonce = jQuery.now()\n\n  var rquery = /\\?/\n\n  // Support: Android 2.3\n  // Workaround failure to string-cast null input\n  jQuery.parseJSON = function (data) {\n    return JSON.parse(data + '')\n  }\n\n  // Cross-browser xml parsing\n  jQuery.parseXML = function (data) {\n    var xml\n    if (!data || typeof data !== 'string') {\n      return null\n    }\n\n    // Support: IE9\n    try {\n      xml = new window.DOMParser().parseFromString(data, 'text/xml')\n    } catch (e) {\n      xml = undefined\n    }\n\n    if (!xml || xml.getElementsByTagName('parsererror').length) {\n      jQuery.error('Invalid XML: ' + data)\n    }\n    return xml\n  }\n\n  var rhash = /#.*$/,\n    rts = /([?&])_=[^&]*/,\n    rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm,\n    // #7653, #8125, #8152: local protocol detection\n    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n    rnoContent = /^(?:GET|HEAD)$/,\n    rprotocol = /^\\/\\//,\n    /* Prefilters\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n     * 2) These are called:\n     *    - BEFORE asking for a transport\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\n     * 3) key is the dataType\n     * 4) the catchall symbol \"*\" can be used\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n     */\n    prefilters = {},\n    /* Transports bindings\n     * 1) key is the dataType\n     * 2) the catchall symbol \"*\" can be used\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n     */\n    transports = {},\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n    allTypes = '*/'.concat('*'),\n    // Anchor tag for parsing the document origin\n    originAnchor = document.createElement('a')\n  originAnchor.href = location.href\n\n  // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n  function addToPrefiltersOrTransports (structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== 'string') {\n        func = dataTypeExpression\n        dataTypeExpression = '*'\n      }\n\n      var dataType,\n        i = 0,\n        dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || []\n\n      if (jQuery.isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while ((dataType = dataTypes[i++])) {\n          // Prepend if requested\n          if (dataType[0] === '+') {\n            dataType = dataType.slice(1) || '*'\n            ;(structure[dataType] = structure[dataType] || []).unshift(func)\n\n            // Otherwise append\n          } else {\n            ;(structure[dataType] = structure[dataType] || []).push(func)\n          }\n        }\n      }\n    }\n  }\n\n  // Base inspection function for prefilters and transports\n  function inspectPrefiltersOrTransports (structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n      seekingTransport = structure === transports\n\n    function inspect (dataType) {\n      var selected\n      inspected[dataType] = true\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR)\n        if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport)\n          inspect(dataTypeOrTransport)\n          return false\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport)\n        }\n      })\n      return selected\n    }\n\n    return inspect(options.dataTypes[0]) || (!inspected['*'] && inspect('*'))\n  }\n\n  // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n  function ajaxExtend (target, src) {\n    var key,\n      deep,\n      flatOptions = jQuery.ajaxSettings.flatOptions || {}\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        ;(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]\n      }\n    }\n    if (deep) {\n      jQuery.extend(true, target, deep)\n    }\n\n    return target\n  }\n\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n  function ajaxHandleResponses (s, jqXHR, responses) {\n    var ct,\n      type,\n      finalDataType,\n      firstDataType,\n      contents = s.contents,\n      dataTypes = s.dataTypes\n\n    // Remove auto dataType and get content-type in the process\n    while (dataTypes[0] === '*') {\n      dataTypes.shift()\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader('Content-Type')\n      }\n    }\n\n    // Check if we're dealing with a known content-type\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type)\n          break\n        }\n      }\n    }\n\n    // Check to see if we have a response for the expected dataType\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0]\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {\n          finalDataType = type\n          break\n        }\n        if (!firstDataType) {\n          firstDataType = type\n        }\n      }\n\n      // Or just use first one\n      finalDataType = finalDataType || firstDataType\n    }\n\n    // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType)\n      }\n      return responses[finalDataType]\n    }\n  }\n\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n  function ajaxConvert (s, response, jqXHR, isSuccess) {\n    var conv2,\n      current,\n      conv,\n      tmp,\n      prev,\n      converters = {},\n      // Work with a copy of dataTypes in case we need to modify it for conversion\n      dataTypes = s.dataTypes.slice()\n\n    // Create converters map with lowercased keys\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv]\n      }\n    }\n\n    current = dataTypes.shift()\n\n    // Convert to each sequential dataType\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response\n      }\n\n      // Apply the dataFilter if provided\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType)\n      }\n\n      prev = current\n      current = dataTypes.shift()\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === '*') {\n          current = prev\n\n          // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== '*' && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + ' ' + current] || converters['* ' + current]\n\n          // If none found, seek a pair\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(' ')\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]]\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]\n\n                    // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0]\n                    dataTypes.unshift(tmp[1])\n                  }\n                  break\n                }\n              }\n            }\n          }\n\n          // Apply converter (if not an equivalence)\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response)\n            } else {\n              try {\n                response = conv(response)\n              } catch (e) {\n                return {\n                  state: 'parsererror',\n                  error: conv ? e : 'No conversion from ' + prev + ' to ' + current\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return { state: 'success', data: response }\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n\n    ajaxSettings: {\n      url: location.href,\n      type: 'GET',\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n      /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n      accepts: {\n        '*': allTypes,\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript'\n      },\n\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n\n      responseFields: {\n        xml: 'responseXML',\n        text: 'responseText',\n        json: 'responseJSON'\n      },\n\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        '* text': String,\n\n        // Text to html (true = no transformation)\n        'text html': true,\n\n        // Evaluate text as a json expression\n        'text json': jQuery.parseJSON,\n\n        // Parse text as xml\n        'text xml': jQuery.parseXML\n      },\n\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings\n        ? // Building a settings object\n          ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings)\n        : // Extending ajaxSettings\n          ajaxExtend(jQuery.ajaxSettings, target)\n    },\n\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === 'object') {\n        options = url\n        url = undefined\n      }\n\n      // Force options to be an object\n      options = options || {}\n\n      var transport,\n        // URL without anti-cache param\n        cacheURL,\n        // Response headers\n        responseHeadersString,\n        responseHeaders,\n        // timeout handle\n        timeoutTimer,\n        // Url cleanup var\n        urlAnchor,\n        // To know if global events are to be dispatched\n        fireGlobals,\n        // Loop variable\n        i,\n        // Create the final options object\n        s = jQuery.ajaxSetup({}, options),\n        // Callbacks context\n        callbackContext = s.context || s,\n        // Context for global events is callbackContext if it is a DOM node or jQuery collection\n        globalEventContext =\n          s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n        // Deferreds\n        deferred = jQuery.Deferred(),\n        completeDeferred = jQuery.Callbacks('once memory'),\n        // Status-dependent callbacks\n        statusCode = s.statusCode || {},\n        // Headers (they are sent all at once)\n        requestHeaders = {},\n        requestHeadersNames = {},\n        // The jqXHR state\n        state = 0,\n        // Default abort message\n        strAbort = 'canceled',\n        // Fake xhr\n        jqXHR = {\n          readyState: 0,\n\n          // Builds headers hashtable if needed\n          getResponseHeader: function (key) {\n            var match\n            if (state === 2) {\n              if (!responseHeaders) {\n                responseHeaders = {}\n                while ((match = rheaders.exec(responseHeadersString))) {\n                  responseHeaders[match[1].toLowerCase()] = match[2]\n                }\n              }\n              match = responseHeaders[key.toLowerCase()]\n            }\n            return match == null ? null : match\n          },\n\n          // Raw string\n          getAllResponseHeaders: function () {\n            return state === 2 ? responseHeadersString : null\n          },\n\n          // Caches the header\n          setRequestHeader: function (name, value) {\n            var lname = name.toLowerCase()\n            if (!state) {\n              name = requestHeadersNames[lname] = requestHeadersNames[lname] || name\n              requestHeaders[name] = value\n            }\n            return this\n          },\n\n          // Overrides response content-type header\n          overrideMimeType: function (type) {\n            if (!state) {\n              s.mimeType = type\n            }\n            return this\n          },\n\n          // Status-dependent callbacks\n          statusCode: function (map) {\n            var code\n            if (map) {\n              if (state < 2) {\n                for (code in map) {\n                  // Lazy-add the new callback in a way that preserves old ones\n                  statusCode[code] = [statusCode[code], map[code]]\n                }\n              } else {\n                // Execute the appropriate callbacks\n                jqXHR.always(map[jqXHR.status])\n              }\n            }\n            return this\n          },\n\n          // Cancel the request\n          abort: function (statusText) {\n            var finalText = statusText || strAbort\n            if (transport) {\n              transport.abort(finalText)\n            }\n            done(0, finalText)\n            return this\n          }\n        }\n\n      // Attach deferreds\n      deferred.promise(jqXHR).complete = completeDeferred.add\n      jqXHR.success = jqXHR.done\n      jqXHR.error = jqXHR.fail\n\n      // Remove hash character (#7531: and string promotion)\n      // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n      s.url = ((url || s.url || location.href) + '').replace(rhash, '').replace(rprotocol, location.protocol + '//')\n\n      // Alias method option to type as per ticket #12004\n      s.type = options.method || options.type || s.method || s.type\n\n      // Extract dataTypes list\n      s.dataTypes = jQuery\n        .trim(s.dataType || '*')\n        .toLowerCase()\n        .match(rnotwhite) || ['']\n\n      // A cross-domain request is in order when the origin doesn't match the current origin.\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement('a')\n\n        // Support: IE8-11+\n        // IE throws exception if url is malformed, e.g. http://example.com:80x/\n        try {\n          urlAnchor.href = s.url\n\n          // Support: IE8-11+\n          // Anchor's host property isn't correctly set when s.url is relative\n          urlAnchor.href = urlAnchor.href\n          s.crossDomain =\n            originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true\n        }\n      }\n\n      // Convert data if not already a string\n      if (s.data && s.processData && typeof s.data !== 'string') {\n        s.data = jQuery.param(s.data, s.traditional)\n      }\n\n      // Apply prefilters\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR)\n\n      // If request was aborted inside a prefilter, stop there\n      if (state === 2) {\n        return jqXHR\n      }\n\n      // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n      fireGlobals = jQuery.event && s.global\n\n      // Watch for a new set of requests\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger('ajaxStart')\n      }\n\n      // Uppercase the type\n      s.type = s.type.toUpperCase()\n\n      // Determine if request has content\n      s.hasContent = !rnoContent.test(s.type)\n\n      // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      cacheURL = s.url\n\n      // More options handling for requests with no content\n      if (!s.hasContent) {\n        // If data is available, append data to url\n        if (s.data) {\n          cacheURL = s.url += (rquery.test(cacheURL) ? '&' : '?') + s.data\n\n          // #9682: remove data so that it's not used in an eventual retry\n          delete s.data\n        }\n\n        // Add anti-cache in url if needed\n        if (s.cache === false) {\n          s.url = rts.test(cacheURL)\n            ? // If there is already a '_' parameter, set its value\n              cacheURL.replace(rts, '$1_=' + nonce++)\n            : // Otherwise add one to the end\n              cacheURL + (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++\n        }\n      }\n\n      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL])\n        }\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL])\n        }\n      }\n\n      // Set the correct header, if data is being sent\n      if ((s.data && s.hasContent && s.contentType !== false) || options.contentType) {\n        jqXHR.setRequestHeader('Content-Type', s.contentType)\n      }\n\n      // Set the Accepts header for the server, depending on the dataType\n      jqXHR.setRequestHeader(\n        'Accept',\n        s.dataTypes[0] && s.accepts[s.dataTypes[0]]\n          ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '')\n          : s.accepts['*']\n      )\n\n      // Check for headers option\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i])\n      }\n\n      // Allow custom headers/mimetypes and early abort\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n        // Abort if not done already and return\n        return jqXHR.abort()\n      }\n\n      // Aborting is no longer a cancellation\n      strAbort = 'abort'\n\n      // Install callbacks on deferreds\n      for (i in { success: 1, error: 1, complete: 1 }) {\n        jqXHR[i](s[i])\n      }\n\n      // Get transport\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)\n\n      // If no transport, we auto-abort\n      if (!transport) {\n        done(-1, 'No Transport')\n      } else {\n        jqXHR.readyState = 1\n\n        // Send global event\n        if (fireGlobals) {\n          globalEventContext.trigger('ajaxSend', [jqXHR, s])\n        }\n\n        // If request was aborted inside ajaxSend, stop there\n        if (state === 2) {\n          return jqXHR\n        }\n\n        // Timeout\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort('timeout')\n          }, s.timeout)\n        }\n\n        try {\n          state = 1\n          transport.send(requestHeaders, done)\n        } catch (e) {\n          // Propagate exception as error if not done\n          if (state < 2) {\n            done(-1, e)\n\n            // Simply rethrow otherwise\n          } else {\n            throw e\n          }\n        }\n      }\n\n      // Callback for when everything is done\n      function done (status, nativeStatusText, responses, headers) {\n        var isSuccess,\n          success,\n          error,\n          response,\n          modified,\n          statusText = nativeStatusText\n\n        // Called once\n        if (state === 2) {\n          return\n        }\n\n        // State is \"done\" now\n        state = 2\n\n        // Clear timeout if it exists\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer)\n        }\n\n        // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n        transport = undefined\n\n        // Cache response headers\n        responseHeadersString = headers || ''\n\n        // Set readyState\n        jqXHR.readyState = status > 0 ? 4 : 0\n\n        // Determine if successful\n        isSuccess = (status >= 200 && status < 300) || status === 304\n\n        // Get response data\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses)\n        }\n\n        // Convert no matter what (that way responseXXX fields are always set)\n        response = ajaxConvert(s, response, jqXHR, isSuccess)\n\n        // If successful, handle type chaining\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader('Last-Modified')\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified\n            }\n            modified = jqXHR.getResponseHeader('etag')\n            if (modified) {\n              jQuery.etag[cacheURL] = modified\n            }\n          }\n\n          // if no content\n          if (status === 204 || s.type === 'HEAD') {\n            statusText = 'nocontent'\n\n            // if not modified\n          } else if (status === 304) {\n            statusText = 'notmodified'\n\n            // If we have data, let's convert it\n          } else {\n            statusText = response.state\n            success = response.data\n            error = response.error\n            isSuccess = !error\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText\n          if (status || !statusText) {\n            statusText = 'error'\n            if (status < 0) {\n              status = 0\n            }\n          }\n        }\n\n        // Set data for the fake xhr object\n        jqXHR.status = status\n        jqXHR.statusText = (nativeStatusText || statusText) + ''\n\n        // Success/Error\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR])\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error])\n        }\n\n        // Status-dependent callbacks\n        jqXHR.statusCode(statusCode)\n        statusCode = undefined\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [jqXHR, s, isSuccess ? success : error])\n        }\n\n        // Complete\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText])\n\n        if (fireGlobals) {\n          globalEventContext.trigger('ajaxComplete', [jqXHR, s])\n\n          // Handle the global AJAX counter\n          if (!--jQuery.active) {\n            jQuery.event.trigger('ajaxStop')\n          }\n        }\n      }\n\n      return jqXHR\n    },\n\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, 'json')\n    },\n\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, 'script')\n    }\n  })\n\n  jQuery.each(['get', 'post'], function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (jQuery.isFunction(data)) {\n        type = type || callback\n        callback = data\n        data = undefined\n      }\n\n      // The url can be an options object (which then must have .url)\n      return jQuery.ajax(\n        jQuery.extend(\n          {\n            url: url,\n            type: method,\n            dataType: type,\n            data: data,\n            success: callback\n          },\n          jQuery.isPlainObject(url) && url\n        )\n      )\n    }\n  })\n\n  jQuery._evalUrl = function (url) {\n    return jQuery.ajax({\n      url: url,\n\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: 'GET',\n      dataType: 'script',\n      async: false,\n      global: false,\n      throws: true\n    })\n  }\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap\n\n      if (jQuery.isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapAll(html.call(this, i))\n        })\n      }\n\n      if (this[0]) {\n        // The elements to wrap the target around\n        wrap = jQuery(html, this[0].ownerDocument)\n          .eq(0)\n          .clone(true)\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0])\n        }\n\n        wrap\n          .map(function () {\n            var elem = this\n\n            while (elem.firstElementChild) {\n              elem = elem.firstElementChild\n            }\n\n            return elem\n          })\n          .append(this)\n      }\n\n      return this\n    },\n\n    wrapInner: function (html) {\n      if (jQuery.isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i))\n        })\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n          contents = self.contents()\n\n        if (contents.length) {\n          contents.wrapAll(html)\n        } else {\n          self.append(html)\n        }\n      })\n    },\n\n    wrap: function (html) {\n      var isFunction = jQuery.isFunction(html)\n\n      return this.each(function (i) {\n        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html)\n      })\n    },\n\n    unwrap: function () {\n      return this.parent()\n        .each(function () {\n          if (!jQuery.nodeName(this, 'body')) {\n            jQuery(this).replaceWith(this.childNodes)\n          }\n        })\n        .end()\n    }\n  })\n\n  jQuery.expr.filters.hidden = function (elem) {\n    return !jQuery.expr.filters.visible(elem)\n  }\n  jQuery.expr.filters.visible = function (elem) {\n    // Support: Opera <= 12.12\n    // Opera reports offsetWidths and offsetHeights less than zero on some elements\n    // Use OR instead of AND as the element is not visible if either is true\n    // See tickets #10406 and #13132\n    return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0\n  }\n\n  var r20 = /%20/g,\n    rbracket = /\\[\\]$/,\n    rCRLF = /\\r?\\n/g,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n    rsubmittable = /^(?:input|select|textarea|keygen)/i\n\n  function buildParams (prefix, obj, traditional, add) {\n    var name\n\n    if (jQuery.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v)\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add)\n        }\n      })\n    } else if (!traditional && jQuery.type(obj) === 'object') {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj)\n    }\n  }\n\n  // Serialize an array of form elements or a set of\n  // key/values into a query string\n  jQuery.param = function (a, traditional) {\n    var prefix,\n      s = [],\n      add = function (key, value) {\n        // If value is a function, invoke it and return its value\n        value = jQuery.isFunction(value) ? value() : value == null ? '' : value\n        s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value)\n      }\n\n    // Set traditional to true for jQuery <= 1.3.2 behavior.\n    if (traditional === undefined) {\n      traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional\n    }\n\n    // If an array was passed in, assume that it is an array of form elements.\n    if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value)\n      })\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add)\n      }\n    }\n\n    // Return the resulting serialization\n    return s.join('&').replace(r20, '+')\n  }\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray())\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, 'elements')\n        return elements ? jQuery.makeArray(elements) : this\n      })\n        .filter(function () {\n          var type = this.type\n\n          // Use .is( \":disabled\" ) so that fieldset[disabled] works\n          return (\n            this.name &&\n            !jQuery(this).is(':disabled') &&\n            rsubmittable.test(this.nodeName) &&\n            !rsubmitterTypes.test(type) &&\n            (this.checked || !rcheckableType.test(type))\n          )\n        })\n        .map(function (i, elem) {\n          var val = jQuery(this).val()\n\n          return val == null\n            ? null\n            : jQuery.isArray(val)\n            ? jQuery.map(val, function (val) {\n                return { name: elem.name, value: val.replace(rCRLF, '\\r\\n') }\n              })\n            : { name: elem.name, value: val.replace(rCRLF, '\\r\\n') }\n        })\n        .get()\n    }\n  })\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest()\n    } catch (e) {}\n  }\n\n  var xhrSuccessStatus = {\n      // File protocol always yields status code 0, assume 200\n      0: 200,\n\n      // Support: IE9\n      // #1450: sometimes IE returns 1223 when it should be 204\n      1223: 204\n    },\n    xhrSupported = jQuery.ajaxSettings.xhr()\n\n  support.cors = !!xhrSupported && 'withCredentials' in xhrSupported\n  support.ajax = xhrSupported = !!xhrSupported\n\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback\n\n    // Cross domain only allowed if supported through XMLHttpRequest\n    if (support.cors || (xhrSupported && !options.crossDomain)) {\n      return {\n        send: function (headers, complete) {\n          var i,\n            xhr = options.xhr()\n\n          xhr.open(options.type, options.url, options.async, options.username, options.password)\n\n          // Apply custom fields if provided\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i]\n            }\n          }\n\n          // Override mime type if needed\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType)\n          }\n\n          // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n          if (!options.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest'\n          }\n\n          // Set headers\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i])\n          }\n\n          // Callback\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null\n\n                if (type === 'abort') {\n                  xhr.abort()\n                } else if (type === 'error') {\n                  // Support: IE9\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== 'number') {\n                    complete(0, 'error')\n                  } else {\n                    complete(\n                      // File: protocol always yields status 0; see #8605, #14207\n                      xhr.status,\n                      xhr.statusText\n                    )\n                  }\n                } else {\n                  complete(\n                    xhrSuccessStatus[xhr.status] || xhr.status,\n                    xhr.statusText,\n\n                    // Support: IE9 only\n                    // IE9 has no XHR2 but throws on binary (trac-11426)\n                    // For XHR2 non-text, let the caller handle it (gh-2498)\n                    (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string'\n                      ? { binary: xhr.response }\n                      : { text: xhr.responseText },\n                    xhr.getAllResponseHeaders()\n                  )\n                }\n              }\n            }\n          }\n\n          // Listen to events\n          xhr.onload = callback()\n          errorCallback = xhr.onerror = callback('error')\n\n          // Support: IE9\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback()\n                  }\n                })\n              }\n            }\n          }\n\n          // Create the abort callback\n          callback = callback('abort')\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send((options.hasContent && options.data) || null)\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e\n            }\n          }\n        },\n\n        abort: function () {\n          if (callback) {\n            callback()\n          }\n        }\n      }\n    }\n  })\n\n  // Install script dataType\n  jQuery.ajaxSetup({\n    accepts: {\n      script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript'\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      'text script': function (text) {\n        jQuery.globalEval(text)\n        return text\n      }\n    }\n  })\n\n  // Handle cache's special case and crossDomain\n  jQuery.ajaxPrefilter('script', function (s) {\n    if (s.cache === undefined) {\n      s.cache = false\n    }\n    if (s.crossDomain) {\n      s.type = 'GET'\n    }\n  })\n\n  // Bind script tag hack transport\n  jQuery.ajaxTransport('script', function (s) {\n    // This transport only deals with cross domain requests\n    if (s.crossDomain) {\n      var script, callback\n      return {\n        send: function (_, complete) {\n          script = jQuery('<script>')\n            .prop({\n              charset: s.scriptCharset,\n              src: s.url\n            })\n            .on(\n              'load error',\n              (callback = function (evt) {\n                script.remove()\n                callback = null\n                if (evt) {\n                  complete(evt.type === 'error' ? 404 : 200, evt.type)\n                }\n              })\n            )\n\n          // Use native DOM manipulation to avoid our domManip AJAX trickery\n          document.head.appendChild(script[0])\n        },\n        abort: function () {\n          if (callback) {\n            callback()\n          }\n        }\n      }\n    }\n  })\n\n  var oldCallbacks = [],\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/\n\n  // Default jsonp settings\n  jQuery.ajaxSetup({\n    jsonp: 'callback',\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++\n      this[callback] = true\n      return callback\n    }\n  })\n\n  // Detect, normalize options and install callbacks for jsonp requests\n  jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {\n    var callbackName,\n      overwritten,\n      responseContainer,\n      jsonProp =\n        s.jsonp !== false &&\n        (rjsonp.test(s.url)\n          ? 'url'\n          : typeof s.data === 'string' &&\n            (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 &&\n            rjsonp.test(s.data) &&\n            'data')\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if (jsonProp || s.dataTypes[0] === 'jsonp') {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback\n\n      // Insert callback into url or form data\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName)\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName\n      }\n\n      // Use data converter to retrieve json after script execution\n      s.converters['script json'] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + ' was not called')\n        }\n        return responseContainer[0]\n      }\n\n      // Force json dataType\n      s.dataTypes[0] = 'json'\n\n      // Install callback\n      overwritten = window[callbackName]\n      window[callbackName] = function () {\n        responseContainer = arguments\n      }\n\n      // Clean-up function (fires after converters)\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName)\n\n          // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten\n        }\n\n        // Save back as free\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback\n\n          // Save the callback name for future use\n          oldCallbacks.push(callbackName)\n        }\n\n        // Call if it was a function and we have a response\n        if (responseContainer && jQuery.isFunction(overwritten)) {\n          overwritten(responseContainer[0])\n        }\n\n        responseContainer = overwritten = undefined\n      })\n\n      // Delegate to script\n      return 'script'\n    }\n  })\n\n  // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (!data || typeof data !== 'string') {\n      return null\n    }\n    if (typeof context === 'boolean') {\n      keepScripts = context\n      context = false\n    }\n    context = context || document\n\n    var parsed = rsingleTag.exec(data),\n      scripts = !keepScripts && []\n\n    // Single tag\n    if (parsed) {\n      return [context.createElement(parsed[1])]\n    }\n\n    parsed = buildFragment([data], context, scripts)\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove()\n    }\n\n    return jQuery.merge([], parsed.childNodes)\n  }\n\n  // Keep a copy of the old load method\n  var _load = jQuery.fn.load\n\n  /**\n   * Load a url into a page\n   */\n  jQuery.fn.load = function (url, params, callback) {\n    if (typeof url !== 'string' && _load) {\n      return _load.apply(this, arguments)\n    }\n\n    var selector,\n      type,\n      response,\n      self = this,\n      off = url.indexOf(' ')\n\n    if (off > -1) {\n      selector = jQuery.trim(url.slice(off))\n      url = url.slice(0, off)\n    }\n\n    // If it's a function\n    if (jQuery.isFunction(params)) {\n      // We assume that it's the callback\n      callback = params\n      params = undefined\n\n      // Otherwise, build a param string\n    } else if (params && typeof params === 'object') {\n      type = 'POST'\n    }\n\n    // If we have elements to modify, make the request\n    if (self.length > 0) {\n      jQuery\n        .ajax({\n          url: url,\n\n          // If \"type\" variable is undefined, then \"GET\" method will be used.\n          // Make value of this field explicit since\n          // user can override it through ajaxSetup method\n          type: type || 'GET',\n          dataType: 'html',\n          data: params\n        })\n        .done(function (responseText) {\n          // Save response for use in complete callback\n          response = arguments\n\n          self.html(\n            selector\n              ? // If a selector was specified, locate the right elements in a dummy div\n                // Exclude scripts to avoid IE 'Permission Denied' errors\n                jQuery('<div>')\n                  .append(jQuery.parseHTML(responseText))\n                  .find(selector)\n              : // Otherwise use the full result\n                responseText\n          )\n\n          // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n          // but they are ignored because response was set above.\n          // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n        })\n        .always(\n          callback &&\n            function (jqXHR, status) {\n              self.each(function () {\n                callback.apply(this, response || [jqXHR.responseText, status, jqXHR])\n              })\n            }\n        )\n    }\n\n    return this\n  }\n\n  // Attach a bunch of functions for handling common AJAX events\n  jQuery.each(['ajaxStart', 'ajaxStop', 'ajaxComplete', 'ajaxError', 'ajaxSuccess', 'ajaxSend'], function (i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn)\n    }\n  })\n\n  jQuery.expr.filters.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem\n    }).length\n  }\n\n  /**\n   * Gets a window from an element\n   */\n  function getWindow (elem) {\n    return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView\n  }\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n        curLeft,\n        curCSSTop,\n        curTop,\n        curOffset,\n        curCSSLeft,\n        calculatePosition,\n        position = jQuery.css(elem, 'position'),\n        curElem = jQuery(elem),\n        props = {}\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        elem.style.position = 'relative'\n      }\n\n      curOffset = curElem.offset()\n      curCSSTop = jQuery.css(elem, 'top')\n      curCSSLeft = jQuery.css(elem, 'left')\n      calculatePosition =\n        (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = curElem.position()\n        curTop = curPosition.top\n        curLeft = curPosition.left\n      } else {\n        curTop = parseFloat(curCSSTop) || 0\n        curLeft = parseFloat(curCSSLeft) || 0\n      }\n\n      if (jQuery.isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset))\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop\n      }\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft\n      }\n\n      if ('using' in options) {\n        options.using.call(elem, props)\n      } else {\n        curElem.css(props)\n      }\n    }\n  }\n\n  jQuery.fn.extend({\n    offset: function (options) {\n      if (arguments.length) {\n        return options === undefined\n          ? this\n          : this.each(function (i) {\n              jQuery.offset.setOffset(this, options, i)\n            })\n      }\n\n      var docElem,\n        win,\n        elem = this[0],\n        box = { top: 0, left: 0 },\n        doc = elem && elem.ownerDocument\n\n      if (!doc) {\n        return\n      }\n\n      docElem = doc.documentElement\n\n      // Make sure it's not a disconnected DOM node\n      if (!jQuery.contains(docElem, elem)) {\n        return box\n      }\n\n      box = elem.getBoundingClientRect()\n      win = getWindow(doc)\n      return {\n        top: box.top + win.pageYOffset - docElem.clientTop,\n        left: box.left + win.pageXOffset - docElem.clientLeft\n      }\n    },\n\n    position: function () {\n      if (!this[0]) {\n        return\n      }\n\n      var offsetParent,\n        offset,\n        elem = this[0],\n        parentOffset = { top: 0, left: 0 }\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n      // because it is its only offset parent\n      if (jQuery.css(elem, 'position') === 'fixed') {\n        // Assume getBoundingClientRect is there when computed position is fixed\n        offset = elem.getBoundingClientRect()\n      } else {\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent()\n\n        // Get correct offsets\n        offset = this.offset()\n        if (!jQuery.nodeName(offsetParent[0], 'html')) {\n          parentOffset = offsetParent.offset()\n        }\n\n        // Add offsetParent borders\n        parentOffset.top += jQuery.css(offsetParent[0], 'borderTopWidth', true)\n        parentOffset.left += jQuery.css(offsetParent[0], 'borderLeftWidth', true)\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)\n      }\n    },\n\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent\n\n        while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {\n          offsetParent = offsetParent.offsetParent\n        }\n\n        return offsetParent || documentElement\n      })\n    }\n  })\n\n  // Create scrollLeft and scrollTop methods\n  jQuery.each({ scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset' }, function (method, prop) {\n    var top = 'pageYOffset' === prop\n\n    jQuery.fn[method] = function (val) {\n      return access(\n        this,\n        function (elem, method, val) {\n          var win = getWindow(elem)\n\n          if (val === undefined) {\n            return win ? win[prop] : elem[method]\n          }\n\n          if (win) {\n            win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset)\n          } else {\n            elem[method] = val\n          }\n        },\n        method,\n        val,\n        arguments.length\n      )\n    }\n  })\n\n  // Support: Safari<7-8+, Chrome<37-44+\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n  jQuery.each(['top', 'left'], function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop)\n\n        // If curCSS returns percentage, fallback to offset\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed\n      }\n    })\n  })\n\n  // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n  jQuery.each({ Height: 'height', Width: 'width' }, function (name, type) {\n    jQuery.each({ padding: 'inner' + name, content: type, '': 'outer' + name }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'),\n          extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border')\n\n        return access(\n          this,\n          function (elem, type, value) {\n            var doc\n\n            if (jQuery.isWindow(elem)) {\n              // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n              // isn't a whole lot we can do. See pull request at this URL for discussion:\n              // https://github.com/jquery/jquery/pull/764\n              return elem.document.documentElement['client' + name]\n            }\n\n            // Get document width or height\n            if (elem.nodeType === 9) {\n              doc = elem.documentElement\n\n              // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n              // whichever is greatest\n              return Math.max(\n                elem.body['scroll' + name],\n                doc['scroll' + name],\n                elem.body['offset' + name],\n                doc['offset' + name],\n                doc['client' + name]\n              )\n            }\n\n            return value === undefined\n              ? // Get width or height on the element, requesting but not forcing parseFloat\n                jQuery.css(elem, type, extra)\n              : // Set width or height on the element\n                jQuery.style(elem, type, value, extra)\n          },\n          type,\n          chainable ? margin : undefined,\n          chainable,\n          null\n        )\n      }\n    })\n  })\n\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn)\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn)\n    },\n\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn)\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn)\n    },\n    size: function () {\n      return this.length\n    }\n  })\n\n  jQuery.fn.andSelf = jQuery.fn.addBack\n\n  // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  }\n\n  var // Map over jQuery in case of overwrite\n    _jQuery = window.jQuery,\n    // Map over the $ in case of overwrite\n    _$ = window.$\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery\n    }\n\n    return jQuery\n  }\n\n  // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n  if (!noGlobal) {\n    window.jQuery = window.$ = jQuery\n  }\n\n  return jQuery\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/jquery/jquery.js?");

/***/ }),
/* 2 */
/*!*******************************************************!*\
  !*** ./src/public/js/vendor/underscore/underscore.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n;(function () {\n  function n (n) {\n    function t (t, r, e, u, i, o) {\n      for (; i >= 0 && o > i; i += n) {\n        var a = u ? u[i] : i\n        e = r(e, t[a], a, t)\n      }\n      return e\n    }\n    return function (r, e, u, i) {\n      e = b(e, i, 4)\n      var o = !k(r) && m.keys(r),\n        a = (o || r).length,\n        c = n > 0 ? 0 : a - 1\n      return arguments.length < 3 && ((u = r[o ? o[c] : c]), (c += n)), t(r, e, u, o, c, a)\n    }\n  }\n  function t (n) {\n    return function (t, r, e) {\n      r = x(r, e)\n      for (var u = O(t), i = n > 0 ? 0 : u - 1; i >= 0 && u > i; i += n) if (r(t[i], i, t)) return i\n      return -1\n    }\n  }\n  function r (n, t, r) {\n    return function (e, u, i) {\n      var o = 0,\n        a = O(e)\n      if ('number' == typeof i)\n        n > 0 ? (o = i >= 0 ? i : Math.max(i + a, o)) : (a = i >= 0 ? Math.min(i + 1, a) : i + a + 1)\n      else if (r && i && a) return (i = r(e, u)), e[i] === u ? i : -1\n      if (u !== u) return (i = t(l.call(e, o, a), m.isNaN)), i >= 0 ? i + o : -1\n      for (i = n > 0 ? o : a - 1; i >= 0 && a > i; i += n) if (e[i] === u) return i\n      return -1\n    }\n  }\n  function e (n, t) {\n    var r = I.length,\n      e = n.constructor,\n      u = (m.isFunction(e) && e.prototype) || a,\n      i = 'constructor'\n    for (m.has(n, i) && !m.contains(t, i) && t.push(i); r--; )\n      (i = I[r]), i in n && n[i] !== u[i] && !m.contains(t, i) && t.push(i)\n  }\n  var u = this,\n    i = u._,\n    o = Array.prototype,\n    a = Object.prototype,\n    c = Function.prototype,\n    f = o.push,\n    l = o.slice,\n    s = a.toString,\n    p = a.hasOwnProperty,\n    h = Array.isArray,\n    v = Object.keys,\n    g = c.bind,\n    y = Object.create,\n    d = function () {},\n    m = function (n) {\n      return n instanceof m ? n : this instanceof m ? void (this._wrapped = n) : new m(n)\n    }\n   true\n    ? ( true && module.exports && (exports = module.exports = m), (exports._ = m))\n    : (0),\n    (m.VERSION = '1.8.3')\n  var b = function (n, t, r) {\n      if (t === void 0) return n\n      switch (null == r ? 3 : r) {\n        case 1:\n          return function (r) {\n            return n.call(t, r)\n          }\n        case 2:\n          return function (r, e) {\n            return n.call(t, r, e)\n          }\n        case 3:\n          return function (r, e, u) {\n            return n.call(t, r, e, u)\n          }\n        case 4:\n          return function (r, e, u, i) {\n            return n.call(t, r, e, u, i)\n          }\n      }\n      return function () {\n        return n.apply(t, arguments)\n      }\n    },\n    x = function (n, t, r) {\n      return null == n ? m.identity : m.isFunction(n) ? b(n, t, r) : m.isObject(n) ? m.matcher(n) : m.property(n)\n    }\n  m.iteratee = function (n, t) {\n    return x(n, t, 1 / 0)\n  }\n  var _ = function (n, t) {\n      return function (r) {\n        var e = arguments.length\n        if (2 > e || null == r) return r\n        for (var u = 1; e > u; u++)\n          for (var i = arguments[u], o = n(i), a = o.length, c = 0; a > c; c++) {\n            var f = o[c]\n            ;(t && r[f] !== void 0) || (r[f] = i[f])\n          }\n        return r\n      }\n    },\n    j = function (n) {\n      if (!m.isObject(n)) return {}\n      if (y) return y(n)\n      d.prototype = n\n      var t = new d()\n      return (d.prototype = null), t\n    },\n    w = function (n) {\n      return function (t) {\n        return null == t ? void 0 : t[n]\n      }\n    },\n    A = Math.pow(2, 53) - 1,\n    O = w('length'),\n    k = function (n) {\n      var t = O(n)\n      return 'number' == typeof t && t >= 0 && A >= t\n    }\n  ;(m.each = m.forEach = function (n, t, r) {\n    t = b(t, r)\n    var e, u\n    if (k(n)) for (e = 0, u = n.length; u > e; e++) t(n[e], e, n)\n    else {\n      var i = m.keys(n)\n      for (e = 0, u = i.length; u > e; e++) t(n[i[e]], i[e], n)\n    }\n    return n\n  }),\n    (m.map = m.collect = function (n, t, r) {\n      t = x(t, r)\n      for (var e = !k(n) && m.keys(n), u = (e || n).length, i = Array(u), o = 0; u > o; o++) {\n        var a = e ? e[o] : o\n        i[o] = t(n[a], a, n)\n      }\n      return i\n    }),\n    (m.reduce = m.foldl = m.inject = n(1)),\n    (m.reduceRight = m.foldr = n(-1)),\n    (m.find = m.detect = function (n, t, r) {\n      var e\n      return (e = k(n) ? m.findIndex(n, t, r) : m.findKey(n, t, r)), e !== void 0 && e !== -1 ? n[e] : void 0\n    }),\n    (m.filter = m.select = function (n, t, r) {\n      var e = []\n      return (\n        (t = x(t, r)),\n        m.each(n, function (n, r, u) {\n          t(n, r, u) && e.push(n)\n        }),\n        e\n      )\n    }),\n    (m.reject = function (n, t, r) {\n      return m.filter(n, m.negate(x(t)), r)\n    }),\n    (m.every = m.all = function (n, t, r) {\n      t = x(t, r)\n      for (var e = !k(n) && m.keys(n), u = (e || n).length, i = 0; u > i; i++) {\n        var o = e ? e[i] : i\n        if (!t(n[o], o, n)) return !1\n      }\n      return !0\n    }),\n    (m.some = m.any = function (n, t, r) {\n      t = x(t, r)\n      for (var e = !k(n) && m.keys(n), u = (e || n).length, i = 0; u > i; i++) {\n        var o = e ? e[i] : i\n        if (t(n[o], o, n)) return !0\n      }\n      return !1\n    }),\n    (m.contains = m.includes = m.include = function (n, t, r, e) {\n      return k(n) || (n = m.values(n)), ('number' != typeof r || e) && (r = 0), m.indexOf(n, t, r) >= 0\n    }),\n    (m.invoke = function (n, t) {\n      var r = l.call(arguments, 2),\n        e = m.isFunction(t)\n      return m.map(n, function (n) {\n        var u = e ? t : n[t]\n        return null == u ? u : u.apply(n, r)\n      })\n    }),\n    (m.pluck = function (n, t) {\n      return m.map(n, m.property(t))\n    }),\n    (m.where = function (n, t) {\n      return m.filter(n, m.matcher(t))\n    }),\n    (m.findWhere = function (n, t) {\n      return m.find(n, m.matcher(t))\n    }),\n    (m.max = function (n, t, r) {\n      var e,\n        u,\n        i = -1 / 0,\n        o = -1 / 0\n      if (null == t && null != n) {\n        n = k(n) ? n : m.values(n)\n        for (var a = 0, c = n.length; c > a; a++) (e = n[a]), e > i && (i = e)\n      } else\n        (t = x(t, r)),\n          m.each(n, function (n, r, e) {\n            ;(u = t(n, r, e)), (u > o || (u === -1 / 0 && i === -1 / 0)) && ((i = n), (o = u))\n          })\n      return i\n    }),\n    (m.min = function (n, t, r) {\n      var e,\n        u,\n        i = 1 / 0,\n        o = 1 / 0\n      if (null == t && null != n) {\n        n = k(n) ? n : m.values(n)\n        for (var a = 0, c = n.length; c > a; a++) (e = n[a]), i > e && (i = e)\n      } else\n        (t = x(t, r)),\n          m.each(n, function (n, r, e) {\n            ;(u = t(n, r, e)), (o > u || (1 / 0 === u && 1 / 0 === i)) && ((i = n), (o = u))\n          })\n      return i\n    }),\n    (m.shuffle = function (n) {\n      for (var t, r = k(n) ? n : m.values(n), e = r.length, u = Array(e), i = 0; e > i; i++)\n        (t = m.random(0, i)), t !== i && (u[i] = u[t]), (u[t] = r[i])\n      return u\n    }),\n    (m.sample = function (n, t, r) {\n      return null == t || r\n        ? (k(n) || (n = m.values(n)), n[m.random(n.length - 1)])\n        : m.shuffle(n).slice(0, Math.max(0, t))\n    }),\n    (m.sortBy = function (n, t, r) {\n      return (\n        (t = x(t, r)),\n        m.pluck(\n          m\n            .map(n, function (n, r, e) {\n              return { value: n, index: r, criteria: t(n, r, e) }\n            })\n            .sort(function (n, t) {\n              var r = n.criteria,\n                e = t.criteria\n              if (r !== e) {\n                if (r > e || r === void 0) return 1\n                if (e > r || e === void 0) return -1\n              }\n              return n.index - t.index\n            }),\n          'value'\n        )\n      )\n    })\n  var F = function (n) {\n    return function (t, r, e) {\n      var u = {}\n      return (\n        (r = x(r, e)),\n        m.each(t, function (e, i) {\n          var o = r(e, i, t)\n          n(u, e, o)\n        }),\n        u\n      )\n    }\n  }\n  ;(m.groupBy = F(function (n, t, r) {\n    m.has(n, r) ? n[r].push(t) : (n[r] = [t])\n  })),\n    (m.indexBy = F(function (n, t, r) {\n      n[r] = t\n    })),\n    (m.countBy = F(function (n, t, r) {\n      m.has(n, r) ? n[r]++ : (n[r] = 1)\n    })),\n    (m.toArray = function (n) {\n      return n ? (m.isArray(n) ? l.call(n) : k(n) ? m.map(n, m.identity) : m.values(n)) : []\n    }),\n    (m.size = function (n) {\n      return null == n ? 0 : k(n) ? n.length : m.keys(n).length\n    }),\n    (m.partition = function (n, t, r) {\n      t = x(t, r)\n      var e = [],\n        u = []\n      return (\n        m.each(n, function (n, r, i) {\n          ;(t(n, r, i) ? e : u).push(n)\n        }),\n        [e, u]\n      )\n    }),\n    (m.first = m.head = m.take = function (n, t, r) {\n      return null == n ? void 0 : null == t || r ? n[0] : m.initial(n, n.length - t)\n    }),\n    (m.initial = function (n, t, r) {\n      return l.call(n, 0, Math.max(0, n.length - (null == t || r ? 1 : t)))\n    }),\n    (m.last = function (n, t, r) {\n      return null == n ? void 0 : null == t || r ? n[n.length - 1] : m.rest(n, Math.max(0, n.length - t))\n    }),\n    (m.rest = m.tail = m.drop = function (n, t, r) {\n      return l.call(n, null == t || r ? 1 : t)\n    }),\n    (m.compact = function (n) {\n      return m.filter(n, m.identity)\n    })\n  var S = function (n, t, r, e) {\n    for (var u = [], i = 0, o = e || 0, a = O(n); a > o; o++) {\n      var c = n[o]\n      if (k(c) && (m.isArray(c) || m.isArguments(c))) {\n        t || (c = S(c, t, r))\n        var f = 0,\n          l = c.length\n        for (u.length += l; l > f; ) u[i++] = c[f++]\n      } else r || (u[i++] = c)\n    }\n    return u\n  }\n  ;(m.flatten = function (n, t) {\n    return S(n, t, !1)\n  }),\n    (m.without = function (n) {\n      return m.difference(n, l.call(arguments, 1))\n    }),\n    (m.uniq = m.unique = function (n, t, r, e) {\n      m.isBoolean(t) || ((e = r), (r = t), (t = !1)), null != r && (r = x(r, e))\n      for (var u = [], i = [], o = 0, a = O(n); a > o; o++) {\n        var c = n[o],\n          f = r ? r(c, o, n) : c\n        t\n          ? ((o && i === f) || u.push(c), (i = f))\n          : r\n          ? m.contains(i, f) || (i.push(f), u.push(c))\n          : m.contains(u, c) || u.push(c)\n      }\n      return u\n    }),\n    (m.union = function () {\n      return m.uniq(S(arguments, !0, !0))\n    }),\n    (m.intersection = function (n) {\n      for (var t = [], r = arguments.length, e = 0, u = O(n); u > e; e++) {\n        var i = n[e]\n        if (!m.contains(t, i)) {\n          for (var o = 1; r > o && m.contains(arguments[o], i); o++);\n          o === r && t.push(i)\n        }\n      }\n      return t\n    }),\n    (m.difference = function (n) {\n      var t = S(arguments, !0, !0, 1)\n      return m.filter(n, function (n) {\n        return !m.contains(t, n)\n      })\n    }),\n    (m.zip = function () {\n      return m.unzip(arguments)\n    }),\n    (m.unzip = function (n) {\n      for (var t = (n && m.max(n, O).length) || 0, r = Array(t), e = 0; t > e; e++) r[e] = m.pluck(n, e)\n      return r\n    }),\n    (m.object = function (n, t) {\n      for (var r = {}, e = 0, u = O(n); u > e; e++) t ? (r[n[e]] = t[e]) : (r[n[e][0]] = n[e][1])\n      return r\n    }),\n    (m.findIndex = t(1)),\n    (m.findLastIndex = t(-1)),\n    (m.sortedIndex = function (n, t, r, e) {\n      r = x(r, e, 1)\n      for (var u = r(t), i = 0, o = O(n); o > i; ) {\n        var a = Math.floor((i + o) / 2)\n        r(n[a]) < u ? (i = a + 1) : (o = a)\n      }\n      return i\n    }),\n    (m.indexOf = r(1, m.findIndex, m.sortedIndex)),\n    (m.lastIndexOf = r(-1, m.findLastIndex)),\n    (m.range = function (n, t, r) {\n      null == t && ((t = n || 0), (n = 0)), (r = r || 1)\n      for (var e = Math.max(Math.ceil((t - n) / r), 0), u = Array(e), i = 0; e > i; i++, n += r) u[i] = n\n      return u\n    })\n  var E = function (n, t, r, e, u) {\n    if (!(e instanceof t)) return n.apply(r, u)\n    var i = j(n.prototype),\n      o = n.apply(i, u)\n    return m.isObject(o) ? o : i\n  }\n  ;(m.bind = function (n, t) {\n    if (g && n.bind === g) return g.apply(n, l.call(arguments, 1))\n    if (!m.isFunction(n)) throw new TypeError('Bind must be called on a function')\n    var r = l.call(arguments, 2),\n      e = function () {\n        return E(n, e, t, this, r.concat(l.call(arguments)))\n      }\n    return e\n  }),\n    (m.partial = function (n) {\n      var t = l.call(arguments, 1),\n        r = function () {\n          for (var e = 0, u = t.length, i = Array(u), o = 0; u > o; o++) i[o] = t[o] === m ? arguments[e++] : t[o]\n          for (; e < arguments.length; ) i.push(arguments[e++])\n          return E(n, r, this, this, i)\n        }\n      return r\n    }),\n    (m.bindAll = function (n) {\n      var t,\n        r,\n        e = arguments.length\n      if (1 >= e) throw new Error('bindAll must be passed function names')\n      for (t = 1; e > t; t++) (r = arguments[t]), (n[r] = m.bind(n[r], n))\n      return n\n    }),\n    (m.memoize = function (n, t) {\n      var r = function (e) {\n        var u = r.cache,\n          i = '' + (t ? t.apply(this, arguments) : e)\n        return m.has(u, i) || (u[i] = n.apply(this, arguments)), u[i]\n      }\n      return (r.cache = {}), r\n    }),\n    (m.delay = function (n, t) {\n      var r = l.call(arguments, 2)\n      return setTimeout(function () {\n        return n.apply(null, r)\n      }, t)\n    }),\n    (m.defer = m.partial(m.delay, m, 1)),\n    (m.throttle = function (n, t, r) {\n      var e,\n        u,\n        i,\n        o = null,\n        a = 0\n      r || (r = {})\n      var c = function () {\n        ;(a = r.leading === !1 ? 0 : m.now()), (o = null), (i = n.apply(e, u)), o || (e = u = null)\n      }\n      return function () {\n        var f = m.now()\n        a || r.leading !== !1 || (a = f)\n        var l = t - (f - a)\n        return (\n          (e = this),\n          (u = arguments),\n          0 >= l || l > t\n            ? (o && (clearTimeout(o), (o = null)), (a = f), (i = n.apply(e, u)), o || (e = u = null))\n            : o || r.trailing === !1 || (o = setTimeout(c, l)),\n          i\n        )\n      }\n    }),\n    (m.debounce = function (n, t, r) {\n      var e,\n        u,\n        i,\n        o,\n        a,\n        c = function () {\n          var f = m.now() - o\n          t > f && f >= 0 ? (e = setTimeout(c, t - f)) : ((e = null), r || ((a = n.apply(i, u)), e || (i = u = null)))\n        }\n      return function () {\n        ;(i = this), (u = arguments), (o = m.now())\n        var f = r && !e\n        return e || (e = setTimeout(c, t)), f && ((a = n.apply(i, u)), (i = u = null)), a\n      }\n    }),\n    (m.wrap = function (n, t) {\n      return m.partial(t, n)\n    }),\n    (m.negate = function (n) {\n      return function () {\n        return !n.apply(this, arguments)\n      }\n    }),\n    (m.compose = function () {\n      var n = arguments,\n        t = n.length - 1\n      return function () {\n        for (var r = t, e = n[t].apply(this, arguments); r--; ) e = n[r].call(this, e)\n        return e\n      }\n    }),\n    (m.after = function (n, t) {\n      return function () {\n        return --n < 1 ? t.apply(this, arguments) : void 0\n      }\n    }),\n    (m.before = function (n, t) {\n      var r\n      return function () {\n        return --n > 0 && (r = t.apply(this, arguments)), 1 >= n && (t = null), r\n      }\n    }),\n    (m.once = m.partial(m.before, 2))\n  var M = !{ toString: null }.propertyIsEnumerable('toString'),\n    I = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']\n  ;(m.keys = function (n) {\n    if (!m.isObject(n)) return []\n    if (v) return v(n)\n    var t = []\n    for (var r in n) m.has(n, r) && t.push(r)\n    return M && e(n, t), t\n  }),\n    (m.allKeys = function (n) {\n      if (!m.isObject(n)) return []\n      var t = []\n      for (var r in n) t.push(r)\n      return M && e(n, t), t\n    }),\n    (m.values = function (n) {\n      for (var t = m.keys(n), r = t.length, e = Array(r), u = 0; r > u; u++) e[u] = n[t[u]]\n      return e\n    }),\n    (m.mapObject = function (n, t, r) {\n      t = x(t, r)\n      for (var e, u = m.keys(n), i = u.length, o = {}, a = 0; i > a; a++) (e = u[a]), (o[e] = t(n[e], e, n))\n      return o\n    }),\n    (m.pairs = function (n) {\n      for (var t = m.keys(n), r = t.length, e = Array(r), u = 0; r > u; u++) e[u] = [t[u], n[t[u]]]\n      return e\n    }),\n    (m.invert = function (n) {\n      for (var t = {}, r = m.keys(n), e = 0, u = r.length; u > e; e++) t[n[r[e]]] = r[e]\n      return t\n    }),\n    (m.functions = m.methods = function (n) {\n      var t = []\n      for (var r in n) m.isFunction(n[r]) && t.push(r)\n      return t.sort()\n    }),\n    (m.extend = _(m.allKeys)),\n    (m.extendOwn = m.assign = _(m.keys)),\n    (m.findKey = function (n, t, r) {\n      t = x(t, r)\n      for (var e, u = m.keys(n), i = 0, o = u.length; o > i; i++) if (((e = u[i]), t(n[e], e, n))) return e\n    }),\n    (m.pick = function (n, t, r) {\n      var e,\n        u,\n        i = {},\n        o = n\n      if (null == o) return i\n      m.isFunction(t)\n        ? ((u = m.allKeys(o)), (e = b(t, r)))\n        : ((u = S(arguments, !1, !1, 1)),\n          (e = function (n, t, r) {\n            return t in r\n          }),\n          (o = Object(o)))\n      for (var a = 0, c = u.length; c > a; a++) {\n        var f = u[a],\n          l = o[f]\n        e(l, f, o) && (i[f] = l)\n      }\n      return i\n    }),\n    (m.omit = function (n, t, r) {\n      if (m.isFunction(t)) t = m.negate(t)\n      else {\n        var e = m.map(S(arguments, !1, !1, 1), String)\n        t = function (n, t) {\n          return !m.contains(e, t)\n        }\n      }\n      return m.pick(n, t, r)\n    }),\n    (m.defaults = _(m.allKeys, !0)),\n    (m.create = function (n, t) {\n      var r = j(n)\n      return t && m.extendOwn(r, t), r\n    }),\n    (m.clone = function (n) {\n      return m.isObject(n) ? (m.isArray(n) ? n.slice() : m.extend({}, n)) : n\n    }),\n    (m.tap = function (n, t) {\n      return t(n), n\n    }),\n    (m.isMatch = function (n, t) {\n      var r = m.keys(t),\n        e = r.length\n      if (null == n) return !e\n      for (var u = Object(n), i = 0; e > i; i++) {\n        var o = r[i]\n        if (t[o] !== u[o] || !(o in u)) return !1\n      }\n      return !0\n    })\n  var N = function (n, t, r, e) {\n    if (n === t) return 0 !== n || 1 / n === 1 / t\n    if (null == n || null == t) return n === t\n    n instanceof m && (n = n._wrapped), t instanceof m && (t = t._wrapped)\n    var u = s.call(n)\n    if (u !== s.call(t)) return !1\n    switch (u) {\n      case '[object RegExp]':\n      case '[object String]':\n        return '' + n == '' + t\n      case '[object Number]':\n        return +n !== +n ? +t !== +t : 0 === +n ? 1 / +n === 1 / t : +n === +t\n      case '[object Date]':\n      case '[object Boolean]':\n        return +n === +t\n    }\n    var i = '[object Array]' === u\n    if (!i) {\n      if ('object' != typeof n || 'object' != typeof t) return !1\n      var o = n.constructor,\n        a = t.constructor\n      if (\n        o !== a &&\n        !(m.isFunction(o) && o instanceof o && m.isFunction(a) && a instanceof a) &&\n        'constructor' in n &&\n        'constructor' in t\n      )\n        return !1\n    }\n    ;(r = r || []), (e = e || [])\n    for (var c = r.length; c--; ) if (r[c] === n) return e[c] === t\n    if ((r.push(n), e.push(t), i)) {\n      if (((c = n.length), c !== t.length)) return !1\n      for (; c--; ) if (!N(n[c], t[c], r, e)) return !1\n    } else {\n      var f,\n        l = m.keys(n)\n      if (((c = l.length), m.keys(t).length !== c)) return !1\n      for (; c--; ) if (((f = l[c]), !m.has(t, f) || !N(n[f], t[f], r, e))) return !1\n    }\n    return r.pop(), e.pop(), !0\n  }\n  ;(m.isEqual = function (n, t) {\n    return N(n, t)\n  }),\n    (m.isEmpty = function (n) {\n      return null == n\n        ? !0\n        : k(n) && (m.isArray(n) || m.isString(n) || m.isArguments(n))\n        ? 0 === n.length\n        : 0 === m.keys(n).length\n    }),\n    (m.isElement = function (n) {\n      return !(!n || 1 !== n.nodeType)\n    }),\n    (m.isArray =\n      h ||\n      function (n) {\n        return '[object Array]' === s.call(n)\n      }),\n    (m.isObject = function (n) {\n      var t = typeof n\n      return 'function' === t || ('object' === t && !!n)\n    }),\n    m.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (n) {\n      m['is' + n] = function (t) {\n        return s.call(t) === '[object ' + n + ']'\n      }\n    }),\n    m.isArguments(arguments) ||\n      (m.isArguments = function (n) {\n        return m.has(n, 'callee')\n      }),\n     true &&\n      'object' != typeof Int8Array &&\n      (m.isFunction = function (n) {\n        return 'function' == typeof n || !1\n      }),\n    (m.isFinite = function (n) {\n      return isFinite(n) && !isNaN(parseFloat(n))\n    }),\n    (m.isNaN = function (n) {\n      return m.isNumber(n) && n !== +n\n    }),\n    (m.isBoolean = function (n) {\n      return n === !0 || n === !1 || '[object Boolean]' === s.call(n)\n    }),\n    (m.isNull = function (n) {\n      return null === n\n    }),\n    (m.isUndefined = function (n) {\n      return n === void 0\n    }),\n    (m.has = function (n, t) {\n      return null != n && p.call(n, t)\n    }),\n    (m.noConflict = function () {\n      return (u._ = i), this\n    }),\n    (m.identity = function (n) {\n      return n\n    }),\n    (m.constant = function (n) {\n      return function () {\n        return n\n      }\n    }),\n    (m.noop = function () {}),\n    (m.property = w),\n    (m.propertyOf = function (n) {\n      return null == n\n        ? function () {}\n        : function (t) {\n            return n[t]\n          }\n    }),\n    (m.matcher = m.matches = function (n) {\n      return (\n        (n = m.extendOwn({}, n)),\n        function (t) {\n          return m.isMatch(t, n)\n        }\n      )\n    }),\n    (m.times = function (n, t, r) {\n      var e = Array(Math.max(0, n))\n      t = b(t, r, 1)\n      for (var u = 0; n > u; u++) e[u] = t(u)\n      return e\n    }),\n    (m.random = function (n, t) {\n      return null == t && ((t = n), (n = 0)), n + Math.floor(Math.random() * (t - n + 1))\n    }),\n    (m.now =\n      Date.now ||\n      function () {\n        return new Date().getTime()\n      })\n  var B = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#x27;', '`': '&#x60;' },\n    T = m.invert(B),\n    R = function (n) {\n      var t = function (t) {\n          return n[t]\n        },\n        r = '(?:' + m.keys(n).join('|') + ')',\n        e = RegExp(r),\n        u = RegExp(r, 'g')\n      return function (n) {\n        return (n = null == n ? '' : '' + n), e.test(n) ? n.replace(u, t) : n\n      }\n    }\n  ;(m.escape = R(B)),\n    (m.unescape = R(T)),\n    (m.result = function (n, t, r) {\n      var e = null == n ? void 0 : n[t]\n      return e === void 0 && (e = r), m.isFunction(e) ? e.call(n) : e\n    })\n  var q = 0\n  ;(m.uniqueId = function (n) {\n    var t = ++q + ''\n    return n ? n + t : t\n  }),\n    (m.templateSettings = { evaluate: /<%([\\s\\S]+?)%>/g, interpolate: /<%=([\\s\\S]+?)%>/g, escape: /<%-([\\s\\S]+?)%>/g })\n  var K = /(.)^/,\n    z = { \"'\": \"'\", '\\\\': '\\\\', '\\r': 'r', '\\n': 'n', '\\u2028': 'u2028', '\\u2029': 'u2029' },\n    D = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g,\n    L = function (n) {\n      return '\\\\' + z[n]\n    }\n  ;(m.template = function (n, t, r) {\n    !t && r && (t = r), (t = m.defaults({}, t, m.templateSettings))\n    var e = RegExp(\n        [(t.escape || K).source, (t.interpolate || K).source, (t.evaluate || K).source].join('|') + '|$',\n        'g'\n      ),\n      u = 0,\n      i = \"__p+='\"\n    n.replace(e, function (t, r, e, o, a) {\n      return (\n        (i += n.slice(u, a).replace(D, L)),\n        (u = a + t.length),\n        r\n          ? (i += \"'+\\n((__t=(\" + r + \"))==null?'':_.escape(__t))+\\n'\")\n          : e\n          ? (i += \"'+\\n((__t=(\" + e + \"))==null?'':__t)+\\n'\")\n          : o && (i += \"';\\n\" + o + \"\\n__p+='\"),\n        t\n      )\n    }),\n      (i += \"';\\n\"),\n      t.variable || (i = 'with(obj||{}){\\n' + i + '}\\n'),\n      (i =\n        \"var __t,__p='',__j=Array.prototype.join,\" +\n        \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n        i +\n        'return __p;\\n')\n    try {\n      var o = new Function(t.variable || 'obj', '_', i)\n    } catch (a) {\n      throw ((a.source = i), a)\n    }\n    var c = function (n) {\n        return o.call(this, n, m)\n      },\n      f = t.variable || 'obj'\n    return (c.source = 'function(' + f + '){\\n' + i + '}'), c\n  }),\n    (m.chain = function (n) {\n      var t = m(n)\n      return (t._chain = !0), t\n    })\n  var P = function (n, t) {\n    return n._chain ? m(t).chain() : t\n  }\n  ;(m.mixin = function (n) {\n    m.each(m.functions(n), function (t) {\n      var r = (m[t] = n[t])\n      m.prototype[t] = function () {\n        var n = [this._wrapped]\n        return f.apply(n, arguments), P(this, r.apply(m, n))\n      }\n    })\n  }),\n    m.mixin(m),\n    m.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (n) {\n      var t = o[n]\n      m.prototype[n] = function () {\n        var r = this._wrapped\n        return t.apply(r, arguments), ('shift' !== n && 'splice' !== n) || 0 !== r.length || delete r[0], P(this, r)\n      }\n    }),\n    m.each(['concat', 'join', 'slice'], function (n) {\n      var t = o[n]\n      m.prototype[n] = function () {\n        return P(this, t.apply(this._wrapped, arguments))\n      }\n    }),\n    (m.prototype.value = function () {\n      return this._wrapped\n    }),\n    (m.prototype.valueOf = m.prototype.toJSON = m.prototype.value),\n    (m.prototype.toString = function () {\n      return '' + this._wrapped\n    }),\n     true &&\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return m\n      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n}.call(this))\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/underscore/underscore.js?");

/***/ }),
/* 3 */
/*!*****************************************************!*\
  !*** ./src/public/js/vendor/modernizr/modernizr.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var __webpack_provided_window_dot_Modernizr = __webpack_require__(/*! modernizr */ 3);\n/*! modernizr 3.3.1 (Custom Build) | MIT *\n * https://modernizr.com/download/?-animation-applicationcache-audio-audioloop-audiopreload-backgroundblendmode-backgroundcliptext-backgroundsize-bgpositionshorthand-bgpositionxy-bgrepeatspace_bgrepeatround-bgsizecover-borderradius-boxshadow-boxsizing-canvas-canvasblending-canvastext-canvaswinding-checked-contextmenu-cookies-cors-cssanimations-csscolumns-cssfilters-cssmask-cssremunit-cssscrollbar-csstransforms-csstransitions-cssvalid-cssvhunit-cssvwunit-cubicbezierrange-customevent-ellipsis-emoji-eventlistener-fileinput-filereader-flash-flexbox-flexboxlegacy-flexboxtweener-flexwrap-formvalidation-generatedcontent-geolocation-history-htmlimports-imgcrossorigin-inlinesvg-input-inputtypes-json-lastchild-localstorage-mediaqueries-multiplebgs-notification-nthchild-olreversed-opacity-overflowscrolling-placeholder-queryselector-requestanimationframe-rgba-search-supports-svg-svgfilters-textareamaxlength-todataurljpeg_todataurlpng_todataurlwebp-unicode-unicoderange-video-webaudio-webgl-websockets-setclasses !*/\n!(function (A, e, t) {\n  function n (A, e) {\n    return typeof A === e\n  }\n  function a () {\n    var A, e, t, a, i, o, r\n    for (var d in E)\n      if (E.hasOwnProperty(d)) {\n        if (\n          ((A = []),\n          (e = E[d]),\n          e.name && (A.push(e.name.toLowerCase()), e.options && e.options.aliases && e.options.aliases.length))\n        )\n          for (t = 0; t < e.options.aliases.length; t++) A.push(e.options.aliases[t].toLowerCase())\n        for (a = n(e.fn, 'function') ? e.fn() : e.fn, i = 0; i < A.length; i++)\n          (o = A[i]),\n            (r = o.split('.')),\n            1 === r.length\n              ? (Modernizr[r[0]] = a)\n              : (!Modernizr[r[0]] ||\n                  Modernizr[r[0]] instanceof Boolean ||\n                  (Modernizr[r[0]] = new Boolean(Modernizr[r[0]])),\n                (Modernizr[r[0]][r[1]] = a)),\n            v.push((a ? '' : 'no-') + r.join('-'))\n      }\n  }\n  function i (A) {\n    var e = I.className,\n      t = Modernizr._config.classPrefix || ''\n    if ((y && (e = e.baseVal), Modernizr._config.enableJSClass)) {\n      var n = new RegExp('(^|\\\\s)' + t + 'no-js(\\\\s|$)')\n      e = e.replace(n, '$1' + t + 'js$2')\n    }\n    Modernizr._config.enableClasses &&\n      ((e += ' ' + t + A.join(' ' + t)), y ? (I.className.baseVal = e) : (I.className = e))\n  }\n  function o () {\n    return 'function' != typeof e.createElement\n      ? e.createElement(arguments[0])\n      : y\n      ? e.createElementNS.call(e, 'http://www.w3.org/2000/svg', arguments[0])\n      : e.createElement.apply(e, arguments)\n  }\n  function r () {\n    var A = e.body\n    return A || ((A = o(y ? 'svg' : 'body')), (A.fake = !0)), A\n  }\n  function d (A, e) {\n    if ('object' == typeof A) for (var t in A) k(A, t) && d(t, A[t])\n    else {\n      A = A.toLowerCase()\n      var n = A.split('.'),\n        a = Modernizr[n[0]]\n      if ((2 == n.length && (a = a[n[1]]), 'undefined' != typeof a)) return Modernizr\n      ;(e = 'function' == typeof e ? e() : e),\n        1 == n.length\n          ? (Modernizr[n[0]] = e)\n          : (!Modernizr[n[0]] || Modernizr[n[0]] instanceof Boolean || (Modernizr[n[0]] = new Boolean(Modernizr[n[0]])),\n            (Modernizr[n[0]][n[1]] = e)),\n        i([(e && 0 != e ? '' : 'no-') + n.join('-')]),\n        Modernizr._trigger(A, e)\n    }\n    return Modernizr\n  }\n  function w (A) {\n    return A.replace(/([a-z])-([a-z])/g, function (A, e, t) {\n      return e + t.toUpperCase()\n    }).replace(/^-/, '')\n  }\n  function s (A, t, n, a) {\n    var i,\n      d,\n      w,\n      s,\n      l = 'modernizr',\n      D = o('div'),\n      u = r()\n    if (parseInt(n, 10)) for (; n--; ) (w = o('div')), (w.id = a ? a[n] : l + (n + 1)), D.appendChild(w)\n    return (\n      (i = o('style')),\n      (i.type = 'text/css'),\n      (i.id = 's' + l),\n      (u.fake ? u : D).appendChild(i),\n      u.appendChild(D),\n      i.styleSheet ? (i.styleSheet.cssText = A) : i.appendChild(e.createTextNode(A)),\n      (D.id = l),\n      u.fake &&\n        ((u.style.background = ''),\n        (u.style.overflow = 'hidden'),\n        (s = I.style.overflow),\n        (I.style.overflow = 'hidden'),\n        I.appendChild(u)),\n      (d = t(D, A)),\n      u.fake ? (u.parentNode.removeChild(u), (I.style.overflow = s), I.offsetHeight) : D.parentNode.removeChild(D),\n      !!d\n    )\n  }\n  function l (A, e) {\n    return !!~('' + A).indexOf(e)\n  }\n  function D (A, e) {\n    return function () {\n      return A.apply(e, arguments)\n    }\n  }\n  function u (A, e, t) {\n    var a\n    for (var i in A) if (A[i] in e) return t === !1 ? A[i] : ((a = e[A[i]]), n(a, 'function') ? D(a, t || e) : a)\n    return !1\n  }\n  function P (A) {\n    return A.replace(/([A-Z])/g, function (A, e) {\n      return '-' + e.toLowerCase()\n    }).replace(/^ms-/, '-ms-')\n  }\n  function c (e, n) {\n    var a = e.length\n    if ('CSS' in A && 'supports' in A.CSS) {\n      for (; a--; ) if (A.CSS.supports(P(e[a]), n)) return !0\n      return !1\n    }\n    if ('CSSSupportsRule' in A) {\n      for (var i = []; a--; ) i.push('(' + P(e[a]) + ':' + n + ')')\n      return (\n        (i = i.join(' or ')),\n        s('@supports (' + i + ') { #modernizr { position: absolute; } }', function (A) {\n          return 'absolute' == getComputedStyle(A, null).position\n        })\n      )\n    }\n    return t\n  }\n  function f (A, e, a, i) {\n    function r () {\n      s && (delete O.style, delete O.modElem)\n    }\n    if (((i = n(i, 'undefined') ? !1 : i), !n(a, 'undefined'))) {\n      var d = c(A, a)\n      if (!n(d, 'undefined')) return d\n    }\n    for (var s, D, u, P, f, p = ['modernizr', 'tspan', 'samp']; !O.style && p.length; )\n      (s = !0), (O.modElem = o(p.shift())), (O.style = O.modElem.style)\n    for (u = A.length, D = 0; u > D; D++)\n      if (((P = A[D]), (f = O.style[P]), l(P, '-') && (P = w(P)), O.style[P] !== t)) {\n        if (i || n(a, 'undefined')) return r(), 'pfx' == e ? P : !0\n        try {\n          O.style[P] = a\n        } catch (g) {}\n        if (O.style[P] != f) return r(), 'pfx' == e ? P : !0\n      }\n    return r(), !1\n  }\n  function p (A, e, t, a, i) {\n    var o = A.charAt(0).toUpperCase() + A.slice(1),\n      r = (A + ' ' + Z.join(o + ' ') + o).split(' ')\n    return n(e, 'string') || n(e, 'undefined')\n      ? f(r, e, a, i)\n      : ((r = (A + ' ' + F.join(o + ' ') + o).split(' ')), u(r, e, t))\n  }\n  function g (A, e, n) {\n    return p(A, t, t, e, n)\n  }\n  var v = [],\n    E = [],\n    B = {\n      _version: '3.3.1',\n      _config: { classPrefix: '', enableClasses: !0, enableJSClass: !0, usePrefixes: !0 },\n      _q: [],\n      on: function (A, e) {\n        var t = this\n        setTimeout(function () {\n          e(t[A])\n        }, 0)\n      },\n      addTest: function (A, e, t) {\n        E.push({ name: A, fn: e, options: t })\n      },\n      addAsyncTest: function (A) {\n        E.push({ name: null, fn: A })\n      }\n    },\n    Modernizr = function () {}\n  ;(Modernizr.prototype = B),\n    (Modernizr = new Modernizr()),\n    Modernizr.addTest('applicationcache', 'applicationCache' in A),\n    Modernizr.addTest('cookies', function () {\n      try {\n        e.cookie = 'cookietest=1'\n        var A = -1 != e.cookie.indexOf('cookietest=')\n        return (e.cookie = 'cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT'), A\n      } catch (t) {\n        return !1\n      }\n    }),\n    Modernizr.addTest('cors', 'XMLHttpRequest' in A && 'withCredentials' in new XMLHttpRequest()),\n    Modernizr.addTest('customevent', 'CustomEvent' in A && 'function' == typeof A.CustomEvent),\n    Modernizr.addTest('eventlistener', 'addEventListener' in A),\n    Modernizr.addTest('geolocation', 'geolocation' in navigator),\n    Modernizr.addTest('history', function () {\n      var e = navigator.userAgent\n      return (-1 === e.indexOf('Android 2.') && -1 === e.indexOf('Android 4.0')) ||\n        -1 === e.indexOf('Mobile Safari') ||\n        -1 !== e.indexOf('Chrome') ||\n        -1 !== e.indexOf('Windows Phone')\n        ? A.history && 'pushState' in A.history\n        : !1\n    }),\n    Modernizr.addTest('json', 'JSON' in A && 'parse' in JSON && 'stringify' in JSON),\n    Modernizr.addTest('queryselector', 'querySelector' in e && 'querySelectorAll' in e),\n    Modernizr.addTest(\n      'svg',\n      !!e.createElementNS && !!e.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect\n    )\n  var Q = !1\n  try {\n    Q = 'WebSocket' in A && 2 === A.WebSocket.CLOSING\n  } catch (m) {}\n  Modernizr.addTest('websockets', Q),\n    Modernizr.addTest('webaudio', function () {\n      var e = 'webkitAudioContext' in A,\n        t = 'AudioContext' in A\n      return Modernizr._config.usePrefixes ? e || t : t\n    })\n  var C = 'CSS' in A && 'supports' in A.CSS,\n    h = 'supportsCSS' in A\n  Modernizr.addTest('supports', C || h),\n    Modernizr.addTest('filereader', !!(A.File && A.FileList && A.FileReader)),\n    Modernizr.addTest('localstorage', function () {\n      var A = 'modernizr'\n      try {\n        return localStorage.setItem(A, A), localStorage.removeItem(A), !0\n      } catch (e) {\n        return !1\n      }\n    }),\n    Modernizr.addTest('svgfilters', function () {\n      var e = !1\n      try {\n        e = 'SVGFEColorMatrixElement' in A && 2 == SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE\n      } catch (t) {}\n      return e\n    })\n  var I = e.documentElement\n  Modernizr.addTest('contextmenu', 'contextMenu' in I && 'HTMLMenuItemElement' in A)\n  var y = 'svg' === I.nodeName.toLowerCase()\n  Modernizr.addTest('audio', function () {\n    var A = o('audio'),\n      e = !1\n    try {\n      ;(e = !!A.canPlayType) &&\n        ((e = new Boolean(e)),\n        (e.ogg = A.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '')),\n        (e.mp3 = A.canPlayType('audio/mpeg; codecs=\"mp3\"').replace(/^no$/, '')),\n        (e.opus =\n          A.canPlayType('audio/ogg; codecs=\"opus\"') || A.canPlayType('audio/webm; codecs=\"opus\"').replace(/^no$/, '')),\n        (e.wav = A.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '')),\n        (e.m4a = (A.canPlayType('audio/x-m4a;') || A.canPlayType('audio/aac;')).replace(/^no$/, '')))\n    } catch (t) {}\n    return e\n  }),\n    Modernizr.addTest('canvas', function () {\n      var A = o('canvas')\n      return !(!A.getContext || !A.getContext('2d'))\n    }),\n    Modernizr.addTest('canvastext', function () {\n      return Modernizr.canvas === !1 ? !1 : 'function' == typeof o('canvas').getContext('2d').fillText\n    }),\n    Modernizr.addTest('emoji', function () {\n      if (!Modernizr.canvastext) return !1\n      var e = A.devicePixelRatio || 1,\n        t = 12 * e,\n        n = o('canvas'),\n        a = n.getContext('2d')\n      return (\n        (a.fillStyle = '#f00'),\n        (a.textBaseline = 'top'),\n        (a.font = '32px Arial'),\n        a.fillText('🐨', 0, 0),\n        0 !== a.getImageData(t, t, 1, 1).data[0]\n      )\n    }),\n    Modernizr.addTest('olreversed', 'reversed' in o('ol')),\n    Modernizr.addTest('video', function () {\n      var A = o('video'),\n        e = !1\n      try {\n        ;(e = !!A.canPlayType) &&\n          ((e = new Boolean(e)),\n          (e.ogg = A.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/, '')),\n          (e.h264 = A.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/, '')),\n          (e.webm = A.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/, '')),\n          (e.vp9 = A.canPlayType('video/webm; codecs=\"vp9\"').replace(/^no$/, '')),\n          (e.hls = A.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"').replace(/^no$/, '')))\n      } catch (t) {}\n      return e\n    }),\n    Modernizr.addTest('webanimations', 'animate' in o('div')),\n    Modernizr.addTest('webgl', function () {\n      var e = o('canvas'),\n        t = 'probablySupportsContext' in e ? 'probablySupportsContext' : 'supportsContext'\n      return t in e ? e[t]('webgl') || e[t]('experimental-webgl') : 'WebGLRenderingContext' in A\n    }),\n    Modernizr.addTest('canvasblending', function () {\n      if (Modernizr.canvas === !1) return !1\n      var A = o('canvas').getContext('2d')\n      try {\n        A.globalCompositeOperation = 'screen'\n      } catch (e) {}\n      return 'screen' === A.globalCompositeOperation\n    }),\n    Modernizr.addTest('audioloop', 'loop' in o('audio'))\n  var b = o('canvas')\n  Modernizr.addTest('todataurljpeg', function () {\n    return !!Modernizr.canvas && 0 === b.toDataURL('image/jpeg').indexOf('data:image/jpeg')\n  }),\n    Modernizr.addTest('todataurlpng', function () {\n      return !!Modernizr.canvas && 0 === b.toDataURL('image/png').indexOf('data:image/png')\n    }),\n    Modernizr.addTest('todataurlwebp', function () {\n      var A = !1\n      try {\n        A = !!Modernizr.canvas && 0 === b.toDataURL('image/webp').indexOf('data:image/webp')\n      } catch (e) {}\n      return A\n    }),\n    Modernizr.addTest('canvaswinding', function () {\n      if (Modernizr.canvas === !1) return !1\n      var A = o('canvas').getContext('2d')\n      return A.rect(0, 0, 10, 10), A.rect(2, 2, 6, 6), A.isPointInPath(5, 5, 'evenodd') === !1\n    }),\n    Modernizr.addTest('bgpositionshorthand', function () {\n      var A = o('a'),\n        e = A.style,\n        t = 'right 10px bottom 10px'\n      return (e.cssText = 'background-position: ' + t + ';'), e.backgroundPosition === t\n    }),\n    Modernizr.addTest('multiplebgs', function () {\n      var A = o('a').style\n      return (\n        (A.cssText = 'background:url(https://),url(https://),red url(https://)'), /(url\\s*\\(.*?){3}/.test(A.background)\n      )\n    }),\n    Modernizr.addTest('cssremunit', function () {\n      var A = o('a').style\n      try {\n        A.fontSize = '3rem'\n      } catch (e) {}\n      return /rem/.test(A.fontSize)\n    }),\n    Modernizr.addTest('rgba', function () {\n      var A = o('a').style\n      return (A.cssText = 'background-color:rgba(150,255,150,.5)'), ('' + A.backgroundColor).indexOf('rgba') > -1\n    }),\n    Modernizr.addTest('fileinput', function () {\n      if (\n        navigator.userAgent.match(\n          /(Android (1.0|1.1|1.5|1.6|2.0|2.1))|(Windows Phone (OS 7|8.0))|(XBLWP)|(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|(Kindle\\/(1.0|2.0|2.5|3.0))/\n        )\n      )\n        return !1\n      var A = o('input')\n      return (A.type = 'file'), !A.disabled\n    }),\n    Modernizr.addTest('placeholder', 'placeholder' in o('input') && 'placeholder' in o('textarea')),\n    Modernizr.addTest('imgcrossorigin', 'crossOrigin' in o('img')),\n    Modernizr.addTest('inlinesvg', function () {\n      var A = o('div')\n      return (\n        (A.innerHTML = '<svg/>'),\n        'http://www.w3.org/2000/svg' == ('undefined' != typeof SVGRect && A.firstChild && A.firstChild.namespaceURI)\n      )\n    }),\n    Modernizr.addTest('textareamaxlength', !!('maxLength' in o('textarea')))\n  var V = o('input'),\n    q = 'autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '),\n    S = {}\n  Modernizr.input = (function (e) {\n    for (var t = 0, n = e.length; n > t; t++) S[e[t]] = !!(e[t] in V)\n    return S.list && (S.list = !(!o('datalist') || !A.HTMLDataListElement)), S\n  })(q)\n  var M = 'search tel url email datetime date month week time datetime-local number range color'.split(' '),\n    x = {}\n  Modernizr.inputtypes = (function (A) {\n    for (var n, a, i, o = A.length, r = '1)', d = 0; o > d; d++)\n      V.setAttribute('type', (n = A[d])),\n        (i = 'text' !== V.type && 'style' in V),\n        i &&\n          ((V.value = r),\n          (V.style.cssText = 'position:absolute;visibility:hidden;'),\n          /^range$/.test(n) && V.style.WebkitAppearance !== t\n            ? (I.appendChild(V),\n              (a = e.defaultView),\n              (i =\n                a.getComputedStyle &&\n                'textfield' !== a.getComputedStyle(V, null).WebkitAppearance &&\n                0 !== V.offsetHeight),\n              I.removeChild(V))\n            : /^(search|tel)$/.test(n) ||\n              (i = /^(url|email)$/.test(n) ? V.checkValidity && V.checkValidity() === !1 : V.value != r)),\n        (x[A[d]] = !!i)\n    return x\n  })(M)\n  var T = (function () {\n    function A (A, e) {\n      var a\n      return A\n        ? ((e && 'string' != typeof e) || (e = o(e || 'div')),\n          (A = 'on' + A),\n          (a = A in e),\n          !a &&\n            n &&\n            (e.setAttribute || (e = o('div')),\n            e.setAttribute(A, ''),\n            (a = 'function' == typeof e[A]),\n            e[A] !== t && (e[A] = t),\n            e.removeAttribute(A)),\n          a)\n        : !1\n    }\n    var n = !('onblur' in e.documentElement)\n    return A\n  })()\n  ;(B.hasEvent = T), Modernizr.addTest('inputsearchevent', T('search'))\n  var R = B._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : ['', '']\n  ;(B._prefixes = R),\n    Modernizr.addTest('cubicbezierrange', function () {\n      var A = o('a')\n      return (A.style.cssText = R.join('transition-timing-function:cubic-bezier(1,0,0,1.1); ')), !!A.style.length\n    }),\n    Modernizr.addTest('opacity', function () {\n      var A = o('a').style\n      return (A.cssText = R.join('opacity:.55;')), /^0.55$/.test(A.opacity)\n    })\n  var k\n  !(function () {\n    var A = {}.hasOwnProperty\n    k =\n      n(A, 'undefined') || n(A.call, 'undefined')\n        ? function (A, e) {\n            return e in A && n(A.constructor.prototype[e], 'undefined')\n          }\n        : function (e, t) {\n            return A.call(e, t)\n          }\n  })(),\n    (B._l = {}),\n    (B.on = function (A, e) {\n      this._l[A] || (this._l[A] = []),\n        this._l[A].push(e),\n        Modernizr.hasOwnProperty(A) &&\n          setTimeout(function () {\n            Modernizr._trigger(A, Modernizr[A])\n          }, 0)\n    }),\n    (B._trigger = function (A, e) {\n      if (this._l[A]) {\n        var t = this._l[A]\n        setTimeout(function () {\n          var A, n\n          for (A = 0; A < t.length; A++) (n = t[A])(e)\n        }, 0),\n          delete this._l[A]\n      }\n    }),\n    Modernizr._q.push(function () {\n      B.addTest = d\n    }),\n    Modernizr.addAsyncTest(function () {\n      var t,\n        n,\n        a = function (A) {\n          I.contains(A) || I.appendChild(A)\n        },\n        i = function (A) {\n          A.fake && A.parentNode && A.parentNode.removeChild(A)\n        },\n        w = function (A, e) {\n          var t = !!A\n          if (\n            (t && ((t = new Boolean(t)), (t.blocked = 'blocked' === A)),\n            d('flash', function () {\n              return t\n            }),\n            e && P.contains(e))\n          ) {\n            for (; e.parentNode !== P; ) e = e.parentNode\n            P.removeChild(e)\n          }\n        }\n      try {\n        n = 'ActiveXObject' in A && 'Pan' in new A.ActiveXObject('ShockwaveFlash.ShockwaveFlash')\n      } catch (s) {}\n      if (((t = !(('plugins' in navigator && 'Shockwave Flash' in navigator.plugins) || n)), t || y)) w(!1)\n      else {\n        var l,\n          D,\n          u = o('embed'),\n          P = r()\n        if (((u.type = 'application/x-shockwave-flash'), P.appendChild(u), !('Pan' in u || n)))\n          return a(P), w('blocked', u), void i(P)\n        ;(l = function () {\n          return (\n            a(P),\n            I.contains(P)\n              ? (I.contains(u) ? ((D = u.style.cssText), '' !== D ? w('blocked', u) : w(!0, u)) : w('blocked'),\n                void i(P))\n              : ((P = e.body || P),\n                (u = o('embed')),\n                (u.type = 'application/x-shockwave-flash'),\n                P.appendChild(u),\n                setTimeout(l, 1e3))\n          )\n        }),\n          setTimeout(l, 10)\n      }\n    }),\n    d('htmlimports', 'import' in o('link')),\n    Modernizr.addAsyncTest(function () {\n      function A (n) {\n        clearTimeout(e)\n        var i = n !== t && 'loadeddata' === n.type ? !0 : !1\n        a.removeEventListener('loadeddata', A, !1), d('audiopreload', i), a.parentNode.removeChild(a)\n      }\n      var e,\n        n = 300,\n        a = o('audio'),\n        i = a.style\n      if (!(Modernizr.audio && 'preload' in a)) return void d('audiopreload', !1)\n      ;(i.position = 'absolute'), (i.height = 0), (i.width = 0)\n      try {\n        if (Modernizr.audio.mp3)\n          a.src =\n            'data:audio/mpeg;base64,//MUxAAB6AXgAAAAAPP+c6nf//yi/6f3//MUxAMAAAIAAAjEcH//0fTX6C9Lf//0//MUxA4BeAIAAAAAAKX2/6zv//+IlR4f//MUxBMCMAH8AAAAABYWalVMQU1FMy45//MUxBUB0AH0AAAAADkuM1VVVVVVVVVV//MUxBgBUATowAAAAFVVVVVVVVVVVVVV'\n        else if (Modernizr.audio.m4a)\n          a.src =\n            'data:audio/x-m4a;base64,AAAAGGZ0eXBNNEEgAAACAGlzb21pc28yAAAACGZyZWUAAAAfbWRhdN4EAABsaWJmYWFjIDEuMjgAAAFoAQBHAAACiG1vb3YAAABsbXZoZAAAAAB8JbCAfCWwgAAAA+gAAAAYAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAG0dHJhawAAAFx0a2hkAAAAD3wlsIB8JbCAAAAAAQAAAAAAAAAYAAAAAAAAAAAAAAAAAQAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAABUG1kaWEAAAAgbWRoZAAAAAB8JbCAfCWwgAAArEQAAAQAVcQAAAAAAC1oZGxyAAAAAAAAAABzb3VuAAAAAAAAAAAAAAAAU291bmRIYW5kbGVyAAAAAPttaW5mAAAAEHNtaGQAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAL9zdGJsAAAAW3N0c2QAAAAAAAAAAQAAAEttcDRhAAAAAAAAAAEAAAAAAAAAAAACABAAAAAArEQAAAAAACdlc2RzAAAAAAMZAAEABBFAFQAAAAABftAAAAAABQISCAYBAgAAABhzdHRzAAAAAAAAAAEAAAABAAAEAAAAABxzdHNjAAAAAAAAAAEAAAABAAAAAQAAAAEAAAAUc3RzegAAAAAAAAAXAAAAAQAAABRzdGNvAAAAAAAAAAEAAAAoAAAAYHVkdGEAAABYbWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAAAAAraWxzdAAAACOpdG9vAAAAG2RhdGEAAAABAAAAAExhdmY1Mi42NC4y'\n        else if (Modernizr.audio.ogg)\n          a.src =\n            'data:audio/ogg;base64,T2dnUwACAAAAAAAAAAD/QwAAAAAAAM2LVKsBHgF2b3JiaXMAAAAAAUSsAAAAAAAAgLsAAAAAAAC4AU9nZ1MAAAAAAAAAAAAA/0MAAAEAAADmvOe6Dy3/////////////////MgN2b3JiaXMdAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAwNzA2MjIAAAAAAQV2b3JiaXMfQkNWAQAAAQAYY1QpRplS0kqJGXOUMUaZYpJKiaWEFkJInXMUU6k515xrrLm1IIQQGlNQKQWZUo5SaRljkCkFmVIQS0kldBI6J51jEFtJwdaYa4tBthyEDZpSTCnElFKKQggZU4wpxZRSSkIHJXQOOuYcU45KKEG4nHOrtZaWY4updJJK5yRkTEJIKYWSSgelU05CSDWW1lIpHXNSUmpB6CCEEEK2IIQNgtCQVQAAAQDAQBAasgoAUAAAEIqhGIoChIasAgAyAAAEoCiO4iiOIzmSY0kWEBqyCgAAAgAQAADAcBRJkRTJsSRL0ixL00RRVX3VNlVV9nVd13Vd13UgNGQVAAABAEBIp5mlGiDCDGQYCA1ZBQAgAAAARijCEANCQ1YBAAABAABiKDmIJrTmfHOOg2Y5aCrF5nRwItXmSW4q5uacc845J5tzxjjnnHOKcmYxaCa05pxzEoNmKWgmtOacc57E5kFrqrTmnHPGOaeDcUYY55xzmrTmQWo21uaccxa0pjlqLsXmnHMi5eZJbS7V5pxzzjnnnHPOOeecc6oXp3NwTjjnnHOi9uZabkIX55xzPhmne3NCOOecc84555xzzjnnnHOC0JBVAAAQAABBGDaGcacgSJ+jgRhFiGnIpAfdo8MkaAxyCqlHo6ORUuoglFTGSSmdIDRkFQAACAAAIYQUUkghhRRSSCGFFFKIIYYYYsgpp5yCCiqppKKKMsoss8wyyyyzzDLrsLPOOuwwxBBDDK20EktNtdVYY62555xrDtJaaa211koppZRSSikIDVkFAIAAABAIGWSQQUYhhRRSiCGmnHLKKaigAkJDVgEAgAAAAgAAADzJc0RHdERHdERHdERHdETHczxHlERJlERJtEzL1ExPFVXVlV1b1mXd9m1hF3bd93Xf93Xj14VhWZZlWZZlWZZlWZZlWZZlWYLQkFUAAAgAAIAQQgghhRRSSCGlGGPMMeegk1BCIDRkFQAACAAgAAAAwFEcxXEkR3IkyZIsSZM0S7M8zdM8TfREURRN01RFV3RF3bRF2ZRN13RN2XRVWbVdWbZt2dZtX5Zt3/d93/d93/d93/d93/d1HQgNWQUASAAA6EiOpEiKpEiO4ziSJAGhIasAABkAAAEAKIqjOI7jSJIkSZakSZ7lWaJmaqZneqqoAqEhqwAAQAAAAQAAAAAAKJriKabiKaLiOaIjSqJlWqKmaq4om7Lruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7rui4QGrIKAJAAANCRHMmRHEmRFEmRHMkBQkNWAQAyAAACAHAMx5AUybEsS9M8zdM8TfRET/RMTxVd0QVCQ1YBAIAAAAIAAAAAADAkw1IsR3M0SZRUS7VUTbVUSxVVT1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTVN0zRNIDRkJQAABADAYo3B5SAhJSXl3hDCEJOeMSYhtV4hBJGS3jEGFYOeMqIMct5C4xCDHggNWREARAEAAMYgxxBzyDlHqZMSOeeodJQa5xyljlJnKcWYYs0oldhSrI1zjlJHraOUYiwtdpRSjanGAgAAAhwAAAIshEJDVgQAUQAAhDFIKaQUYow5p5xDjCnnmHOGMeYcc44556B0UirnnHROSsQYc445p5xzUjonlXNOSiehAACAAAcAgAALodCQFQFAnACAQZI8T/I0UZQ0TxRFU3RdUTRd1/I81fRMU1U90VRVU1Vt2VRVWZY8zzQ901RVzzRV1VRVWTZVVZZFVdVt03V123RV3ZZt2/ddWxZ2UVVt3VRd2zdV1/Zd2fZ9WdZ1Y/I8VfVM03U903Rl1XVtW3VdXfdMU5ZN15Vl03Vt25VlXXdl2fc103Rd01Vl2XRd2XZlV7ddWfZ903WF35VlX1dlWRh2XfeFW9eV5XRd3VdlVzdWWfZ9W9eF4dZ1YZk8T1U903RdzzRdV3VdX1dd19Y105Rl03Vt2VRdWXZl2fddV9Z1zzRl2XRd2zZdV5ZdWfZ9V5Z13XRdX1dlWfhVV/Z1WdeV4dZt4Tdd1/dVWfaFV5Z14dZ1Ybl1XRg+VfV9U3aF4XRl39eF31luXTiW0XV9YZVt4VhlWTl+4ViW3feVZXRdX1ht2RhWWRaGX/id5fZ943h1XRlu3efMuu8Mx++k+8rT1W1jmX3dWWZfd47hGDq/8OOpqq+brisMpywLv+3rxrP7vrKMruv7qiwLvyrbwrHrvvP8vrAso+z6wmrLwrDatjHcvm4sv3Acy2vryjHrvlG2dXxfeArD83R1XXlmXcf2dXTjRzh+ygAAgAEHAIAAE8pAoSErAoA4AQCPJImiZFmiKFmWKIqm6LqiaLqupGmmqWmeaVqaZ5qmaaqyKZquLGmaaVqeZpqap5mmaJqua5qmrIqmKcumasqyaZqy7LqybbuubNuiacqyaZqybJqmLLuyq9uu7Oq6pFmmqXmeaWqeZ5qmasqyaZquq3meanqeaKqeKKqqaqqqraqqLFueZ5qa6KmmJ4qqaqqmrZqqKsumqtqyaaq2bKqqbbuq7Pqybeu6aaqybaqmLZuqatuu7OqyLNu6L2maaWqeZ5qa55mmaZqybJqqK1uep5qeKKqq5ommaqqqLJumqsqW55mqJ4qq6omea5qqKsumatqqaZq2bKqqLZumKsuubfu+68qybqqqbJuqauumasqybMu+78qq7oqmKcumqtqyaaqyLduy78uyrPuiacqyaaqybaqqLsuybRuzbPu6aJqybaqmLZuqKtuyLfu6LNu678qub6uqrOuyLfu67vqucOu6MLyybPuqrPq6K9u6b+sy2/Z9RNOUZVM1bdtUVVl2Zdn2Zdv2fdE0bVtVVVs2TdW2ZVn2fVm2bWE0Tdk2VVXWTdW0bVmWbWG2ZeF2Zdm3ZVv2ddeVdV/XfePXZd3murLty7Kt+6qr+rbu+8Jw667wCgAAGHAAAAgwoQwUGrISAIgCAACMYYwxCI1SzjkHoVHKOecgZM5BCCGVzDkIIZSSOQehlJQy5yCUklIIoZSUWgshlJRSawUAABQ4AAAE2KApsThAoSErAYBUAACD41iW55miatqyY0meJ4qqqaq27UiW54miaaqqbVueJ4qmqaqu6+ua54miaaqq6+q6aJqmqaqu67q6Lpqiqaqq67qyrpumqqquK7uy7Oumqqqq68quLPvCqrquK8uybevCsKqu68qybNu2b9y6ruu+7/vCka3rui78wjEMRwEA4AkOAEAFNqyOcFI0FlhoyEoAIAMAgDAGIYMQQgYhhJBSSiGllBIAADDgAAAQYEIZKDRkRQAQJwAAGEMppJRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkgppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkqppJRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoplVJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSCgCQinAAkHowoQwUGrISAEgFAACMUUopxpyDEDHmGGPQSSgpYsw5xhyUklLlHIQQUmktt8o5CCGk1FJtmXNSWosx5hgz56SkFFvNOYdSUoux5ppr7qS0VmuuNedaWqs115xzzbm0FmuuOdecc8sx15xzzjnnGHPOOeecc84FAOA0OACAHtiwOsJJ0VhgoSErAYBUAAACGaUYc8456BBSjDnnHIQQIoUYc845CCFUjDnnHHQQQqgYc8w5CCGEkDnnHIQQQgghcw466CCEEEIHHYQQQgihlM5BCCGEEEooIYQQQgghhBA6CCGEEEIIIYQQQgghhFJKCCGEEEIJoZRQAABggQMAQIANqyOcFI0FFhqyEgAAAgCAHJagUs6EQY5Bjw1BylEzDUJMOdGZYk5qMxVTkDkQnXQSGWpB2V4yCwAAgCAAIMAEEBggKPhCCIgxAABBiMwQCYVVsMCgDBoc5gHAA0SERACQmKBIu7iALgNc0MVdB0IIQhCCWBxAAQk4OOGGJ97whBucoFNU6iAAAAAAAAwA4AEA4KAAIiKaq7C4wMjQ2ODo8AgAAAAAABYA+AAAOD6AiIjmKiwuMDI0Njg6PAIAAAAAAAAAAICAgAAAAAAAQAAAAICAT2dnUwAE7AwAAAAAAAD/QwAAAgAAADuydfsFAQEBAQEACg4ODg=='\n        else {\n          if (!Modernizr.audio.wav) return void d('audiopreload', !1)\n          a.src =\n            'data:audio/wav;base64,UklGRvwZAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YdgZAAAAAAEA/v8CAP//AAABAP////8DAPz/BAD9/wEAAAAAAAAAAAABAP7/AgD//wAAAQD//wAAAQD//wAAAQD+/wIA//8AAAAAAAD//wIA/v8BAAAA//8BAAAA//8BAP//AQAAAP//AQD//wEAAAD//wEA//8BAP//AQD//wEA//8BAP//AQD+/wMA/f8DAP3/AgD+/wIA/////wMA/f8CAP7/AgD+/wMA/f8CAP7/AgD//wAAAAAAAAAAAQD+/wIA/v8CAP7/AwD9/wIA/v8BAAEA/v8CAP7/AQAAAAAAAAD//wEAAAD//wIA/f8DAP7/AQD//wEAAAD//wEA//8CAP7/AQD//wIA/v8CAP7/AQAAAAAAAAD//wEAAAAAAAAA//8BAP//AgD9/wQA+/8FAPz/AgAAAP//AgD+/wEAAAD//wIA/v8CAP3/BAD8/wQA/P8DAP7/AwD8/wQA/P8DAP7/AQAAAAAA//8BAP//AgD+/wEAAAD//wIA/v8BAP//AQD//wEAAAD//wEA//8BAAAAAAAAAP//AgD+/wEAAAAAAAAAAAD//wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AgD+/wIA/v8BAP//AQABAP7/AQD//wIA/v8CAP3/AwD/////AgD9/wMA/v8BAP//AQAAAP//AQD//wEA//8BAP//AAABAP//AAABAP//AQD//wAAAAACAP3/AwD9/wIA//8BAP//AQD//wEA//8BAP//AgD9/wMA/v8AAAIA/f8CAAAA/v8EAPv/BAD9/wIAAAD+/wQA+v8HAPr/BAD+/wEAAAD//wIA/f8EAPz/BAD7/wUA/P8EAPz/AwD+/wEAAAD//wEAAAAAAP//AgD8/wUA+/8FAPz/AwD9/wIA//8AAAEA/v8CAP//AQD//wAAAAABAP//AgD9/wMA/f8EAPz/AwD+/wAAAwD7/wUA/P8DAP7/AQAAAP//AgD+/wEAAQD+/wIA/v8BAAEA/v8CAP7/AQAAAP//AgD9/wMA/f8DAP7/AgD+/wEAAAAAAAEA//8AAAEA/v8DAP3/AgD//wEA//8BAP7/AwD9/wMA/v8BAP//AQAAAP//AgD9/wMA/v8BAP//AQAAAP//AgD+/wEAAQD+/wIA/////wIA//8AAAEA/f8DAP//AAABAP////8DAP3/AwD+/wEA//8BAP//AQAAAAAA//8BAP//AQD//wEA//8BAP//AAAAAAEA//8BAP7/AgD//wEA//8AAAAAAAAAAAAAAAD//wIA/v8BAAAA//8BAAEA/v8BAAAA//8DAPz/AwD+/wIA/v8CAP3/AwD+/wEAAAD//wEA//8BAAAA//8BAAAA/v8EAPv/BAD+/wAAAAABAP7/AgD//wAAAAABAP7/AgD//wAAAAAAAAAAAAABAP3/BAD8/wQA/f8BAAAAAAABAP7/AgD+/wIA/v8CAP7/AgD+/wIA/v8BAAAAAAD//wIA/f8DAP7/AAABAP//AAACAPz/BAD9/wIA//8AAP//AwD9/wMA/P8EAP3/AwD9/wIA//8BAP//AQD+/wMA/f8DAP7/AAABAP//AQAAAP//AQD//wIA/f8DAP7/AQAAAP//AQAAAAAA//8CAP7/AQABAP7/AgD+/wEAAQD+/wIA/v8CAP////8CAP7/AgD//wAAAAABAP7/AwD9/wIAAAD+/wMA/f8CAP//AQD+/wMA/f8CAP//AAACAPz/BQD6/wUA/v///wIA/v8CAP3/BAD7/wYA+v8FAPz/AwD/////AgD+/wEAAAD//wEAAAD//wIA/f8DAP7/AQAAAP//AgD//wAA//8BAAAAAAAAAP//AQD//wEA//8AAAIA/f8DAP3/AgAAAP//AQD//wEA//8AAAEA//8BAP////8CAP//AAABAP3/BAD9/wIA/v8BAAEA//8BAP7/AgD//wEA//8AAAEA//8BAP//AAAAAAEA//8BAP7/AgD//wEA//8AAAAAAQD+/wIA/v8BAAAAAAD//wIA/v8BAAAAAAAAAAAAAQD+/wMA/f8CAP//AQD//wIA/f8DAP7/AQD//wEA//8CAP7/AAABAP7/AwD9/wMA/v8AAAEA//8BAAAAAAD//wIA/v8BAAAA//8CAP7/AgD+/wEA//8CAP7/AgD//wAAAAAAAAAAAQD//wEA/v8DAPz/BQD8/wIA//8AAAEAAAD//wEA//8BAP//AQAAAAAA//8BAP//AgD+/wEAAAAAAP//AQD+/wMA/////wEA/v8CAP//AQD//wEA//8AAAEA//8BAAAA/v8EAPz/AwD+/wEAAAAAAAAA//8CAP7/AQD//wEA//8BAP//AAABAP7/AwD9/wIA//8BAP//AQD//wEA//8AAAEA/v8EAPv/BAD9/wIA//8BAP7/AwD9/wIA//8AAAEA//8BAP//AQD//wAAAQD//wEAAAD+/wMA/v8AAAIA/f8DAP7/AQD//wAAAQD+/wMA/f8CAP//AAABAP7/AgD+/wMA/f8CAP7/AQABAP7/AgD+/wIA/v8CAP7/AwD8/wMA//8AAAEA//8AAAAAAAABAP//AQD//wAAAQD//wIA/f8DAP3/AwD+/wAAAgD9/wIA//8AAAEAAAD+/wMA/P8FAPv/BAD9/wIA//8AAP//AgD+/wIA/v8BAAAAAAD//wEAAAAAAP//AQD//wEA//8BAP//AAABAP7/AwD9/wIA//8BAP//AAABAP//AQD//wAAAQD//wEA//8BAP//AAABAAAA//8BAP7/AwD9/wMA/f8DAP3/AgD//wEA//8BAP7/AgD//wAAAgD8/wQA/f8CAP//AQD+/wMA/f8CAP7/AgD//wAAAAAAAAAAAAABAP7/AwD9/wIA/v8DAP3/AwD9/wIA/v8DAPz/BQD7/wQA/f8CAP7/AwD9/wMA/f8CAP//AQAAAP7/AwD+/wEA//8AAAEAAAAAAP//AAABAP//AQAAAP7/AwD9/wMA/f8CAP//AQD//wEA//8AAAIA/f8CAAAA//8BAAAA//8BAAAA/v8EAPv/BAD9/wIA//8AAAEA/v8CAP//AAABAP//AAABAP//AAABAP7/AwD8/wQA/f8CAAAA/v8DAP3/AwD9/wMA/v8BAAAA//8BAAAA//8CAP7/AQAAAAAAAAAAAAAA//8CAP7/AgD+/wIA/v8CAP7/AgD//wAAAQD//wAAAQD//wAAAQD//wAAAQD+/wIA//8AAAAAAQD+/wMA/f8CAP//AQD//wEA//8AAAEA/v8DAP3/AgD//wAAAAABAP7/AwD9/wIA//8AAAEA/v8DAP3/AgD//wAAAAABAP7/AwD8/wMA/v8CAP//AAD//wIA/v8CAP7/AQABAP7/AQAAAP//AgD/////AQD//wEAAAD//wEA/v8EAPv/BAD9/wMA/v8BAAAA//8BAAEA/P8GAPr/BQD8/wMA/v8BAAAA//8CAP7/AQABAP3/BAD7/wYA+/8EAPz/AwD//wEA//8BAP7/BAD8/wMA/v8AAAIA/v8BAAAA//8BAAAA//8BAAAA//8CAP3/AwD+/wAAAgD8/wUA/P8DAP7/AAABAAAAAAD//wEAAAD//wIA/f8DAP7/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA/f8EAPz/AwD/////AgD+/wIA/f8DAP7/AgD+/wEA//8CAP7/AQD//wEAAAAAAP//AQAAAP//AgD9/wMA/v8BAAAA//8BAP//AQAAAP//AAACAP3/BAD7/wQA/v8BAAAA//8BAP//AQAAAP//AQAAAP7/BAD7/wUA+/8EAP3/AgD//wAAAQD+/wIA//8AAAEA/v8CAP//AQD+/wEAAAAAAAAAAAD//wEA//8CAP3/AwD9/wIA//8AAAAAAAAAAAAA//8BAP//AgD+/wEA//8CAP7/AQAAAP//AgD/////AgD/////AgD+/wIA//8AAP//AQABAP7/AgD9/wMA/v8CAP////8BAAAAAAAAAAAA//8CAP////8DAPz/AwD+/wEAAAAAAP//AQD//wEAAAD//wEAAAD+/wQA+/8FAPz/AgAAAP//AgD9/wMA/v8BAAAAAAD//wEAAAD//wIA/v8BAAAAAAD//wIA/v8BAAAA//8BAAAA//8CAP7/AQD//wEA//8BAAAA//8BAP//AAABAP//AQAAAP7/AgD//wEA//8AAAAAAQD+/wMA/P8EAP7///8DAPz/BQD8/wEAAQD+/wMA/v8AAAEA//8BAP//AQD//wEA/v8CAP//AQD//wAAAAABAAAA//8BAP//AQAAAAAA//8BAP//AgD+/wAAAQD//wIA/f8CAP//AQAAAP7/AwD9/wMA/v8BAP//AAABAP//AgD9/wIA//8BAAAA//8BAAAA//8CAP3/AwD+/wEAAAD+/wQA/P8DAP7/AAACAP7/AQAAAP//AQAAAP//AQAAAP//AgD9/wIAAAD//wIA/f8DAP7/AQD//wEA//8CAP7/AQD//wAAAQD//wEA//8AAAAAAQD//wEAAAD9/wUA+/8FAPz/AgD//wAAAQD//wAAAQD+/wMA/f8BAAEA/v8CAP7/AgD+/wIA/v8BAAAAAAAAAAAAAAD//wIA/v8CAP////8CAP7/AgD+/wIA/v8CAP7/AQAAAP//AQAAAP//AQD//wAAAQD//wAAAQD+/wMA/f8CAAAA/v8DAP3/AgAAAP//AQAAAP7/AwD9/wMA/v8BAP//AQD//wEAAAD+/wMA/f8CAAAA/v8CAP//AAAAAAEA//8AAAEA/v8DAP3/AwD9/wIA//8BAP//AgD8/wQA/v8BAAAA/v8CAP//AQD//wAAAAAAAAEA/f8EAPz/BAD9/wIA//8AAAAAAAABAP//AAAAAAAAAAABAP3/BAD9/wIA/v8BAAEA//8AAAAA//8CAP7/AgD9/wQA+/8FAPv/BQD8/wMA/f8DAP3/AwD+/wAAAgD9/wMA/f8CAAAA/v8EAPv/BQD7/wUA/P8DAP///v8DAP3/BAD8/wMA/f8DAP7/AQD//wEAAAD//wEA/v8CAAAA/v8CAP7/AgD//wAAAAAAAAAAAQD+/wIA//8AAAEA/v8DAPz/BAD9/wIA//8AAP//AgD//wEA/v8BAAAAAQD//wAAAAAAAAEA//8AAAEA//8BAP//AAABAP//AQD+/wIA/v8DAPz/BAD8/wQA/f8BAAAAAQD+/wMA/P8DAP//AAAAAAAAAAD//wMA+/8FAP3/AQABAP3/BAD8/wMA/v8BAAAA//8CAP3/AwD+/wEAAQD9/wMA/f8EAPz/BAD7/wQA/v8BAAEA/f8DAP7/AQAAAP//AgD+/wEAAAD//wIA/v8CAP7/AgD+/wEAAQD//wEA/v8CAP7/BAD7/wQA/f8CAAAA//8AAAAAAAABAP//AQD+/wEAAQD+/wMA/f8BAAEA/v8DAPz/AwD/////AwD8/wQA/P8DAP7/AgD//wAA//8BAAAAAAAAAP//AgD+/wEAAAD//wIA/v8BAAAA//8CAP3/AgD//wAAAQD+/wIA/v8BAAAA//8CAP7/AgD+/wEA//8CAP3/BAD7/wQA/v8BAAAA//8AAAEAAAD//wIA/f8DAP7/AgD+/wIA/v8CAP7/AgD+/wEAAAAAAP//AgD9/wMA/v8BAP//AgD9/wMA/v8AAAEA//8BAP//AQD//wEA//8AAAEA/v8EAPz/AgD//wAAAQAAAP//AAABAP//AQD//wEAAAD//wEA//8BAAEA/f8DAP7/AQABAP3/AwD+/wIA/////wEAAAAAAAAAAAD//wIA/v8CAP////8CAP7/AgD//wAA//8CAP3/BAD9/wAAAgD9/wMA/v8BAP//AQAAAP//AQAAAP//AgD9/wMA/f8EAPz/AwD+/wEAAAAAAAAAAAD//wIA/f8EAP3/AAABAAAA//8CAP7/AQAAAP//AQAAAAAA//8BAP//AQAAAP//AQAAAP//AQAAAP//AgD9/wMA/v8BAP//AQAAAP//AQD//wIA/v8CAP3/BAD9/wEAAAD//wEAAQD9/wMA/f8CAAAA/v8DAP3/AgD//wAAAQD+/wIA/v8CAP7/AQAAAP//AgD+/wEAAAAAAP//AwD7/wUA/f8BAAEA/v8BAAEA/v8DAP3/AgD//wEA//8BAP//AQD//wEA//8CAP3/BAD7/wQA/////wIA/v8AAAIA/v8CAP3/BAD7/wUA/P8DAP3/AwD9/wMA/v8AAAIA/v8CAP7/AgD+/wIA//8AAAEA/v8CAP7/AgD//wAAAAD//wEAAAAAAAAA//8BAP7/BAD7/wUA/P8CAAAA//8BAP//AQAAAP//AgD9/wMA/v8BAAAA//8BAAAA//8CAP3/AwD+/wEA//8CAP3/AwD+/wAAAwD8/wIAAAD//wIA/////wIA/v8CAP7/AgD+/wEAAAAAAAAAAAAAAP//AgD+/wIA//8AAAAA//8CAP7/AgD+/wEA//8CAP3/AwD9/wMA/v8BAP7/AwD9/wMA/f8CAP//AQD+/wIA//8BAP//AQD+/wMA/v8BAAAA//8BAAAA//8CAP7/AQAAAP//AgD+/wIA/v8CAP//AAAAAAEA//8BAP//AAABAAAA//8BAP//AQD//wEA//8BAP//AQAAAP//AQD//wEAAAD//wIA/f8CAAAA//8BAAAA//8BAP//AAABAP//AQD//wAAAAAAAAEA/v8CAP//AQD//wAAAAABAP7/AwD9/wIAAAD+/wIA//8BAP//AgD9/wMA/f8DAP7/AgD+/wEAAAAAAAEA/v8CAP7/AgD//wAAAAAAAAAAAAAAAP//AgD/////AgD9/wQA/f8BAAAAAAAAAAEA/f8DAP////8DAP3/AQABAP7/AgD//wAAAQD+/wMA/f8CAP7/AQABAP7/AwD7/wYA+v8FAP3/AQABAP7/AgD+/wMA/f8CAP7/AwD+/wEA//8BAP//AQAAAP7/BQD5/wcA+v8FAPz/AwD+/wIA/v8BAAAA//8DAPv/BQD8/wMA/////wEAAAAAAAAAAAD//wIA/f8DAP7/AQAAAP//AQAAAP//AgD+/wIA/v8BAAEA/f8EAPz/AwD+/wEA//8CAP7/AQD//wEA//8CAP7/AQAAAP//AgD+/wEAAAAAAAAAAAAAAAAAAAD//wIA/f8EAPz/AwD+/wEA//8CAP7/AgD+/wEAAQD+/wEAAQD+/wIA/////wIA//8AAAAAAAAAAAAAAAD//wEAAAAAAP//AgD9/wMA/v8BAP//AQAAAP//AQD//wEA//8BAP//AQD//wEA//8BAP//AQAAAP7/AwD9/wMA/v8BAP7/AwD9/wMA/v8BAP//AAABAP//AQD//wAAAAABAP//AAAAAAAAAQD//wEA/v8CAAAA/v8EAPv/BAD9/wIAAAD+/wMA/P8DAP//AAAAAP//AQD//wIA/f8DAP3/AwD9/wMA/v8BAAAA//8BAAAA//8CAP3/AwD9/wQA+/8FAPv/BQD8/wMA/v8BAAAA//8BAP//AgD+/wEAAAD//wIA/v8BAAEA/f8DAP3/AgAAAP//AQD//wAAAQD//wEA//8BAP//AQD//wEA/v8DAP3/AgAAAP7/AwD9/wIAAAD//wEAAAD//wIA/f8DAP7/AgD9/wQA+/8FAPz/AgAAAP//AgD9/wIA//8BAP//AQD//wEA//8BAP//AQD//wIA/f8DAP3/AgD//wAAAQD+/wIA/v8BAAEA/v8CAP7/AgD+/wMA/P8DAP//AAABAP7/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA/v8CAP3/BAD8/wMA/v8BAAAAAAD//wEAAAAAAAAAAAD//wEAAAAAAAAA//8BAP//AgD+/wEA//8CAP3/AwD9/wMA/f8EAPv/BAD+/wAAAQD//wEA//8BAP//AAABAP//AQD//wEAAAD//wEA//8BAP//AgD9/wMA/v8AAAIA/f8DAP7/AAACAP3/AwD+/wEA//8BAP//AQAAAP//AQAAAP7/AwD9/wMA/v8AAAEA//8BAP//AAAAAAEA//8AAAEA/v8CAP//AAAAAAEA/v8DAPz/BAD9/wEAAQD+/wEAAQD9/wQA/P8DAP7/AQAAAAAAAAAAAAAAAAAAAAAAAQD+/wIA/////wIA/v8BAAAA//8BAP//AQD//wEA//8BAAAA/v8EAPz/AwD///7/BAD8/wMA/////wIA/v8CAP////8CAP7/AgD+/wIA/v8CAP////8CAP7/AwD9/wIA/v8CAP//AAABAP7/AwD9/wEAAQD+/wMA/f8CAP//AAAAAAEA/v8DAPz/BAD9/wIA/v8CAP7/AgD//wAAAAD//wIA/v8CAP7/AQAAAAAA//8CAP7/AgD+/wIA/v8CAP7/AwD8/wUA+v8GAPv/AwD//wAAAAAAAAAA//8DAPv/BQD9/wAAAgD9/wMA/v8BAP//AQAAAP//AgD9/wMA/v8BAAAA//8BAAAAAAAAAP//AQAAAAAAAAD//wEA//8CAP3/AwD+/wAAAgD+/wEAAAD//wIA/v8CAP7/AgD/////AwD8/wUA/P8CAP//AQD//wIA/f8DAP3/AwD+/wAAAQD+/wMA/f8DAP3/AgD//wAAAQD//wEA//8BAP7/AwD+/wEA//8AAAEA//8CAPz/BAD9/wIA//8AAAEA/v8DAPz/BAD9/wIA//8AAAEA/v8CAP7/AgD//wEA/f8EAPz/BAD+////AgD//wAAAQD//wAAAQD//wEA//8BAP7/AwD+/wEA'\n        }\n      } catch (r) {\n        return void d('audiopreload', !1)\n      }\n      a.setAttribute('preload', 'auto'),\n        (a.style.cssText = 'display:none'),\n        I.appendChild(a),\n        setTimeout(function () {\n          a.addEventListener('loadeddata', A, !1), (e = setTimeout(A, n))\n        }, 0)\n    })\n  var U = (B.testStyles = s)\n  Modernizr.addTest('unicoderange', function () {\n    return Modernizr.testStyles(\n      '@font-face{font-family:\"unicodeRange\";src:local(\"Arial\");unicode-range:U+0020,U+002E}#modernizr span{font-size:20px;display:inline-block;font-family:\"unicodeRange\",monospace}#modernizr .mono{font-family:monospace}',\n      function (A) {\n        for (var e = ['.', '.', 'm', 'm'], t = 0; t < e.length; t++) {\n          var n = o('span')\n          ;(n.innerHTML = e[t]), (n.className = t % 2 ? 'mono' : ''), A.appendChild(n), (e[t] = n.clientWidth)\n        }\n        return e[0] !== e[1] && e[2] === e[3]\n      }\n    )\n  }),\n    Modernizr.addTest('unicode', function () {\n      var A,\n        e = o('span'),\n        t = o('span')\n      return (\n        U('#modernizr{font-family:Arial,sans;font-size:300em;}', function (n) {\n          ;(e.innerHTML = y ? '妇' : '&#5987;'),\n            (t.innerHTML = y ? '☆' : '&#9734;'),\n            n.appendChild(e),\n            n.appendChild(t),\n            (A = 'offsetWidth' in e && e.offsetWidth !== t.offsetWidth)\n        }),\n        A\n      )\n    }),\n    Modernizr.addTest('checked', function () {\n      return U(\n        '#modernizr {position:absolute} #modernizr input {margin-left:10px} #modernizr :checked {margin-left:20px;display:block}',\n        function (A) {\n          var e = o('input')\n          return (\n            e.setAttribute('type', 'checkbox'),\n            e.setAttribute('checked', 'checked'),\n            A.appendChild(e),\n            20 === e.offsetLeft\n          )\n        }\n      )\n    }),\n    U('#modernizr{font:0/0 a}#modernizr:after{content:\":)\";visibility:hidden;font:7px/1 a}', function (A) {\n      Modernizr.addTest('generatedcontent', A.offsetHeight >= 7)\n    }),\n    U(\n      '#modernizr div {width:100px} #modernizr :last-child{width:200px;display:block}',\n      function (A) {\n        Modernizr.addTest('lastchild', A.lastChild.offsetWidth > A.firstChild.offsetWidth)\n      },\n      2\n    ),\n    Modernizr.addTest('cssvalid', function () {\n      return U(\n        '#modernizr input{height:0;border:0;padding:0;margin:0;width:10px} #modernizr input:valid{width:50px}',\n        function (A) {\n          var e = o('input')\n          return A.appendChild(e), e.clientWidth > 10\n        }\n      )\n    }),\n    U('#modernizr { height: 50vh; }', function (e) {\n      var t = parseInt(A.innerHeight / 2, 10),\n        n = parseInt((A.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle).height, 10)\n      Modernizr.addTest('cssvhunit', n == t)\n    }),\n    U(\n      '#modernizr div {width:1px} #modernizr div:nth-child(2n) {width:2px;}',\n      function (A) {\n        for (var e = A.getElementsByTagName('div'), t = !0, n = 0; 5 > n; n++) t = t && e[n].offsetWidth === (n % 2) + 1\n        Modernizr.addTest('nthchild', t)\n      },\n      5\n    ),\n    U('#modernizr { width: 50vw; }', function (e) {\n      var t = parseInt(A.innerWidth / 2, 10),\n        n = parseInt((A.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle).width, 10)\n      Modernizr.addTest('cssvwunit', n == t)\n    }),\n    U(\n      '#modernizr{overflow: scroll; width: 40px; height: 40px; }#' +\n        R.join('scrollbar{width:0px} #modernizr::')\n          .split('#')\n          .slice(1)\n          .join('#') +\n        'scrollbar{width:0px}',\n      function (A) {\n        Modernizr.addTest('cssscrollbar', 40 == A.scrollWidth)\n      }\n    ),\n    Modernizr.addTest('formvalidation', function () {\n      var e = o('form')\n      if (!('checkValidity' in e && 'addEventListener' in e)) return !1\n      if ('reportValidity' in e) return !0\n      var t,\n        n = !1\n      return (\n        (Modernizr.formvalidationapi = !0),\n        e.addEventListener(\n          'submit',\n          function (e) {\n            ;(!A.opera || A.operamini) && e.preventDefault(), e.stopPropagation()\n          },\n          !1\n        ),\n        (e.innerHTML = '<input name=\"modTest\" required=\"required\" /><button></button>'),\n        U('#modernizr form{position:absolute;top:-99999em}', function (A) {\n          A.appendChild(e),\n            (t = e.getElementsByTagName('input')[0]),\n            t.addEventListener(\n              'invalid',\n              function (A) {\n                ;(n = !0), A.preventDefault(), A.stopPropagation()\n              },\n              !1\n            ),\n            (Modernizr.formvalidationmessage = !!t.validationMessage),\n            e.getElementsByTagName('button')[0].click()\n        }),\n        n\n      )\n    })\n  var W = (function () {\n    var e = A.matchMedia || A.msMatchMedia\n    return e\n      ? function (A) {\n          var t = e(A)\n          return (t && t.matches) || !1\n        }\n      : function (e) {\n          var t = !1\n          return (\n            s('@media ' + e + ' { #modernizr { position: absolute; } }', function (e) {\n              t = 'absolute' == (A.getComputedStyle ? A.getComputedStyle(e, null) : e.currentStyle).position\n            }),\n            t\n          )\n        }\n  })()\n  ;(B.mq = W), Modernizr.addTest('mediaqueries', W('only all'))\n  var z = 'Moz O ms Webkit',\n    Z = B._config.usePrefixes ? z.split(' ') : []\n  B._cssomPrefixes = Z\n  var K = function (e) {\n    var n,\n      a = R.length,\n      i = A.CSSRule\n    if ('undefined' == typeof i) return t\n    if (!e) return !1\n    if (((e = e.replace(/^@/, '')), (n = e.replace(/-/g, '_').toUpperCase() + '_RULE'), n in i)) return '@' + e\n    for (var o = 0; a > o; o++) {\n      var r = R[o],\n        d = r.toUpperCase() + '_' + n\n      if (d in i) return '@-' + r.toLowerCase() + '-' + e\n    }\n    return !1\n  }\n  B.atRule = K\n  var F = B._config.usePrefixes ? z.toLowerCase().split(' ') : []\n  B._domPrefixes = F\n  var J = { elem: o('modernizr') }\n  Modernizr._q.push(function () {\n    delete J.elem\n  })\n  var O = { style: J.elem.style }\n  Modernizr._q.unshift(function () {\n    delete O.style\n  }),\n    (B.testAllProps = p)\n  var G = (B.prefixed = function (A, e, t) {\n    return 0 === A.indexOf('@') ? K(A) : (-1 != A.indexOf('-') && (A = w(A)), e ? p(A, e, t) : p(A, 'pfx'))\n  })\n  Modernizr.addTest('requestanimationframe', !!G('requestAnimationFrame', A), { aliases: ['raf'] }),\n    Modernizr.addTest('backgroundblendmode', G('backgroundBlendMode', 'text')),\n    (B.testAllProps = g),\n    Modernizr.addTest('cssanimations', g('animationName', 'a', !0)),\n    Modernizr.addTest('backgroundcliptext', function () {\n      return g('backgroundClip', 'text')\n    }),\n    Modernizr.addTest('bgpositionxy', function () {\n      return g('backgroundPositionX', '3px', !0) && g('backgroundPositionY', '5px', !0)\n    }),\n    Modernizr.addTest('bgrepeatround', g('backgroundRepeat', 'round')),\n    Modernizr.addTest('bgrepeatspace', g('backgroundRepeat', 'space')),\n    Modernizr.addTest('backgroundsize', g('backgroundSize', '100%', !0)),\n    Modernizr.addTest('bgsizecover', g('backgroundSize', 'cover')),\n    Modernizr.addTest('borderradius', g('borderRadius', '0px', !0)),\n    (function () {\n      Modernizr.addTest('csscolumns', function () {\n        var A = !1,\n          e = g('columnCount')\n        try {\n          ;(A = !!e) && (A = new Boolean(A))\n        } catch (t) {}\n        return A\n      })\n      for (\n        var A,\n          e,\n          t = [\n            'Width',\n            'Span',\n            'Fill',\n            'Gap',\n            'Rule',\n            'RuleColor',\n            'RuleStyle',\n            'RuleWidth',\n            'BreakBefore',\n            'BreakAfter',\n            'BreakInside'\n          ],\n          n = 0;\n        n < t.length;\n        n++\n      )\n        (A = t[n].toLowerCase()),\n          (e = g('column' + t[n])),\n          ('breakbefore' === A || 'breakafter' === A || 'breakinside' == A) && (e = e || g(t[n])),\n          Modernizr.addTest('csscolumns.' + A, e)\n    })(),\n    Modernizr.addTest('ellipsis', g('textOverflow', 'ellipsis')),\n    Modernizr.addTest('cssfilters', function () {\n      if (Modernizr.supports) return g('filter', 'blur(2px)')\n      var A = o('a')\n      return (\n        (A.style.cssText = R.join('filter:blur(2px); ')),\n        !!A.style.length && (e.documentMode === t || e.documentMode > 9)\n      )\n    }),\n    Modernizr.addTest('boxshadow', g('boxShadow', '1px 1px', !0)),\n    Modernizr.addTest('boxsizing', g('boxSizing', 'border-box', !0) && (e.documentMode === t || e.documentMode > 7)),\n    Modernizr.addTest('flexbox', g('flexBasis', '1px', !0)),\n    Modernizr.addTest('flexboxlegacy', g('boxDirection', 'reverse', !0)),\n    Modernizr.addTest('flexboxtweener', g('flexAlign', 'end', !0)),\n    Modernizr.addTest('flexwrap', g('flexWrap', 'wrap', !0)),\n    Modernizr.addTest('cssmask', g('maskRepeat', 'repeat-x', !0)),\n    Modernizr.addTest('csstransforms', function () {\n      return -1 === navigator.userAgent.indexOf('Android 2.') && g('transform', 'scale(1)', !0)\n    }),\n    Modernizr.addTest('csstransitions', g('transition', 'all', !0)),\n    Modernizr.addTest('overflowscrolling', g('overflowScrolling', 'touch', !0)),\n    a(),\n    i(v),\n    delete B.addTest,\n    delete B.addAsyncTest\n  for (var Y = 0; Y < Modernizr._q.length; Y++) Modernizr._q[Y]()\n  __webpack_provided_window_dot_Modernizr = Modernizr\n})(window, document)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/modernizr/modernizr.js?");

/***/ }),
/* 4 */
/*!**************************************************************!*\
  !*** ./src/public/js/vendor/datatables/jquery.dataTables.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! DataTables 1.10.2\n * ©2008-2014 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.2\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2008-2014 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidateRow,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnScrollBarWidth,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n/** @lends <global> */ ;(function (window, document, undefined) {\n  ;(function (factory) {\n    'use strict'\n\n    if (true) {\n      // Define as an AMD module if possible\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    } else {}\n  })(\n    /** @lends <global> */ function ($) {\n      'use strict'\n\n      /**\n       * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n       * flexible tool, based upon the foundations of progressive enhancement,\n       * which will add advanced interaction controls to any HTML table. For a\n       * full list of features please refer to\n       * [DataTables.net](href=\"http://datatables.net).\n       *\n       * Note that the `DataTable` object is not a global variable but is aliased\n       * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n       * be  accessed.\n       *\n       *  @class\n       *  @param {object} [init={}] Configuration object for DataTables. Options\n       *    are defined by {@link DataTable.defaults}\n       *  @requires jQuery 1.7+\n       *\n       *  @example\n       *    // Basic initialisation\n       *    $(document).ready( function {\n       *      $('#example').dataTable();\n       *    } );\n       *\n       *  @example\n       *    // Initialisation with configuration options - in this case, disable\n       *    // pagination and sorting.\n       *    $(document).ready( function {\n       *      $('#example').dataTable( {\n       *        \"paginate\": false,\n       *        \"sort\": false\n       *      } );\n       *    } );\n       */\n      var DataTable\n\n      /*\n       * It is useful to have variables which are scoped locally so only the\n       * DataTables functions can access them and they don't leak into global space.\n       * At the same time these functions are often useful over multiple files in the\n       * core and API, so we list, or at least document, all variables which are used\n       * by DataTables as private variables here. This also ensures that there is no\n       * clashing of variable names and that they can easily referenced for reuse.\n       */\n\n      // Defined else where\n      //  _selector_run\n      //  _selector_opts\n      //  _selector_first\n      //  _selector_row_indexes\n\n      var _ext // DataTable.ext\n      var _Api // DataTable.Api\n      var _api_register // DataTable.Api.register\n      var _api_registerPlural // DataTable.Api.registerPlural\n\n      var _re_dic = {}\n      var _re_new_lines = /[\\r\\n]/g\n      var _re_html = /<.*?>/g\n      var _re_date_start = /^[\\w\\+\\-]/\n      var _re_date_end = /[\\w\\+\\-]$/\n\n      // Escape regular expression special characters\n      var _re_escape_regex = new RegExp(\n        '(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')',\n        'g'\n      )\n\n      // U+2009 is thin space and U+202F is narrow no-break space, both used in many\n      // standards as thousands separators\n      var _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F]/g\n\n      var _empty = function (d) {\n        return !d || d === true || d === '-' ? true : false\n      }\n\n      var _intVal = function (s) {\n        var integer = parseInt(s, 10)\n        return !isNaN(integer) && isFinite(s) ? integer : null\n      }\n\n      // Convert from a formatted number with characters other than `.` as the\n      // decimal place, to a Javascript number\n      var _numToDecimal = function (num, decimalPoint) {\n        // Cache created regular expressions for speed as this function is called often\n        if (!_re_dic[decimalPoint]) {\n          _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g')\n        }\n        return typeof num === 'string' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num\n      }\n\n      var _isNumber = function (d, decimalPoint, formatted) {\n        var strType = typeof d === 'string'\n\n        if (decimalPoint && strType) {\n          d = _numToDecimal(d, decimalPoint)\n        }\n\n        if (formatted && strType) {\n          d = d.replace(_re_formatted_numeric, '')\n        }\n\n        return _empty(d) || (!isNaN(parseFloat(d)) && isFinite(d))\n      }\n\n      // A string without HTML in it can be considered to be HTML still\n      var _isHtml = function (d) {\n        return _empty(d) || typeof d === 'string'\n      }\n\n      var _htmlNumeric = function (d, decimalPoint, formatted) {\n        if (_empty(d)) {\n          return true\n        }\n\n        var html = _isHtml(d)\n        return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null\n      }\n\n      var _pluck = function (a, prop, prop2) {\n        var out = []\n        var i = 0,\n          ien = a.length\n\n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if (prop2 !== undefined) {\n          for (; i < ien; i++) {\n            if (a[i] && a[i][prop]) {\n              out.push(a[i][prop][prop2])\n            }\n          }\n        } else {\n          for (; i < ien; i++) {\n            if (a[i]) {\n              out.push(a[i][prop])\n            }\n          }\n        }\n\n        return out\n      }\n\n      // Basically the same as _pluck, but rather than looping over `a` we use `order`\n      // as the indexes to pick from `a`\n      var _pluck_order = function (a, order, prop, prop2) {\n        var out = []\n        var i = 0,\n          ien = order.length\n\n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if (prop2 !== undefined) {\n          for (; i < ien; i++) {\n            out.push(a[order[i]][prop][prop2])\n          }\n        } else {\n          for (; i < ien; i++) {\n            out.push(a[order[i]][prop])\n          }\n        }\n\n        return out\n      }\n\n      var _range = function (len, start) {\n        var out = []\n        var end\n\n        if (start === undefined) {\n          start = 0\n          end = len\n        } else {\n          end = start\n          start = len\n        }\n\n        for (var i = start; i < end; i++) {\n          out.push(i)\n        }\n\n        return out\n      }\n\n      var _stripHtml = function (d) {\n        return d.replace(_re_html, '')\n      }\n\n      /**\n       * Find the unique elements in a source array.\n       *\n       * @param  {array} src Source array\n       * @return {array} Array of unique items\n       * @ignore\n       */\n      var _unique = function (src) {\n        // A faster unique method is to use object keys to identify used values,\n        // but this doesn't work with arrays or objects, which we must also\n        // consider. See jsperf.com/compare-array-unique-versions/4 for more\n        // information.\n        var out = [],\n          val,\n          i,\n          ien = src.length,\n          j,\n          k = 0\n\n        again: for (i = 0; i < ien; i++) {\n          val = src[i]\n\n          for (j = 0; j < k; j++) {\n            if (out[j] === val) {\n              continue again\n            }\n          }\n\n          out.push(val)\n          k++\n        }\n\n        return out\n      }\n\n      /**\n       * Create a mapping object that allows camel case parameters to be looked up\n       * for their Hungarian counterparts. The mapping is stored in a private\n       * parameter called `_hungarianMap` which can be accessed on the source object.\n       *  @param {object} o\n       *  @memberof DataTable#oApi\n       */\n      function _fnHungarianMap (o) {\n        var hungarian = 'a aa ai ao as b fn i m o s ',\n          match,\n          newKey,\n          map = {}\n\n        $.each(o, function (key, val) {\n          match = key.match(/^([^A-Z]+?)([A-Z])/)\n\n          if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n            newKey = key.replace(match[0], match[2].toLowerCase())\n            map[newKey] = key\n\n            //console.log( key, match );\n            if (match[1] === 'o') {\n              _fnHungarianMap(o[key])\n            }\n          }\n        })\n\n        o._hungarianMap = map\n      }\n\n      /**\n       * Convert from camel case parameters to Hungarian, based on a Hungarian map\n       * created by _fnHungarianMap.\n       *  @param {object} src The model object which holds all parameters that can be\n       *    mapped.\n       *  @param {object} user The object to convert from camel case to Hungarian.\n       *  @param {boolean} force When set to `true`, properties which already have a\n       *    Hungarian value in the `user` object will be overwritten. Otherwise they\n       *    won't be.\n       *  @memberof DataTable#oApi\n       */\n      function _fnCamelToHungarian (src, user, force) {\n        if (!src._hungarianMap) {\n          _fnHungarianMap(src)\n        }\n\n        var hungarianKey\n\n        $.each(user, function (key, val) {\n          hungarianKey = src._hungarianMap[key]\n\n          if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n            // For objects, we need to buzz down into the object to copy parameters\n            if (hungarianKey.charAt(0) === 'o') {\n              // Copy the camelCase options over to the hungarian\n              if (!user[hungarianKey]) {\n                user[hungarianKey] = {}\n              }\n              $.extend(true, user[hungarianKey], user[key])\n\n              _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force)\n            } else {\n              user[hungarianKey] = user[key]\n            }\n          }\n        })\n      }\n\n      /**\n       * Language compatibility - when certain options are given, and others aren't, we\n       * need to duplicate the values over, in order to provide backwards compatibility\n       * with older language files.\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnLanguageCompat (lang) {\n        var defaults = DataTable.defaults.oLanguage\n        var zeroRecords = lang.sZeroRecords\n\n        /* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n         * sZeroRecords - assuming that is given.\n         */\n        if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === 'No data available in table') {\n          _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable')\n        }\n\n        /* Likewise with loading records */\n        if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === 'Loading...') {\n          _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords')\n        }\n\n        // Old parameter name of the thousands separator mapped onto the new\n        if (lang.sInfoThousands) {\n          lang.sThousands = lang.sInfoThousands\n        }\n\n        var decimal = lang.sDecimal\n        if (decimal) {\n          _addNumericSort(decimal)\n        }\n      }\n\n      /**\n       * Map one parameter onto another\n       *  @param {object} o Object to map\n       *  @param {*} knew The new parameter name\n       *  @param {*} old The old parameter name\n       */\n      var _fnCompatMap = function (o, knew, old) {\n        if (o[knew] !== undefined) {\n          o[old] = o[knew]\n        }\n      }\n\n      /**\n       * Provide backwards compatibility for the main DT options. Note that the new\n       * options are mapped onto the old parameters, so this is an external interface\n       * change only.\n       *  @param {object} init Object to map\n       */\n      function _fnCompatOpts (init) {\n        _fnCompatMap(init, 'ordering', 'bSort')\n        _fnCompatMap(init, 'orderMulti', 'bSortMulti')\n        _fnCompatMap(init, 'orderClasses', 'bSortClasses')\n        _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop')\n        _fnCompatMap(init, 'order', 'aaSorting')\n        _fnCompatMap(init, 'orderFixed', 'aaSortingFixed')\n        _fnCompatMap(init, 'paging', 'bPaginate')\n        _fnCompatMap(init, 'pagingType', 'sPaginationType')\n        _fnCompatMap(init, 'pageLength', 'iDisplayLength')\n        _fnCompatMap(init, 'searching', 'bFilter')\n\n        // Column search objects are in an array, so it needs to be converted\n        // element by element\n        var searchCols = init.aoSearchCols\n\n        if (searchCols) {\n          for (var i = 0, ien = searchCols.length; i < ien; i++) {\n            if (searchCols[i]) {\n              _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i])\n            }\n          }\n        }\n      }\n\n      /**\n       * Provide backwards compatibility for column options. Note that the new options\n       * are mapped onto the old parameters, so this is an external interface change\n       * only.\n       *  @param {object} init Object to map\n       */\n      function _fnCompatCols (init) {\n        _fnCompatMap(init, 'orderable', 'bSortable')\n        _fnCompatMap(init, 'orderData', 'aDataSort')\n        _fnCompatMap(init, 'orderSequence', 'asSorting')\n        _fnCompatMap(init, 'orderDataType', 'sortDataType')\n      }\n\n      /**\n       * Browser feature detection for capabilities, quirks\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnBrowserDetect (settings) {\n        var browser = settings.oBrowser\n\n        // Scrolling feature / quirks detection\n        var n = $('<div/>')\n          .css({\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: 1,\n            width: 1,\n            overflow: 'hidden'\n          })\n          .append(\n            $('<div/>')\n              .css({\n                position: 'absolute',\n                top: 1,\n                left: 1,\n                width: 100,\n                overflow: 'scroll'\n              })\n              .append(\n                $('<div class=\"test\"/>').css({\n                  width: '100%',\n                  height: 10\n                })\n              )\n          )\n          .appendTo('body')\n\n        var test = n.find('.test')\n\n        // IE6/7 will oversize a width 100% element inside a scrolling element, to\n        // include the width of the scrollbar, while other browsers ensure the inner\n        // element is contained without forcing scrolling\n        browser.bScrollOversize = test[0].offsetWidth === 100\n\n        // In rtl text layout, some browsers (most, but not all) will place the\n        // scrollbar on the left, rather than the right.\n        browser.bScrollbarLeft = test.offset().left !== 1\n\n        n.remove()\n      }\n\n      /**\n       * Array.prototype reduce[Right] method, used for browsers which don't support\n       * JS 1.6. Done this way to reduce code size, since we iterate either way\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnReduce (that, fn, init, start, end, inc) {\n        var i = start,\n          value,\n          isSet = false\n\n        if (init !== undefined) {\n          value = init\n          isSet = true\n        }\n\n        while (i !== end) {\n          if (!that.hasOwnProperty(i)) {\n            continue\n          }\n\n          value = isSet ? fn(value, that[i], i, that) : that[i]\n\n          isSet = true\n          i += inc\n        }\n\n        return value\n      }\n\n      /**\n       * Add a column to the list used for the table with default values\n       *  @param {object} oSettings dataTables settings object\n       *  @param {node} nTh The th element for this column\n       *  @memberof DataTable#oApi\n       */\n      function _fnAddColumn (oSettings, nTh) {\n        // Add column to aoColumns array\n        var oDefaults = DataTable.defaults.column\n        var iCol = oSettings.aoColumns.length\n        var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n          nTh: nTh ? nTh : document.createElement('th'),\n          sTitle: oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n          aDataSort: oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n          mData: oDefaults.mData ? oDefaults.mData : iCol,\n          idx: iCol\n        })\n        oSettings.aoColumns.push(oCol)\n\n        // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n        // passed into extend can be undefined. This allows the user to give a default\n        // with only some of the parameters defined, and also not give a default\n        var searchCols = oSettings.aoPreSearchCols\n        searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol])\n\n        // Use the default column options function to initialise classes etc\n        _fnColumnOptions(oSettings, iCol, null)\n      }\n\n      /**\n       * Apply options for a column\n       *  @param {object} oSettings dataTables settings object\n       *  @param {int} iCol column index to consider\n       *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n       *  @memberof DataTable#oApi\n       */\n      function _fnColumnOptions (oSettings, iCol, oOptions) {\n        var oCol = oSettings.aoColumns[iCol]\n        var oClasses = oSettings.oClasses\n        var th = $(oCol.nTh)\n\n        // Try to get width information from the DOM. We can't get it from CSS\n        // as we'd need to parse the CSS stylesheet. `width` option can override\n        if (!oCol.sWidthOrig) {\n          // Width attribute\n          oCol.sWidthOrig = th.attr('width') || null\n\n          // Style attribute\n          var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/)\n          if (t) {\n            oCol.sWidthOrig = t[1]\n          }\n        }\n\n        /* User specified column options */\n        if (oOptions !== undefined && oOptions !== null) {\n          // Backwards compatibility\n          _fnCompatCols(oOptions)\n\n          // Map camel case parameters to their Hungarian counterparts\n          _fnCamelToHungarian(DataTable.defaults.column, oOptions)\n\n          /* Backwards compatibility for mDataProp */\n          if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n            oOptions.mData = oOptions.mDataProp\n          }\n\n          if (oOptions.sType) {\n            oCol._sManualType = oOptions.sType\n          }\n\n          // `class` is a reserved word in Javascript, so we need to provide\n          // the ability to use a valid name for the camel case input\n          if (oOptions.className && !oOptions.sClass) {\n            oOptions.sClass = oOptions.className\n          }\n\n          $.extend(oCol, oOptions)\n          _fnMap(oCol, oOptions, 'sWidth', 'sWidthOrig')\n\n          /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n           * priority if defined\n           */\n          if (typeof oOptions.iDataSort === 'number') {\n            oCol.aDataSort = [oOptions.iDataSort]\n          }\n          _fnMap(oCol, oOptions, 'aDataSort')\n        }\n\n        /* Cache the data get and set functions for speed */\n        var mDataSrc = oCol.mData\n        var mData = _fnGetObjectDataFn(mDataSrc)\n        var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null\n\n        var attrTest = function (src) {\n          return typeof src === 'string' && src.indexOf('@') !== -1\n        }\n        oCol._bAttrSrc =\n          $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter))\n\n        oCol.fnGetData = function (rowData, type, meta) {\n          var innerData = mData(rowData, type, undefined, meta)\n\n          return mRender && type ? mRender(innerData, type, rowData, meta) : innerData\n        }\n        oCol.fnSetData = function (rowData, val, meta) {\n          return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta)\n        }\n\n        /* Feature sorting overrides column specific when off */\n        if (!oSettings.oFeatures.bSort) {\n          oCol.bSortable = false\n          th.addClass(oClasses.sSortableNone) // Have to add class here as order event isn't called\n        }\n\n        /* Check that the class assignment is correct for sorting */\n        var bAsc = $.inArray('asc', oCol.asSorting) !== -1\n        var bDesc = $.inArray('desc', oCol.asSorting) !== -1\n        if (!oCol.bSortable || (!bAsc && !bDesc)) {\n          oCol.sSortingClass = oClasses.sSortableNone\n          oCol.sSortingClassJUI = ''\n        } else if (bAsc && !bDesc) {\n          oCol.sSortingClass = oClasses.sSortableAsc\n          oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed\n        } else if (!bAsc && bDesc) {\n          oCol.sSortingClass = oClasses.sSortableDesc\n          oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed\n        } else {\n          oCol.sSortingClass = oClasses.sSortable\n          oCol.sSortingClassJUI = oClasses.sSortJUI\n        }\n      }\n\n      /**\n       * Adjust the table column widths for new data. Note: you would probably want to\n       * do a redraw after calling this function!\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnAdjustColumnSizing (settings) {\n        /* Not interested in doing column width calculation if auto-width is disabled */\n        if (settings.oFeatures.bAutoWidth !== false) {\n          var columns = settings.aoColumns\n\n          _fnCalculateColumnWidths(settings)\n          for (var i = 0, iLen = columns.length; i < iLen; i++) {\n            columns[i].nTh.style.width = columns[i].sWidth\n          }\n        }\n\n        var scroll = settings.oScroll\n        if (scroll.sY !== '' || scroll.sX !== '') {\n          _fnScrollDraw(settings)\n        }\n\n        _fnCallbackFire(settings, null, 'column-sizing', [settings])\n      }\n\n      /**\n       * Covert the index of a visible column to the index in the data array (take account\n       * of hidden columns)\n       *  @param {object} oSettings dataTables settings object\n       *  @param {int} iMatch Visible column index to lookup\n       *  @returns {int} i the data index\n       *  @memberof DataTable#oApi\n       */\n      function _fnVisibleToColumnIndex (oSettings, iMatch) {\n        var aiVis = _fnGetColumns(oSettings, 'bVisible')\n\n        return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null\n      }\n\n      /**\n       * Covert the index of an index in the data array and convert it to the visible\n       *   column index (take account of hidden columns)\n       *  @param {int} iMatch Column index to lookup\n       *  @param {object} oSettings dataTables settings object\n       *  @returns {int} i the data index\n       *  @memberof DataTable#oApi\n       */\n      function _fnColumnIndexToVisible (oSettings, iMatch) {\n        var aiVis = _fnGetColumns(oSettings, 'bVisible')\n        var iPos = $.inArray(iMatch, aiVis)\n\n        return iPos !== -1 ? iPos : null\n      }\n\n      /**\n       * Get the number of visible columns\n       *  @param {object} oSettings dataTables settings object\n       *  @returns {int} i the number of visible columns\n       *  @memberof DataTable#oApi\n       */\n      function _fnVisbleColumns (oSettings) {\n        return _fnGetColumns(oSettings, 'bVisible').length\n      }\n\n      /**\n       * Get an array of column indexes that match a given property\n       *  @param {object} oSettings dataTables settings object\n       *  @param {string} sParam Parameter in aoColumns to look for - typically\n       *    bVisible or bSearchable\n       *  @returns {array} Array of indexes with matched properties\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetColumns (oSettings, sParam) {\n        var a = []\n\n        $.map(oSettings.aoColumns, function (val, i) {\n          if (val[sParam]) {\n            a.push(i)\n          }\n        })\n\n        return a\n      }\n\n      /**\n       * Calculate the 'type' of a column\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnColumnTypes (settings) {\n        var columns = settings.aoColumns\n        var data = settings.aoData\n        var types = DataTable.ext.type.detect\n        var i, ien, j, jen, k, ken\n        var col, cell, detectedType, cache\n\n        // For each column, spin over the\n        for (i = 0, ien = columns.length; i < ien; i++) {\n          col = columns[i]\n          cache = []\n\n          if (!col.sType && col._sManualType) {\n            col.sType = col._sManualType\n          } else if (!col.sType) {\n            for (j = 0, jen = types.length; j < jen; j++) {\n              for (k = 0, ken = data.length; k < ken; k++) {\n                // Use a cache array so we only need to get the type data\n                // from the formatter once (when using multiple detectors)\n                if (cache[k] === undefined) {\n                  cache[k] = _fnGetCellData(settings, k, i, 'type')\n                }\n\n                detectedType = types[j](cache[k], settings)\n\n                // Doesn't match, so break early, since this type can't\n                // apply to this column. Also, HTML is a special case since\n                // it is so similar to `string`. Just a single match is\n                // needed for a column to be html type\n                if (!detectedType || detectedType === 'html') {\n                  break\n                }\n              }\n\n              // Type is valid for all data points in the column - use this\n              // type\n              if (detectedType) {\n                col.sType = detectedType\n                break\n              }\n            }\n\n            // Fall back - if no type was detected, always use string\n            if (!col.sType) {\n              col.sType = 'string'\n            }\n          }\n        }\n      }\n\n      /**\n       * Take the column definitions and static columns arrays and calculate how\n       * they relate to column indexes. The callback function will then apply the\n       * definition found for a column to a suitable configuration object.\n       *  @param {object} oSettings dataTables settings object\n       *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n       *  @param {array} aoCols The aoColumns array that defines columns individually\n       *  @param {function} fn Callback function - takes two parameters, the calculated\n       *    column index and the definition for that column.\n       *  @memberof DataTable#oApi\n       */\n      function _fnApplyColumnDefs (oSettings, aoColDefs, aoCols, fn) {\n        var i, iLen, j, jLen, k, kLen, def\n        var columns = oSettings.aoColumns\n\n        // Column definitions with aTargets\n        if (aoColDefs) {\n          /* Loop over the definitions array - loop in reverse so first instance has priority */\n          for (i = aoColDefs.length - 1; i >= 0; i--) {\n            def = aoColDefs[i]\n\n            /* Each definition can target multiple columns, as it is an array */\n            var aTargets = def.targets !== undefined ? def.targets : def.aTargets\n\n            if (!$.isArray(aTargets)) {\n              aTargets = [aTargets]\n            }\n\n            for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n              if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n                /* Add columns that we don't yet know about */\n                while (columns.length <= aTargets[j]) {\n                  _fnAddColumn(oSettings)\n                }\n\n                /* Integer, basic index */\n                fn(aTargets[j], def)\n              } else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n                /* Negative integer, right to left column counting */\n                fn(columns.length + aTargets[j], def)\n              } else if (typeof aTargets[j] === 'string') {\n                /* Class name matching on TH element */\n                for (k = 0, kLen = columns.length; k < kLen; k++) {\n                  if (aTargets[j] == '_all' || $(columns[k].nTh).hasClass(aTargets[j])) {\n                    fn(k, def)\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Statically defined columns array\n        if (aoCols) {\n          for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n            fn(i, aoCols[i])\n          }\n        }\n      }\n\n      /**\n       * Add a data array to the table, creating DOM node etc. This is the parallel to\n       * _fnGatherData, but for adding rows from a Javascript source, rather than a\n       * DOM source.\n       *  @param {object} oSettings dataTables settings object\n       *  @param {array} aData data array to be added\n       *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n       *    DataTables will create a row automatically\n       *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n       *    if nTr is.\n       *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n       *  @memberof DataTable#oApi\n       */\n      function _fnAddData (oSettings, aDataIn, nTr, anTds) {\n        /* Create the object for storing information about this new row */\n        var iRow = oSettings.aoData.length\n        var oData = $.extend(true, {}, DataTable.models.oRow, {\n          src: nTr ? 'dom' : 'data'\n        })\n\n        oData._aData = aDataIn\n        oSettings.aoData.push(oData)\n\n        /* Create the cells */\n        var nTd, sThisType\n        var columns = oSettings.aoColumns\n        for (var i = 0, iLen = columns.length; i < iLen; i++) {\n          // When working with a row, the data source object must be populated. In\n          // all other cases, the data source object is already populated, so we\n          // don't overwrite it, which might break bindings etc\n          if (nTr) {\n            _fnSetCellData(oSettings, iRow, i, _fnGetCellData(oSettings, iRow, i))\n          }\n          columns[i].sType = null\n        }\n\n        /* Add to the display array */\n        oSettings.aiDisplayMaster.push(iRow)\n\n        /* Create the DOM information, or register it if already present */\n        if (nTr || !oSettings.oFeatures.bDeferRender) {\n          _fnCreateTr(oSettings, iRow, nTr, anTds)\n        }\n\n        return iRow\n      }\n\n      /**\n       * Add one or more TR elements to the table. Generally we'd expect to\n       * use this for reading data from a DOM sourced table, but it could be\n       * used for an TR element. Note that if a TR is given, it is used (i.e.\n       * it is not cloned).\n       *  @param {object} settings dataTables settings object\n       *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n       *  @returns {array} Array of indexes for the added rows\n       *  @memberof DataTable#oApi\n       */\n      function _fnAddTr (settings, trs) {\n        var row\n\n        // Allow an individual node to be passed in\n        if (!(trs instanceof $)) {\n          trs = $(trs)\n        }\n\n        return trs.map(function (i, el) {\n          row = _fnGetRowElements(settings, el)\n          return _fnAddData(settings, row.data, el, row.cells)\n        })\n      }\n\n      /**\n       * Take a TR element and convert it to an index in aoData\n       *  @param {object} oSettings dataTables settings object\n       *  @param {node} n the TR element to find\n       *  @returns {int} index if the node is found, null if not\n       *  @memberof DataTable#oApi\n       */\n      function _fnNodeToDataIndex (oSettings, n) {\n        return n._DT_RowIndex !== undefined ? n._DT_RowIndex : null\n      }\n\n      /**\n       * Take a TD element and convert it into a column data index (not the visible index)\n       *  @param {object} oSettings dataTables settings object\n       *  @param {int} iRow The row number the TD/TH can be found in\n       *  @param {node} n The TD/TH element to find\n       *  @returns {int} index if the node is found, -1 if not\n       *  @memberof DataTable#oApi\n       */\n      function _fnNodeToColumnIndex (oSettings, iRow, n) {\n        return $.inArray(n, oSettings.aoData[iRow].anCells)\n      }\n\n      /**\n       * Get the data for a given cell from the internal cache, taking into account data mapping\n       *  @param {object} settings dataTables settings object\n       *  @param {int} rowIdx aoData row id\n       *  @param {int} colIdx Column index\n       *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n       *  @returns {*} Cell data\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetCellData (settings, rowIdx, colIdx, type) {\n        var draw = settings.iDraw\n        var col = settings.aoColumns[colIdx]\n        var rowData = settings.aoData[rowIdx]._aData\n        var defaultContent = col.sDefaultContent\n        var cellData = col.fnGetData(rowData, type, {\n          settings: settings,\n          row: rowIdx,\n          col: colIdx\n        })\n\n        if (cellData === undefined) {\n          if (settings.iDrawError != draw && defaultContent === null) {\n            _fnLog(\n              settings,\n              0,\n              'Requested unknown parameter ' +\n                (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") +\n                ' for row ' +\n                rowIdx,\n              4\n            )\n            settings.iDrawError = draw\n          }\n          return defaultContent\n        }\n\n        /* When the data source is null, we can use default column data */\n        if ((cellData === rowData || cellData === null) && defaultContent !== null) {\n          cellData = defaultContent\n        } else if (typeof cellData === 'function') {\n          // If the data source is a function, then we run it and use the return,\n          // executing in the scope of the data object (for instances)\n          return cellData.call(rowData)\n        }\n\n        if (cellData === null && type == 'display') {\n          return ''\n        }\n        return cellData\n      }\n\n      /**\n       * Set the value for a specific cell, into the internal data cache\n       *  @param {object} settings dataTables settings object\n       *  @param {int} rowIdx aoData row id\n       *  @param {int} colIdx Column index\n       *  @param {*} val Value to set\n       *  @memberof DataTable#oApi\n       */\n      function _fnSetCellData (settings, rowIdx, colIdx, val) {\n        var col = settings.aoColumns[colIdx]\n        var rowData = settings.aoData[rowIdx]._aData\n\n        col.fnSetData(rowData, val, {\n          settings: settings,\n          row: rowIdx,\n          col: colIdx\n        })\n      }\n\n      // Private variable that is used to match action syntax in the data property object\n      var __reArray = /\\[.*?\\]$/\n      var __reFn = /\\(\\)$/\n\n      /**\n       * Split string on periods, taking into account escaped periods\n       * @param  {string} str String to split\n       * @return {array} Split string\n       */\n      function _fnSplitObjNotation (str) {\n        return $.map(str.match(/(\\\\.|[^\\.])+/g), function (s) {\n          return s.replace(/\\\\./g, '.')\n        })\n      }\n\n      /**\n       * Return a function that can be used to get data from a source object, taking\n       * into account the ability to use nested objects as a source\n       *  @param {string|int|function} mSource The data source for the object\n       *  @returns {function} Data get function\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetObjectDataFn (mSource) {\n        if ($.isPlainObject(mSource)) {\n          /* Build an object of get functions, and wrap them in a single call */\n          var o = {}\n          $.each(mSource, function (key, val) {\n            if (val) {\n              o[key] = _fnGetObjectDataFn(val)\n            }\n          })\n\n          return function (data, type, row, meta) {\n            var t = o[type] || o._\n            return t !== undefined ? t(data, type, row, meta) : data\n          }\n        } else if (mSource === null) {\n          /* Give an empty string for rendering / sorting etc */\n          return function (data) {\n            // type, row and meta also passed, but not used\n            return data\n          }\n        } else if (typeof mSource === 'function') {\n          return function (data, type, row, meta) {\n            return mSource(data, type, row, meta)\n          }\n        } else if (\n          typeof mSource === 'string' &&\n          (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)\n        ) {\n          /* If there is a . in the source string then the data source is in a\n           * nested object so we loop over the data for each level to get the next\n           * level down. On each loop we test for undefined, and if found immediately\n           * return. This allows entire objects to be missing and sDefaultContent to\n           * be used if defined, rather than throwing an error\n           */\n          var fetchData = function (data, type, src) {\n            var arrayNotation, funcNotation, out, innerSrc\n\n            if (src !== '') {\n              var a = _fnSplitObjNotation(src)\n\n              for (var i = 0, iLen = a.length; i < iLen; i++) {\n                // Check if we are dealing with special notation\n                arrayNotation = a[i].match(__reArray)\n                funcNotation = a[i].match(__reFn)\n\n                if (arrayNotation) {\n                  // Array notation\n                  a[i] = a[i].replace(__reArray, '')\n\n                  // Condition allows simply [] to be passed in\n                  if (a[i] !== '') {\n                    data = data[a[i]]\n                  }\n                  out = []\n\n                  // Get the remainder of the nested object to get\n                  a.splice(0, i + 1)\n                  innerSrc = a.join('.')\n\n                  // Traverse each entry in the array getting the properties requested\n                  for (var j = 0, jLen = data.length; j < jLen; j++) {\n                    out.push(fetchData(data[j], type, innerSrc))\n                  }\n\n                  // If a string is given in between the array notation indicators, that\n                  // is used to join the strings together, otherwise an array is returned\n                  var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1)\n                  data = join === '' ? out : out.join(join)\n\n                  // The inner call to fetchData has already traversed through the remainder\n                  // of the source requested, so we exit from the loop\n                  break\n                } else if (funcNotation) {\n                  // Function call\n                  a[i] = a[i].replace(__reFn, '')\n                  data = data[a[i]]()\n                  continue\n                }\n\n                if (data === null || data[a[i]] === undefined) {\n                  return undefined\n                }\n                data = data[a[i]]\n              }\n            }\n\n            return data\n          }\n\n          return function (data, type) {\n            // row and meta also passed, but not used\n            return fetchData(data, type, mSource)\n          }\n        } else {\n          /* Array or flat object mapping */\n          return function (data, type) {\n            // row and meta also passed, but not used\n            return data[mSource]\n          }\n        }\n      }\n\n      /**\n       * Return a function that can be used to set data from a source object, taking\n       * into account the ability to use nested objects as a source\n       *  @param {string|int|function} mSource The data source for the object\n       *  @returns {function} Data set function\n       *  @memberof DataTable#oApi\n       */\n      function _fnSetObjectDataFn (mSource) {\n        if ($.isPlainObject(mSource)) {\n          /* Unlike get, only the underscore (global) option is used for for\n           * setting data since we don't know the type here. This is why an object\n           * option is not documented for `mData` (which is read/write), but it is\n           * for `mRender` which is read only.\n           */\n          return _fnSetObjectDataFn(mSource._)\n        } else if (mSource === null) {\n          /* Nothing to do when the data source is null */\n          return function () {}\n        } else if (typeof mSource === 'function') {\n          return function (data, val, meta) {\n            mSource(data, 'set', val, meta)\n          }\n        } else if (\n          typeof mSource === 'string' &&\n          (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)\n        ) {\n          /* Like the get, we need to get data from a nested object */\n          var setData = function (data, val, src) {\n            var a = _fnSplitObjNotation(src),\n              b\n            var aLast = a[a.length - 1]\n            var arrayNotation, funcNotation, o, innerSrc\n\n            for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n              // Check if we are dealing with an array notation request\n              arrayNotation = a[i].match(__reArray)\n              funcNotation = a[i].match(__reFn)\n\n              if (arrayNotation) {\n                a[i] = a[i].replace(__reArray, '')\n                data[a[i]] = []\n\n                // Get the remainder of the nested object to set so we can recurse\n                b = a.slice()\n                b.splice(0, i + 1)\n                innerSrc = b.join('.')\n\n                // Traverse each entry in the array setting the properties requested\n                for (var j = 0, jLen = val.length; j < jLen; j++) {\n                  o = {}\n                  setData(o, val[j], innerSrc)\n                  data[a[i]].push(o)\n                }\n\n                // The inner call to setData has already traversed through the remainder\n                // of the source and has set the data, thus we can exit here\n                return\n              } else if (funcNotation) {\n                // Function call\n                a[i] = a[i].replace(__reFn, '')\n                data = data[a[i]](val)\n              }\n\n              // If the nested object doesn't currently exist - since we are\n              // trying to set the value - create it\n              if (data[a[i]] === null || data[a[i]] === undefined) {\n                data[a[i]] = {}\n              }\n              data = data[a[i]]\n            }\n\n            // Last item in the input - i.e, the actual set\n            if (aLast.match(__reFn)) {\n              // Function call\n              data = data[aLast.replace(__reFn, '')](val)\n            } else {\n              // If array notation is used, we just want to strip it and use the property name\n              // and assign the value. If it isn't used, then we get the result we want anyway\n              data[aLast.replace(__reArray, '')] = val\n            }\n          }\n\n          return function (data, val) {\n            // meta is also passed in, but not used\n            return setData(data, val, mSource)\n          }\n        } else {\n          /* Array or flat object mapping */\n          return function (data, val) {\n            // meta is also passed in, but not used\n            data[mSource] = val\n          }\n        }\n      }\n\n      /**\n       * Return an array with the full table data\n       *  @param {object} oSettings dataTables settings object\n       *  @returns array {array} aData Master data array\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetDataMaster (settings) {\n        return _pluck(settings.aoData, '_aData')\n      }\n\n      /**\n       * Nuke the table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnClearTable (settings) {\n        settings.aoData.length = 0\n        settings.aiDisplayMaster.length = 0\n        settings.aiDisplay.length = 0\n      }\n\n      /**\n       * Take an array of integers (index array) and remove a target integer (value - not\n       * the key!)\n       *  @param {array} a Index array to target\n       *  @param {int} iTarget value to find\n       *  @memberof DataTable#oApi\n       */\n      function _fnDeleteIndex (a, iTarget, splice) {\n        var iTargetIndex = -1\n\n        for (var i = 0, iLen = a.length; i < iLen; i++) {\n          if (a[i] == iTarget) {\n            iTargetIndex = i\n          } else if (a[i] > iTarget) {\n            a[i]--\n          }\n        }\n\n        if (iTargetIndex != -1 && splice === undefined) {\n          a.splice(iTargetIndex, 1)\n        }\n      }\n\n      /**\n       * Mark cached data as invalid such that a re-read of the data will occur when\n       * the cached data is next requested. Also update from the data source object.\n       *\n       * @param {object} settings DataTables settings object\n       * @param  {int}    rowIdx   Row index to invalidate\n       * @memberof DataTable#oApi\n       *\n       * @todo For the modularisation of v1.11 this will need to become a callback, so\n       *   the sort and filter methods can subscribe to it. That will required\n       *   initialisation options for sorting, which is why it is not already baked in\n       */\n      function _fnInvalidateRow (settings, rowIdx, src, column) {\n        var row = settings.aoData[rowIdx]\n        var i, ien\n\n        // Are we reading last data from DOM or the data object?\n        if (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {\n          // Read the data from the DOM\n          row._aData = _fnGetRowElements(settings, row).data\n        } else {\n          // Reading from data object, update the DOM\n          var cells = row.anCells\n          var cell\n\n          if (cells) {\n            for (i = 0, ien = cells.length; i < ien; i++) {\n              cell = cells[i]\n\n              // This is very frustrating, but in IE if you just write directly\n              // to innerHTML, and elements that are overwritten are GC'ed,\n              // even if there is a reference to them elsewhere\n              while (cell.childNodes.length) {\n                cell.removeChild(cell.firstChild)\n              }\n\n              cells[i].innerHTML = _fnGetCellData(settings, rowIdx, i, 'display')\n            }\n          }\n        }\n\n        row._aSortData = null\n        row._aFilterData = null\n\n        // Invalidate the type for a specific column (if given) or all columns since\n        // the data might have changed\n        var cols = settings.aoColumns\n        if (column !== undefined) {\n          cols[column].sType = null\n        } else {\n          for (i = 0, ien = cols.length; i < ien; i++) {\n            cols[i].sType = null\n          }\n        }\n\n        // Update DataTables special `DT_*` attributes for the row\n        _fnRowAttributes(row)\n      }\n\n      /**\n       * Build a data source object from an HTML row, reading the contents of the\n       * cells that are in the row.\n       *\n       * @param {object} settings DataTables settings object\n       * @param {node|object} TR element from which to read data or existing row\n       *   object from which to re-read the data from the cells\n       * @returns {object} Object with two parameters: `data` the data read, in\n       *   document order, and `cells` and array of nodes (they can be useful to the\n       *   caller, so rather than needing a second traversal to get them, just return\n       *   them from here).\n       * @memberof DataTable#oApi\n       */\n      function _fnGetRowElements (settings, row) {\n        var d = [],\n          tds = [],\n          td = row.firstChild,\n          name,\n          col,\n          o,\n          i = 0,\n          contents,\n          columns = settings.aoColumns\n\n        var attr = function (str, data, td) {\n          if (typeof str === 'string') {\n            var idx = str.indexOf('@')\n\n            if (idx !== -1) {\n              var src = str.substring(idx + 1)\n              o['@' + src] = td.getAttribute(src)\n            }\n          }\n        }\n\n        var cellProcess = function (cell) {\n          col = columns[i]\n          contents = $.trim(cell.innerHTML)\n\n          if (col && col._bAttrSrc) {\n            o = {\n              display: contents\n            }\n\n            attr(col.mData.sort, o, cell)\n            attr(col.mData.type, o, cell)\n            attr(col.mData.filter, o, cell)\n\n            d.push(o)\n          } else {\n            d.push(contents)\n          }\n\n          i++\n        }\n\n        if (td) {\n          // `tr` element passed in\n          while (td) {\n            name = td.nodeName.toUpperCase()\n\n            if (name == 'TD' || name == 'TH') {\n              cellProcess(td)\n              tds.push(td)\n            }\n\n            td = td.nextSibling\n          }\n        } else {\n          // Existing row object passed in\n          tds = row.anCells\n\n          for (var j = 0, jen = tds.length; j < jen; j++) {\n            cellProcess(tds[j])\n          }\n        }\n\n        return {\n          data: d,\n          cells: tds\n        }\n      }\n      /**\n       * Create a new TR element (and it's TD children) for a row\n       *  @param {object} oSettings dataTables settings object\n       *  @param {int} iRow Row to consider\n       *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n       *    DataTables will create a row automatically\n       *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n       *    if nTr is.\n       *  @memberof DataTable#oApi\n       */\n      function _fnCreateTr (oSettings, iRow, nTrIn, anTds) {\n        var row = oSettings.aoData[iRow],\n          rowData = row._aData,\n          cells = [],\n          nTr,\n          nTd,\n          oCol,\n          i,\n          iLen\n\n        if (row.nTr === null) {\n          nTr = nTrIn || document.createElement('tr')\n\n          row.nTr = nTr\n          row.anCells = cells\n\n          /* Use a private property on the node to allow reserve mapping from the node\n           * to the aoData array for fast look up\n           */\n          nTr._DT_RowIndex = iRow\n\n          /* Special parameters can be given by the data source to be used on the row */\n          _fnRowAttributes(row)\n\n          /* Process each column */\n          for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n            oCol = oSettings.aoColumns[i]\n\n            nTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType)\n            cells.push(nTd)\n\n            // Need to create the HTML if new, or if a rendering function is defined\n            if (!nTrIn || oCol.mRender || oCol.mData !== i) {\n              nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display')\n            }\n\n            /* Add user defined class */\n            if (oCol.sClass) {\n              nTd.className += ' ' + oCol.sClass\n            }\n\n            // Visibility - add or remove as required\n            if (oCol.bVisible && !nTrIn) {\n              nTr.appendChild(nTd)\n            } else if (!oCol.bVisible && nTrIn) {\n              nTd.parentNode.removeChild(nTd)\n            }\n\n            if (oCol.fnCreatedCell) {\n              oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i)\n            }\n          }\n\n          _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow])\n        }\n\n        // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n        // and deployed\n        row.nTr.setAttribute('role', 'row')\n      }\n\n      /**\n       * Add attributes to a row based on the special `DT_*` parameters in a data\n       * source object.\n       *  @param {object} DataTables row object for the row to be modified\n       *  @memberof DataTable#oApi\n       */\n      function _fnRowAttributes (row) {\n        var tr = row.nTr\n        var data = row._aData\n\n        if (tr) {\n          if (data.DT_RowId) {\n            tr.id = data.DT_RowId\n          }\n\n          if (data.DT_RowClass) {\n            // Remove any classes added by DT_RowClass before\n            var a = data.DT_RowClass.split(' ')\n            row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a\n\n            $(tr)\n              .removeClass(row.__rowc.join(' '))\n              .addClass(data.DT_RowClass)\n          }\n\n          if (data.DT_RowData) {\n            $(tr).data(data.DT_RowData)\n          }\n        }\n      }\n\n      /**\n       * Create the HTML header for the table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnBuildHead (oSettings) {\n        var i, ien, cell, row, column\n        var thead = oSettings.nTHead\n        var tfoot = oSettings.nTFoot\n        var createHeader = $('th, td', thead).length === 0\n        var classes = oSettings.oClasses\n        var columns = oSettings.aoColumns\n\n        if (createHeader) {\n          row = $('<tr/>').appendTo(thead)\n        }\n\n        for (i = 0, ien = columns.length; i < ien; i++) {\n          column = columns[i]\n          cell = $(column.nTh).addClass(column.sClass)\n\n          if (createHeader) {\n            cell.appendTo(row)\n          }\n\n          // 1.11 move into sorting\n          if (oSettings.oFeatures.bSort) {\n            cell.addClass(column.sSortingClass)\n\n            if (column.bSortable !== false) {\n              cell.attr('tabindex', oSettings.iTabIndex).attr('aria-controls', oSettings.sTableId)\n\n              _fnSortAttachListener(oSettings, column.nTh, i)\n            }\n          }\n\n          if (column.sTitle != cell.html()) {\n            cell.html(column.sTitle)\n          }\n\n          _fnRenderer(oSettings, 'header')(oSettings, cell, column, classes)\n        }\n\n        if (createHeader) {\n          _fnDetectHeader(oSettings.aoHeader, thead)\n        }\n\n        /* ARIA role for the rows */\n        $(thead)\n          .find('>tr')\n          .attr('role', 'row')\n\n        /* Deal with the footer - add classes if required */\n        $(thead)\n          .find('>tr>th, >tr>td')\n          .addClass(classes.sHeaderTH)\n        $(tfoot)\n          .find('>tr>th, >tr>td')\n          .addClass(classes.sFooterTH)\n\n        // Cache the footer cells. Note that we only take the cells from the first\n        // row in the footer. If there is more than one row the user wants to\n        // interact with, they need to use the table().foot() method. Note also this\n        // allows cells to be used for multiple columns using colspan\n        if (tfoot !== null) {\n          var cells = oSettings.aoFooter[0]\n\n          for (i = 0, ien = cells.length; i < ien; i++) {\n            column = columns[i]\n            column.nTf = cells[i].cell\n\n            if (column.sClass) {\n              $(column.nTf).addClass(column.sClass)\n            }\n          }\n        }\n      }\n\n      /**\n       * Draw the header (or footer) element based on the column visibility states. The\n       * methodology here is to use the layout array from _fnDetectHeader, modified for\n       * the instantaneous column visibility, to construct the new layout. The grid is\n       * traversed over cell at a time in a rows x columns grid fashion, although each\n       * cell insert can cover multiple elements in the grid - which is tracks using the\n       * aApplied array. Cell inserts in the grid will only occur where there isn't\n       * already a cell in that position.\n       *  @param {object} oSettings dataTables settings object\n       *  @param array {objects} aoSource Layout array from _fnDetectHeader\n       *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n       *  @memberof DataTable#oApi\n       */\n      function _fnDrawHead (oSettings, aoSource, bIncludeHidden) {\n        var i, iLen, j, jLen, k, kLen, n, nLocalTr\n        var aoLocal = []\n        var aApplied = []\n        var iColumns = oSettings.aoColumns.length\n        var iRowspan, iColspan\n\n        if (!aoSource) {\n          return\n        }\n\n        if (bIncludeHidden === undefined) {\n          bIncludeHidden = false\n        }\n\n        /* Make a copy of the master layout array, but without the visible columns in it */\n        for (i = 0, iLen = aoSource.length; i < iLen; i++) {\n          aoLocal[i] = aoSource[i].slice()\n          aoLocal[i].nTr = aoSource[i].nTr\n\n          /* Remove any columns which are currently hidden */\n          for (j = iColumns - 1; j >= 0; j--) {\n            if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n              aoLocal[i].splice(j, 1)\n            }\n          }\n\n          /* Prep the applied array - it needs an element for each row */\n          aApplied.push([])\n        }\n\n        for (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n          nLocalTr = aoLocal[i].nTr\n\n          /* All cells are going to be replaced, so empty out the row */\n          if (nLocalTr) {\n            while ((n = nLocalTr.firstChild)) {\n              nLocalTr.removeChild(n)\n            }\n          }\n\n          for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n            iRowspan = 1\n            iColspan = 1\n\n            /* Check to see if there is already a cell (row/colspan) covering our target\n             * insert point. If there is, then there is nothing to do.\n             */\n            if (aApplied[i][j] === undefined) {\n              nLocalTr.appendChild(aoLocal[i][j].cell)\n              aApplied[i][j] = 1\n\n              /* Expand the cell to cover as many rows as needed */\n              while (aoLocal[i + iRowspan] !== undefined && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n                aApplied[i + iRowspan][j] = 1\n                iRowspan++\n              }\n\n              /* Expand the cell to cover as many columns as needed */\n              while (aoLocal[i][j + iColspan] !== undefined && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n                /* Must update the applied array over the rows for the columns */\n                for (k = 0; k < iRowspan; k++) {\n                  aApplied[i + k][j + iColspan] = 1\n                }\n                iColspan++\n              }\n\n              /* Do the actual expansion in the DOM */\n              $(aoLocal[i][j].cell)\n                .attr('rowspan', iRowspan)\n                .attr('colspan', iColspan)\n            }\n          }\n        }\n      }\n\n      /**\n       * Insert the required TR nodes into the table for display\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnDraw (oSettings) {\n        /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n        var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings])\n        if ($.inArray(false, aPreDraw) !== -1) {\n          _fnProcessingDisplay(oSettings, false)\n          return\n        }\n\n        var i, iLen, n\n        var anRows = []\n        var iRowCount = 0\n        var asStripeClasses = oSettings.asStripeClasses\n        var iStripes = asStripeClasses.length\n        var iOpenRows = oSettings.aoOpenRows.length\n        var oLang = oSettings.oLanguage\n        var iInitDisplayStart = oSettings.iInitDisplayStart\n        var bServerSide = _fnDataSource(oSettings) == 'ssp'\n        var aiDisplay = oSettings.aiDisplay\n\n        oSettings.bDrawing = true\n\n        /* Check and see if we have an initial draw position from state saving */\n        if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n          oSettings._iDisplayStart = bServerSide\n            ? iInitDisplayStart\n            : iInitDisplayStart >= oSettings.fnRecordsDisplay()\n            ? 0\n            : iInitDisplayStart\n\n          oSettings.iInitDisplayStart = -1\n        }\n\n        var iDisplayStart = oSettings._iDisplayStart\n        var iDisplayEnd = oSettings.fnDisplayEnd()\n\n        /* Server-side processing draw intercept */\n        if (oSettings.bDeferLoading) {\n          oSettings.bDeferLoading = false\n          oSettings.iDraw++\n          _fnProcessingDisplay(oSettings, false)\n        } else if (!bServerSide) {\n          oSettings.iDraw++\n        } else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {\n          return\n        }\n\n        if (aiDisplay.length !== 0) {\n          var iStart = bServerSide ? 0 : iDisplayStart\n          var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd\n\n          for (var j = iStart; j < iEnd; j++) {\n            var iDataIndex = aiDisplay[j]\n            var aoData = oSettings.aoData[iDataIndex]\n            if (aoData.nTr === null) {\n              _fnCreateTr(oSettings, iDataIndex)\n            }\n\n            var nRow = aoData.nTr\n\n            /* Remove the old striping classes and then add the new one */\n            if (iStripes !== 0) {\n              var sStripe = asStripeClasses[iRowCount % iStripes]\n              if (aoData._sRowStripe != sStripe) {\n                $(nRow)\n                  .removeClass(aoData._sRowStripe)\n                  .addClass(sStripe)\n                aoData._sRowStripe = sStripe\n              }\n            }\n\n            /* Row callback functions - might want to manipulate the row */\n            _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j])\n\n            anRows.push(nRow)\n            iRowCount++\n          }\n        } else {\n          /* Table is empty - create a row with an empty message in it */\n          var sZero = oLang.sZeroRecords\n          if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n            sZero = oLang.sLoadingRecords\n          } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n            sZero = oLang.sEmptyTable\n          }\n\n          anRows[0] = $('<tr/>', { class: iStripes ? asStripeClasses[0] : '' }).append(\n            $('<td />', {\n              valign: 'top',\n              colSpan: _fnVisbleColumns(oSettings),\n              class: oSettings.oClasses.sRowEmpty\n            }).html(sZero)\n          )[0]\n        }\n\n        /* Header and footer callbacks */\n        _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [\n          $(oSettings.nTHead).children('tr')[0],\n          _fnGetDataMaster(oSettings),\n          iDisplayStart,\n          iDisplayEnd,\n          aiDisplay\n        ])\n\n        _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [\n          $(oSettings.nTFoot).children('tr')[0],\n          _fnGetDataMaster(oSettings),\n          iDisplayStart,\n          iDisplayEnd,\n          aiDisplay\n        ])\n\n        var body = $(oSettings.nTBody)\n\n        body.children().detach()\n        body.append($(anRows))\n\n        /* Call all required callback functions for the end of a draw */\n        _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings])\n\n        /* Draw is complete, sorting and filtering must be as well */\n        oSettings.bSorted = false\n        oSettings.bFiltered = false\n        oSettings.bDrawing = false\n      }\n\n      /**\n       * Redraw the table - taking account of the various features which are enabled\n       *  @param {object} oSettings dataTables settings object\n       *  @param {boolean} [holdPosition] Keep the current paging position. By default\n       *    the paging is reset to the first page\n       *  @memberof DataTable#oApi\n       */\n      function _fnReDraw (settings, holdPosition) {\n        var features = settings.oFeatures,\n          sort = features.bSort,\n          filter = features.bFilter\n\n        if (sort) {\n          _fnSort(settings)\n        }\n\n        if (filter) {\n          _fnFilterComplete(settings, settings.oPreviousSearch)\n        } else {\n          // No filtering, so we want to just use the display master\n          settings.aiDisplay = settings.aiDisplayMaster.slice()\n        }\n\n        if (holdPosition !== true) {\n          settings._iDisplayStart = 0\n        }\n\n        // Let any modules know about the draw hold position state (used by\n        // scrolling internally)\n        settings._drawHold = holdPosition\n\n        _fnDraw(settings)\n\n        settings._drawHold = false\n      }\n\n      /**\n       * Add the options to the page HTML for the table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnAddOptionsHtml (oSettings) {\n        var classes = oSettings.oClasses\n        var table = $(oSettings.nTable)\n        var holding = $('<div/>').insertBefore(table) // Holding element for speed\n        var features = oSettings.oFeatures\n\n        // All DataTables are wrapped in a div\n        var insert = $('<div/>', {\n          id: oSettings.sTableId + '_wrapper',\n          class: classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n        })\n\n        oSettings.nHolding = holding[0]\n        oSettings.nTableWrapper = insert[0]\n        oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling\n\n        /* Loop over the user set positioning and place the elements as needed */\n        var aDom = oSettings.sDom.split('')\n        var featureNode, cOption, nNewNode, cNext, sAttr, j\n        for (var i = 0; i < aDom.length; i++) {\n          featureNode = null\n          cOption = aDom[i]\n\n          if (cOption == '<') {\n            /* New container div */\n            nNewNode = $('<div/>')[0]\n\n            /* Check to see if we should append an id and/or a class name to the container */\n            cNext = aDom[i + 1]\n            if (cNext == \"'\" || cNext == '\"') {\n              sAttr = ''\n              j = 2\n              while (aDom[i + j] != cNext) {\n                sAttr += aDom[i + j]\n                j++\n              }\n\n              /* Replace jQuery UI constants @todo depreciated */\n              if (sAttr == 'H') {\n                sAttr = classes.sJUIHeader\n              } else if (sAttr == 'F') {\n                sAttr = classes.sJUIFooter\n              }\n\n              /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n               * breaks the string into parts and applies them as needed\n               */\n              if (sAttr.indexOf('.') != -1) {\n                var aSplit = sAttr.split('.')\n                nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1)\n                nNewNode.className = aSplit[1]\n              } else if (sAttr.charAt(0) == '#') {\n                nNewNode.id = sAttr.substr(1, sAttr.length - 1)\n              } else {\n                nNewNode.className = sAttr\n              }\n\n              i += j /* Move along the position array */\n            }\n\n            insert.append(nNewNode)\n            insert = $(nNewNode)\n          } else if (cOption == '>') {\n            /* End container div */\n            insert = insert.parent()\n          }\n          // @todo Move options into their own plugins?\n          else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n            /* Length */\n            featureNode = _fnFeatureHtmlLength(oSettings)\n          } else if (cOption == 'f' && features.bFilter) {\n            /* Filter */\n            featureNode = _fnFeatureHtmlFilter(oSettings)\n          } else if (cOption == 'r' && features.bProcessing) {\n            /* pRocessing */\n            featureNode = _fnFeatureHtmlProcessing(oSettings)\n          } else if (cOption == 't') {\n            /* Table */\n            featureNode = _fnFeatureHtmlTable(oSettings)\n          } else if (cOption == 'i' && features.bInfo) {\n            /* Info */\n            featureNode = _fnFeatureHtmlInfo(oSettings)\n          } else if (cOption == 'p' && features.bPaginate) {\n            /* Pagination */\n            featureNode = _fnFeatureHtmlPaginate(oSettings)\n          } else if (DataTable.ext.feature.length !== 0) {\n            /* Plug-in features */\n            var aoFeatures = DataTable.ext.feature\n            for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n              if (cOption == aoFeatures[k].cFeature) {\n                featureNode = aoFeatures[k].fnInit(oSettings)\n                break\n              }\n            }\n          }\n\n          /* Add to the 2D features array */\n          if (featureNode) {\n            var aanFeatures = oSettings.aanFeatures\n\n            if (!aanFeatures[cOption]) {\n              aanFeatures[cOption] = []\n            }\n\n            aanFeatures[cOption].push(featureNode)\n            insert.append(featureNode)\n          }\n        }\n\n        /* Built our DOM structure - replace the holding div with what we want */\n        holding.replaceWith(insert)\n      }\n\n      /**\n       * Use the DOM source to create up an array of header cells. The idea here is to\n       * create a layout grid (array) of rows x columns, which contains a reference\n       * to the cell that that point in the grid (regardless of col/rowspan), such that\n       * any column / row could be removed and the new grid constructed\n       *  @param array {object} aLayout Array to store the calculated layout in\n       *  @param {node} nThead The header/footer element for the table\n       *  @memberof DataTable#oApi\n       */\n      function _fnDetectHeader (aLayout, nThead) {\n        var nTrs = $(nThead).children('tr')\n        var nTr, nCell\n        var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan\n        var bUnique\n        var fnShiftCol = function (a, i, j) {\n          var k = a[i]\n          while (k[j]) {\n            j++\n          }\n          return j\n        }\n\n        aLayout.splice(0, aLayout.length)\n\n        /* We know how many rows there are in the layout - so prep it */\n        for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n          aLayout.push([])\n        }\n\n        /* Calculate a layout array */\n        for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n          nTr = nTrs[i]\n          iColumn = 0\n\n          /* For every cell in the row... */\n          nCell = nTr.firstChild\n          while (nCell) {\n            if (nCell.nodeName.toUpperCase() == 'TD' || nCell.nodeName.toUpperCase() == 'TH') {\n              /* Get the col and rowspan attributes from the DOM and sanitise them */\n              iColspan = nCell.getAttribute('colspan') * 1\n              iRowspan = nCell.getAttribute('rowspan') * 1\n              iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan\n              iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan\n\n              /* There might be colspan cells already in this row, so shift our target\n               * accordingly\n               */\n              iColShifted = fnShiftCol(aLayout, i, iColumn)\n\n              /* Cache calculation for unique columns */\n              bUnique = iColspan === 1 ? true : false\n\n              /* If there is col / rowspan, copy the information into the layout grid */\n              for (l = 0; l < iColspan; l++) {\n                for (k = 0; k < iRowspan; k++) {\n                  aLayout[i + k][iColShifted + l] = {\n                    cell: nCell,\n                    unique: bUnique\n                  }\n                  aLayout[i + k].nTr = nTr\n                }\n              }\n            }\n            nCell = nCell.nextSibling\n          }\n        }\n      }\n\n      /**\n       * Get an array of unique th elements, one for each column\n       *  @param {object} oSettings dataTables settings object\n       *  @param {node} nHeader automatically detect the layout from this node - optional\n       *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n       *  @returns array {node} aReturn list of unique th's\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetUniqueThs (oSettings, nHeader, aLayout) {\n        var aReturn = []\n        if (!aLayout) {\n          aLayout = oSettings.aoHeader\n          if (nHeader) {\n            aLayout = []\n            _fnDetectHeader(aLayout, nHeader)\n          }\n        }\n\n        for (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n          for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n            if (aLayout[i][j].unique && (!aReturn[j] || !oSettings.bSortCellsTop)) {\n              aReturn[j] = aLayout[i][j].cell\n            }\n          }\n        }\n\n        return aReturn\n      }\n\n      /**\n       * Create an Ajax call based on the table's settings, taking into account that\n       * parameters can have multiple forms, and backwards compatibility.\n       *\n       * @param {object} oSettings dataTables settings object\n       * @param {array} data Data to send to the server, required by\n       *     DataTables - may be augmented by developer callbacks\n       * @param {function} fn Callback function to run when data is obtained\n       */\n      function _fnBuildAjax (oSettings, data, fn) {\n        // Compatibility with 1.9-, allow fnServerData and event to manipulate\n        _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data])\n\n        // Convert to object based for 1.10+ if using the old array scheme which can\n        // come from server-side processing or serverParams\n        if (data && $.isArray(data)) {\n          var tmp = {}\n          var rbracket = /(.*?)\\[\\]$/\n\n          $.each(data, function (key, val) {\n            var match = val.name.match(rbracket)\n\n            if (match) {\n              // Support for arrays\n              var name = match[0]\n\n              if (!tmp[name]) {\n                tmp[name] = []\n              }\n              tmp[name].push(val.value)\n            } else {\n              tmp[val.name] = val.value\n            }\n          })\n          data = tmp\n        }\n\n        var ajaxData\n        var ajax = oSettings.ajax\n        var instance = oSettings.oInstance\n\n        if ($.isPlainObject(ajax) && ajax.data) {\n          ajaxData = ajax.data\n\n          var newData = $.isFunction(ajaxData)\n            ? ajaxData(data) // fn can manipulate data or return an object\n            : ajaxData // object or array to merge\n\n          // If the function returned an object, use that alone\n          data = $.isFunction(ajaxData) && newData ? newData : $.extend(true, data, newData)\n\n          // Remove the data property as we've resolved it already and don't want\n          // jQuery to do it again (it is restored at the end of the function)\n          delete ajax.data\n        }\n\n        var baseAjax = {\n          data: data,\n          success: function (json) {\n            var error = json.error || json.sError\n            if (error) {\n              oSettings.oApi._fnLog(oSettings, 0, error)\n            }\n\n            oSettings.json = json\n            _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json])\n            fn(json)\n          },\n          dataType: 'json',\n          cache: false,\n          type: oSettings.sServerMethod,\n          error: function (xhr, error, thrown) {\n            var log = oSettings.oApi._fnLog\n\n            if (error == 'parsererror') {\n              log(oSettings, 0, 'Invalid JSON response', 1)\n            } else if (xhr.readyState === 4) {\n              log(oSettings, 0, 'Ajax error', 7)\n            }\n\n            _fnProcessingDisplay(oSettings, false)\n          }\n        }\n\n        // Store the data submitted for the API\n        oSettings.oAjaxData = data\n\n        // Allow plug-ins and external processes to modify the data\n        _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data])\n\n        if (oSettings.fnServerData) {\n          // DataTables 1.9- compatibility\n          oSettings.fnServerData.call(\n            instance,\n            oSettings.sAjaxSource,\n            $.map(data, function (val, key) {\n              // Need to convert back to 1.9 trad format\n              return { name: key, value: val }\n            }),\n            fn,\n            oSettings\n          )\n        } else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n          // DataTables 1.9- compatibility\n          oSettings.jqXHR = $.ajax(\n            $.extend(baseAjax, {\n              url: ajax || oSettings.sAjaxSource\n            })\n          )\n        } else if ($.isFunction(ajax)) {\n          // Is a function - let the caller define what needs to be done\n          oSettings.jqXHR = ajax.call(instance, data, fn, oSettings)\n        } else {\n          // Object to extend the base settings\n          oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax))\n\n          // Restore for next time around\n          ajax.data = ajaxData\n        }\n      }\n\n      /**\n       * Update the table using an Ajax call\n       *  @param {object} settings dataTables settings object\n       *  @returns {boolean} Block the table drawing or not\n       *  @memberof DataTable#oApi\n       */\n      function _fnAjaxUpdate (settings) {\n        if (settings.bAjaxDataGet) {\n          settings.iDraw++\n          _fnProcessingDisplay(settings, true)\n\n          _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n            _fnAjaxUpdateDraw(settings, json)\n          })\n\n          return false\n        }\n        return true\n      }\n\n      /**\n       * Build up the parameters in an object needed for a server-side processing\n       * request. Note that this is basically done twice, is different ways - a modern\n       * method which is used by default in DataTables 1.10 which uses objects and\n       * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n       * the sAjaxSource option is used in the initialisation, or the legacyAjax\n       * option is set.\n       *  @param {object} oSettings dataTables settings object\n       *  @returns {bool} block the table drawing or not\n       *  @memberof DataTable#oApi\n       */\n      function _fnAjaxParameters (settings) {\n        var columns = settings.aoColumns,\n          columnCount = columns.length,\n          features = settings.oFeatures,\n          preSearch = settings.oPreviousSearch,\n          preColSearch = settings.aoPreSearchCols,\n          i,\n          data = [],\n          dataProp,\n          column,\n          columnSearch,\n          sort = _fnSortFlatten(settings),\n          displayStart = settings._iDisplayStart,\n          displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1\n\n        var param = function (name, value) {\n          data.push({ name: name, value: value })\n        }\n\n        // DataTables 1.9- compatible method\n        param('sEcho', settings.iDraw)\n        param('iColumns', columnCount)\n        param('sColumns', _pluck(columns, 'sName').join(','))\n        param('iDisplayStart', displayStart)\n        param('iDisplayLength', displayLength)\n\n        // DataTables 1.10+ method\n        var d = {\n          draw: settings.iDraw,\n          columns: [],\n          order: [],\n          start: displayStart,\n          length: displayLength,\n          search: {\n            value: preSearch.sSearch,\n            regex: preSearch.bRegex\n          }\n        }\n\n        for (i = 0; i < columnCount; i++) {\n          column = columns[i]\n          columnSearch = preColSearch[i]\n          dataProp = typeof column.mData == 'function' ? 'function' : column.mData\n\n          d.columns.push({\n            data: dataProp,\n            name: column.sName,\n            searchable: column.bSearchable,\n            orderable: column.bSortable,\n            search: {\n              value: columnSearch.sSearch,\n              regex: columnSearch.bRegex\n            }\n          })\n\n          param('mDataProp_' + i, dataProp)\n\n          if (features.bFilter) {\n            param('sSearch_' + i, columnSearch.sSearch)\n            param('bRegex_' + i, columnSearch.bRegex)\n            param('bSearchable_' + i, column.bSearchable)\n          }\n\n          if (features.bSort) {\n            param('bSortable_' + i, column.bSortable)\n          }\n        }\n\n        if (features.bFilter) {\n          param('sSearch', preSearch.sSearch)\n          param('bRegex', preSearch.bRegex)\n        }\n\n        if (features.bSort) {\n          $.each(sort, function (i, val) {\n            d.order.push({ column: val.col, dir: val.dir })\n\n            param('iSortCol_' + i, val.col)\n            param('sSortDir_' + i, val.dir)\n          })\n\n          param('iSortingCols', sort.length)\n        }\n\n        // If the legacy.ajax parameter is null, then we automatically decide which\n        // form to use, based on sAjaxSource\n        var legacy = DataTable.ext.legacy.ajax\n        if (legacy === null) {\n          return settings.sAjaxSource ? data : d\n        }\n\n        // Otherwise, if legacy has been specified then we use that to decide on the\n        // form\n        return legacy ? data : d\n      }\n\n      /**\n       * Data the data from the server (nuking the old) and redraw the table\n       *  @param {object} oSettings dataTables settings object\n       *  @param {object} json json data return from the server.\n       *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n       *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n       *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n       *  @param {array} json.aaData The data to display on this page\n       *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n       *  @memberof DataTable#oApi\n       */\n      function _fnAjaxUpdateDraw (settings, json) {\n        // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n        // Support both\n        var compat = function (old, modern) {\n          return json[old] !== undefined ? json[old] : json[modern]\n        }\n\n        var draw = compat('sEcho', 'draw')\n        var recordsTotal = compat('iTotalRecords', 'recordsTotal')\n        var rocordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered')\n\n        if (draw) {\n          // Protect against out of sequence returns\n          if (draw * 1 < settings.iDraw) {\n            return\n          }\n          settings.iDraw = draw * 1\n        }\n\n        _fnClearTable(settings)\n        settings._iRecordsTotal = parseInt(recordsTotal, 10)\n        settings._iRecordsDisplay = parseInt(rocordsFiltered, 10)\n\n        var data = _fnAjaxDataSrc(settings, json)\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          _fnAddData(settings, data[i])\n        }\n        settings.aiDisplay = settings.aiDisplayMaster.slice()\n\n        settings.bAjaxDataGet = false\n        _fnDraw(settings)\n\n        if (!settings._bInitComplete) {\n          _fnInitComplete(settings, json)\n        }\n\n        settings.bAjaxDataGet = true\n        _fnProcessingDisplay(settings, false)\n      }\n\n      /**\n       * Get the data from the JSON data source to use for drawing a table. Using\n       * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n       * source object, or from a processing function.\n       *  @param {object} oSettings dataTables settings object\n       *  @param  {object} json Data source object / array from the server\n       *  @return {array} Array of data to use\n       */\n      function _fnAjaxDataSrc (oSettings, json) {\n        var dataSrc =\n          $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined\n            ? oSettings.ajax.dataSrc\n            : oSettings.sAjaxDataProp // Compatibility with 1.9-.\n\n        // Compatibility with 1.9-. In order to read from aaData, check if the\n        // default has been changed, if not, check for aaData\n        if (dataSrc === 'data') {\n          return json.aaData || json[dataSrc]\n        }\n\n        return dataSrc !== '' ? _fnGetObjectDataFn(dataSrc)(json) : json\n      }\n\n      /**\n       * Generate the node required for filtering text\n       *  @returns {node} Filter control element\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlFilter (settings) {\n        var classes = settings.oClasses\n        var tableId = settings.sTableId\n        var language = settings.oLanguage\n        var previousSearch = settings.oPreviousSearch\n        var features = settings.aanFeatures\n        var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>'\n\n        var str = language.sSearch\n        str = str.match(/_INPUT_/) ? str.replace('_INPUT_', input) : str + input\n\n        var filter = $('<div/>', {\n          id: !features.f ? tableId + '_filter' : null,\n          class: classes.sFilter\n        }).append($('<label/>').append(str))\n\n        var searchFn = function () {\n          /* Update all other filter input elements for the new display */\n          var n = features.f\n          var val = !this.value ? '' : this.value // mental IE8 fix :-(\n\n          /* Now do the filter */\n          if (val != previousSearch.sSearch) {\n            _fnFilterComplete(settings, {\n              sSearch: val,\n              bRegex: previousSearch.bRegex,\n              bSmart: previousSearch.bSmart,\n              bCaseInsensitive: previousSearch.bCaseInsensitive\n            })\n\n            // Need to redraw, without resorting\n            settings._iDisplayStart = 0\n            _fnDraw(settings)\n          }\n        }\n        var jqFilter = $('input', filter)\n          .val(previousSearch.sSearch)\n          .attr('placeholder', language.sSearchPlaceholder)\n          .bind(\n            'keyup.DT search.DT input.DT paste.DT cut.DT',\n            _fnDataSource(settings) === 'ssp' ? _fnThrottle(searchFn, 400) : searchFn\n          )\n          .bind('keypress.DT', function (e) {\n            /* Prevent form submission */\n            if (e.keyCode == 13) {\n              return false\n            }\n          })\n          .attr('aria-controls', tableId)\n\n        // Update the input elements whenever the table is filtered\n        $(settings.nTable).on('search.dt.DT', function (ev, s) {\n          if (settings === s) {\n            // IE9 throws an 'unknown error' if document.activeElement is used\n            // inside an iframe or frame...\n            try {\n              if (jqFilter[0] !== document.activeElement) {\n                jqFilter.val(previousSearch.sSearch)\n              }\n            } catch (e) {}\n          }\n        })\n\n        return filter[0]\n      }\n\n      /**\n       * Filter the table using both the global filter and column based filtering\n       *  @param {object} oSettings dataTables settings object\n       *  @param {object} oSearch search information\n       *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n       *  @memberof DataTable#oApi\n       */\n      function _fnFilterComplete (oSettings, oInput, iForce) {\n        var oPrevSearch = oSettings.oPreviousSearch\n        var aoPrevSearch = oSettings.aoPreSearchCols\n        var fnSaveFilter = function (oFilter) {\n          /* Save the filtering values */\n          oPrevSearch.sSearch = oFilter.sSearch\n          oPrevSearch.bRegex = oFilter.bRegex\n          oPrevSearch.bSmart = oFilter.bSmart\n          oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive\n        }\n        var fnRegex = function (o) {\n          // Backwards compatibility with the bEscapeRegex option\n          return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex\n        }\n\n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo As per sort - can this be moved into an event handler?\n        _fnColumnTypes(oSettings)\n\n        /* In server-side processing all filtering is done by the server, so no point hanging around here */\n        if (_fnDataSource(oSettings) != 'ssp') {\n          /* Global filter */\n          _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive)\n          fnSaveFilter(oInput)\n\n          /* Now do the individual column filter */\n          for (var i = 0; i < aoPrevSearch.length; i++) {\n            _fnFilterColumn(\n              oSettings,\n              aoPrevSearch[i].sSearch,\n              i,\n              fnRegex(aoPrevSearch[i]),\n              aoPrevSearch[i].bSmart,\n              aoPrevSearch[i].bCaseInsensitive\n            )\n          }\n\n          /* Custom filtering */\n          _fnFilterCustom(oSettings)\n        } else {\n          fnSaveFilter(oInput)\n        }\n\n        /* Tell the draw function we have been filtering */\n        oSettings.bFiltered = true\n        _fnCallbackFire(oSettings, null, 'search', [oSettings])\n      }\n\n      /**\n       * Apply custom filtering functions\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnFilterCustom (settings) {\n        var filters = DataTable.ext.search\n        var displayRows = settings.aiDisplay\n        var row, rowIdx\n\n        for (var i = 0, ien = filters.length; i < ien; i++) {\n          var rows = []\n\n          // Loop over each row and see if it should be included\n          for (var j = 0, jen = displayRows.length; j < jen; j++) {\n            rowIdx = displayRows[j]\n            row = settings.aoData[rowIdx]\n\n            if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n              rows.push(rowIdx)\n            }\n          }\n\n          // So the array reference doesn't break set the results into the\n          // existing array\n          displayRows.length = 0\n          displayRows.push.apply(displayRows, rows)\n        }\n      }\n\n      /**\n       * Filter the table on a per-column basis\n       *  @param {object} oSettings dataTables settings object\n       *  @param {string} sInput string to filter on\n       *  @param {int} iColumn column to filter\n       *  @param {bool} bRegex treat search string as a regular expression or not\n       *  @param {bool} bSmart use smart filtering or not\n       *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n       *  @memberof DataTable#oApi\n       */\n      function _fnFilterColumn (settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n        if (searchStr === '') {\n          return\n        }\n\n        var data\n        var display = settings.aiDisplay\n        var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive)\n\n        for (var i = display.length - 1; i >= 0; i--) {\n          data = settings.aoData[display[i]]._aFilterData[colIdx]\n\n          if (!rpSearch.test(data)) {\n            display.splice(i, 1)\n          }\n        }\n      }\n\n      /**\n       * Filter the data table based on user input and draw the table\n       *  @param {object} settings dataTables settings object\n       *  @param {string} input string to filter on\n       *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n       *  @param {bool} regex treat as a regular expression or not\n       *  @param {bool} smart perform smart filtering or not\n       *  @param {bool} caseInsensitive Do case insenstive matching or not\n       *  @memberof DataTable#oApi\n       */\n      function _fnFilter (settings, input, force, regex, smart, caseInsensitive) {\n        var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive)\n        var prevSearch = settings.oPreviousSearch.sSearch\n        var displayMaster = settings.aiDisplayMaster\n        var display, invalidated, i\n\n        // Need to take account of custom filtering functions - always filter\n        if (DataTable.ext.search.length !== 0) {\n          force = true\n        }\n\n        // Check if any of the rows were invalidated\n        invalidated = _fnFilterData(settings)\n\n        // If the input is blank - we just want the full data set\n        if (input.length <= 0) {\n          settings.aiDisplay = displayMaster.slice()\n        } else {\n          // New search - start from the master array\n          if (\n            invalidated ||\n            force ||\n            prevSearch.length > input.length ||\n            input.indexOf(prevSearch) !== 0 ||\n            settings.bSorted // On resort, the display master needs to be\n            // re-filtered since indexes will have changed\n          ) {\n            settings.aiDisplay = displayMaster.slice()\n          }\n\n          // Search the display array\n          display = settings.aiDisplay\n\n          for (i = display.length - 1; i >= 0; i--) {\n            if (!rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n              display.splice(i, 1)\n            }\n          }\n        }\n      }\n\n      /**\n       * Build a regular expression object suitable for searching a table\n       *  @param {string} sSearch string to search for\n       *  @param {bool} bRegex treat as a regular expression or not\n       *  @param {bool} bSmart perform smart filtering or not\n       *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n       *  @returns {RegExp} constructed object\n       *  @memberof DataTable#oApi\n       */\n      function _fnFilterCreateSearch (search, regex, smart, caseInsensitive) {\n        search = regex ? search : _fnEscapeRegex(search)\n\n        if (smart) {\n          /* For smart filtering we want to allow the search to work regardless of\n           * word order. We also want double quoted text to be preserved, so word\n           * order is important - a la google. So this is what we want to\n           * generate:\n           *\n           * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n           */\n          var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || '', function (word) {\n            return word.charAt(0) === '\"' ? word.match(/^\"(.*)\"$/)[1] : word\n          })\n\n          search = '^(?=.*?' + a.join(')(?=.*?') + ').*$'\n        }\n\n        return new RegExp(search, caseInsensitive ? 'i' : '')\n      }\n\n      /**\n       * scape a string such that it can be used in a regular expression\n       *  @param {string} sVal string to escape\n       *  @returns {string} escaped string\n       *  @memberof DataTable#oApi\n       */\n      function _fnEscapeRegex (sVal) {\n        return sVal.replace(_re_escape_regex, '\\\\$1')\n      }\n\n      var __filter_div = $('<div>')[0]\n      var __filter_div_textContent = __filter_div.textContent !== undefined\n\n      // Update the filtering data for each row if needed (by invalidation or first run)\n      function _fnFilterData (settings) {\n        var columns = settings.aoColumns\n        var column\n        var i, j, ien, jen, filterData, cellData, row\n        var fomatters = DataTable.ext.type.search\n        var wasInvalidated = false\n\n        for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n          row = settings.aoData[i]\n\n          if (!row._aFilterData) {\n            filterData = []\n\n            for (j = 0, jen = columns.length; j < jen; j++) {\n              column = columns[j]\n\n              if (column.bSearchable) {\n                cellData = _fnGetCellData(settings, i, j, 'filter')\n\n                if (fomatters[column.sType]) {\n                  cellData = fomatters[column.sType](cellData)\n                }\n\n                // Search in DataTables 1.10 is string based. In 1.11 this\n                // should be altered to also allow strict type checking.\n                if (cellData === null) {\n                  cellData = ''\n                }\n\n                if (typeof cellData !== 'string' && cellData.toString) {\n                  cellData = cellData.toString()\n                }\n              } else {\n                cellData = ''\n              }\n\n              // If it looks like there is an HTML entity in the string,\n              // attempt to decode it so sorting works as expected. Note that\n              // we could use a single line of jQuery to do this, but the DOM\n              // method used here is much faster http://jsperf.com/html-decode\n              if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n                __filter_div.innerHTML = cellData\n                cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText\n              }\n\n              if (cellData.replace) {\n                cellData = cellData.replace(/[\\r\\n]/g, '')\n              }\n\n              filterData.push(cellData)\n            }\n\n            row._aFilterData = filterData\n            row._sFilterRow = filterData.join('  ')\n            wasInvalidated = true\n          }\n        }\n\n        return wasInvalidated\n      }\n\n      /**\n       * Convert from the internal Hungarian notation to camelCase for external\n       * interaction\n       *  @param {object} obj Object to convert\n       *  @returns {object} Inverted object\n       *  @memberof DataTable#oApi\n       */\n      function _fnSearchToCamel (obj) {\n        return {\n          search: obj.sSearch,\n          smart: obj.bSmart,\n          regex: obj.bRegex,\n          caseInsensitive: obj.bCaseInsensitive\n        }\n      }\n\n      /**\n       * Convert from camelCase notation to the internal Hungarian. We could use the\n       * Hungarian convert function here, but this is cleaner\n       *  @param {object} obj Object to convert\n       *  @returns {object} Inverted object\n       *  @memberof DataTable#oApi\n       */\n      function _fnSearchToHung (obj) {\n        return {\n          sSearch: obj.search,\n          bSmart: obj.smart,\n          bRegex: obj.regex,\n          bCaseInsensitive: obj.caseInsensitive\n        }\n      }\n\n      /**\n       * Generate the node required for the info display\n       *  @param {object} oSettings dataTables settings object\n       *  @returns {node} Information element\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlInfo (settings) {\n        var tid = settings.sTableId,\n          nodes = settings.aanFeatures.i,\n          n = $('<div/>', {\n            class: settings.oClasses.sInfo,\n            id: !nodes ? tid + '_info' : null\n          })\n\n        if (!nodes) {\n          // Update display on each draw\n          settings.aoDrawCallback.push({\n            fn: _fnUpdateInfo,\n            sName: 'information'\n          })\n\n          n.attr('role', 'status').attr('aria-live', 'polite')\n\n          // Table is described by our info div\n          $(settings.nTable).attr('aria-describedby', tid + '_info')\n        }\n\n        return n[0]\n      }\n\n      /**\n       * Update the information elements in the display\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnUpdateInfo (settings) {\n        /* Show information about the table */\n        var nodes = settings.aanFeatures.i\n        if (nodes.length === 0) {\n          return\n        }\n\n        var lang = settings.oLanguage,\n          start = settings._iDisplayStart + 1,\n          end = settings.fnDisplayEnd(),\n          max = settings.fnRecordsTotal(),\n          total = settings.fnRecordsDisplay(),\n          out = total ? lang.sInfo : lang.sInfoEmpty\n\n        if (total !== max) {\n          /* Record set after filtering */\n          out += ' ' + lang.sInfoFiltered\n        }\n\n        // Convert the macros\n        out += lang.sInfoPostFix\n        out = _fnInfoMacros(settings, out)\n\n        var callback = lang.fnInfoCallback\n        if (callback !== null) {\n          out = callback.call(settings.oInstance, settings, start, end, max, total, out)\n        }\n\n        $(nodes).html(out)\n      }\n\n      function _fnInfoMacros (settings, str) {\n        // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n        // internally\n        var formatter = settings.fnFormatNumber,\n          start = settings._iDisplayStart + 1,\n          len = settings._iDisplayLength,\n          vis = settings.fnRecordsDisplay(),\n          all = len === -1\n\n        return str\n          .replace(/_START_/g, formatter.call(settings, start))\n          .replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd()))\n          .replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal()))\n          .replace(/_TOTAL_/g, formatter.call(settings, vis))\n          .replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len)))\n          .replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)))\n      }\n\n      /**\n       * Draw the table for the first time, adding all required features\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnInitialise (settings) {\n        var i,\n          iLen,\n          iAjaxStart = settings.iInitDisplayStart\n        var columns = settings.aoColumns,\n          column\n        var features = settings.oFeatures\n\n        /* Ensure that the table data is fully initialised */\n        if (!settings.bInitialised) {\n          setTimeout(function () {\n            _fnInitialise(settings)\n          }, 200)\n          return\n        }\n\n        /* Show the display HTML options */\n        _fnAddOptionsHtml(settings)\n\n        /* Build and draw the header / footer for the table */\n        _fnBuildHead(settings)\n        _fnDrawHead(settings, settings.aoHeader)\n        _fnDrawHead(settings, settings.aoFooter)\n\n        /* Okay to show that something is going on now */\n        _fnProcessingDisplay(settings, true)\n\n        /* Calculate sizes for columns */\n        if (features.bAutoWidth) {\n          _fnCalculateColumnWidths(settings)\n        }\n\n        for (i = 0, iLen = columns.length; i < iLen; i++) {\n          column = columns[i]\n\n          if (column.sWidth) {\n            column.nTh.style.width = _fnStringToCss(column.sWidth)\n          }\n        }\n\n        // If there is default sorting required - let's do it. The sort function\n        // will do the drawing for us. Otherwise we draw the table regardless of the\n        // Ajax source - this allows the table to look initialised for Ajax sourcing\n        // data (show 'loading' message possibly)\n        _fnReDraw(settings)\n\n        // Server-side processing init complete is done by _fnAjaxUpdateDraw\n        var dataSrc = _fnDataSource(settings)\n        if (dataSrc != 'ssp') {\n          // if there is an ajax source load the data\n          if (dataSrc == 'ajax') {\n            _fnBuildAjax(\n              settings,\n              [],\n              function (json) {\n                var aData = _fnAjaxDataSrc(settings, json)\n\n                // Got the data - add it to the table\n                for (i = 0; i < aData.length; i++) {\n                  _fnAddData(settings, aData[i])\n                }\n\n                // Reset the init display for cookie saving. We've already done\n                // a filter, and therefore cleared it before. So we need to make\n                // it appear 'fresh'\n                settings.iInitDisplayStart = iAjaxStart\n\n                _fnReDraw(settings)\n\n                _fnProcessingDisplay(settings, false)\n                _fnInitComplete(settings, json)\n              },\n              settings\n            )\n          } else {\n            _fnProcessingDisplay(settings, false)\n            _fnInitComplete(settings)\n          }\n        }\n      }\n\n      /**\n       * Draw the table for the first time, adding all required features\n       *  @param {object} oSettings dataTables settings object\n       *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n       *    with client-side processing (optional)\n       *  @memberof DataTable#oApi\n       */\n      function _fnInitComplete (settings, json) {\n        settings._bInitComplete = true\n\n        // On an Ajax load we now have data and therefore want to apply the column\n        // sizing\n        if (json) {\n          _fnAdjustColumnSizing(settings)\n        }\n\n        _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json])\n      }\n\n      function _fnLengthChange (settings, val) {\n        var len = parseInt(val, 10)\n        settings._iDisplayLength = len\n\n        _fnLengthOverflow(settings)\n\n        // Fire length change event\n        _fnCallbackFire(settings, null, 'length', [settings, len])\n      }\n\n      /**\n       * Generate the node required for user display length changing\n       *  @param {object} settings dataTables settings object\n       *  @returns {node} Display length feature node\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlLength (settings) {\n        var classes = settings.oClasses,\n          tableId = settings.sTableId,\n          menu = settings.aLengthMenu,\n          d2 = $.isArray(menu[0]),\n          lengths = d2 ? menu[0] : menu,\n          language = d2 ? menu[1] : menu\n\n        var select = $('<select/>', {\n          name: tableId + '_length',\n          'aria-controls': tableId,\n          class: classes.sLengthSelect\n        })\n\n        for (var i = 0, ien = lengths.length; i < ien; i++) {\n          select[0][i] = new Option(language[i], lengths[i])\n        }\n\n        var div = $('<div><label/></div>').addClass(classes.sLength)\n        if (!settings.aanFeatures.l) {\n          div[0].id = tableId + '_length'\n        }\n\n        div.children().append(settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML))\n\n        // Can't use `select` variable as user might provide their own and the\n        // reference is broken by the use of outerHTML\n        $('select', div)\n          .val(settings._iDisplayLength)\n          .bind('change.DT', function (e) {\n            _fnLengthChange(settings, $(this).val())\n            _fnDraw(settings)\n          })\n\n        // Update node value whenever anything changes the table's length\n        $(settings.nTable).bind('length.dt.DT', function (e, s, len) {\n          if (settings === s) {\n            $('select', div).val(len)\n          }\n        })\n\n        return div[0]\n      }\n\n      /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n       * Note that most of the paging logic is done in\n       * DataTable.ext.pager\n       */\n\n      /**\n       * Generate the node required for default pagination\n       *  @param {object} oSettings dataTables settings object\n       *  @returns {node} Pagination feature node\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlPaginate (settings) {\n        var type = settings.sPaginationType,\n          plugin = DataTable.ext.pager[type],\n          modern = typeof plugin === 'function',\n          redraw = function (settings) {\n            _fnDraw(settings)\n          },\n          node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n          features = settings.aanFeatures\n\n        if (!modern) {\n          plugin.fnInit(settings, node, redraw)\n        }\n\n        /* Add a draw callback for the pagination on first instance, to update the paging display */\n        if (!features.p) {\n          node.id = settings.sTableId + '_paginate'\n\n          settings.aoDrawCallback.push({\n            fn: function (settings) {\n              if (modern) {\n                var start = settings._iDisplayStart,\n                  len = settings._iDisplayLength,\n                  visRecords = settings.fnRecordsDisplay(),\n                  all = len === -1,\n                  page = all ? 0 : Math.ceil(start / len),\n                  pages = all ? 1 : Math.ceil(visRecords / len),\n                  buttons = plugin(page, pages),\n                  i,\n                  ien\n\n                for (i = 0, ien = features.p.length; i < ien; i++) {\n                  _fnRenderer(settings, 'pageButton')(settings, features.p[i], i, buttons, page, pages)\n                }\n              } else {\n                plugin.fnUpdate(settings, redraw)\n              }\n            },\n            sName: 'pagination'\n          })\n        }\n\n        return node\n      }\n\n      /**\n       * Alter the display settings to change the page\n       *  @param {object} settings DataTables settings object\n       *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n       *    \"next\" or \"last\" or page number to jump to (integer)\n       *  @param [bool] redraw Automatically draw the update or not\n       *  @returns {bool} true page has changed, false - no change\n       *  @memberof DataTable#oApi\n       */\n      function _fnPageChange (settings, action, redraw) {\n        var start = settings._iDisplayStart,\n          len = settings._iDisplayLength,\n          records = settings.fnRecordsDisplay()\n\n        if (records === 0 || len === -1) {\n          start = 0\n        } else if (typeof action === 'number') {\n          start = action * len\n\n          if (start > records) {\n            start = 0\n          }\n        } else if (action == 'first') {\n          start = 0\n        } else if (action == 'previous') {\n          start = len >= 0 ? start - len : 0\n\n          if (start < 0) {\n            start = 0\n          }\n        } else if (action == 'next') {\n          if (start + len < records) {\n            start += len\n          }\n        } else if (action == 'last') {\n          start = Math.floor((records - 1) / len) * len\n        } else {\n          _fnLog(settings, 0, 'Unknown paging action: ' + action, 5)\n        }\n\n        var changed = settings._iDisplayStart !== start\n        settings._iDisplayStart = start\n\n        if (changed) {\n          _fnCallbackFire(settings, null, 'page', [settings])\n\n          if (redraw) {\n            _fnDraw(settings)\n          }\n        }\n\n        return changed\n      }\n\n      /**\n       * Generate the node required for the processing node\n       *  @param {object} settings dataTables settings object\n       *  @returns {node} Processing element\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlProcessing (settings) {\n        return $('<div/>', {\n          id: !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n          class: settings.oClasses.sProcessing\n        })\n          .html(settings.oLanguage.sProcessing)\n          .insertBefore(settings.nTable)[0]\n      }\n\n      /**\n       * Display or hide the processing indicator\n       *  @param {object} settings dataTables settings object\n       *  @param {bool} show Show the processing indicator (true) or not (false)\n       *  @memberof DataTable#oApi\n       */\n      function _fnProcessingDisplay (settings, show) {\n        if (settings.oFeatures.bProcessing) {\n          $(settings.aanFeatures.r).css('display', show ? 'block' : 'none')\n        }\n\n        _fnCallbackFire(settings, null, 'processing', [settings, show])\n      }\n\n      /**\n       * Add any control elements for the table - specifically scrolling\n       *  @param {object} settings dataTables settings object\n       *  @returns {node} Node to add to the DOM\n       *  @memberof DataTable#oApi\n       */\n      function _fnFeatureHtmlTable (settings) {\n        var table = $(settings.nTable)\n\n        // Add the ARIA grid role to the table\n        table.attr('role', 'grid')\n\n        // Scrolling from here on in\n        var scroll = settings.oScroll\n\n        if (scroll.sX === '' && scroll.sY === '') {\n          return settings.nTable\n        }\n\n        var scrollX = scroll.sX\n        var scrollY = scroll.sY\n        var classes = settings.oClasses\n        var caption = table.children('caption')\n        var captionSide = caption.length ? caption[0]._captionSide : null\n        var headerClone = $(table[0].cloneNode(false))\n        var footerClone = $(table[0].cloneNode(false))\n        var footer = table.children('tfoot')\n        var _div = '<div/>'\n        var size = function (s) {\n          return !s ? null : _fnStringToCss(s)\n        }\n\n        // This is fairly messy, but with x scrolling enabled, if the table has a\n        // width attribute, regardless of any width applied using the column width\n        // options, the browser will shrink or grow the table as needed to fit into\n        // that 100%. That would make the width options useless. So we remove it.\n        // This is okay, under the assumption that width:100% is applied to the\n        // table in CSS (it is in the default stylesheet) which will set the table\n        // width as appropriate (the attribute and css behave differently...)\n        if (scroll.sX && table.attr('width') === '100%') {\n          table.removeAttr('width')\n        }\n\n        if (!footer.length) {\n          footer = null\n        }\n\n        /*\n         * The HTML structure that we want to generate in this function is:\n         *  div - scroller\n         *    div - scroll head\n         *      div - scroll head inner\n         *        table - scroll head table\n         *          thead - thead\n         *    div - scroll body\n         *      table - table (master table)\n         *        thead - thead clone for sizing\n         *        tbody - tbody\n         *    div - scroll foot\n         *      div - scroll foot inner\n         *        table - scroll foot table\n         *          tfoot - tfoot\n         */\n        var scroller = $(_div, { class: classes.sScrollWrapper })\n          .append(\n            $(_div, { class: classes.sScrollHead })\n              .css({\n                overflow: 'hidden',\n                position: 'relative',\n                border: 0,\n                width: scrollX ? size(scrollX) : '100%'\n              })\n              .append(\n                $(_div, { class: classes.sScrollHeadInner })\n                  .css({\n                    'box-sizing': 'content-box',\n                    width: scroll.sXInner || '100%'\n                  })\n                  .append(\n                    headerClone\n                      .removeAttr('id')\n                      .css('margin-left', 0)\n                      .append(table.children('thead'))\n                  )\n              )\n              .append(captionSide === 'top' ? caption : null)\n          )\n          .append(\n            $(_div, { class: classes.sScrollBody })\n              .css({\n                overflow: 'auto',\n                height: size(scrollY),\n                width: size(scrollX)\n              })\n              .append(table)\n          )\n\n        if (footer) {\n          scroller.append(\n            $(_div, { class: classes.sScrollFoot })\n              .css({\n                overflow: 'hidden',\n                border: 0,\n                width: scrollX ? size(scrollX) : '100%'\n              })\n              .append(\n                $(_div, { class: classes.sScrollFootInner }).append(\n                  footerClone\n                    .removeAttr('id')\n                    .css('margin-left', 0)\n                    .append(table.children('tfoot'))\n                )\n              )\n              .append(captionSide === 'bottom' ? caption : null)\n          )\n        }\n\n        var children = scroller.children()\n        var scrollHead = children[0]\n        var scrollBody = children[1]\n        var scrollFoot = footer ? children[2] : null\n\n        // When the body is scrolled, then we also want to scroll the headers\n        if (scrollX) {\n          $(scrollBody).scroll(function (e) {\n            var scrollLeft = this.scrollLeft\n\n            scrollHead.scrollLeft = scrollLeft\n\n            if (footer) {\n              scrollFoot.scrollLeft = scrollLeft\n            }\n          })\n        }\n\n        settings.nScrollHead = scrollHead\n        settings.nScrollBody = scrollBody\n        settings.nScrollFoot = scrollFoot\n\n        // On redraw - align columns\n        settings.aoDrawCallback.push({\n          fn: _fnScrollDraw,\n          sName: 'scrolling'\n        })\n\n        return scroller[0]\n      }\n\n      /**\n       * Update the header, footer and body tables for resizing - i.e. column\n       * alignment.\n       *\n       * Welcome to the most horrible function DataTables. The process that this\n       * function follows is basically:\n       *   1. Re-create the table inside the scrolling div\n       *   2. Take live measurements from the DOM\n       *   3. Apply the measurements to align the columns\n       *   4. Clean up\n       *\n       *  @param {object} settings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnScrollDraw (settings) {\n        // Given that this is such a monster function, a lot of variables are use\n        // to try and keep the minimised size as small as possible\n        var scroll = settings.oScroll,\n          scrollX = scroll.sX,\n          scrollXInner = scroll.sXInner,\n          scrollY = scroll.sY,\n          barWidth = scroll.iBarWidth,\n          divHeader = $(settings.nScrollHead),\n          divHeaderStyle = divHeader[0].style,\n          divHeaderInner = divHeader.children('div'),\n          divHeaderInnerStyle = divHeaderInner[0].style,\n          divHeaderTable = divHeaderInner.children('table'),\n          divBodyEl = settings.nScrollBody,\n          divBody = $(divBodyEl),\n          divBodyStyle = divBodyEl.style,\n          divFooter = $(settings.nScrollFoot),\n          divFooterInner = divFooter.children('div'),\n          divFooterTable = divFooterInner.children('table'),\n          header = $(settings.nTHead),\n          table = $(settings.nTable),\n          tableEl = table[0],\n          tableStyle = tableEl.style,\n          footer = settings.nTFoot ? $(settings.nTFoot) : null,\n          browser = settings.oBrowser,\n          ie67 = browser.bScrollOversize,\n          headerTrgEls,\n          footerTrgEls,\n          headerSrcEls,\n          footerSrcEls,\n          headerCopy,\n          footerCopy,\n          headerWidths = [],\n          footerWidths = [],\n          headerContent = [],\n          idx,\n          correction,\n          sanityWidth,\n          zeroOut = function (nSizer) {\n            var style = nSizer.style\n            style.paddingTop = '0'\n            style.paddingBottom = '0'\n            style.borderTopWidth = '0'\n            style.borderBottomWidth = '0'\n            style.height = 0\n          }\n\n        /*\n         * 1. Re-create the table inside the scrolling div\n         */\n\n        // Remove the old minimised thead and tfoot elements in the inner table\n        table.children('thead, tfoot').remove()\n\n        // Clone the current header and footer elements and then place it into the inner table\n        headerCopy = header.clone().prependTo(table)\n        headerTrgEls = header.find('tr') // original header is in its own table\n        headerSrcEls = headerCopy.find('tr')\n        headerCopy.find('th, td').removeAttr('tabindex')\n\n        if (footer) {\n          footerCopy = footer.clone().prependTo(table)\n          footerTrgEls = footer.find('tr') // the original tfoot is in its own table and must be sized\n          footerSrcEls = footerCopy.find('tr')\n        }\n\n        /*\n         * 2. Take live measurements from the DOM - do not alter the DOM itself!\n         */\n\n        // Remove old sizing and apply the calculated column widths\n        // Get the unique column headers in the newly created (cloned) header. We want to apply the\n        // calculated sizes to this header\n        if (!scrollX) {\n          divBodyStyle.width = '100%'\n          divHeader[0].style.width = '100%'\n        }\n\n        $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n          idx = _fnVisibleToColumnIndex(settings, i)\n          el.style.width = settings.aoColumns[idx].sWidth\n        })\n\n        if (footer) {\n          _fnApplyToChildren(function (n) {\n            n.style.width = ''\n          }, footerSrcEls)\n        }\n\n        // If scroll collapse is enabled, when we put the headers back into the body for sizing, we\n        // will end up forcing the scrollbar to appear, making our measurements wrong for when we\n        // then hide it (end of this function), so add the header height to the body scroller.\n        if (scroll.bCollapse && scrollY !== '') {\n          divBodyStyle.height = divBody[0].offsetHeight + header[0].offsetHeight + 'px'\n        }\n\n        // Size the table as a whole\n        sanityWidth = table.outerWidth()\n        if (scrollX === '') {\n          // No x scrolling\n          tableStyle.width = '100%'\n\n          // IE7 will make the width of the table when 100% include the scrollbar\n          // - which is shouldn't. When there is a scrollbar we need to take this\n          // into account.\n          if (\n            ie67 &&\n            (table.find('tbody').height() > divBodyEl.offsetHeight || divBody.css('overflow-y') == 'scroll')\n          ) {\n            tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth)\n          }\n        } else {\n          // x scrolling\n          if (scrollXInner !== '') {\n            // x scroll inner has been given - use it\n            tableStyle.width = _fnStringToCss(scrollXInner)\n          } else if (sanityWidth == divBody.width() && divBody.height() < table.height()) {\n            // There is y-scrolling - try to take account of the y scroll bar\n            tableStyle.width = _fnStringToCss(sanityWidth - barWidth)\n            if (table.outerWidth() > sanityWidth - barWidth) {\n              // Not possible to take account of it\n              tableStyle.width = _fnStringToCss(sanityWidth)\n            }\n          } else {\n            // When all else fails\n            tableStyle.width = _fnStringToCss(sanityWidth)\n          }\n        }\n\n        // Recalculate the sanity width - now that we've applied the required width,\n        // before it was a temporary variable. This is required because the column\n        // width calculation is done before this table DOM is created.\n        sanityWidth = table.outerWidth()\n\n        // Hidden header should have zero height, so remove padding and borders. Then\n        // set the width based on the real headers\n\n        // Apply all styles in one pass\n        _fnApplyToChildren(zeroOut, headerSrcEls)\n\n        // Read all widths in next pass\n        _fnApplyToChildren(function (nSizer) {\n          headerContent.push(nSizer.innerHTML)\n          headerWidths.push(_fnStringToCss($(nSizer).css('width')))\n        }, headerSrcEls)\n\n        // Apply all widths in final pass\n        _fnApplyToChildren(function (nToSize, i) {\n          nToSize.style.width = headerWidths[i]\n        }, headerTrgEls)\n\n        $(headerSrcEls).height(0)\n\n        /* Same again with the footer if we have one */\n        if (footer) {\n          _fnApplyToChildren(zeroOut, footerSrcEls)\n\n          _fnApplyToChildren(function (nSizer) {\n            footerWidths.push(_fnStringToCss($(nSizer).css('width')))\n          }, footerSrcEls)\n\n          _fnApplyToChildren(function (nToSize, i) {\n            nToSize.style.width = footerWidths[i]\n          }, footerTrgEls)\n\n          $(footerSrcEls).height(0)\n        }\n\n        /*\n         * 3. Apply the measurements\n         */\n\n        // \"Hide\" the header and footer that we used for the sizing. We need to keep\n        // the content of the cell so that the width applied to the header and body\n        // both match, but we want to hide it completely. We want to also fix their\n        // width to what they currently are\n        _fnApplyToChildren(function (nSizer, i) {\n          nSizer.innerHTML =\n            '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + headerContent[i] + '</div>'\n          nSizer.style.width = headerWidths[i]\n        }, headerSrcEls)\n\n        if (footer) {\n          _fnApplyToChildren(function (nSizer, i) {\n            nSizer.innerHTML = ''\n            nSizer.style.width = footerWidths[i]\n          }, footerSrcEls)\n        }\n\n        // Sanity check that the table is of a sensible width. If not then we are going to get\n        // misalignment - try to prevent this by not allowing the table to shrink below its min width\n        if (table.outerWidth() < sanityWidth) {\n          // The min width depends upon if we have a vertical scrollbar visible or not */\n          correction =\n            divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == 'scroll'\n              ? sanityWidth + barWidth\n              : sanityWidth\n\n          // IE6/7 are a law unto themselves...\n          if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == 'scroll')) {\n            tableStyle.width = _fnStringToCss(correction - barWidth)\n          }\n\n          // And give the user a warning that we've stopped the table getting too small\n          if (scrollX === '' || scrollXInner !== '') {\n            _fnLog(settings, 1, 'Possible column misalignment', 6)\n          }\n        } else {\n          correction = '100%'\n        }\n\n        // Apply to the container elements\n        divBodyStyle.width = _fnStringToCss(correction)\n        divHeaderStyle.width = _fnStringToCss(correction)\n\n        if (footer) {\n          settings.nScrollFoot.style.width = _fnStringToCss(correction)\n        }\n\n        /*\n         * 4. Clean up\n         */\n        if (!scrollY) {\n          /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n           * the scrollbar height from the visible display, rather than adding it on. We need to\n           * set the height in order to sort this. Don't want to do it in any other browsers.\n           */\n          if (ie67) {\n            divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth)\n          }\n        }\n\n        if (scrollY && scroll.bCollapse) {\n          divBodyStyle.height = _fnStringToCss(scrollY)\n\n          var iExtra = scrollX && tableEl.offsetWidth > divBodyEl.offsetWidth ? barWidth : 0\n\n          if (tableEl.offsetHeight < divBodyEl.offsetHeight) {\n            divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + iExtra)\n          }\n        }\n\n        /* Finally set the width's of the header and footer tables */\n        var iOuterWidth = table.outerWidth()\n        divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth)\n        divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth)\n\n        // Figure out if there are scrollbar present - if so then we need a the header and footer to\n        // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n        var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == 'scroll'\n        var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right')\n        divHeaderInnerStyle[padding] = bScrolling ? barWidth + 'px' : '0px'\n\n        if (footer) {\n          divFooterTable[0].style.width = _fnStringToCss(iOuterWidth)\n          divFooterInner[0].style.width = _fnStringToCss(iOuterWidth)\n          divFooterInner[0].style[padding] = bScrolling ? barWidth + 'px' : '0px'\n        }\n\n        /* Adjust the position of the header in case we loose the y-scrollbar */\n        divBody.scroll()\n\n        // If sorting or filtering has occurred, jump the scrolling back to the top\n        // only if we aren't holding the position\n        if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n          divBodyEl.scrollTop = 0\n        }\n      }\n\n      /**\n       * Apply a given function to the display child nodes of an element array (typically\n       * TD children of TR rows\n       *  @param {function} fn Method to apply to the objects\n       *  @param array {nodes} an1 List of elements to look through for display children\n       *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n       *  @memberof DataTable#oApi\n       */\n      function _fnApplyToChildren (fn, an1, an2) {\n        var index = 0,\n          i = 0,\n          iLen = an1.length\n        var nNode1, nNode2\n\n        while (i < iLen) {\n          nNode1 = an1[i].firstChild\n          nNode2 = an2 ? an2[i].firstChild : null\n\n          while (nNode1) {\n            if (nNode1.nodeType === 1) {\n              if (an2) {\n                fn(nNode1, nNode2, index)\n              } else {\n                fn(nNode1, index)\n              }\n\n              index++\n            }\n\n            nNode1 = nNode1.nextSibling\n            nNode2 = an2 ? nNode2.nextSibling : null\n          }\n\n          i++\n        }\n      }\n\n      var __re_html_remove = /<.*?>/g\n\n      /**\n       * Calculate the width of columns for the table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnCalculateColumnWidths (oSettings) {\n        var table = oSettings.nTable,\n          columns = oSettings.aoColumns,\n          scroll = oSettings.oScroll,\n          scrollY = scroll.sY,\n          scrollX = scroll.sX,\n          scrollXInner = scroll.sXInner,\n          columnCount = columns.length,\n          visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n          headerCells = $('th', oSettings.nTHead),\n          tableWidthAttr = table.getAttribute('width'),\n          tableContainer = table.parentNode,\n          userInputs = false,\n          i,\n          column,\n          columnIdx,\n          width,\n          outerWidth\n\n        /* Convert any user input sizes into pixel sizes */\n        for (i = 0; i < visibleColumns.length; i++) {\n          column = columns[visibleColumns[i]]\n\n          if (column.sWidth !== null) {\n            column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer)\n\n            userInputs = true\n          }\n        }\n\n        /* If the number of columns in the DOM equals the number that we have to\n         * process in DataTables, then we can use the offsets that are created by\n         * the web- browser. No custom sizes can be set in order for this to happen,\n         * nor scrolling used\n         */\n        if (\n          !userInputs &&\n          !scrollX &&\n          !scrollY &&\n          columnCount == _fnVisbleColumns(oSettings) &&\n          columnCount == headerCells.length\n        ) {\n          for (i = 0; i < columnCount; i++) {\n            columns[i].sWidth = _fnStringToCss(headerCells.eq(i).width())\n          }\n        } else {\n          // Otherwise construct a single row table with the widest node in the\n          // data, assign any user defined widths, then insert it into the DOM and\n          // allow the browser to do all the hard work of calculating table widths\n          var tmpTable = $(table)\n            .clone() // don't use cloneNode - IE8 will remove events on the main table\n            .empty()\n            .css('visibility', 'hidden')\n            .removeAttr('id')\n            .append($(oSettings.nTHead).clone(false))\n            .append($(oSettings.nTFoot).clone(false))\n            .append($('<tbody><tr/></tbody>'))\n\n          // Remove any assigned widths from the footer (from scrolling)\n          tmpTable.find('tfoot th, tfoot td').css('width', '')\n\n          var tr = tmpTable.find('tbody tr')\n\n          // Apply custom sizing to the cloned header\n          headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0])\n\n          for (i = 0; i < visibleColumns.length; i++) {\n            column = columns[visibleColumns[i]]\n\n            headerCells[i].style.width =\n              column.sWidthOrig !== null && column.sWidthOrig !== '' ? _fnStringToCss(column.sWidthOrig) : ''\n          }\n\n          // Find the widest cell for each column and put it into the table\n          if (oSettings.aoData.length) {\n            for (i = 0; i < visibleColumns.length; i++) {\n              columnIdx = visibleColumns[i]\n              column = columns[columnIdx]\n\n              $(_fnGetWidestNode(oSettings, columnIdx))\n                .clone(false)\n                .append(column.sContentPadding)\n                .appendTo(tr)\n            }\n          }\n\n          // Table has been built, attach to the document so we can work with it\n          tmpTable.appendTo(tableContainer)\n\n          // When scrolling (X or Y) we want to set the width of the table as\n          // appropriate. However, when not scrolling leave the table width as it\n          // is. This results in slightly different, but I think correct behaviour\n          if (scrollX && scrollXInner) {\n            tmpTable.width(scrollXInner)\n          } else if (scrollX) {\n            tmpTable.css('width', 'auto')\n\n            if (tmpTable.width() < tableContainer.offsetWidth) {\n              tmpTable.width(tableContainer.offsetWidth)\n            }\n          } else if (scrollY) {\n            tmpTable.width(tableContainer.offsetWidth)\n          } else if (tableWidthAttr) {\n            tmpTable.width(tableWidthAttr)\n          }\n\n          // Take into account the y scrollbar\n          _fnScrollingWidthAdjust(oSettings, tmpTable[0])\n\n          // Browsers need a bit of a hand when a width is assigned to any columns\n          // when x-scrolling as they tend to collapse the table to the min-width,\n          // even if we sent the column widths. So we need to keep track of what\n          // the table width should be by summing the user given values, and the\n          // automatic values\n          if (scrollX) {\n            var total = 0\n\n            for (i = 0; i < visibleColumns.length; i++) {\n              column = columns[visibleColumns[i]]\n              outerWidth = $(headerCells[i]).outerWidth()\n\n              total +=\n                column.sWidthOrig === null\n                  ? outerWidth\n                  : parseInt(column.sWidth, 10) + outerWidth - $(headerCells[i]).width()\n            }\n\n            tmpTable.width(_fnStringToCss(total))\n            table.style.width = _fnStringToCss(total)\n          }\n\n          // Get the width of each column in the constructed table\n          for (i = 0; i < visibleColumns.length; i++) {\n            column = columns[visibleColumns[i]]\n            width = $(headerCells[i]).width()\n\n            if (width) {\n              column.sWidth = _fnStringToCss(width)\n            }\n          }\n\n          table.style.width = _fnStringToCss(tmpTable.css('width'))\n\n          // Finished with the table - ditch it\n          tmpTable.remove()\n        }\n\n        // If there is a width attr, we want to attach an event listener which\n        // allows the table sizing to automatically adjust when the window is\n        // resized. Use the width attr rather than CSS, since we can't know if the\n        // CSS is a relative value or absolute - DOM read is always px.\n        if (tableWidthAttr) {\n          table.style.width = _fnStringToCss(tableWidthAttr)\n        }\n\n        if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n          $(window).bind(\n            'resize.DT-' + oSettings.sInstance,\n            _fnThrottle(function () {\n              _fnAdjustColumnSizing(oSettings)\n            })\n          )\n\n          oSettings._reszEvt = true\n        }\n      }\n\n      /**\n       * Throttle the calls to a function. Arguments and context are maintained for\n       * the throttled function\n       *  @param {function} fn Function to be called\n       *  @param {int} [freq=200] call frequency in mS\n       *  @returns {function} wrapped function\n       *  @memberof DataTable#oApi\n       */\n      function _fnThrottle (fn, freq) {\n        var frequency = freq || 200,\n          last,\n          timer\n\n        return function () {\n          var that = this,\n            now = +new Date(),\n            args = arguments\n\n          if (last && now < last + frequency) {\n            clearTimeout(timer)\n\n            timer = setTimeout(function () {\n              last = undefined\n              fn.apply(that, args)\n            }, frequency)\n          } else if (last) {\n            last = now\n            fn.apply(that, args)\n          } else {\n            last = now\n          }\n        }\n      }\n\n      /**\n       * Convert a CSS unit width to pixels (e.g. 2em)\n       *  @param {string} width width to be converted\n       *  @param {node} parent parent to get the with for (required for relative widths) - optional\n       *  @returns {int} width in pixels\n       *  @memberof DataTable#oApi\n       */\n      function _fnConvertToWidth (width, parent) {\n        if (!width) {\n          return 0\n        }\n\n        var n = $('<div/>')\n          .css('width', _fnStringToCss(width))\n          .appendTo(parent || document.body)\n\n        var val = n[0].offsetWidth\n        n.remove()\n\n        return val\n      }\n\n      /**\n       * Adjust a table's width to take account of vertical scroll bar\n       *  @param {object} oSettings dataTables settings object\n       *  @param {node} n table node\n       *  @memberof DataTable#oApi\n       */\n\n      function _fnScrollingWidthAdjust (settings, n) {\n        var scroll = settings.oScroll\n\n        if (scroll.sX || scroll.sY) {\n          // When y-scrolling only, we want to remove the width of the scroll bar\n          // so the table + scroll bar will fit into the area available, otherwise\n          // we fix the table at its current size with no adjustment\n          var correction = !scroll.sX ? scroll.iBarWidth : 0\n          n.style.width = _fnStringToCss($(n).outerWidth() - correction)\n        }\n      }\n\n      /**\n       * Get the widest node\n       *  @param {object} settings dataTables settings object\n       *  @param {int} colIdx column of interest\n       *  @returns {node} widest table node\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetWidestNode (settings, colIdx) {\n        var idx = _fnGetMaxLenString(settings, colIdx)\n        if (idx < 0) {\n          return null\n        }\n\n        var data = settings.aoData[idx]\n        return !data.nTr // Might not have been created when deferred rendering\n          ? $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0]\n          : data.anCells[colIdx]\n      }\n\n      /**\n       * Get the maximum strlen for each data column\n       *  @param {object} settings dataTables settings object\n       *  @param {int} colIdx column of interest\n       *  @returns {string} max string length for each column\n       *  @memberof DataTable#oApi\n       */\n      function _fnGetMaxLenString (settings, colIdx) {\n        var s,\n          max = -1,\n          maxIdx = -1\n\n        for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n          s = _fnGetCellData(settings, i, colIdx, 'display') + ''\n          s = s.replace(__re_html_remove, '')\n\n          if (s.length > max) {\n            max = s.length\n            maxIdx = i\n          }\n        }\n\n        return maxIdx\n      }\n\n      /**\n       * Append a CSS unit (only if required) to a string\n       *  @param {string} value to css-ify\n       *  @returns {string} value with css unit\n       *  @memberof DataTable#oApi\n       */\n      function _fnStringToCss (s) {\n        if (s === null) {\n          return '0px'\n        }\n\n        if (typeof s == 'number') {\n          return s < 0 ? '0px' : s + 'px'\n        }\n\n        // Check it has a unit character already\n        return s.match(/\\d$/) ? s + 'px' : s\n      }\n\n      /**\n       * Get the width of a scroll bar in this browser being used\n       *  @returns {int} width in pixels\n       *  @memberof DataTable#oApi\n       */\n      function _fnScrollBarWidth () {\n        // On first run a static variable is set, since this is only needed once.\n        // Subsequent runs will just use the previously calculated value\n        if (!DataTable.__scrollbarWidth) {\n          var inner = $('<p/>').css({\n            width: '100%',\n            height: 200,\n            padding: 0\n          })[0]\n\n          var outer = $('<div/>')\n            .css({\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: 200,\n              height: 150,\n              padding: 0,\n              overflow: 'hidden',\n              visibility: 'hidden'\n            })\n            .append(inner)\n            .appendTo('body')\n\n          var w1 = inner.offsetWidth\n          outer.css('overflow', 'scroll')\n          var w2 = inner.offsetWidth\n\n          if (w1 === w2) {\n            w2 = outer[0].clientWidth\n          }\n\n          outer.remove()\n\n          DataTable.__scrollbarWidth = w1 - w2\n        }\n\n        return DataTable.__scrollbarWidth\n      }\n\n      function _fnSortFlatten (settings) {\n        var i,\n          iLen,\n          k,\n          kLen,\n          aSort = [],\n          aiOrig = [],\n          aoColumns = settings.aoColumns,\n          aDataSort,\n          iCol,\n          sType,\n          srcCol,\n          fixed = settings.aaSortingFixed,\n          fixedObj = $.isPlainObject(fixed),\n          nestedSort = [],\n          add = function (a) {\n            if (a.length && !$.isArray(a[0])) {\n              // 1D array\n              nestedSort.push(a)\n            } else {\n              // 2D array\n              nestedSort.push.apply(nestedSort, a)\n            }\n          }\n\n        // Build the sort array, with pre-fix and post-fix options if they have been\n        // specified\n        if ($.isArray(fixed)) {\n          add(fixed)\n        }\n\n        if (fixedObj && fixed.pre) {\n          add(fixed.pre)\n        }\n\n        add(settings.aaSorting)\n\n        if (fixedObj && fixed.post) {\n          add(fixed.post)\n        }\n\n        for (i = 0; i < nestedSort.length; i++) {\n          srcCol = nestedSort[i][0]\n          aDataSort = aoColumns[srcCol].aDataSort\n\n          for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n            iCol = aDataSort[k]\n            sType = aoColumns[iCol].sType || 'string'\n\n            aSort.push({\n              src: srcCol,\n              col: iCol,\n              dir: nestedSort[i][1],\n              index: nestedSort[i][2],\n              type: sType,\n              formatter: DataTable.ext.type.order[sType + '-pre']\n            })\n          }\n        }\n\n        return aSort\n      }\n\n      /**\n       * Change the order of the table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       *  @todo This really needs split up!\n       */\n      function _fnSort (oSettings) {\n        var i,\n          ien,\n          iLen,\n          j,\n          jLen,\n          k,\n          kLen,\n          sDataType,\n          nTh,\n          aiOrig = [],\n          oExtSort = DataTable.ext.type.order,\n          aoData = oSettings.aoData,\n          aoColumns = oSettings.aoColumns,\n          aDataSort,\n          data,\n          iCol,\n          sType,\n          oSort,\n          formatters = 0,\n          sortCol,\n          displayMaster = oSettings.aiDisplayMaster,\n          aSort\n\n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo Can this be moved into a 'data-ready' handler which is called when\n        //   data is going to be used in the table?\n        _fnColumnTypes(oSettings)\n\n        aSort = _fnSortFlatten(oSettings)\n\n        for (i = 0, ien = aSort.length; i < ien; i++) {\n          sortCol = aSort[i]\n\n          // Track if we can use the fast sort algorithm\n          if (sortCol.formatter) {\n            formatters++\n          }\n\n          // Load the data needed for the sort, for each cell\n          _fnSortData(oSettings, sortCol.col)\n        }\n\n        /* No sorting required if server-side or no sorting array */\n        if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n          // Create a value - key array of the current row positions such that we can use their\n          // current position during the sort, if values match, in order to perform stable sorting\n          for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n            aiOrig[displayMaster[i]] = i\n          }\n\n          /* Do the sort - here we want multi-column sorting based on a given data source (column)\n           * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n           * follow on it's own, but this is what we want (example two column sorting):\n           *  fnLocalSorting = function(a,b){\n           *    var iTest;\n           *    iTest = oSort['string-asc']('data11', 'data12');\n           *      if (iTest !== 0)\n           *        return iTest;\n           *    iTest = oSort['numeric-desc']('data21', 'data22');\n           *    if (iTest !== 0)\n           *      return iTest;\n           *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n           *  }\n           * Basically we have a test for each sorting column, if the data in that column is equal,\n           * test the next column. If all columns match, then we use a numeric sort on the row\n           * positions in the original data array to provide a stable sort.\n           *\n           * Note - I know it seems excessive to have two sorting methods, but the first is around\n           * 15% faster, so the second is only maintained for backwards compatibility with sorting\n           * methods which do not have a pre-sort formatting function.\n           */\n          if (formatters === aSort.length) {\n            // All sort types have formatting functions\n            displayMaster.sort(function (a, b) {\n              var x,\n                y,\n                k,\n                test,\n                sort,\n                len = aSort.length,\n                dataA = aoData[a]._aSortData,\n                dataB = aoData[b]._aSortData\n\n              for (k = 0; k < len; k++) {\n                sort = aSort[k]\n\n                x = dataA[sort.col]\n                y = dataB[sort.col]\n\n                test = x < y ? -1 : x > y ? 1 : 0\n                if (test !== 0) {\n                  return sort.dir === 'asc' ? test : -test\n                }\n              }\n\n              x = aiOrig[a]\n              y = aiOrig[b]\n              return x < y ? -1 : x > y ? 1 : 0\n            })\n          } else {\n            // Depreciated - remove in 1.11 (providing a plug-in option)\n            // Not all sort types have formatting methods, so we have to call their sorting\n            // methods.\n            displayMaster.sort(function (a, b) {\n              var x,\n                y,\n                k,\n                l,\n                test,\n                sort,\n                fn,\n                len = aSort.length,\n                dataA = aoData[a]._aSortData,\n                dataB = aoData[b]._aSortData\n\n              for (k = 0; k < len; k++) {\n                sort = aSort[k]\n\n                x = dataA[sort.col]\n                y = dataB[sort.col]\n\n                fn = oExtSort[sort.type + '-' + sort.dir] || oExtSort['string-' + sort.dir]\n                test = fn(x, y)\n                if (test !== 0) {\n                  return test\n                }\n              }\n\n              x = aiOrig[a]\n              y = aiOrig[b]\n              return x < y ? -1 : x > y ? 1 : 0\n            })\n          }\n        }\n\n        /* Tell the draw function that we have sorted the data */\n        oSettings.bSorted = true\n      }\n\n      function _fnSortAria (settings) {\n        var label\n        var nextSort\n        var columns = settings.aoColumns\n        var aSort = _fnSortFlatten(settings)\n        var oAria = settings.oLanguage.oAria\n\n        // ARIA attributes - need to loop all columns, to update all (removing old\n        // attributes as needed)\n        for (var i = 0, iLen = columns.length; i < iLen; i++) {\n          var col = columns[i]\n          var asSorting = col.asSorting\n          var sTitle = col.sTitle.replace(/<.*?>/g, '')\n          var th = col.nTh\n\n          // IE7 is throwing an error when setting these properties with jQuery's\n          // attr() and removeAttr() methods...\n          th.removeAttribute('aria-sort')\n\n          /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n          if (col.bSortable) {\n            if (aSort.length > 0 && aSort[0].col == i) {\n              th.setAttribute('aria-sort', aSort[0].dir == 'asc' ? 'ascending' : 'descending')\n              nextSort = asSorting[aSort[0].index + 1] || asSorting[0]\n            } else {\n              nextSort = asSorting[0]\n            }\n\n            label = sTitle + (nextSort === 'asc' ? oAria.sSortAscending : oAria.sSortDescending)\n          } else {\n            label = sTitle\n          }\n\n          th.setAttribute('aria-label', label)\n        }\n      }\n\n      /**\n       * Function to run on user sort request\n       *  @param {object} settings dataTables settings object\n       *  @param {node} attachTo node to attach the handler to\n       *  @param {int} colIdx column sorting index\n       *  @param {boolean} [append=false] Append the requested sort to the existing\n       *    sort if true (i.e. multi-column sort)\n       *  @param {function} [callback] callback function\n       *  @memberof DataTable#oApi\n       */\n      function _fnSortListener (settings, colIdx, append, callback) {\n        var col = settings.aoColumns[colIdx]\n        var sorting = settings.aaSorting\n        var asSorting = col.asSorting\n        var nextSortIdx\n        var next = function (a) {\n          var idx = a._idx\n          if (idx === undefined) {\n            idx = $.inArray(a[1], asSorting)\n          }\n\n          return idx + 1 >= asSorting.length ? 0 : idx + 1\n        }\n\n        // Convert to 2D array if needed\n        if (typeof sorting[0] === 'number') {\n          sorting = settings.aaSorting = [sorting]\n        }\n\n        // If appending the sort then we are multi-column sorting\n        if (append && settings.oFeatures.bSortMulti) {\n          // Are we already doing some kind of sort on this column?\n          var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'))\n\n          if (sortIdx !== -1) {\n            // Yes, modify the sort\n            nextSortIdx = next(sorting[sortIdx])\n\n            sorting[sortIdx][1] = asSorting[nextSortIdx]\n            sorting[sortIdx]._idx = nextSortIdx\n          } else {\n            // No sort on this column yet\n            sorting.push([colIdx, asSorting[0], 0])\n            sorting[sorting.length - 1]._idx = 0\n          }\n        } else if (sorting.length && sorting[0][0] == colIdx) {\n          // Single column - already sorting on this column, modify the sort\n          nextSortIdx = next(sorting[0])\n\n          sorting.length = 1\n          sorting[0][1] = asSorting[nextSortIdx]\n          sorting[0]._idx = nextSortIdx\n        } else {\n          // Single column - sort only on this column\n          sorting.length = 0\n          sorting.push([colIdx, asSorting[0]])\n          sorting[0]._idx = 0\n        }\n\n        // Run the sort by calling a full redraw\n        _fnReDraw(settings)\n\n        // callback used for async user interaction\n        if (typeof callback == 'function') {\n          callback(settings)\n        }\n      }\n\n      /**\n       * Attach a sort handler (click) to a node\n       *  @param {object} settings dataTables settings object\n       *  @param {node} attachTo node to attach the handler to\n       *  @param {int} colIdx column sorting index\n       *  @param {function} [callback] callback function\n       *  @memberof DataTable#oApi\n       */\n      function _fnSortAttachListener (settings, attachTo, colIdx, callback) {\n        var col = settings.aoColumns[colIdx]\n\n        _fnBindAction(attachTo, {}, function (e) {\n          /* If the column is not sortable - don't to anything */\n          if (col.bSortable === false) {\n            return\n          }\n\n          // If processing is enabled use a timeout to allow the processing\n          // display to be shown - otherwise to it synchronously\n          if (settings.oFeatures.bProcessing) {\n            _fnProcessingDisplay(settings, true)\n\n            setTimeout(function () {\n              _fnSortListener(settings, colIdx, e.shiftKey, callback)\n\n              // In server-side processing, the draw callback will remove the\n              // processing display\n              if (_fnDataSource(settings) !== 'ssp') {\n                _fnProcessingDisplay(settings, false)\n              }\n            }, 0)\n          } else {\n            _fnSortListener(settings, colIdx, e.shiftKey, callback)\n          }\n        })\n      }\n\n      /**\n       * Set the sorting classes on table's body, Note: it is safe to call this function\n       * when bSort and bSortClasses are false\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnSortingClasses (settings) {\n        var oldSort = settings.aLastSort\n        var sortClass = settings.oClasses.sSortColumn\n        var sort = _fnSortFlatten(settings)\n        var features = settings.oFeatures\n        var i, ien, colIdx\n\n        if (features.bSort && features.bSortClasses) {\n          // Remove old sorting classes\n          for (i = 0, ien = oldSort.length; i < ien; i++) {\n            colIdx = oldSort[i].src\n\n            // Remove column sorting\n            $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3))\n          }\n\n          // Add new column sorting\n          for (i = 0, ien = sort.length; i < ien; i++) {\n            colIdx = sort[i].src\n\n            $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3))\n          }\n        }\n\n        settings.aLastSort = sort\n      }\n\n      // Get the data to sort a column, be it from cache, fresh (populating the\n      // cache), or from a sort formatter\n      function _fnSortData (settings, idx) {\n        // Custom sorting function - provided by the sort data type\n        var column = settings.aoColumns[idx]\n        var customSort = DataTable.ext.order[column.sSortDataType]\n        var customData\n\n        if (customSort) {\n          customData = customSort.call(settings.oInstance, settings, idx, _fnColumnIndexToVisible(settings, idx))\n        }\n\n        // Use / populate cache\n        var row, cellData\n        var formatter = DataTable.ext.type.order[column.sType + '-pre']\n\n        for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n          row = settings.aoData[i]\n\n          if (!row._aSortData) {\n            row._aSortData = []\n          }\n\n          if (!row._aSortData[idx] || customSort) {\n            cellData = customSort\n              ? customData[i] // If there was a custom sort function, use data from there\n              : _fnGetCellData(settings, i, idx, 'sort')\n\n            row._aSortData[idx] = formatter ? formatter(cellData) : cellData\n          }\n        }\n      }\n\n      /**\n       * Save the state of a table\n       *  @param {object} oSettings dataTables settings object\n       *  @memberof DataTable#oApi\n       */\n      function _fnSaveState (settings) {\n        if (!settings.oFeatures.bStateSave || settings.bDestroying) {\n          return\n        }\n\n        /* Store the interesting variables */\n        var state = {\n          time: +new Date(),\n          start: settings._iDisplayStart,\n          length: settings._iDisplayLength,\n          order: $.extend(true, [], settings.aaSorting),\n          search: _fnSearchToCamel(settings.oPreviousSearch),\n          columns: $.map(settings.aoColumns, function (col, i) {\n            return {\n              visible: col.bVisible,\n              search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n            }\n          })\n        }\n\n        _fnCallbackFire(settings, 'aoStateSaveParams', 'stateSaveParams', [settings, state])\n\n        settings.oSavedState = state\n        settings.fnStateSaveCallback.call(settings.oInstance, settings, state)\n      }\n\n      /**\n       * Attempt to load a saved table state\n       *  @param {object} oSettings dataTables settings object\n       *  @param {object} oInit DataTables init object so we can override settings\n       *  @memberof DataTable#oApi\n       */\n      function _fnLoadState (settings, oInit) {\n        var i, ien\n        var columns = settings.aoColumns\n\n        if (!settings.oFeatures.bStateSave) {\n          return\n        }\n\n        var state = settings.fnStateLoadCallback.call(settings.oInstance, settings)\n        if (!state || !state.time) {\n          return\n        }\n\n        /* Allow custom and plug-in manipulation functions to alter the saved data set and\n         * cancelling of loading by returning false\n         */\n        var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state])\n        if ($.inArray(false, abStateLoad) !== -1) {\n          return\n        }\n\n        /* Reject old data */\n        var duration = settings.iStateDuration\n        if (duration > 0 && state.time < +new Date() - duration * 1000) {\n          return\n        }\n\n        // Number of columns have changed - all bets are off, no restore of settings\n        if (columns.length !== state.columns.length) {\n          return\n        }\n\n        // Store the saved state so it might be accessed at any time\n        settings.oLoadedState = $.extend(true, {}, state)\n\n        // Restore key features - todo - for 1.11 this needs to be done by\n        // subscribed events\n        settings._iDisplayStart = state.start\n        settings.iInitDisplayStart = state.start\n        settings._iDisplayLength = state.length\n        settings.aaSorting = []\n\n        // Order\n        $.each(state.order, function (i, col) {\n          settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col)\n        })\n\n        // Search\n        $.extend(settings.oPreviousSearch, _fnSearchToHung(state.search))\n\n        // Columns\n        for (i = 0, ien = state.columns.length; i < ien; i++) {\n          var col = state.columns[i]\n\n          // Visibility\n          columns[i].bVisible = col.visible\n\n          // Search\n          $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search))\n        }\n\n        _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, state])\n      }\n\n      /**\n       * Return the settings object for a particular table\n       *  @param {node} table table we are using as a dataTable\n       *  @returns {object} Settings object - or null if not found\n       *  @memberof DataTable#oApi\n       */\n      function _fnSettingsFromNode (table) {\n        var settings = DataTable.settings\n        var idx = $.inArray(table, _pluck(settings, 'nTable'))\n\n        return idx !== -1 ? settings[idx] : null\n      }\n\n      /**\n       * Log an error message\n       *  @param {object} settings dataTables settings object\n       *  @param {int} level log error messages, or display them to the user\n       *  @param {string} msg error message\n       *  @param {int} tn Technical note id to get more information about the error.\n       *  @memberof DataTable#oApi\n       */\n      function _fnLog (settings, level, msg, tn) {\n        msg = 'DataTables warning: ' + (settings !== null ? 'table id=' + settings.sTableId + ' - ' : '') + msg\n\n        if (tn) {\n          msg += '. For more information about this error, please see ' + 'http://datatables.net/tn/' + tn\n        }\n\n        if (!level) {\n          // Backwards compatibility pre 1.10\n          var ext = DataTable.ext\n          var type = ext.sErrMode || ext.errMode\n\n          if (type == 'alert') {\n            alert(msg)\n          } else {\n            throw new Error(msg)\n          }\n        } else if (window.console && console.log) {\n          console.log(msg)\n        }\n      }\n\n      /**\n       * See if a property is defined on one object, if so assign it to the other object\n       *  @param {object} ret target object\n       *  @param {object} src source object\n       *  @param {string} name property\n       *  @param {string} [mappedName] name to map too - optional, name used if not given\n       *  @memberof DataTable#oApi\n       */\n      function _fnMap (ret, src, name, mappedName) {\n        if ($.isArray(name)) {\n          $.each(name, function (i, val) {\n            if ($.isArray(val)) {\n              _fnMap(ret, src, val[0], val[1])\n            } else {\n              _fnMap(ret, src, val)\n            }\n          })\n\n          return\n        }\n\n        if (mappedName === undefined) {\n          mappedName = name\n        }\n\n        if (src[name] !== undefined) {\n          ret[mappedName] = src[name]\n        }\n      }\n\n      /**\n       * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n       * shallow copy arrays. The reason we need to do this, is that we don't want to\n       * deep copy array init values (such as aaSorting) since the dev wouldn't be\n       * able to override them, but we do want to deep copy arrays.\n       *  @param {object} out Object to extend\n       *  @param {object} extender Object from which the properties will be applied to\n       *      out\n       *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n       *      independent copy with the exception of the `data` or `aaData` parameters\n       *      if they are present. This is so you can pass in a collection to\n       *      DataTables and have that used as your data source without breaking the\n       *      references\n       *  @returns {object} out Reference, just for convenience - out === the return.\n       *  @memberof DataTable#oApi\n       *  @todo This doesn't take account of arrays inside the deep copied objects.\n       */\n      function _fnExtend (out, extender, breakRefs) {\n        var val\n\n        for (var prop in extender) {\n          if (extender.hasOwnProperty(prop)) {\n            val = extender[prop]\n\n            if ($.isPlainObject(val)) {\n              if (!$.isPlainObject(out[prop])) {\n                out[prop] = {}\n              }\n              $.extend(true, out[prop], val)\n            } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val)) {\n              out[prop] = val.slice()\n            } else {\n              out[prop] = val\n            }\n          }\n        }\n\n        return out\n      }\n\n      /**\n       * Bind an event handers to allow a click or return key to activate the callback.\n       * This is good for accessibility since a return on the keyboard will have the\n       * same effect as a click, if the element has focus.\n       *  @param {element} n Element to bind the action to\n       *  @param {object} oData Data object to pass to the triggered function\n       *  @param {function} fn Callback function for when the event is triggered\n       *  @memberof DataTable#oApi\n       */\n      function _fnBindAction (n, oData, fn) {\n        $(n)\n          .bind('click.DT', oData, function (e) {\n            n.blur() // Remove focus outline for mouse users\n            fn(e)\n          })\n          .bind('keypress.DT', oData, function (e) {\n            if (e.which === 13) {\n              e.preventDefault()\n              fn(e)\n            }\n          })\n          .bind('selectstart.DT', function () {\n            /* Take the brutal approach to cancelling text selection */\n            return false\n          })\n      }\n\n      /**\n       * Register a callback function. Easily allows a callback function to be added to\n       * an array store of callback functions that can then all be called together.\n       *  @param {object} oSettings dataTables settings object\n       *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n       *  @param {function} fn Function to be called back\n       *  @param {string} sName Identifying name for the callback (i.e. a label)\n       *  @memberof DataTable#oApi\n       */\n      function _fnCallbackReg (oSettings, sStore, fn, sName) {\n        if (fn) {\n          oSettings[sStore].push({\n            fn: fn,\n            sName: sName\n          })\n        }\n      }\n\n      /**\n       * Fire callback functions and trigger events. Note that the loop over the\n       * callback array store is done backwards! Further note that you do not want to\n       * fire off triggers in time sensitive applications (for example cell creation)\n       * as its slow.\n       *  @param {object} settings dataTables settings object\n       *  @param {string} callbackArr Name of the array storage for the callbacks in\n       *      oSettings\n       *  @param {string} event Name of the jQuery custom event to trigger. If null no\n       *      trigger is fired\n       *  @param {array} args Array of arguments to pass to the callback function /\n       *      trigger\n       *  @memberof DataTable#oApi\n       */\n      function _fnCallbackFire (settings, callbackArr, e, args) {\n        var ret = []\n\n        if (callbackArr) {\n          ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n            return val.fn.apply(settings.oInstance, args)\n          })\n        }\n\n        if (e !== null) {\n          $(settings.nTable).trigger(e + '.dt', args)\n        }\n\n        return ret\n      }\n\n      function _fnLengthOverflow (settings) {\n        var start = settings._iDisplayStart,\n          end = settings.fnDisplayEnd(),\n          len = settings._iDisplayLength\n\n        /* If we have space to show extra rows (backing up from the end point - then do so */\n        if (end === settings.fnRecordsDisplay()) {\n          start = end - len\n        }\n\n        if (len === -1 || start < 0) {\n          start = 0\n        }\n\n        settings._iDisplayStart = start\n      }\n\n      function _fnRenderer (settings, type) {\n        var renderer = settings.renderer\n        var host = DataTable.ext.renderer[type]\n\n        if ($.isPlainObject(renderer) && renderer[type]) {\n          // Specific renderer for this type. If available use it, otherwise use\n          // the default.\n          return host[renderer[type]] || host._\n        } else if (typeof renderer === 'string') {\n          // Common renderer - if there is one available for this type use it,\n          // otherwise use the default\n          return host[renderer] || host._\n        }\n\n        // Use the default\n        return host._\n      }\n\n      /**\n       * Detect the data source being used for the table. Used to simplify the code\n       * a little (ajax) and to make it compress a little smaller.\n       *\n       *  @param {object} settings dataTables settings object\n       *  @returns {string} Data source\n       *  @memberof DataTable#oApi\n       */\n      function _fnDataSource (settings) {\n        if (settings.oFeatures.bServerSide) {\n          return 'ssp'\n        } else if (settings.ajax || settings.sAjaxSource) {\n          return 'ajax'\n        }\n        return 'dom'\n      }\n\n      DataTable = function (options) {\n        /**\n         * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n         * return the resulting jQuery object.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n         *    criterion (\"applied\") or all TR elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {object} jQuery object, filtered by the given selector.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Highlight every second row\n         *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to rows with 'Webkit' in them, add a background colour and then\n         *      // remove the filter, thus highlighting the 'Webkit' rows only.\n         *      oTable.fnFilter('Webkit');\n         *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n         *      oTable.fnFilter('');\n         *    } );\n         */\n        this.$ = function (sSelector, oOpts) {\n          return this.api(true).$(sSelector, oOpts)\n        }\n\n        /**\n         * Almost identical to $ in operation, but in this case returns the data for the matched\n         * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n         * rather than any descendants, so the data can be obtained for the row/cell. If matching\n         * rows are found, the data returned is the original data array/object that was used to\n         * create the row (or a generated array if from a DOM source).\n         *\n         * This method is often useful in-combination with $ where both functions are given the\n         * same parameters and the array indexes will match identically.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n         *    criterion (\"applied\") or all elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {array} Data for the matched elements. If any elements, as a result of the\n         *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n         *    entry in the array.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the data from the first row in the table\n         *      var data = oTable._('tr:first');\n         *\n         *      // Do something useful with the data\n         *      alert( \"First cell is: \"+data[0] );\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to 'Webkit' and get all data for\n         *      oTable.fnFilter('Webkit');\n         *      var data = oTable._('tr', {\"search\": \"applied\"});\n         *\n         *      // Do something with the data\n         *      alert( data.length+\" rows matched the search\" );\n         *    } );\n         */\n        this._ = function (sSelector, oOpts) {\n          return this.api(true)\n            .rows(sSelector, oOpts)\n            .data()\n        }\n\n        /**\n         * Create a DataTables Api instance, with the currently selected tables for\n         * the Api's context.\n         * @param {boolean} [traditional=false] Set the API instance's context to be\n         *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n         *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n         *   or if all tables captured in the jQuery object should be used.\n         * @return {DataTables.Api}\n         */\n        this.api = function (traditional) {\n          return traditional ? new _Api(_fnSettingsFromNode(this[_ext.iApiIndex])) : new _Api(this)\n        }\n\n        /**\n         * Add a single new row or multiple rows of data to the table. Please note\n         * that this is suitable for client-side processing only - if you are using\n         * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n         * must add it to the data source, i.e. the server-side, through an Ajax call.\n         *  @param {array|object} data The data to be added to the table. This can be:\n         *    <ul>\n         *      <li>1D array of data - add a single row with the data provided</li>\n         *      <li>2D array of arrays - add multiple rows in a single call</li>\n         *      <li>object - data object when using <i>mData</i></li>\n         *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n         *    </ul>\n         *  @param {bool} [redraw=true] redraw the table or not\n         *  @returns {array} An array of integers, representing the list of indexes in\n         *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n         *    the table.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Global var for counter\n         *    var giCount = 2;\n         *\n         *    $(document).ready(function() {\n         *      $('#example').dataTable();\n         *    } );\n         *\n         *    function fnClickAddRow() {\n         *      $('#example').dataTable().fnAddData( [\n         *        giCount+\".1\",\n         *        giCount+\".2\",\n         *        giCount+\".3\",\n         *        giCount+\".4\" ]\n         *      );\n         *\n         *      giCount++;\n         *    }\n         */\n        this.fnAddData = function (data, redraw) {\n          var api = this.api(true)\n\n          /* Check if we want to add multiple rows or not */\n          var rows =\n            $.isArray(data) && ($.isArray(data[0]) || $.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data)\n\n          if (redraw === undefined || redraw) {\n            api.draw()\n          }\n\n          return rows.flatten().toArray()\n        }\n\n        /**\n         * This function will make DataTables recalculate the column sizes, based on the data\n         * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n         * through the sWidth parameter). This can be useful when the width of the table's\n         * parent element changes (for example a window resize).\n         *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable( {\n         *        \"sScrollY\": \"200px\",\n         *        \"bPaginate\": false\n         *      } );\n         *\n         *      $(window).bind('resize', function () {\n         *        oTable.fnAdjustColumnSizing();\n         *      } );\n         *    } );\n         */\n        this.fnAdjustColumnSizing = function (bRedraw) {\n          var api = this.api(true).columns.adjust()\n          var settings = api.settings()[0]\n          var scroll = settings.oScroll\n\n          if (bRedraw === undefined || bRedraw) {\n            api.draw(false)\n          } else if (scroll.sX !== '' || scroll.sY !== '') {\n            /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n            _fnScrollDraw(settings)\n          }\n        }\n\n        /**\n         * Quickly and simply clear a table\n         *  @param {bool} [bRedraw=true] redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n         *      oTable.fnClearTable();\n         *    } );\n         */\n        this.fnClearTable = function (bRedraw) {\n          var api = this.api(true).clear()\n\n          if (bRedraw === undefined || bRedraw) {\n            api.draw()\n          }\n        }\n\n        /**\n         * The exact opposite of 'opening' a row, this function will close any rows which\n         * are currently 'open'.\n         *  @param {node} nTr the table row to 'close'\n         *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnClose = function (nTr) {\n          this.api(true)\n            .row(nTr)\n            .child.hide()\n        }\n\n        /**\n         * Remove a row for the table\n         *  @param {mixed} target The index of the row from aoData to be deleted, or\n         *    the TR element you want to delete\n         *  @param {function|null} [callBack] Callback function\n         *  @param {bool} [redraw=true] Redraw the table or not\n         *  @returns {array} The row that was deleted\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately remove the first row\n         *      oTable.fnDeleteRow( 0 );\n         *    } );\n         */\n        this.fnDeleteRow = function (target, callback, redraw) {\n          var api = this.api(true)\n          var rows = api.rows(target)\n          var settings = rows.settings()[0]\n          var data = settings.aoData[rows[0][0]]\n\n          rows.remove()\n\n          if (callback) {\n            callback.call(this, settings, data)\n          }\n\n          if (redraw === undefined || redraw) {\n            api.draw()\n          }\n\n          return data\n        }\n\n        /**\n         * Restore the table to it's original state in the DOM by removing all of DataTables\n         * enhancements, alterations to the DOM structure of the table and event listeners.\n         *  @param {boolean} [remove=false] Completely remove the table from the DOM\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnDestroy();\n         *    } );\n         */\n        this.fnDestroy = function (remove) {\n          this.api(true).destroy(remove)\n        }\n\n        /**\n         * Redraw the table\n         *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n         *      oTable.fnDraw();\n         *    } );\n         */\n        this.fnDraw = function (complete) {\n          // Note that this isn't an exact match to the old call to _fnDraw - it takes\n          // into account the new data, but can old position.\n          this.api(true).draw(!complete)\n        }\n\n        /**\n         * Filter the input based on data\n         *  @param {string} sInput String to filter the table on\n         *  @param {int|null} [iColumn] Column to limit filtering to\n         *  @param {bool} [bRegex=false] Treat as regular expression or not\n         *  @param {bool} [bSmart=true] Perform smart filtering or not\n         *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n         *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sometime later - filter...\n         *      oTable.fnFilter( 'test string' );\n         *    } );\n         */\n        this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n          var api = this.api(true)\n\n          if (iColumn === null || iColumn === undefined) {\n            api.search(sInput, bRegex, bSmart, bCaseInsensitive)\n          } else {\n            api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive)\n          }\n\n          api.draw()\n        }\n\n        /**\n         * Get the data for the whole table, an individual row or an individual cell based on the\n         * provided parameters.\n         *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n         *    a TR node then the data source for the whole row will be returned. If given as a\n         *    TD/TH cell node then iCol will be automatically calculated and the data for the\n         *    cell returned. If given as an integer, then this is treated as the aoData internal\n         *    data index for the row (see fnGetPosition) and the data for that row used.\n         *  @param {int} [col] Optional column index that you want the data of.\n         *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n         *    returned. If mRow is defined, just data for that row, and is iCol is\n         *    defined, only data for the designated cell is returned.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Row data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('tr').click( function () {\n         *        var data = oTable.fnGetData( this );\n         *        // ... do something with the array / object of data for the row\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Individual cell data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('td').click( function () {\n         *        var sData = oTable.fnGetData( this );\n         *        alert( 'The cell clicked on had the value of '+sData );\n         *      } );\n         *    } );\n         */\n        this.fnGetData = function (src, col) {\n          var api = this.api(true)\n\n          if (src !== undefined) {\n            var type = src.nodeName ? src.nodeName.toLowerCase() : ''\n\n            return col !== undefined || type == 'td' || type == 'th'\n              ? api.cell(src, col).data()\n              : api.row(src).data() || null\n          }\n\n          return api.data().toArray()\n        }\n\n        /**\n         * Get an array of the TR nodes that are used in the table's body. Note that you will\n         * typically want to use the '$' API method in preference to this as it is more\n         * flexible.\n         *  @param {int} [iRow] Optional row index for the TR element you want\n         *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n         *    in the table's body, or iRow is defined, just the TR element requested.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the nodes from the table\n         *      var nNodes = oTable.fnGetNodes( );\n         *    } );\n         */\n        this.fnGetNodes = function (iRow) {\n          var api = this.api(true)\n\n          return iRow !== undefined\n            ? api.row(iRow).node()\n            : api\n                .rows()\n                .nodes()\n                .flatten()\n                .toArray()\n        }\n\n        /**\n         * Get the array indexes of a particular cell from it's DOM element\n         * and column index including hidden columns\n         *  @param {node} node this can either be a TR, TD or TH in the table's body\n         *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n         *    if given as a cell, an array of [row index, column index (visible),\n         *    column index (all)] is given.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      $('#example tbody td').click( function () {\n         *        // Get the position of the current data from the node\n         *        var aPos = oTable.fnGetPosition( this );\n         *\n         *        // Get the data array for this row\n         *        var aData = oTable.fnGetData( aPos[0] );\n         *\n         *        // Update the data array and return the value\n         *        aData[ aPos[1] ] = 'clicked';\n         *        this.innerHTML = 'clicked';\n         *      } );\n         *\n         *      // Init DataTables\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnGetPosition = function (node) {\n          var api = this.api(true)\n          var nodeName = node.nodeName.toUpperCase()\n\n          if (nodeName == 'TR') {\n            return api.row(node).index()\n          } else if (nodeName == 'TD' || nodeName == 'TH') {\n            var cell = api.cell(node).index()\n\n            return [cell.row, cell.columnVisible, cell.column]\n          }\n          return null\n        }\n\n        /**\n         * Check to see if a row is 'open' or not.\n         *  @param {node} nTr the table row to check\n         *  @returns {boolean} true if the row is currently open, false otherwise\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnIsOpen = function (nTr) {\n          return this.api(true)\n            .row(nTr)\n            .child.isShown()\n        }\n\n        /**\n         * This function will place a new row directly after a row which is currently\n         * on display on the page, with the HTML contents that is passed into the\n         * function. This can be used, for example, to ask for confirmation that a\n         * particular record should be deleted.\n         *  @param {node} nTr The table row to 'open'\n         *  @param {string|node|jQuery} mHtml The HTML to put into the row\n         *  @param {string} sClass Class to give the new TD cell\n         *  @returns {node} The row opened. Note that if the table row passed in as the\n         *    first parameter, is not found in the table, this method will silently\n         *    return.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnOpen = function (nTr, mHtml, sClass) {\n          return this.api(true)\n            .row(nTr)\n            .child(mHtml, sClass)\n            .show()\n            .child()[0]\n        }\n\n        /**\n         * Change the pagination - provides the internal logic for pagination in a simple API\n         * function. With this function you can have a DataTables table go to the next,\n         * previous, first or last pages.\n         *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n         *    or page number to jump to (integer), note that page 0 is the first page.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnPageChange( 'next' );\n         *    } );\n         */\n        this.fnPageChange = function (mAction, bRedraw) {\n          var api = this.api(true).page(mAction)\n\n          if (bRedraw === undefined || bRedraw) {\n            api.draw(false)\n          }\n        }\n\n        /**\n         * Show a particular column\n         *  @param {int} iCol The column whose display should be changed\n         *  @param {bool} bShow Show (true) or hide (false) the column\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Hide the second column after initialisation\n         *      oTable.fnSetColumnVis( 1, false );\n         *    } );\n         */\n        this.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n          var api = this.api(true)\n            .column(iCol)\n            .visible(bShow)\n\n          if (bRedraw === undefined || bRedraw) {\n            api.columns.adjust().draw()\n          }\n        }\n\n        /**\n         * Get the settings for a particular table for external manipulation\n         *  @returns {object} DataTables settings object. See\n         *    {@link DataTable.models.oSettings}\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      var oSettings = oTable.fnSettings();\n         *\n         *      // Show an example parameter from the settings\n         *      alert( oSettings._iDisplayStart );\n         *    } );\n         */\n        this.fnSettings = function () {\n          return _fnSettingsFromNode(this[_ext.iApiIndex])\n        }\n\n        /**\n         * Sort the table by a particular column\n         *  @param {int} iCol the data index to sort on. Note that this will not match the\n         *    'display index' if you have hidden data entries\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort immediately with columns 0 and 1\n         *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n         *    } );\n         */\n        this.fnSort = function (aaSort) {\n          this.api(true)\n            .order(aaSort)\n            .draw()\n        }\n\n        /**\n         * Attach a sort listener to an element for a given column\n         *  @param {node} nNode the element to attach the sort listener to\n         *  @param {int} iColumn the column that a click on this node will sort on\n         *  @param {function} [fnCallback] callback function when sort is run\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort on column 1, when 'sorter' is clicked on\n         *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n         *    } );\n         */\n        this.fnSortListener = function (nNode, iColumn, fnCallback) {\n          this.api(true).order.listener(nNode, iColumn, fnCallback)\n        }\n\n        /**\n         * Update a table cell or row - this method will accept either a single value to\n         * update the cell with, an array of values with one element for each column or\n         * an object in the same format as the original data source. The function is\n         * self-referencing in order to make the multi column updates easier.\n         *  @param {object|array|string} mData Data to update the cell/row with\n         *  @param {node|int} mRow TR element you want to update or the aoData index\n         *  @param {int} [iColumn] The column to update, give as null or undefined to\n         *    update a whole row.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @param {bool} [bAction=true] Perform pre-draw actions or not\n         *  @returns {int} 0 on success, 1 on error\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n         *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n         *    } );\n         */\n        this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n          var api = this.api(true)\n\n          if (iColumn === undefined || iColumn === null) {\n            api.row(mRow).data(mData)\n          } else {\n            api.cell(mRow, iColumn).data(mData)\n          }\n\n          if (bAction === undefined || bAction) {\n            api.columns.adjust()\n          }\n\n          if (bRedraw === undefined || bRedraw) {\n            api.draw()\n          }\n          return 0\n        }\n\n        /**\n         * Provide a common method for plug-ins to check the version of DataTables being used, in order\n         * to ensure compatibility.\n         *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n         *    formats \"X\" and \"X.Y\" are also acceptable.\n         *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n         *    version, or false if this version of DataTales is not suitable\n         *  @method\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n         *    } );\n         */\n        this.fnVersionCheck = _ext.fnVersionCheck\n\n        var _that = this\n        var emptyInit = options === undefined\n        var len = this.length\n\n        if (emptyInit) {\n          options = {}\n        }\n\n        this.oApi = this.internal = _ext.internal\n\n        // Extend with old style plug-in API methods\n        for (var fn in DataTable.ext.internal) {\n          if (fn) {\n            this[fn] = _fnExternApiFunc(fn)\n          }\n        }\n\n        this.each(function () {\n          // For each initialisation we want to give it a clean initialisation\n          // object that can be bashed around\n          var o = {}\n          var oInit =\n            len > 1 // optimisation for single table case\n              ? _fnExtend(o, options, true)\n              : options\n\n          /*global oInit,_that,emptyInit*/\n          var i = 0,\n            iLen,\n            j,\n            jLen,\n            k,\n            kLen\n          var sId = this.getAttribute('id')\n          var bInitHandedOff = false\n          var defaults = DataTable.defaults\n\n          /* Sanity check */\n          if (this.nodeName.toLowerCase() != 'table') {\n            _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2)\n            return\n          }\n\n          /* Backwards compatibility for the defaults */\n          _fnCompatOpts(defaults)\n          _fnCompatCols(defaults.column)\n\n          /* Convert the camel-case defaults to Hungarian */\n          _fnCamelToHungarian(defaults, defaults, true)\n          _fnCamelToHungarian(defaults.column, defaults.column, true)\n\n          /* Setting up the initialisation object */\n          _fnCamelToHungarian(defaults, oInit)\n\n          /* Check to see if we are re-initialising a table */\n          var allSettings = DataTable.settings\n          for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n            /* Base check on table node */\n            if (allSettings[i].nTable == this) {\n              var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve\n              var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy\n\n              if (emptyInit || bRetrieve) {\n                return allSettings[i].oInstance\n              } else if (bDestroy) {\n                allSettings[i].oInstance.fnDestroy()\n                break\n              } else {\n                _fnLog(allSettings[i], 0, 'Cannot reinitialise DataTable', 3)\n                return\n              }\n            }\n\n            /* If the element we are initialising has the same ID as a table which was previously\n             * initialised, but the table nodes don't match (from before) then we destroy the old\n             * instance by simply deleting it. This is under the assumption that the table has been\n             * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n             */\n            if (allSettings[i].sTableId == this.id) {\n              allSettings.splice(i, 1)\n              break\n            }\n          }\n\n          /* Ensure the table has an ID - required for accessibility */\n          if (sId === null || sId === '') {\n            sId = 'DataTables_Table_' + DataTable.ext._unique++\n            this.id = sId\n          }\n\n          /* Create the settings object for this table and set some of the default parameters */\n          var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n            nTable: this,\n            oApi: _that.internal,\n            oInit: oInit,\n            sDestroyWidth: $(this)[0].style.width,\n            sInstance: sId,\n            sTableId: sId\n          })\n          allSettings.push(oSettings)\n\n          // Need to add the instance after the instance after the settings object has been added\n          // to the settings array, so we can self reference the table instance if more than one\n          oSettings.oInstance = _that.length === 1 ? _that : $(this).dataTable()\n\n          // Backwards compatibility, before we apply all the defaults\n          _fnCompatOpts(oInit)\n\n          if (oInit.oLanguage) {\n            _fnLanguageCompat(oInit.oLanguage)\n          }\n\n          // If the length menu is given, but the init display length is not, use the length menu\n          if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n            oInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0]\n          }\n\n          // Apply the defaults and init options to make a single init object will all\n          // options defined from defaults and instance options.\n          oInit = _fnExtend($.extend(true, {}, defaults), oInit)\n\n          // Map the initialisation options onto the settings object\n          _fnMap(oSettings.oFeatures, oInit, [\n            'bPaginate',\n            'bLengthChange',\n            'bFilter',\n            'bSort',\n            'bSortMulti',\n            'bInfo',\n            'bProcessing',\n            'bAutoWidth',\n            'bSortClasses',\n            'bServerSide',\n            'bDeferRender'\n          ])\n          _fnMap(oSettings, oInit, [\n            'asStripeClasses',\n            'ajax',\n            'fnServerData',\n            'fnFormatNumber',\n            'sServerMethod',\n            'aaSorting',\n            'aaSortingFixed',\n            'aLengthMenu',\n            'sPaginationType',\n            'sAjaxSource',\n            'sAjaxDataProp',\n            'iStateDuration',\n            'sDom',\n            'bSortCellsTop',\n            'iTabIndex',\n            'fnStateLoadCallback',\n            'fnStateSaveCallback',\n            'renderer',\n            ['iCookieDuration', 'iStateDuration'], // backwards compat\n            ['oSearch', 'oPreviousSearch'],\n            ['aoSearchCols', 'aoPreSearchCols'],\n            ['iDisplayLength', '_iDisplayLength'],\n            ['bJQueryUI', 'bJUI']\n          ])\n          _fnMap(oSettings.oScroll, oInit, [\n            ['sScrollX', 'sX'],\n            ['sScrollXInner', 'sXInner'],\n            ['sScrollY', 'sY'],\n            ['bScrollCollapse', 'bCollapse']\n          ])\n          _fnMap(oSettings.oLanguage, oInit, 'fnInfoCallback')\n\n          /* Callback functions which are array driven */\n          _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user')\n          _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user')\n          _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user')\n          _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user')\n          _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user')\n          _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user')\n          _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user')\n          _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user')\n          _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user')\n          _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user')\n          _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user')\n\n          var oClasses = oSettings.oClasses\n\n          // @todo Remove in 1.11\n          if (oInit.bJQueryUI) {\n            /* Use the JUI classes object for display. You could clone the oStdClasses object if\n             * you want to have multiple tables with multiple independent classes\n             */\n            $.extend(oClasses, DataTable.ext.oJUIClasses, oInit.oClasses)\n\n            if (oInit.sDom === defaults.sDom && defaults.sDom === 'lfrtip') {\n              /* Set the DOM to use a layout suitable for jQuery UI's theming */\n              oSettings.sDom = '<\"H\"lfr>t<\"F\"ip>'\n            }\n\n            if (!oSettings.renderer) {\n              oSettings.renderer = 'jqueryui'\n            } else if ($.isPlainObject(oSettings.renderer) && !oSettings.renderer.header) {\n              oSettings.renderer.header = 'jqueryui'\n            }\n          } else {\n            $.extend(oClasses, DataTable.ext.classes, oInit.oClasses)\n          }\n          $(this).addClass(oClasses.sTable)\n\n          /* Calculate the scroll bar width and cache it for use later on */\n          if (oSettings.oScroll.sX !== '' || oSettings.oScroll.sY !== '') {\n            oSettings.oScroll.iBarWidth = _fnScrollBarWidth()\n          }\n          if (oSettings.oScroll.sX === true) {\n            // Easy initialisation of x-scrolling\n            oSettings.oScroll.sX = '100%'\n          }\n\n          if (oSettings.iInitDisplayStart === undefined) {\n            /* Display start point, taking into account the save saving */\n            oSettings.iInitDisplayStart = oInit.iDisplayStart\n            oSettings._iDisplayStart = oInit.iDisplayStart\n          }\n\n          if (oInit.iDeferLoading !== null) {\n            oSettings.bDeferLoading = true\n            var tmp = $.isArray(oInit.iDeferLoading)\n            oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading\n            oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading\n          }\n\n          /* Language definitions */\n          if (oInit.oLanguage.sUrl !== '') {\n            /* Get the language definitions from a file - because this Ajax call makes the language\n             * get async to the remainder of this function we use bInitHandedOff to indicate that\n             * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n             */\n            oSettings.oLanguage.sUrl = oInit.oLanguage.sUrl\n            $.getJSON(oSettings.oLanguage.sUrl, null, function (json) {\n              _fnLanguageCompat(json)\n              _fnCamelToHungarian(defaults.oLanguage, json)\n              $.extend(true, oSettings.oLanguage, oInit.oLanguage, json)\n              _fnInitialise(oSettings)\n            })\n            bInitHandedOff = true\n          } else {\n            $.extend(true, oSettings.oLanguage, oInit.oLanguage)\n          }\n\n          /*\n           * Stripes\n           */\n          if (oInit.asStripeClasses === null) {\n            oSettings.asStripeClasses = [oClasses.sStripeOdd, oClasses.sStripeEven]\n          }\n\n          /* Remove row stripe classes if they are already on the table row */\n          var stripeClasses = oSettings.asStripeClasses\n          var rowOne = $('tbody tr:eq(0)', this)\n          if (\n            $.inArray(\n              true,\n              $.map(stripeClasses, function (el, i) {\n                return rowOne.hasClass(el)\n              })\n            ) !== -1\n          ) {\n            $('tbody tr', this).removeClass(stripeClasses.join(' '))\n            oSettings.asDestroyStripes = stripeClasses.slice()\n          }\n\n          /*\n           * Columns\n           * See if we should load columns automatically or use defined ones\n           */\n          var anThs = []\n          var aoColumnsInit\n          var nThead = this.getElementsByTagName('thead')\n          if (nThead.length !== 0) {\n            _fnDetectHeader(oSettings.aoHeader, nThead[0])\n            anThs = _fnGetUniqueThs(oSettings)\n          }\n\n          /* If not given a column array, generate one with nulls */\n          if (oInit.aoColumns === null) {\n            aoColumnsInit = []\n            for (i = 0, iLen = anThs.length; i < iLen; i++) {\n              aoColumnsInit.push(null)\n            }\n          } else {\n            aoColumnsInit = oInit.aoColumns\n          }\n\n          /* Add the columns */\n          for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n            _fnAddColumn(oSettings, anThs ? anThs[i] : null)\n          }\n\n          /* Apply the column definitions */\n          _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n            _fnColumnOptions(oSettings, iCol, oDef)\n          })\n\n          /* HTML5 attribute detection - build an mData object automatically if the\n           * attributes are found\n           */\n          if (rowOne.length) {\n            var a = function (cell, name) {\n              return cell.getAttribute('data-' + name) ? name : null\n            }\n\n            $.each(_fnGetRowElements(oSettings, rowOne[0]).cells, function (i, cell) {\n              var col = oSettings.aoColumns[i]\n\n              if (col.mData === i) {\n                var sort = a(cell, 'sort') || a(cell, 'order')\n                var filter = a(cell, 'filter') || a(cell, 'search')\n\n                if (sort !== null || filter !== null) {\n                  col.mData = {\n                    _: i + '.display',\n                    sort: sort !== null ? i + '.@data-' + sort : undefined,\n                    type: sort !== null ? i + '.@data-' + sort : undefined,\n                    filter: filter !== null ? i + '.@data-' + filter : undefined\n                  }\n\n                  _fnColumnOptions(oSettings, i)\n                }\n              }\n            })\n          }\n\n          var features = oSettings.oFeatures\n\n          /* Must be done after everything which can be overridden by the state saving! */\n          if (oInit.bStateSave) {\n            features.bStateSave = true\n            _fnLoadState(oSettings, oInit)\n            _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save')\n          }\n\n          /*\n           * Sorting\n           * @todo For modularisation (1.11) this needs to do into a sort start up handler\n           */\n\n          // If aaSorting is not defined, then we use the first indicator in asSorting\n          // in case that has been altered, so the default sort reflects that option\n          if (oInit.aaSorting === undefined) {\n            var sorting = oSettings.aaSorting\n            for (i = 0, iLen = sorting.length; i < iLen; i++) {\n              sorting[i][1] = oSettings.aoColumns[i].asSorting[0]\n            }\n          }\n\n          /* Do a first pass on the sorting classes (allows any size changes to be taken into\n           * account, and also will apply sorting disabled classes if disabled\n           */\n          _fnSortingClasses(oSettings)\n\n          if (features.bSort) {\n            _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n              if (oSettings.bSorted) {\n                var aSort = _fnSortFlatten(oSettings)\n                var sortedColumns = {}\n\n                $.each(aSort, function (i, val) {\n                  sortedColumns[val.src] = val.dir\n                })\n\n                _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns])\n                _fnSortAria(oSettings)\n              }\n            })\n          }\n\n          _fnCallbackReg(\n            oSettings,\n            'aoDrawCallback',\n            function () {\n              if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n                _fnSortingClasses(oSettings)\n              }\n            },\n            'sc'\n          )\n\n          /*\n           * Final init\n           * Cache the header, body and footer as required, creating them if needed\n           */\n\n          /* Browser support detection */\n          _fnBrowserDetect(oSettings)\n\n          // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n          var captions = $(this)\n            .children('caption')\n            .each(function () {\n              this._captionSide = $(this).css('caption-side')\n            })\n\n          var thead = $(this).children('thead')\n          if (thead.length === 0) {\n            thead = $('<thead/>').appendTo(this)\n          }\n          oSettings.nTHead = thead[0]\n\n          var tbody = $(this).children('tbody')\n          if (tbody.length === 0) {\n            tbody = $('<tbody/>').appendTo(this)\n          }\n          oSettings.nTBody = tbody[0]\n\n          var tfoot = $(this).children('tfoot')\n          if (\n            tfoot.length === 0 &&\n            captions.length > 0 &&\n            (oSettings.oScroll.sX !== '' || oSettings.oScroll.sY !== '')\n          ) {\n            // If we are a scrolling table, and no footer has been given, then we need to create\n            // a tfoot element for the caption element to be appended to\n            tfoot = $('<tfoot/>').appendTo(this)\n          }\n\n          if (tfoot.length === 0 || tfoot.children().length === 0) {\n            $(this).addClass(oClasses.sNoFooter)\n          } else if (tfoot.length > 0) {\n            oSettings.nTFoot = tfoot[0]\n            _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot)\n          }\n\n          /* Check if there is data passing into the constructor */\n          if (oInit.aaData) {\n            for (i = 0; i < oInit.aaData.length; i++) {\n              _fnAddData(oSettings, oInit.aaData[i])\n            }\n          } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n            /* Grab the data from the page - only do this when deferred loading or no Ajax\n             * source since there is no point in reading the DOM data if we are then going\n             * to replace it with Ajax data\n             */\n            _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'))\n          }\n\n          /* Copy the data index array */\n          oSettings.aiDisplay = oSettings.aiDisplayMaster.slice()\n\n          /* Initialisation complete - table can be drawn */\n          oSettings.bInitialised = true\n\n          /* Check if we need to initialise the table (it might not have been handed off to the\n           * language processor)\n           */\n          if (bInitHandedOff === false) {\n            _fnInitialise(oSettings)\n          }\n        })\n        _that = null\n        return this\n      }\n\n      /**\n       * Computed structure of the DataTables API, defined by the options passed to\n       * `DataTable.Api.register()` when building the API.\n       *\n       * The structure is built in order to speed creation and extension of the Api\n       * objects since the extensions are effectively pre-parsed.\n       *\n       * The array is an array of objects with the following structure, where this\n       * base array represents the Api prototype base:\n       *\n       *     [\n       *       {\n       *         name:      'data'                -- string   - Property name\n       *         val:       function () {},       -- function - Api method (or undefined if just an object\n       *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n       *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n       *       },\n       *       {\n       *         name:     'row'\n       *         val:       {},\n       *         methodExt: [ ... ],\n       *         propExt:   [\n       *           {\n       *             name:      'data'\n       *             val:       function () {},\n       *             methodExt: [ ... ],\n       *             propExt:   [ ... ]\n       *           },\n       *           ...\n       *         ]\n       *       }\n       *     ]\n       *\n       * @type {Array}\n       * @ignore\n       */\n      var __apiStruct = []\n\n      /**\n       * `Array.prototype` reference.\n       *\n       * @type object\n       * @ignore\n       */\n      var __arrayProto = Array.prototype\n\n      /**\n       * Abstraction for `context` parameter of the `Api` constructor to allow it to\n       * take several different forms for ease of use.\n       *\n       * Each of the input parameter types will be converted to a DataTables settings\n       * object where possible.\n       *\n       * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n       *   of:\n       *\n       *   * `string` - jQuery selector. Any DataTables' matching the given selector\n       *     with be found and used.\n       *   * `node` - `TABLE` node which has already been formed into a DataTable.\n       *   * `jQuery` - A jQuery object of `TABLE` nodes.\n       *   * `object` - DataTables settings object\n       *   * `DataTables.Api` - API instance\n       * @return {array|null} Matching DataTables settings objects. `null` or\n       *   `undefined` is returned if no matching DataTable is found.\n       * @ignore\n       */\n      var _toSettings = function (mixed) {\n        var idx, jq\n        var settings = DataTable.settings\n        var tables = $.map(settings, function (el, i) {\n          return el.nTable\n        })\n\n        if (!mixed) {\n          return []\n        } else if (mixed.nTable && mixed.oApi) {\n          // DataTables settings object\n          return [mixed]\n        } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n          // Table node\n          idx = $.inArray(mixed, tables)\n          return idx !== -1 ? [settings[idx]] : null\n        } else if (mixed && typeof mixed.settings === 'function') {\n          return mixed.settings().toArray()\n        } else if (typeof mixed === 'string') {\n          // jQuery selector\n          jq = $(mixed)\n        } else if (mixed instanceof $) {\n          // jQuery object (also DataTables instance)\n          jq = mixed\n        }\n\n        if (jq) {\n          return jq\n            .map(function (i) {\n              idx = $.inArray(this, tables)\n              return idx !== -1 ? settings[idx] : null\n            })\n            .toArray()\n        }\n      }\n\n      /**\n       * DataTables API class - used to control and interface with  one or more\n       * DataTables enhanced tables.\n       *\n       * The API class is heavily based on jQuery, presenting a chainable interface\n       * that you can use to interact with tables. Each instance of the API class has\n       * a \"context\" - i.e. the tables that it will operate on. This could be a single\n       * table, all tables on a page or a sub-set thereof.\n       *\n       * Additionally the API is designed to allow you to easily work with the data in\n       * the tables, retrieving and manipulating it as required. This is done by\n       * presenting the API class as an array like interface. The contents of the\n       * array depend upon the actions requested by each method (for example\n       * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n       * return an array of objects or arrays depending upon your table's\n       * configuration). The API object has a number of array like methods (`push`,\n       * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n       * `unique` etc) to assist your working with the data held in a table.\n       *\n       * Most methods (those which return an Api instance) are chainable, which means\n       * the return from a method call also has all of the methods available that the\n       * top level object had. For example, these two calls are equivalent:\n       *\n       *     // Not chained\n       *     api.row.add( {...} );\n       *     api.draw();\n       *\n       *     // Chained\n       *     api.row.add( {...} ).draw();\n       *\n       * @class DataTable.Api\n       * @param {array|object|string|jQuery} context DataTable identifier. This is\n       *   used to define which DataTables enhanced tables this API will operate on.\n       *   Can be one of:\n       *\n       *   * `string` - jQuery selector. Any DataTables' matching the given selector\n       *     with be found and used.\n       *   * `node` - `TABLE` node which has already been formed into a DataTable.\n       *   * `jQuery` - A jQuery object of `TABLE` nodes.\n       *   * `object` - DataTables settings object\n       * @param {array} [data] Data to initialise the Api instance with.\n       *\n       * @example\n       *   // Direct initialisation during DataTables construction\n       *   var api = $('#example').DataTable();\n       *\n       * @example\n       *   // Initialisation using a DataTables jQuery object\n       *   var api = $('#example').dataTable().api();\n       *\n       * @example\n       *   // Initialisation as a constructor\n       *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n       */\n      _Api = function (context, data) {\n        if (!this instanceof _Api) {\n          throw 'DT API must be constructed as a new object'\n          // or should it do the 'new' for the caller?\n          // return new _Api.apply( this, arguments );\n        }\n\n        var settings = []\n        var ctxSettings = function (o) {\n          var a = _toSettings(o)\n          if (a) {\n            settings.push.apply(settings, a)\n          }\n        }\n\n        if ($.isArray(context)) {\n          for (var i = 0, ien = context.length; i < ien; i++) {\n            ctxSettings(context[i])\n          }\n        } else {\n          ctxSettings(context)\n        }\n\n        // Remove duplicates\n        this.context = _unique(settings)\n\n        // Initial data\n        if (data) {\n          this.push.apply(this, data.toArray ? data.toArray() : data)\n        }\n\n        // selector\n        this.selector = {\n          rows: null,\n          cols: null,\n          opts: null\n        }\n\n        _Api.extend(this, this, __apiStruct)\n      }\n\n      DataTable.Api = _Api\n\n      _Api.prototype = /** @lends DataTables.Api */ {\n        /**\n         * Return a new Api instance, comprised of the data held in the current\n         * instance, join with the other array(s) and/or value(s).\n         *\n         * An alias for `Array.prototype.concat`.\n         *\n         * @type method\n         * @param {*} value1 Arrays and/or values to concatenate.\n         * @param {*} [...] Additional arrays and/or values to concatenate.\n         * @returns {DataTables.Api} New API instance, comprising of the combined\n         *   array.\n         */\n        concat: __arrayProto.concat,\n\n        context: [], // array of table settings objects\n\n        each: function (fn) {\n          for (var i = 0, ien = this.length; i < ien; i++) {\n            fn.call(this, this[i], i, this)\n          }\n\n          return this\n        },\n\n        eq: function (idx) {\n          var ctx = this.context\n\n          return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null\n        },\n\n        filter: function (fn) {\n          var a = []\n\n          if (__arrayProto.filter) {\n            a = __arrayProto.filter.call(this, fn, this)\n          } else {\n            // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n            for (var i = 0, ien = this.length; i < ien; i++) {\n              if (fn.call(this, this[i], i, this)) {\n                a.push(this[i])\n              }\n            }\n          }\n\n          return new _Api(this.context, a)\n        },\n\n        flatten: function () {\n          var a = []\n          return new _Api(this.context, a.concat.apply(a, this.toArray()))\n        },\n\n        join: __arrayProto.join,\n\n        indexOf:\n          __arrayProto.indexOf ||\n          function (obj, start) {\n            for (var i = start || 0, ien = this.length; i < ien; i++) {\n              if (this[i] === obj) {\n                return i\n              }\n            }\n            return -1\n          },\n\n        // Internal only at the moment - relax?\n        iterator: function (flatten, type, fn) {\n          var a = [],\n            ret,\n            i,\n            ien,\n            j,\n            jen,\n            context = this.context,\n            rows,\n            items,\n            item,\n            selector = this.selector\n\n          // Argument shifting\n          if (typeof flatten === 'string') {\n            fn = type\n            type = flatten\n            flatten = false\n          }\n\n          for (i = 0, ien = context.length; i < ien; i++) {\n            if (type === 'table') {\n              ret = fn(context[i], i)\n\n              if (ret !== undefined) {\n                a.push(ret)\n              }\n            } else if (type === 'columns' || type === 'rows') {\n              // this has same length as context - one entry for each table\n              ret = fn(context[i], this[i], i)\n\n              if (ret !== undefined) {\n                a.push(ret)\n              }\n            } else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n              // columns and rows share the same structure.\n              // 'this' is an array of column indexes for each context\n              items = this[i]\n\n              if (type === 'column-rows') {\n                rows = _selector_row_indexes(context[i], selector.opts)\n              }\n\n              for (j = 0, jen = items.length; j < jen; j++) {\n                item = items[j]\n\n                if (type === 'cell') {\n                  ret = fn(context[i], item.row, item.column, i, j)\n                } else {\n                  ret = fn(context[i], item, i, j, rows)\n                }\n\n                if (ret !== undefined) {\n                  a.push(ret)\n                }\n              }\n            }\n          }\n\n          if (a.length) {\n            var api = new _Api(context, flatten ? a.concat.apply([], a) : a)\n            var apiSelector = api.selector\n            apiSelector.rows = selector.rows\n            apiSelector.cols = selector.cols\n            apiSelector.opts = selector.opts\n            return api\n          }\n          return this\n        },\n\n        lastIndexOf:\n          __arrayProto.lastIndexOf ||\n          function (obj, start) {\n            // Bit cheeky...\n            return this.indexOf.apply(this.toArray.reverse(), arguments)\n          },\n\n        length: 0,\n\n        map: function (fn) {\n          var a = []\n\n          if (__arrayProto.map) {\n            a = __arrayProto.map.call(this, fn, this)\n          } else {\n            // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n            for (var i = 0, ien = this.length; i < ien; i++) {\n              a.push(fn.call(this, this[i], i))\n            }\n          }\n\n          return new _Api(this.context, a)\n        },\n\n        pluck: function (prop) {\n          return this.map(function (el) {\n            return el[prop]\n          })\n        },\n\n        pop: __arrayProto.pop,\n\n        push: __arrayProto.push,\n\n        // Does not return an API instance\n        reduce:\n          __arrayProto.reduce ||\n          function (fn, init) {\n            return _fnReduce(this, fn, init, 0, this.length, 1)\n          },\n\n        reduceRight:\n          __arrayProto.reduceRight ||\n          function (fn, init) {\n            return _fnReduce(this, fn, init, this.length - 1, -1, -1)\n          },\n\n        reverse: __arrayProto.reverse,\n\n        // Object with rows, columns and opts\n        selector: null,\n\n        shift: __arrayProto.shift,\n\n        sort: __arrayProto.sort, // ? name - order?\n\n        splice: __arrayProto.splice,\n\n        toArray: function () {\n          return __arrayProto.slice.call(this)\n        },\n\n        to$: function () {\n          return $(this)\n        },\n\n        toJQuery: function () {\n          return $(this)\n        },\n\n        unique: function () {\n          return new _Api(this.context, _unique(this))\n        },\n\n        unshift: __arrayProto.unshift\n      }\n\n      _Api.extend = function (scope, obj, ext) {\n        // Only extend API instances and static properties of the API\n        if (!obj || (!(obj instanceof _Api) && !obj.__dt_wrapper)) {\n          return\n        }\n\n        var i,\n          ien,\n          j,\n          jen,\n          struct,\n          inner,\n          methodScoping = function (scope, fn, struc) {\n            return function () {\n              var ret = fn.apply(scope, arguments)\n\n              // Method extension\n              _Api.extend(ret, ret, struc.methodExt)\n              return ret\n            }\n          }\n\n        for (i = 0, ien = ext.length; i < ien; i++) {\n          struct = ext[i]\n\n          // Value\n          obj[struct.name] =\n            typeof struct.val === 'function'\n              ? methodScoping(scope, struct.val, struct)\n              : $.isPlainObject(struct.val)\n              ? {}\n              : struct.val\n\n          obj[struct.name].__dt_wrapper = true\n\n          // Property extension\n          _Api.extend(scope, obj[struct.name], struct.propExt)\n        }\n      }\n\n      // @todo - Is there need for an augment function?\n      // _Api.augment = function ( inst, name )\n      // {\n      // \t// Find src object in the structure from the name\n      // \tvar parts = name.split('.');\n\n      // \t_Api.extend( inst, obj );\n      // };\n\n      //     [\n      //       {\n      //         name:      'data'                -- string   - Property name\n      //         val:       function () {},       -- function - Api method (or undefined if just an object\n      //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n      //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n      //       },\n      //       {\n      //         name:     'row'\n      //         val:       {},\n      //         methodExt: [ ... ],\n      //         propExt:   [\n      //           {\n      //             name:      'data'\n      //             val:       function () {},\n      //             methodExt: [ ... ],\n      //             propExt:   [ ... ]\n      //           },\n      //           ...\n      //         ]\n      //       }\n      //     ]\n\n      _Api.register = _api_register = function (name, val) {\n        if ($.isArray(name)) {\n          for (var j = 0, jen = name.length; j < jen; j++) {\n            _Api.register(name[j], val)\n          }\n          return\n        }\n\n        var i,\n          ien,\n          heir = name.split('.'),\n          struct = __apiStruct,\n          key,\n          method\n\n        var find = function (src, name) {\n          for (var i = 0, ien = src.length; i < ien; i++) {\n            if (src[i].name === name) {\n              return src[i]\n            }\n          }\n          return null\n        }\n\n        for (i = 0, ien = heir.length; i < ien; i++) {\n          method = heir[i].indexOf('()') !== -1\n          key = method ? heir[i].replace('()', '') : heir[i]\n\n          var src = find(struct, key)\n          if (!src) {\n            src = {\n              name: key,\n              val: {},\n              methodExt: [],\n              propExt: []\n            }\n            struct.push(src)\n          }\n\n          if (i === ien - 1) {\n            src.val = val\n          } else {\n            struct = method ? src.methodExt : src.propExt\n          }\n        }\n      }\n\n      _Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n        _Api.register(pluralName, val)\n\n        _Api.register(singularName, function () {\n          var ret = val.apply(this, arguments)\n\n          if (ret === this) {\n            // Returned item is the API instance that was passed in, return it\n            return this\n          } else if (ret instanceof _Api) {\n            // New API instance returned, want the value from the first item\n            // in the returned array for the singular result.\n            return ret.length\n              ? $.isArray(ret[0])\n                ? new _Api(ret.context, ret[0]) // Array results are 'enhanced'\n                : ret[0]\n              : undefined\n          }\n\n          // Non-API return - just fire it back\n          return ret\n        })\n      }\n\n      /**\n       * Selector for HTML tables. Apply the given selector to the give array of\n       * DataTables settings objects.\n       *\n       * @param {string|integer} [selector] jQuery selector string or integer\n       * @param  {array} Array of DataTables settings objects to be filtered\n       * @return {array}\n       * @ignore\n       */\n      var __table_selector = function (selector, a) {\n        // Integer is used to pick out a table by index\n        if (typeof selector === 'number') {\n          return [a[selector]]\n        }\n\n        // Perform a jQuery selector on the table nodes\n        var nodes = $.map(a, function (el, i) {\n          return el.nTable\n        })\n\n        return $(nodes)\n          .filter(selector)\n          .map(function (i) {\n            // Need to translate back from the table node to the settings\n            var idx = $.inArray(this, nodes)\n            return a[idx]\n          })\n          .toArray()\n      }\n\n      /**\n       * Context selector for the API's context (i.e. the tables the API instance\n       * refers to.\n       *\n       * @name    DataTable.Api#tables\n       * @param {string|integer} [selector] Selector to pick which tables the iterator\n       *   should operate on. If not given, all tables in the current context are\n       *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n       *   select multiple tables or as an integer to select a single table.\n       * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n       */\n      _api_register('tables()', function (selector) {\n        // A new instance is created if there was a selector specified\n        return selector ? new _Api(__table_selector(selector, this.context)) : this\n      })\n\n      _api_register('table()', function (selector) {\n        var tables = this.tables(selector)\n        var ctx = tables.context\n\n        // Truncate to the first matched table\n        return ctx.length ? new _Api(ctx[0]) : tables\n      })\n\n      _api_registerPlural('tables().nodes()', 'table().node()', function () {\n        return this.iterator('table', function (ctx) {\n          return ctx.nTable\n        })\n      })\n\n      _api_registerPlural('tables().body()', 'table().body()', function () {\n        return this.iterator('table', function (ctx) {\n          return ctx.nTBody\n        })\n      })\n\n      _api_registerPlural('tables().header()', 'table().header()', function () {\n        return this.iterator('table', function (ctx) {\n          return ctx.nTHead\n        })\n      })\n\n      _api_registerPlural('tables().footer()', 'table().footer()', function () {\n        return this.iterator('table', function (ctx) {\n          return ctx.nTFoot\n        })\n      })\n\n      _api_registerPlural('tables().containers()', 'table().container()', function () {\n        return this.iterator('table', function (ctx) {\n          return ctx.nTableWrapper\n        })\n      })\n\n      /**\n       * Redraw the tables in the current context.\n       *\n       * @param {boolean} [reset=true] Reset (default) or hold the current paging\n       *   position. A full re-sort and re-filter is performed when this method is\n       *   called, which is why the pagination reset is the default action.\n       * @returns {DataTables.Api} this\n       */\n      _api_register('draw()', function (resetPaging) {\n        return this.iterator('table', function (settings) {\n          _fnReDraw(settings, resetPaging === false)\n        })\n      })\n      /**\n       * Set the current page.\n       *\n       * Note that if you attempt to show a page which does not exist, DataTables will\n       * not throw an error, but rather reset the paging.\n       *\n       * @param {integer|string} action The paging action to take. This can be one of:\n       *  * `integer` - The page index to jump to\n       *  * `string` - An action to take:\n       *    * `first` - Jump to first page.\n       *    * `next` - Jump to the next page\n       *    * `previous` - Jump to previous page\n       *    * `last` - Jump to the last page.\n       * @returns {DataTables.Api} this\n       */\n\n      /**\n       * Get the current page index.\n       *\n       * @return {integer} Current page index (zero based)\n       */ _api_register('page()', function (action) {\n        if (action === undefined) {\n          return this.page.info().page // not an expensive call\n        }\n\n        // else, have an action to take on all tables\n        return this.iterator('table', function (settings) {\n          _fnPageChange(settings, action)\n        })\n      })\n\n      /**\n       * Paging information for the first table in the current context.\n       *\n       * If you require paging information for another table, use the `table()` method\n       * with a suitable selector.\n       *\n       * @return {object} Object with the following properties set:\n       *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n       *  * `pages` - Total number of pages\n       *  * `start` - Display index for the first record shown on the current page\n       *  * `end` - Display index for the last record shown on the current page\n       *  * `length` - Display length (number of records). Note that generally `start\n       *    + length = end`, but this is not always true, for example if there are\n       *    only 2 records to show on the final page, with a length of 10.\n       *  * `recordsTotal` - Full data set length\n       *  * `recordsDisplay` - Data set length once the current filtering criterion\n       *    are applied.\n       */\n      _api_register('page.info()', function (action) {\n        if (this.context.length === 0) {\n          return undefined\n        }\n\n        var settings = this.context[0],\n          start = settings._iDisplayStart,\n          len = settings._iDisplayLength,\n          visRecords = settings.fnRecordsDisplay(),\n          all = len === -1\n\n        return {\n          page: all ? 0 : Math.floor(start / len),\n          pages: all ? 1 : Math.ceil(visRecords / len),\n          start: start,\n          end: settings.fnDisplayEnd(),\n          length: len,\n          recordsTotal: settings.fnRecordsTotal(),\n          recordsDisplay: visRecords\n        }\n      })\n      /**\n       * Set the current page length.\n       *\n       * @param {integer} Page length to set. Use `-1` to show all records.\n       * @returns {DataTables.Api} this\n       */\n\n      /**\n       * Get the current page length.\n       *\n       * @return {integer} Current page length. Note `-1` indicates that all records\n       *   are to be shown.\n       */ _api_register('page.len()', function (len) {\n        // Note that we can't call this function 'length()' because `length`\n        // is a Javascript property of functions which defines how many arguments\n        // the function expects.\n        if (len === undefined) {\n          return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined\n        }\n\n        // else, set the page length\n        return this.iterator('table', function (settings) {\n          _fnLengthChange(settings, len)\n        })\n      })\n\n      var __reload = function (settings, holdPosition, callback) {\n        if (_fnDataSource(settings) == 'ssp') {\n          _fnReDraw(settings, holdPosition)\n        } else {\n          // Trigger xhr\n          _fnProcessingDisplay(settings, true)\n\n          _fnBuildAjax(settings, [], function (json) {\n            _fnClearTable(settings)\n\n            var data = _fnAjaxDataSrc(settings, json)\n            for (var i = 0, ien = data.length; i < ien; i++) {\n              _fnAddData(settings, data[i])\n            }\n\n            _fnReDraw(settings, holdPosition)\n            _fnProcessingDisplay(settings, false)\n          })\n        }\n\n        // Use the draw event to trigger a callback, regardless of if it is an async\n        // or sync draw\n        if (callback) {\n          var api = new _Api(settings)\n\n          api.one('draw', function () {\n            callback(api.ajax.json())\n          })\n        }\n      }\n\n      /**\n       * Get the JSON response from the last Ajax request that DataTables made to the\n       * server. Note that this returns the JSON from the first table in the current\n       * context.\n       *\n       * @return {object} JSON received from the server.\n       */\n      _api_register('ajax.json()', function () {\n        var ctx = this.context\n\n        if (ctx.length > 0) {\n          return ctx[0].json\n        }\n\n        // else return undefined;\n      })\n\n      /**\n       * Get the data submitted in the last Ajax request\n       */\n      _api_register('ajax.params()', function () {\n        var ctx = this.context\n\n        if (ctx.length > 0) {\n          return ctx[0].oAjaxData\n        }\n\n        // else return undefined;\n      })\n\n      /**\n       * Reload tables from the Ajax data source. Note that this function will\n       * automatically re-draw the table when the remote data has been loaded.\n       *\n       * @param {boolean} [reset=true] Reset (default) or hold the current paging\n       *   position. A full re-sort and re-filter is performed when this method is\n       *   called, which is why the pagination reset is the default action.\n       * @returns {DataTables.Api} this\n       */\n      _api_register('ajax.reload()', function (callback, resetPaging) {\n        return this.iterator('table', function (settings) {\n          __reload(settings, resetPaging === false, callback)\n        })\n      })\n      /**\n       * Set the Ajax URL. Note that this will set the URL for all tables in the\n       * current context.\n       *\n       * @param {string} url URL to set.\n       * @returns {DataTables.Api} this\n       */\n\n      /**\n       * Get the current Ajax URL. Note that this returns the URL from the first\n       * table in the current context.\n       *\n       * @return {string} Current Ajax source URL\n       */ _api_register('ajax.url()', function (url) {\n        var ctx = this.context\n\n        if (url === undefined) {\n          // get\n          if (ctx.length === 0) {\n            return undefined\n          }\n          ctx = ctx[0]\n\n          return ctx.ajax ? ($.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax) : ctx.sAjaxSource\n        }\n\n        // set\n        return this.iterator('table', function (settings) {\n          if ($.isPlainObject(settings.ajax)) {\n            settings.ajax.url = url\n          } else {\n            settings.ajax = url\n          }\n          // No need to consider sAjaxSource here since DataTables gives priority\n          // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n          // value of `sAjaxSource` redundant.\n        })\n      })\n\n      /**\n       * Load data from the newly set Ajax URL. Note that this method is only\n       * available when `ajax.url()` is used to set a URL. Additionally, this method\n       * has the same effect as calling `ajax.reload()` but is provided for\n       * convenience when setting a new URL. Like `ajax.reload()` it will\n       * automatically redraw the table once the remote data has been loaded.\n       *\n       * @returns {DataTables.Api} this\n       */\n      _api_register('ajax.url().load()', function (callback, resetPaging) {\n        // Same as a reload, but makes sense to present it for easy access after a\n        // url change\n        return this.iterator('table', function (ctx) {\n          __reload(ctx, resetPaging === false, callback)\n        })\n      })\n\n      var _selector_run = function (selector, select) {\n        var out = [],\n          res,\n          a,\n          i,\n          ien,\n          j,\n          jen\n\n        // Can't just check for isArray here, as an API or jQuery instance might be\n        // given with their array like look\n        if (!selector || typeof selector === 'string' || selector.length === undefined) {\n          selector = [selector]\n        }\n\n        for (i = 0, ien = selector.length; i < ien; i++) {\n          a = selector[i] && selector[i].split ? selector[i].split(',') : [selector[i]]\n\n          for (j = 0, jen = a.length; j < jen; j++) {\n            res = select(typeof a[j] === 'string' ? $.trim(a[j]) : a[j])\n\n            if (res && res.length) {\n              out.push.apply(out, res)\n            }\n          }\n        }\n\n        return out\n      }\n\n      var _selector_opts = function (opts) {\n        if (!opts) {\n          opts = {}\n        }\n\n        // Backwards compatibility for 1.9- which used the terminology filter rather\n        // than search\n        if (opts.filter && !opts.search) {\n          opts.search = opts.filter\n        }\n\n        return {\n          search: opts.search || 'none',\n          order: opts.order || 'current',\n          page: opts.page || 'all'\n        }\n      }\n\n      var _selector_first = function (inst) {\n        // Reduce the API instance to the first item found\n        for (var i = 0, ien = inst.length; i < ien; i++) {\n          if (inst[i].length > 0) {\n            // Assign the first element to the first item in the instance\n            // and truncate the instance and context\n            inst[0] = inst[i]\n            inst.length = 1\n            inst.context = [inst.context[i]]\n\n            return inst\n          }\n        }\n\n        // Not found - return an empty instance\n        inst.length = 0\n        return inst\n      }\n\n      var _selector_row_indexes = function (settings, opts) {\n        var i,\n          ien,\n          tmp,\n          a = [],\n          displayFiltered = settings.aiDisplay,\n          displayMaster = settings.aiDisplayMaster\n\n        var search = opts.search, // none, applied, removed\n          order = opts.order, // applied, current, index (original - compatibility with 1.9)\n          page = opts.page // all, current\n\n        if (_fnDataSource(settings) == 'ssp') {\n          // In server-side processing mode, most options are irrelevant since\n          // rows not shown don't exist and the index order is the applied order\n          // Removed is a special case - for consistency just return an empty\n          // array\n          return search === 'removed' ? [] : _range(0, displayMaster.length)\n        } else if (page == 'current') {\n          // Current page implies that order=current and fitler=applied, since it is\n          // fairly senseless otherwise, regardless of what order and search actually\n          // are\n          for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n            a.push(displayFiltered[i])\n          }\n        } else if (order == 'current' || order == 'applied') {\n          a =\n            search == 'none'\n              ? displayMaster.slice() // no search\n              : search == 'applied'\n              ? displayFiltered.slice() // applied search\n              : $.map(displayMaster, function (el, i) {\n                  // removed search\n                  return $.inArray(el, displayFiltered) === -1 ? el : null\n                })\n        } else if (order == 'index' || order == 'original') {\n          for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n            if (search == 'none') {\n              a.push(i)\n            } else {\n              // applied | removed\n              tmp = $.inArray(i, displayFiltered)\n\n              if ((tmp === -1 && search == 'removed') || (tmp >= 0 && search == 'applied')) {\n                a.push(i)\n              }\n            }\n          }\n        }\n\n        return a\n      }\n\n      /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n       * Rows\n       *\n       * {}          - no selector - use all available rows\n       * {integer}   - row aoData index\n       * {node}      - TR node\n       * {string}    - jQuery selector to apply to the TR elements\n       * {array}     - jQuery array of nodes, or simply an array of TR nodes\n       *\n       */\n\n      var __row_selector = function (settings, selector, opts) {\n        return _selector_run(selector, function (sel) {\n          var selInt = _intVal(sel)\n\n          // Short cut - selector is a number and no options provided (default is\n          // all records, so no need to check if the index is in there, since it\n          // must be - dev error if the index doesn't exist).\n          if (selInt !== null && !opts) {\n            return [selInt]\n          }\n\n          var rows = _selector_row_indexes(settings, opts)\n\n          if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n            // Selector - integer\n            return [selInt]\n          } else if (!sel) {\n            // Selector - none\n            return rows\n          }\n\n          // Get nodes in the order from the `rows` array (can't use `pluck`) @todo - use pluck_order\n          var nodes = []\n          for (var i = 0, ien = rows.length; i < ien; i++) {\n            nodes.push(settings.aoData[rows[i]].nTr)\n          }\n\n          if (sel.nodeName) {\n            // Selector - node\n            if ($.inArray(sel, nodes) !== -1) {\n              return [sel._DT_RowIndex] // sel is a TR node that is in the table\n              // and DataTables adds a prop for fast lookup\n            }\n          }\n\n          // Selector - jQuery selector string, array of nodes or jQuery object/\n          // As jQuery's .filter() allows jQuery objects to be passed in filter,\n          // it also allows arrays, so this will cope with all three options\n          return $(nodes)\n            .filter(sel)\n            .map(function () {\n              return this._DT_RowIndex\n            })\n            .toArray()\n        })\n      }\n\n      /**\n       *\n       */\n      _api_register('rows()', function (selector, opts) {\n        // argument shifting\n        if (selector === undefined) {\n          selector = ''\n        } else if ($.isPlainObject(selector)) {\n          opts = selector\n          selector = ''\n        }\n\n        opts = _selector_opts(opts)\n\n        var inst = this.iterator('table', function (settings) {\n          return __row_selector(settings, selector, opts)\n        })\n\n        // Want argument shifting here and in __row_selector?\n        inst.selector.rows = selector\n        inst.selector.opts = opts\n\n        return inst\n      })\n\n      _api_register('rows().nodes()', function () {\n        return this.iterator('row', function (settings, row) {\n          return settings.aoData[row].nTr || undefined\n        })\n      })\n\n      _api_register('rows().data()', function () {\n        return this.iterator(true, 'rows', function (settings, rows) {\n          return _pluck_order(settings.aoData, rows, '_aData')\n        })\n      })\n\n      _api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n        return this.iterator('row', function (settings, row) {\n          var r = settings.aoData[row]\n          return type === 'search' ? r._aFilterData : r._aSortData\n        })\n      })\n\n      _api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n        return this.iterator('row', function (settings, row) {\n          _fnInvalidateRow(settings, row, src)\n        })\n      })\n\n      _api_registerPlural('rows().indexes()', 'row().index()', function () {\n        return this.iterator('row', function (settings, row) {\n          return row\n        })\n      })\n\n      _api_registerPlural('rows().remove()', 'row().remove()', function () {\n        var that = this\n\n        return this.iterator('row', function (settings, row, thatIdx) {\n          var data = settings.aoData\n\n          data.splice(row, 1)\n\n          // Update the _DT_RowIndex parameter on all rows in the table\n          for (var i = 0, ien = data.length; i < ien; i++) {\n            if (data[i].nTr !== null) {\n              data[i].nTr._DT_RowIndex = i\n            }\n          }\n\n          // Remove the target row from the search array\n          var displayIndex = $.inArray(row, settings.aiDisplay)\n\n          // Delete from the display arrays\n          _fnDeleteIndex(settings.aiDisplayMaster, row)\n          _fnDeleteIndex(settings.aiDisplay, row)\n          _fnDeleteIndex(that[thatIdx], row, false) // maintain local indexes\n\n          // Check for an 'overflow' they case for displaying the table\n          _fnLengthOverflow(settings)\n        })\n      })\n\n      _api_register('rows.add()', function (rows) {\n        var newRows = this.iterator('table', function (settings) {\n          var row, i, ien\n          var out = []\n\n          for (i = 0, ien = rows.length; i < ien; i++) {\n            row = rows[i]\n\n            if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n              out.push(_fnAddTr(settings, row)[0])\n            } else {\n              out.push(_fnAddData(settings, row))\n            }\n          }\n\n          return out\n        })\n\n        // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n        var modRows = this.rows(-1)\n        modRows.pop()\n        modRows.push.apply(modRows, newRows.toArray())\n\n        return modRows\n      })\n\n      /**\n       *\n       */\n      _api_register('row()', function (selector, opts) {\n        return _selector_first(this.rows(selector, opts))\n      })\n\n      _api_register('row().data()', function (data) {\n        var ctx = this.context\n\n        if (data === undefined) {\n          // Get\n          return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined\n        }\n\n        // Set\n        ctx[0].aoData[this[0]]._aData = data\n\n        // Automatically invalidate\n        _fnInvalidateRow(ctx[0], this[0], 'data')\n\n        return this\n      })\n\n      _api_register('row().node()', function () {\n        var ctx = this.context\n\n        return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null\n      })\n\n      _api_register('row.add()', function (row) {\n        // Allow a jQuery object to be passed in - only a single row is added from\n        // it though - the first element in the set\n        if (row instanceof $ && row.length) {\n          row = row[0]\n        }\n\n        var rows = this.iterator('table', function (settings) {\n          if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n            return _fnAddTr(settings, row)[0]\n          }\n          return _fnAddData(settings, row)\n        })\n\n        // Return an Api.rows() extended instance, with the newly added row selected\n        return this.row(rows[0])\n      })\n\n      var __details_add = function (ctx, row, data, klass) {\n        // Convert to array of TR elements\n        var rows = []\n        var addRow = function (r, k) {\n          // If we get a TR element, then just add it directly - up to the dev\n          // to add the correct number of columns etc\n          if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n            rows.push(r)\n          } else {\n            // Otherwise create a row with a wrapper\n            var created = $('<tr><td/></tr>').addClass(k)\n            $('td', created)\n              .addClass(k)\n              .html(r)[0].colSpan = _fnVisbleColumns(ctx)\n\n            rows.push(created[0])\n          }\n        }\n\n        if ($.isArray(data) || data instanceof $) {\n          for (var i = 0, ien = data.length; i < ien; i++) {\n            addRow(data[i], klass)\n          }\n        } else {\n          addRow(data, klass)\n        }\n\n        if (row._details) {\n          row._details.remove()\n        }\n\n        row._details = $(rows)\n\n        // If the children were already shown, that state should be retained\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr)\n        }\n      }\n\n      var __details_remove = function (api) {\n        var ctx = api.context\n\n        if (ctx.length && api.length) {\n          var row = ctx[0].aoData[api[0]]\n\n          if (row._details) {\n            row._details.remove()\n\n            row._detailsShow = undefined\n            row._details = undefined\n          }\n        }\n      }\n\n      var __details_display = function (api, show) {\n        var ctx = api.context\n\n        if (ctx.length && api.length) {\n          var row = ctx[0].aoData[api[0]]\n\n          if (row._details) {\n            row._detailsShow = show\n\n            if (show) {\n              row._details.insertAfter(row.nTr)\n            } else {\n              row._details.detach()\n            }\n\n            __details_events(ctx[0])\n          }\n        }\n      }\n\n      var __details_events = function (settings) {\n        var api = new _Api(settings)\n        var namespace = '.dt.DT_details'\n        var drawEvent = 'draw' + namespace\n        var colvisEvent = 'column-visibility' + namespace\n        var destroyEvent = 'destroy' + namespace\n        var data = settings.aoData\n\n        api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent)\n\n        if (_pluck(data, '_details').length > 0) {\n          // On each draw, insert the required elements into the document\n          api.on(drawEvent, function (e, ctx) {\n            if (settings !== ctx) {\n              return\n            }\n\n            api\n              .rows({ page: 'current' })\n              .eq(0)\n              .each(function (idx) {\n                // Internal data grab\n                var row = data[idx]\n\n                if (row._detailsShow) {\n                  row._details.insertAfter(row.nTr)\n                }\n              })\n          })\n\n          // Column visibility change - update the colspan\n          api.on(colvisEvent, function (e, ctx, idx, vis) {\n            if (settings !== ctx) {\n              return\n            }\n\n            // Update the colspan for the details rows (note, only if it already has\n            // a colspan)\n            var row,\n              visible = _fnVisbleColumns(ctx)\n\n            for (var i = 0, ien = data.length; i < ien; i++) {\n              row = data[i]\n\n              if (row._details) {\n                row._details.children('td[colspan]').attr('colspan', visible)\n              }\n            }\n          })\n\n          // Table destroyed - nuke any child rows\n          api.on(destroyEvent, function (e, ctx) {\n            if (settings !== ctx) {\n              return\n            }\n\n            for (var i = 0, ien = data.length; i < ien; i++) {\n              if (data[i]._details) {\n                __details_remove(data[i])\n              }\n            }\n          })\n        }\n      }\n\n      // Strings for the method names to help minification\n      var _emp = ''\n      var _child_obj = _emp + 'row().child'\n      var _child_mth = _child_obj + '()'\n\n      // data can be:\n      //  tr\n      //  string\n      //  jQuery or array of any of the above\n      _api_register(_child_mth, function (data, klass) {\n        var ctx = this.context\n\n        if (data === undefined) {\n          // get\n          return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined\n        } else if (data === true) {\n          // show\n          this.child.show()\n        } else if (data === false) {\n          // remove\n          __details_remove(this)\n        } else if (ctx.length && this.length) {\n          // set\n          __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass)\n        }\n\n        return this\n      })\n\n      _api_register(\n        [\n          _child_obj + '.show()',\n          _child_mth + '.show()' // only when `child()` was called with parameters (without\n        ],\n        function (show) {\n          // it returns an object and this method is not executed)\n          __details_display(this, true)\n          return this\n        }\n      )\n\n      _api_register(\n        [\n          _child_obj + '.hide()',\n          _child_mth + '.hide()' // only when `child()` was called with parameters (without\n        ],\n        function () {\n          // it returns an object and this method is not executed)\n          __details_display(this, false)\n          return this\n        }\n      )\n\n      _api_register(\n        [\n          _child_obj + '.remove()',\n          _child_mth + '.remove()' // only when `child()` was called with parameters (without\n        ],\n        function () {\n          // it returns an object and this method is not executed)\n          __details_remove(this)\n          return this\n        }\n      )\n\n      _api_register(_child_obj + '.isShown()', function () {\n        var ctx = this.context\n\n        if (ctx.length && this.length) {\n          // _detailsShown as false or undefined will fall through to return false\n          return ctx[0].aoData[this[0]]._detailsShow || false\n        }\n        return false\n      })\n\n      /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n       * Columns\n       *\n       * {integer}           - column index (>=0 count from left, <0 count from right)\n       * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n       * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n       * \"{string}:name\"     - column name\n       * \"{string}\"          - jQuery selector on column header nodes\n       *\n       */\n\n      // can be an array of these items, comma separated list, or an array of comma\n      // separated lists\n\n      var __re_column_selector = /^(.+):(name|visIdx|visible)$/\n\n      var __column_selector = function (settings, selector, opts) {\n        var columns = settings.aoColumns,\n          names = _pluck(columns, 'sName'),\n          nodes = _pluck(columns, 'nTh')\n\n        return _selector_run(selector, function (s) {\n          var selInt = _intVal(s)\n\n          if (s === '') {\n            // All columns\n            return _range(columns.length)\n          } else if (selInt !== null) {\n            // Integer selector\n            return [\n              selInt >= 0\n                ? selInt // Count from left\n                : columns.length + selInt // Count from right (+ because its a negative value)\n            ]\n          } else {\n            var match = typeof s === 'string' ? s.match(__re_column_selector) : ''\n\n            if (match) {\n              switch (match[2]) {\n                case 'visIdx':\n                case 'visible':\n                  var idx = parseInt(match[1], 10)\n                  // Visible index given, convert to column index\n                  if (idx < 0) {\n                    // Counting from the right\n                    var visColumns = $.map(columns, function (col, i) {\n                      return col.bVisible ? i : null\n                    })\n                    return [visColumns[visColumns.length + idx]]\n                  }\n                  // Counting from the left\n                  return [_fnVisibleToColumnIndex(settings, idx)]\n\n                case 'name':\n                  // match by name. `names` is column index complete and in order\n                  return $.map(names, function (name, i) {\n                    return name === match[1] ? i : null\n                  })\n              }\n            } else {\n              // jQuery selector on the TH elements for the columns\n              return $(nodes)\n                .filter(s)\n                .map(function () {\n                  return $.inArray(this, nodes) // `nodes` is column index complete and in order\n                })\n                .toArray()\n            }\n          }\n        })\n      }\n\n      var __setColumnVis = function (settings, column, vis, recalc) {\n        var cols = settings.aoColumns,\n          col = cols[column],\n          data = settings.aoData,\n          row,\n          cells,\n          i,\n          ien,\n          tr\n\n        // Get\n        if (vis === undefined) {\n          return col.bVisible\n        }\n\n        // Set\n        // No change\n        if (col.bVisible === vis) {\n          return\n        }\n\n        if (vis) {\n          // Insert column\n          // Need to decide if we should use appendChild or insertBefore\n          var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1)\n\n          for (i = 0, ien = data.length; i < ien; i++) {\n            tr = data[i].nTr\n            cells = data[i].anCells\n\n            if (tr) {\n              // insertBefore can act like appendChild if 2nd arg is null\n              tr.insertBefore(cells[column], cells[insertBefore] || null)\n            }\n          }\n        } else {\n          // Remove column\n          $(_pluck(settings.aoData, 'anCells', column)).detach()\n        }\n\n        // Common actions\n        col.bVisible = vis\n        _fnDrawHead(settings, settings.aoHeader)\n        _fnDrawHead(settings, settings.aoFooter)\n\n        if (recalc === undefined || recalc) {\n          // Automatically adjust column sizing\n          _fnAdjustColumnSizing(settings)\n\n          // Realign columns for scrolling\n          if (settings.oScroll.sX || settings.oScroll.sY) {\n            _fnScrollDraw(settings)\n          }\n        }\n\n        _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis])\n\n        _fnSaveState(settings)\n      }\n\n      /**\n       *\n       */\n      _api_register('columns()', function (selector, opts) {\n        // argument shifting\n        if (selector === undefined) {\n          selector = ''\n        } else if ($.isPlainObject(selector)) {\n          opts = selector\n          selector = ''\n        }\n\n        opts = _selector_opts(opts)\n\n        var inst = this.iterator('table', function (settings) {\n          return __column_selector(settings, selector, opts)\n        })\n\n        // Want argument shifting here and in _row_selector?\n        inst.selector.cols = selector\n        inst.selector.opts = opts\n\n        return inst\n      })\n\n      /**\n       *\n       */\n      _api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n        return this.iterator('column', function (settings, column) {\n          return settings.aoColumns[column].nTh\n        })\n      })\n\n      /**\n       *\n       */\n      _api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n        return this.iterator('column', function (settings, column) {\n          return settings.aoColumns[column].nTf\n        })\n      })\n\n      /**\n       *\n       */\n      _api_registerPlural('columns().data()', 'column().data()', function () {\n        return this.iterator('column-rows', function (settings, column, i, j, rows) {\n          var a = []\n          for (var row = 0, ien = rows.length; row < ien; row++) {\n            a.push(_fnGetCellData(settings, rows[row], column, ''))\n          }\n          return a\n        })\n      })\n\n      _api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n        return this.iterator('column-rows', function (settings, column, i, j, rows) {\n          return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column)\n        })\n      })\n\n      _api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n        return this.iterator('column-rows', function (settings, column, i, j, rows) {\n          return _pluck_order(settings.aoData, rows, 'anCells', column)\n        })\n      })\n\n      _api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n        return this.iterator('column', function (settings, column) {\n          return vis === undefined ? settings.aoColumns[column].bVisible : __setColumnVis(settings, column, vis, calc)\n        })\n      })\n\n      _api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n        return this.iterator('column', function (settings, column) {\n          return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column\n        })\n      })\n\n      // _api_register( 'columns().show()', function () {\n      // \tvar selector = this.selector;\n      // \treturn this.columns( selector.cols, selector.opts ).visible( true );\n      // } );\n\n      // _api_register( 'columns().hide()', function () {\n      // \tvar selector = this.selector;\n      // \treturn this.columns( selector.cols, selector.opts ).visible( false );\n      // } );\n\n      _api_register('columns.adjust()', function () {\n        return this.iterator('table', function (settings) {\n          _fnAdjustColumnSizing(settings)\n        })\n      })\n\n      // Convert from one column index type, to another type\n      _api_register('column.index()', function (type, idx) {\n        if (this.context.length !== 0) {\n          var ctx = this.context[0]\n\n          if (type === 'fromVisible' || type === 'toData') {\n            return _fnVisibleToColumnIndex(ctx, idx)\n          } else if (type === 'fromData' || type === 'toVisible') {\n            return _fnColumnIndexToVisible(ctx, idx)\n          }\n        }\n      })\n\n      _api_register('column()', function (selector, opts) {\n        return _selector_first(this.columns(selector, opts))\n      })\n\n      var __cell_selector = function (settings, selector, opts) {\n        var data = settings.aoData\n        var rows = _selector_row_indexes(settings, opts)\n        var cells = _pluck_order(data, rows, 'anCells')\n        var allCells = $([].concat.apply([], cells))\n        var row\n        var columns = settings.aoColumns.length\n        var a, i, ien, j\n\n        return _selector_run(selector, function (s) {\n          if (s === null || s === undefined) {\n            // All cells\n            a = []\n\n            for (i = 0, ien = rows.length; i < ien; i++) {\n              row = rows[i]\n\n              for (j = 0; j < columns; j++) {\n                a.push({\n                  row: row,\n                  column: j\n                })\n              }\n            }\n\n            return a\n          } else if ($.isPlainObject(s)) {\n            return [s]\n          }\n\n          // jQuery filtered cells\n          return allCells\n            .filter(s)\n            .map(function (i, el) {\n              row = el.parentNode._DT_RowIndex\n\n              return {\n                row: row,\n                column: $.inArray(el, data[row].anCells)\n              }\n            })\n            .toArray()\n        })\n      }\n\n      _api_register('cells()', function (rowSelector, columnSelector, opts) {\n        // Argument shifting\n        if ($.isPlainObject(rowSelector)) {\n          // Indexes\n          if (typeof rowSelector.row !== undefined) {\n            opts = columnSelector\n            columnSelector = null\n          } else {\n            opts = rowSelector\n            rowSelector = null\n          }\n        }\n        if ($.isPlainObject(columnSelector)) {\n          opts = columnSelector\n          columnSelector = null\n        }\n\n        // Cell selector\n        if (columnSelector === null || columnSelector === undefined) {\n          return this.iterator('table', function (settings) {\n            return __cell_selector(settings, rowSelector, _selector_opts(opts))\n          })\n        }\n\n        // Row + column selector\n        var columns = this.columns(columnSelector, opts)\n        var rows = this.rows(rowSelector, opts)\n        var a, i, ien, j, jen\n\n        var cells = this.iterator('table', function (settings, idx) {\n          a = []\n\n          for (i = 0, ien = rows[idx].length; i < ien; i++) {\n            for (j = 0, jen = columns[idx].length; j < jen; j++) {\n              a.push({\n                row: rows[idx][i],\n                column: columns[idx][j]\n              })\n            }\n          }\n\n          return a\n        })\n\n        $.extend(cells.selector, {\n          cols: columnSelector,\n          rows: rowSelector,\n          opts: opts\n        })\n\n        return cells\n      })\n\n      _api_registerPlural('cells().nodes()', 'cell().node()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n          return settings.aoData[row].anCells[column]\n        })\n      })\n\n      _api_register('cells().data()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n          return _fnGetCellData(settings, row, column)\n        })\n      })\n\n      _api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n        type = type === 'search' ? '_aFilterData' : '_aSortData'\n\n        return this.iterator('cell', function (settings, row, column) {\n          return settings.aoData[row][type][column]\n        })\n      })\n\n      _api_registerPlural('cells().indexes()', 'cell().index()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n          return {\n            row: row,\n            column: column,\n            columnVisible: _fnColumnIndexToVisible(settings, column)\n          }\n        })\n      })\n\n      _api_register(['cells().invalidate()', 'cell().invalidate()'], function (src) {\n        var selector = this.selector\n\n        // Use the rows method of the instance to perform the invalidation, rather\n        // than doing it here. This avoids needing to handle duplicate rows from\n        // the cells.\n        this.rows(selector.rows, selector.opts).invalidate(src)\n\n        return this\n      })\n\n      _api_register('cell()', function (rowSelector, columnSelector, opts) {\n        return _selector_first(this.cells(rowSelector, columnSelector, opts))\n      })\n\n      _api_register('cell().data()', function (data) {\n        var ctx = this.context\n        var cell = this[0]\n\n        if (data === undefined) {\n          // Get\n          return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined\n        }\n\n        // Set\n        _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data)\n        _fnInvalidateRow(ctx[0], cell[0].row, 'data', cell[0].column)\n\n        return this\n      })\n      /**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 2D array of sorting information to be applied.\n       * @returns {DataTables.Api} this\n       */\n      /**\n       * Set the ordering for the table.\n       *\n       * @param {integer} order Column index to sort upon.\n       * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n       * @returns {DataTables.Api} this\n       */\n      /**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 1D array of sorting information to be applied.\n       * @param {array} [...] Optional additional sorting conditions\n       * @returns {DataTables.Api} this\n       */\n\n      /**\n       * Get current ordering (sorting) that has been applied to the table.\n       *\n       * @returns {array} 2D array containing the sorting information for the first\n       *   table in the current context. Each element in the parent array represents\n       *   a column being sorted upon (i.e. multi-sorting with two columns would have\n       *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n       *   the column index that the sorting condition applies to, the second is the\n       *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n       *   index of the sorting order from the `column.sorting` initialisation array.\n       */ _api_register('order()', function (order, dir) {\n        var ctx = this.context\n\n        if (order === undefined) {\n          // get\n          return ctx.length !== 0 ? ctx[0].aaSorting : undefined\n        }\n\n        // set\n        if (typeof order === 'number') {\n          // Simple column / direction passed in\n          order = [[order, dir]]\n        } else if (!$.isArray(order[0])) {\n          // Arguments passed in (list of 1D arrays)\n          order = Array.prototype.slice.call(arguments)\n        }\n        // otherwise a 2D array was passed in\n\n        return this.iterator('table', function (settings) {\n          settings.aaSorting = order.slice()\n        })\n      })\n\n      /**\n       * Attach a sort listener to an element for a given column\n       *\n       * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n       *   listener to. This can take the form of a single DOM node, a jQuery\n       *   collection of nodes or a jQuery selector which will identify the node(s).\n       * @param {integer} column the column that a click on this node will sort on\n       * @param {function} [callback] callback function when sort is run\n       * @returns {DataTables.Api} this\n       */\n      _api_register('order.listener()', function (node, column, callback) {\n        return this.iterator('table', function (settings) {\n          _fnSortAttachListener(settings, node, column, callback)\n        })\n      })\n\n      // Order by the selected column(s)\n      _api_register(['columns().order()', 'column().order()'], function (dir) {\n        var that = this\n\n        return this.iterator('table', function (settings, i) {\n          var sort = []\n\n          $.each(that[i], function (j, col) {\n            sort.push([col, dir])\n          })\n\n          settings.aaSorting = sort\n        })\n      })\n\n      _api_register('search()', function (input, regex, smart, caseInsen) {\n        var ctx = this.context\n\n        if (input === undefined) {\n          // get\n          return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined\n        }\n\n        // set\n        return this.iterator('table', function (settings) {\n          if (!settings.oFeatures.bFilter) {\n            return\n          }\n\n          _fnFilterComplete(\n            settings,\n            $.extend({}, settings.oPreviousSearch, {\n              sSearch: input + '',\n              bRegex: regex === null ? false : regex,\n              bSmart: smart === null ? true : smart,\n              bCaseInsensitive: caseInsen === null ? true : caseInsen\n            }),\n            1\n          )\n        })\n      })\n\n      _api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n        return this.iterator('column', function (settings, column) {\n          var preSearch = settings.aoPreSearchCols\n\n          if (input === undefined) {\n            // get\n            return preSearch[column].sSearch\n          }\n\n          // set\n          if (!settings.oFeatures.bFilter) {\n            return\n          }\n\n          $.extend(preSearch[column], {\n            sSearch: input + '',\n            bRegex: regex === null ? false : regex,\n            bSmart: smart === null ? true : smart,\n            bCaseInsensitive: caseInsen === null ? true : caseInsen\n          })\n\n          _fnFilterComplete(settings, settings.oPreviousSearch, 1)\n        })\n      })\n\n      /*\n       * State API methods\n       */\n\n      _api_register('state()', function () {\n        return this.context.length ? this.context[0].oSavedState : null\n      })\n\n      _api_register('state.clear()', function () {\n        return this.iterator('table', function (settings) {\n          // Save an empty object\n          settings.fnStateSaveCallback.call(settings.oInstance, settings, {})\n        })\n      })\n\n      _api_register('state.loaded()', function () {\n        return this.context.length ? this.context[0].oLoadedState : null\n      })\n\n      _api_register('state.save()', function () {\n        return this.iterator('table', function (settings) {\n          _fnSaveState(settings)\n        })\n      })\n\n      /**\n       * Provide a common method for plug-ins to check the version of DataTables being\n       * used, in order to ensure compatibility.\n       *\n       *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n       *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n       *  @returns {boolean} true if this version of DataTables is greater or equal to\n       *    the required version, or false if this version of DataTales is not\n       *    suitable\n       *  @static\n       *  @dtopt API-Static\n       *\n       *  @example\n       *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n       */\n      DataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n        var aThis = DataTable.version.split('.')\n        var aThat = version.split('.')\n        var iThis, iThat\n\n        for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n          iThis = parseInt(aThis[i], 10) || 0\n          iThat = parseInt(aThat[i], 10) || 0\n\n          // Parts are the same, keep comparing\n          if (iThis === iThat) {\n            continue\n          }\n\n          // Parts are different, return immediately\n          return iThis > iThat\n        }\n\n        return true\n      }\n\n      /**\n       * Check if a `<table>` node is a DataTable table already or not.\n       *\n       *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n       *      selector for the table to test. Note that if more than more than one\n       *      table is passed on, only the first will be checked\n       *  @returns {boolean} true the table given is a DataTable, or false otherwise\n       *  @static\n       *  @dtopt API-Static\n       *\n       *  @example\n       *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n       *      $('#example').dataTable();\n       *    }\n       */\n      DataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n        var t = $(table).get(0)\n        var is = false\n\n        $.each(DataTable.settings, function (i, o) {\n          if (o.nTable === t || o.nScrollHead === t || o.nScrollFoot === t) {\n            is = true\n          }\n        })\n\n        return is\n      }\n\n      /**\n       * Get all DataTable tables that have been initialised - optionally you can\n       * select to get only currently visible tables.\n       *\n       *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n       *    or visible tables only.\n       *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n       *    DataTables\n       *  @static\n       *  @dtopt API-Static\n       *\n       *  @example\n       *    $.each( $.fn.dataTable.tables(true), function () {\n       *      $(table).DataTable().columns.adjust();\n       *    } );\n       */\n      DataTable.tables = DataTable.fnTables = function (visible) {\n        return jQuery.map(DataTable.settings, function (o) {\n          if (!visible || (visible && $(o.nTable).is(':visible'))) {\n            return o.nTable\n          }\n        })\n      }\n\n      /**\n       * Convert from camel case parameters to Hungarian notation. This is made public\n       * for the extensions to provide the same ability as DataTables core to accept\n       * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n       * parameters.\n       *\n       *  @param {object} src The model object which holds all parameters that can be\n       *    mapped.\n       *  @param {object} user The object to convert from camel case to Hungarian.\n       *  @param {boolean} force When set to `true`, properties which already have a\n       *    Hungarian value in the `user` object will be overwritten. Otherwise they\n       *    won't be.\n       */\n      DataTable.camelToHungarian = _fnCamelToHungarian\n\n      /**\n       *\n       */\n      _api_register('$()', function (selector, opts) {\n        var rows = this.rows(opts).nodes(), // Get all rows\n          jqRows = $(rows)\n\n        return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()))\n      })\n\n      // jQuery functions to operate on the tables\n      $.each(['on', 'one', 'off'], function (i, key) {\n        _api_register(key + '()', function (/* event, handler */) {\n          var args = Array.prototype.slice.call(arguments)\n\n          // Add the `dt` namespace automatically if it isn't already present\n          if (!args[0].match(/\\.dt\\b/)) {\n            args[0] += '.dt'\n          }\n\n          var inst = $(this.tables().nodes())\n          inst[key].apply(inst, args)\n          return this\n        })\n      })\n\n      _api_register('clear()', function () {\n        return this.iterator('table', function (settings) {\n          _fnClearTable(settings)\n        })\n      })\n\n      _api_register('settings()', function () {\n        return new _Api(this.context, this.context)\n      })\n\n      _api_register('data()', function () {\n        return this.iterator('table', function (settings) {\n          return _pluck(settings.aoData, '_aData')\n        }).flatten()\n      })\n\n      _api_register('destroy()', function (remove) {\n        remove = remove || false\n\n        return this.iterator('table', function (settings) {\n          var orig = settings.nTableWrapper.parentNode\n          var classes = settings.oClasses\n          var table = settings.nTable\n          var tbody = settings.nTBody\n          var thead = settings.nTHead\n          var tfoot = settings.nTFoot\n          var jqTable = $(table)\n          var jqTbody = $(tbody)\n          var jqWrapper = $(settings.nTableWrapper)\n          var rows = $.map(settings.aoData, function (r) {\n            return r.nTr\n          })\n          var i, ien\n\n          // Flag to note that the table is currently being destroyed - no action\n          // should be taken\n          settings.bDestroying = true\n\n          // Fire off the destroy callbacks for plug-ins etc\n          _fnCallbackFire(settings, 'aoDestroyCallback', 'destroy', [settings])\n\n          // If not being removed from the document, make all columns visible\n          if (!remove) {\n            new _Api(settings).columns().visible(true)\n          }\n\n          // Blitz all `DT` namespaced events (these are internal events, the\n          // lowercase, `dt` events are user subscribed and they are responsible\n          // for removing them\n          jqWrapper\n            .unbind('.DT')\n            .find(':not(tbody *)')\n            .unbind('.DT')\n          $(window).unbind('.DT-' + settings.sInstance)\n\n          // When scrolling we had to break the table up - restore it\n          if (table != thead.parentNode) {\n            jqTable.children('thead').detach()\n            jqTable.append(thead)\n          }\n\n          if (tfoot && table != tfoot.parentNode) {\n            jqTable.children('tfoot').detach()\n            jqTable.append(tfoot)\n          }\n\n          // Remove the DataTables generated nodes, events and classes\n          jqTable.detach()\n          jqWrapper.detach()\n\n          settings.aaSorting = []\n          settings.aaSortingFixed = []\n          _fnSortingClasses(settings)\n\n          $(rows).removeClass(settings.asStripeClasses.join(' '))\n\n          $('th, td', thead).removeClass(\n            classes.sSortable + ' ' + classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone\n          )\n\n          if (settings.bJUI) {\n            $('th span.' + classes.sSortIcon + ', td span.' + classes.sSortIcon, thead).detach()\n            $('th, td', thead).each(function () {\n              var wrapper = $('div.' + classes.sSortJUIWrapper, this)\n              $(this).append(wrapper.contents())\n              wrapper.detach()\n            })\n          }\n\n          if (!remove && orig) {\n            // insertBefore acts like appendChild if !arg[1]\n            orig.insertBefore(table, settings.nTableReinsertBefore)\n          }\n\n          // Add the TR elements back into the table in their original order\n          jqTbody.children().detach()\n          jqTbody.append(rows)\n\n          // Restore the width of the original table - was read from the style property,\n          // so we can restore directly to that\n          jqTable.css('width', settings.sDestroyWidth).removeClass(classes.sTable)\n\n          // If the were originally stripe classes - then we add them back here.\n          // Note this is not fool proof (for example if not all rows had stripe\n          // classes - but it's a good effort without getting carried away\n          ien = settings.asDestroyStripes.length\n\n          if (ien) {\n            jqTbody.children().each(function (i) {\n              $(this).addClass(settings.asDestroyStripes[i % ien])\n            })\n          }\n\n          /* Remove the settings object from the settings array */\n          var idx = $.inArray(settings, DataTable.settings)\n          if (idx !== -1) {\n            DataTable.settings.splice(idx, 1)\n          }\n        })\n      })\n\n      /**\n       * Version string for plug-ins to check compatibility. Allowed format is\n       * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n       * only for non-release builds. See http://semver.org/ for more information.\n       *  @member\n       *  @type string\n       *  @default Version number\n       */\n      DataTable.version = '1.10.2'\n\n      /**\n       * Private data store, containing all of the settings objects that are\n       * created for the tables on a given page.\n       *\n       * Note that the `DataTable.settings` object is aliased to\n       * `jQuery.fn.dataTableExt` through which it may be accessed and\n       * manipulated, or `jQuery.fn.dataTable.settings`.\n       *  @member\n       *  @type array\n       *  @default []\n       *  @private\n       */\n      DataTable.settings = []\n\n      /**\n       * Object models container, for the various models that DataTables has\n       * available to it. These models define the objects that are used to hold\n       * the active state and configuration of the table.\n       *  @namespace\n       */\n      DataTable.models = {}\n\n      /**\n       * Template object for the way in which DataTables holds information about\n       * search information for the global filter and individual column filters.\n       *  @namespace\n       */\n      DataTable.models.oSearch = {\n        /**\n         * Flag to indicate if the filtering should be case insensitive or not\n         *  @type boolean\n         *  @default true\n         */\n        bCaseInsensitive: true,\n\n        /**\n         * Applied search term\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        sSearch: '',\n\n        /**\n         * Flag to indicate if the search term should be interpreted as a\n         * regular expression (true) or not (false) and therefore and special\n         * regex characters escaped.\n         *  @type boolean\n         *  @default false\n         */\n        bRegex: false,\n\n        /**\n         * Flag to indicate if DataTables is to use its smart filtering or not.\n         *  @type boolean\n         *  @default true\n         */\n        bSmart: true\n      }\n\n      /**\n       * Template object for the way in which DataTables holds information about\n       * each individual row. This is the object format used for the settings\n       * aoData array.\n       *  @namespace\n       */\n      DataTable.models.oRow = {\n        /**\n         * TR element for the row\n         *  @type node\n         *  @default null\n         */\n        nTr: null,\n\n        /**\n         * Array of TD elements for each row. This is null until the row has been\n         * created.\n         *  @type array nodes\n         *  @default []\n         */\n        anCells: null,\n\n        /**\n         * Data object from the original data source for the row. This is either\n         * an array if using the traditional form of DataTables, or an object if\n         * using mData options. The exact type will depend on the passed in\n         * data from the data source, or will be an array if using DOM a data\n         * source.\n         *  @type array|object\n         *  @default []\n         */\n        _aData: [],\n\n        /**\n         * Sorting data cache - this array is ostensibly the same length as the\n         * number of columns (although each index is generated only as it is\n         * needed), and holds the data that is used for sorting each column in the\n         * row. We do this cache generation at the start of the sort in order that\n         * the formatting of the sort data need be done only once for each cell\n         * per sort. This array should not be read from or written to by anything\n         * other than the master sorting methods.\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        _aSortData: null,\n\n        /**\n         * Per cell filtering data cache. As per the sort data cache, used to\n         * increase the performance of the filtering in DataTables\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        _aFilterData: null,\n\n        /**\n         * Filtering data cache. This is the same as the cell filtering cache, but\n         * in this case a string rather than an array. This is easily computed with\n         * a join on `_aFilterData`, but is provided as a cache so the join isn't\n         * needed on every search (memory traded for performance)\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        _sFilterRow: null,\n\n        /**\n         * Cache of the class name that DataTables has applied to the row, so we\n         * can quickly look at this variable rather than needing to do a DOM check\n         * on className for the nTr property.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *  @private\n         */\n        _sRowStripe: '',\n\n        /**\n         * Denote if the original data source was from the DOM, or the data source\n         * object. This is used for invalidating data, so DataTables can\n         * automatically read data from the original source, unless uninstructed\n         * otherwise.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        src: null\n      }\n\n      /**\n       * Template object for the column information object in DataTables. This object\n       * is held in the settings aoColumns array and contains all the information that\n       * DataTables needs about each individual column.\n       *\n       * Note that this object is related to {@link DataTable.defaults.column}\n       * but this one is the internal data store for DataTables's cache of columns.\n       * It should NOT be manipulated outside of DataTables. Any configuration should\n       * be done through the initialisation options.\n       *  @namespace\n       */\n      DataTable.models.oColumn = {\n        /**\n         * Column index. This could be worked out on-the-fly with $.inArray, but it\n         * is faster to just hold it as a variable\n         *  @type integer\n         *  @default null\n         */\n        idx: null,\n\n        /**\n         * A list of the columns that sorting should occur on when this column\n         * is sorted. That this property is an array allows multi-column sorting\n         * to be defined for a column (for example first name / last name columns\n         * would benefit from this). The values are integers pointing to the\n         * columns to be sorted on (typically it will be a single integer pointing\n         * at itself, but that doesn't need to be the case).\n         *  @type array\n         */\n        aDataSort: null,\n\n        /**\n         * Define the sorting directions that are applied to the column, in sequence\n         * as the column is repeatedly sorted upon - i.e. the first value is used\n         * as the sorting direction when the column if first sorted (clicked on).\n         * Sort it again (click again) and it will move on to the next index.\n         * Repeat until loop.\n         *  @type array\n         */\n        asSorting: null,\n\n        /**\n         * Flag to indicate if the column is searchable, and thus should be included\n         * in the filtering or not.\n         *  @type boolean\n         */\n        bSearchable: null,\n\n        /**\n         * Flag to indicate if the column is sortable or not.\n         *  @type boolean\n         */\n        bSortable: null,\n\n        /**\n         * Flag to indicate if the column is currently visible in the table or not\n         *  @type boolean\n         */\n        bVisible: null,\n\n        /**\n         * Store for manual type assignment using the `column.type` option. This\n         * is held in store so we can manipulate the column's `sType` property.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        _sManualType: null,\n\n        /**\n         * Flag to indicate if HTML5 data attributes should be used as the data\n         * source for filtering or sorting. True is either are.\n         *  @type boolean\n         *  @default false\n         *  @private\n         */\n        _bAttrSrc: false,\n\n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} nTd The TD node that has been created\n         *  @param {*} sData The Data for the cell\n         *  @param {array|object} oData The data for the whole row\n         *  @param {int} iRow The row index for the aoData data store\n         *  @default null\n         */\n        fnCreatedCell: null,\n\n        /**\n         * Function to get data from a cell in a column. You should <b>never</b>\n         * access data directly through _aData internally in DataTables - always use\n         * the method attached to this property. It allows mData to function as\n         * required. This function is automatically assigned by the column\n         * initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {string} sSpecific The specific data type you want to get -\n         *    'display', 'type' 'filter' 'sort'\n         *  @returns {*} The data for the cell from the given row's data\n         *  @default null\n         */\n        fnGetData: null,\n\n        /**\n         * Function to set data for a cell in the column. You should <b>never</b>\n         * set the data directly to _aData internally in DataTables - always use\n         * this method. It allows mData to function as required. This function\n         * is automatically assigned by the column initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {*} sValue Value to set\n         *  @default null\n         */\n        fnSetData: null,\n\n        /**\n         * Property to read the value for the cells in the column from the data\n         * source array / object. If null, then the default content is used, if a\n         * function is given then the return from the function is used.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        mData: null,\n\n        /**\n         * Partner property to mData which is used (only when defined) to get\n         * the data - i.e. it is basically the same as mData, but without the\n         * 'set' option, and also the data fed to it is the result from mData.\n         * This is the rendering method to match the data method of mData.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        mRender: null,\n\n        /**\n         * Unique header TH/TD element for this column - this is what the sorting\n         * listener is attached to (if sorting is enabled.)\n         *  @type node\n         *  @default null\n         */\n        nTh: null,\n\n        /**\n         * Unique footer TH/TD element for this column (if there is one). Not used\n         * in DataTables as such, but can be used for plug-ins to reference the\n         * footer for each column.\n         *  @type node\n         *  @default null\n         */\n        nTf: null,\n\n        /**\n         * The class to apply to all TD elements in the table's TBODY for the column\n         *  @type string\n         *  @default null\n         */\n        sClass: null,\n\n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         *  @type string\n         */\n        sContentPadding: null,\n\n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because mData\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         */\n        sDefaultContent: null,\n\n        /**\n         * Name for the column, allowing reference to the column by name as well as\n         * by index (needs a lookup to work by name).\n         *  @type string\n         */\n        sName: null,\n\n        /**\n         * Custom sorting data type - defines which of the available plug-ins in\n         * afnSortData the custom sorting will use - if any is defined.\n         *  @type string\n         *  @default std\n         */\n        sSortDataType: 'std',\n\n        /**\n         * Class to be applied to the header element when sorting on this column\n         *  @type string\n         *  @default null\n         */\n        sSortingClass: null,\n\n        /**\n         * Class to be applied to the header element when sorting on this column -\n         * when jQuery UI theming is used.\n         *  @type string\n         *  @default null\n         */\n        sSortingClassJUI: null,\n\n        /**\n         * Title of the column - what is seen in the TH element (nTh).\n         *  @type string\n         */\n        sTitle: null,\n\n        /**\n         * Column sorting and filtering type\n         *  @type string\n         *  @default null\n         */\n        sType: null,\n\n        /**\n         * Width of the column\n         *  @type string\n         *  @default null\n         */\n        sWidth: null,\n\n        /**\n         * Width of the column when it was first \"encountered\"\n         *  @type string\n         *  @default null\n         */\n        sWidthOrig: null\n      }\n\n      /*\n       * Developer note: The properties of the object below are given in Hungarian\n       * notation, that was used as the interface for DataTables prior to v1.10, however\n       * from v1.10 onwards the primary interface is camel case. In order to avoid\n       * breaking backwards compatibility utterly with this change, the Hungarian\n       * version is still, internally the primary interface, but is is not documented\n       * - hence the @name tags in each doc comment. This allows a Javascript function\n       * to create a map from Hungarian notation to camel case (going the other direction\n       * would require each property to be listed, which would at around 3K to the size\n       * of DataTables, while this method is about a 0.5K hit.\n       *\n       * Ultimately this does pave the way for Hungarian notation to be dropped\n       * completely, but that is a massive amount of work and will break current\n       * installs (therefore is on-hold until v2).\n       */\n\n      /**\n       * Initialisation options that can be given to DataTables at initialisation\n       * time.\n       *  @namespace\n       */\n      DataTable.defaults = {\n        /**\n         * An array of data to use for the table, passed in at initialisation which\n         * will be used in preference to any data which is already in the DOM. This is\n         * particularly useful for constructing tables purely in Javascript, for\n         * example with a custom Ajax call.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.data\n         *\n         *  @example\n         *    // Using a 2D array data source\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n         *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\" },\n         *          { \"title\": \"Browser\" },\n         *          { \"title\": \"Platform\" },\n         *          { \"title\": \"Version\" },\n         *          { \"title\": \"Grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using an array of objects as a data source (`data`)\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 4.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  4,\n         *            \"grade\":    \"X\"\n         *          },\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 5.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  5,\n         *            \"grade\":    \"C\"\n         *          }\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n         *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n         *          { \"title\": \"Platform\", \"data\": \"platform\" },\n         *          { \"title\": \"Version\",  \"data\": \"version\" },\n         *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        aaData: null,\n\n        /**\n         * If ordering is enabled, then DataTables will perform a first pass sort on\n         * initialisation. You can define which column(s) the sort is performed\n         * upon, and the sorting direction, with this variable. The `sorting` array\n         * should contain an array for each column to be sorted initially containing\n         * the column's index and a direction string ('asc' or 'desc').\n         *  @type array\n         *  @default [[0,'asc']]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.order\n         *\n         *  @example\n         *    // Sort by 3rd column first, and then 4th column\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": [[2,'asc'], [3,'desc']]\n         *      } );\n         *    } );\n         *\n         *    // No initial sorting\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": []\n         *      } );\n         *    } );\n         */\n        aaSorting: [[0, 'asc']],\n\n        /**\n         * This parameter is basically identical to the `sorting` parameter, but\n         * cannot be overridden by user interaction with the table. What this means\n         * is that you could have a column (visible or hidden) which the sorting\n         * will always be forced on first - any sorting after that (from the user)\n         * will then be performed as required. This can be useful for grouping rows\n         * together.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.orderFixed\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderFixed\": [[0,'asc']]\n         *      } );\n         *    } )\n         */\n        aaSortingFixed: [],\n\n        /**\n         * DataTables can be instructed to load data to display in the table from a\n         * Ajax source. This option defines how that Ajax call is made and where to.\n         *\n         * The `ajax` property has three different modes of operation, depending on\n         * how it is defined. These are:\n         *\n         * * `string` - Set the URL from where the data should be loaded from.\n         * * `object` - Define properties for `jQuery.ajax`.\n         * * `function` - Custom data get function\n         *\n         * `string`\n         * --------\n         *\n         * As a string, the `ajax` property simply defines the URL from which\n         * DataTables will load data.\n         *\n         * `object`\n         * --------\n         *\n         * As an object, the parameters in the object are passed to\n         * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n         * of the Ajax request. DataTables has a number of default parameters which\n         * you can override using this option. Please refer to the jQuery\n         * documentation for a full description of the options available, although\n         * the following parameters provide additional options in DataTables or\n         * require special consideration:\n         *\n         * * `data` - As with jQuery, `data` can be provided as an object, but it\n         *   can also be used as a function to manipulate the data DataTables sends\n         *   to the server. The function takes a single parameter, an object of\n         *   parameters with the values that DataTables has readied for sending. An\n         *   object may be returned which will be merged into the DataTables\n         *   defaults, or you can add the items to the object that was passed in and\n         *   not return anything from the function. This supersedes `fnServerParams`\n         *   from DataTables 1.9-.\n         *\n         * * `dataSrc` - By default DataTables will look for the property `data` (or\n         *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n         *   from an Ajax source or for server-side processing - this parameter\n         *   allows that property to be changed. You can use Javascript dotted\n         *   object notation to get a data source for multiple levels of nesting, or\n         *   it my be used as a function. As a function it takes a single parameter,\n         *   the JSON returned from the server, which can be manipulated as\n         *   required, with the returned value being that used by DataTables as the\n         *   data source for the table. This supersedes `sAjaxDataProp` from\n         *   DataTables 1.9-.\n         *\n         * * `success` - Should not be overridden it is used internally in\n         *   DataTables. To manipulate / transform the data returned by the server\n         *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n         *\n         * `function`\n         * ----------\n         *\n         * As a function, making the Ajax call is left up to yourself allowing\n         * complete control of the Ajax request. Indeed, if desired, a method other\n         * than Ajax could be used to obtain the required data, such as Web storage\n         * or an AIR database.\n         *\n         * The function is given four parameters and no return is required. The\n         * parameters are:\n         *\n         * 1. _object_ - Data to send to the server\n         * 2. _function_ - Callback function that must be executed when the required\n         *    data has been obtained. That data should be passed into the callback\n         *    as the only parameter\n         * 3. _object_ - DataTables settings object for the table\n         *\n         * Note that this supersedes `fnServerData` from DataTables 1.9-.\n         *\n         *  @type string|object|function\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.ajax\n         *  @since 1.10.0\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax.\n         *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n         *   $('#example').dataTable( {\n         *     \"ajax\": \"data.json\"\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n         *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"tableData\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n         *   // from a plain array rather than an array in an object\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Manipulate the data returned from the server - add a link to data\n         *   // (note this can, should, be done using `render` for the column - this\n         *   // is just a simple example of how the data can be manipulated).\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": function ( json ) {\n         *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n         *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n         *         }\n         *         return json;\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Add data to the request\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"data\": function ( d ) {\n         *         return {\n         *           \"extra_search\": $('#extra').val()\n         *         };\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Send request as POST\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"type\": \"POST\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get the data from localStorage (could interface with a form for\n         *   // adding, editing and removing rows).\n         *   $('#example').dataTable( {\n         *     \"ajax\": function (data, callback, settings) {\n         *       callback(\n         *         JSON.parse( localStorage.getItem('dataTablesData') )\n         *       );\n         *     }\n         *   } );\n         */\n        ajax: null,\n\n        /**\n         * This parameter allows you to readily specify the entries in the length drop\n         * down menu that DataTables shows when pagination is enabled. It can be\n         * either a 1D array of options which will be used for both the displayed\n         * option and the value, or a 2D array which will use the array in the first\n         * position as the value, and the array in the second position as the\n         * displayed options (useful for language strings such as 'All').\n         *\n         * Note that the `pageLength` property will be automatically set to the\n         * first value given in this array, unless `pageLength` is also provided.\n         *  @type array\n         *  @default [ 10, 25, 50, 100 ]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.lengthMenu\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n         *      } );\n         *    } );\n         */\n        aLengthMenu: [10, 25, 50, 100],\n\n        /**\n         * The `columns` option in the initialisation parameter allows you to define\n         * details about the way individual columns behave. For a full list of\n         * column options that can be set, please see\n         * {@link DataTable.defaults.column}. Note that if you use `columns` to\n         * define your columns, you must have an entry in the array for every single\n         * column that you have in your table (these can be null if you don't which\n         * to specify any options).\n         *  @member\n         *\n         *  @name DataTable.defaults.column\n         */\n        aoColumns: null,\n\n        /**\n         * Very similar to `columns`, `columnDefs` allows you to target a specific\n         * column, multiple columns, or all columns, using the `targets` property of\n         * each object in the array. This allows great flexibility when creating\n         * tables, as the `columnDefs` arrays can be of any length, targeting the\n         * columns you specifically want. `columnDefs` may use any of the column\n         * options available: {@link DataTable.defaults.column}, but it _must_\n         * have `targets` defined in each object in the array. Values in the `targets`\n         * array may be:\n         *   <ul>\n         *     <li>a string - class name will be matched on the TH for the column</li>\n         *     <li>0 or a positive integer - column index counting from the left</li>\n         *     <li>a negative integer - column index counting from the right</li>\n         *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n         *   </ul>\n         *  @member\n         *\n         *  @name DataTable.defaults.columnDefs\n         */\n        aoColumnDefs: null,\n\n        /**\n         * Basically the same as `search`, this parameter defines the individual column\n         * filtering state at initialisation time. The array must be of the same size\n         * as the number of columns, and each element be an object with the parameters\n         * `search` and `escapeRegex` (the latter is optional). 'null' is also\n         * accepted and the default will be used.\n         *  @type array\n         *  @default []\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.searchCols\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"searchCols\": [\n         *          null,\n         *          { \"search\": \"My filter\" },\n         *          null,\n         *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n         *        ]\n         *      } );\n         *    } )\n         */\n        aoSearchCols: [],\n\n        /**\n         * An array of CSS classes that should be applied to displayed rows. This\n         * array may be of any length, and DataTables will apply each class\n         * sequentially, looping when required.\n         *  @type array\n         *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n         *    options</i>\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.stripeClasses\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n         *      } );\n         *    } )\n         */\n        asStripeClasses: null,\n\n        /**\n         * Enable or disable automatic column width calculation. This can be disabled\n         * as an optimisation (it takes some time to calculate the widths) if the\n         * tables widths are passed in using `columns`.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.autoWidth\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"autoWidth\": false\n         *      } );\n         *    } );\n         */\n        bAutoWidth: true,\n\n        /**\n         * Deferred rendering can provide DataTables with a huge speed boost when you\n         * are using an Ajax or JS data source for the table. This option, when set to\n         * true, will cause DataTables to defer the creation of the table elements for\n         * each row until they are needed for a draw - saving a significant amount of\n         * time.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.deferRender\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajax\": \"sources/arrays.txt\",\n         *        \"deferRender\": true\n         *      } );\n         *    } );\n         */\n        bDeferRender: false,\n\n        /**\n         * Replace a DataTable which matches the given selector and replace it with\n         * one which has the properties of the new initialisation object passed. If no\n         * table matches the selector, then the new DataTable will be constructed as\n         * per normal.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.destroy\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"srollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *\n         *      // Some time later....\n         *      $('#example').dataTable( {\n         *        \"filter\": false,\n         *        \"destroy\": true\n         *      } );\n         *    } );\n         */\n        bDestroy: false,\n\n        /**\n         * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n         * that it allows the end user to input multiple words (space separated) and\n         * will match a row containing those words, even if not in the order that was\n         * specified (this allow matching across multiple columns). Note that if you\n         * wish to use filtering in DataTables this must remain 'true' - to remove the\n         * default filtering input box and retain filtering abilities, please use\n         * {@link DataTable.defaults.dom}.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.searching\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"searching\": false\n         *      } );\n         *    } );\n         */\n        bFilter: true,\n\n        /**\n         * Enable or disable the table information display. This shows information\n         * about the data that is currently visible on the page, including information\n         * about filtered data if that action is being performed.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.info\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"info\": false\n         *      } );\n         *    } );\n         */\n        bInfo: true,\n\n        /**\n         * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n         * slightly different and additional mark-up from what DataTables has\n         * traditionally used).\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.jQueryUI\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"jQueryUI\": true\n         *      } );\n         *    } );\n         */\n        bJQueryUI: false,\n\n        /**\n         * Allows the end user to select the size of a formatted page from a select\n         * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.lengthChange\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"lengthChange\": false\n         *      } );\n         *    } );\n         */\n        bLengthChange: true,\n\n        /**\n         * Enable or disable pagination.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.paging\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"paging\": false\n         *      } );\n         *    } );\n         */\n        bPaginate: true,\n\n        /**\n         * Enable or disable the display of a 'processing' indicator when the table is\n         * being processed (e.g. a sort). This is particularly useful for tables with\n         * large amounts of data where it can take a noticeable amount of time to sort\n         * the entries.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.processing\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"processing\": true\n         *      } );\n         *    } );\n         */\n        bProcessing: false,\n\n        /**\n         * Retrieve the DataTables object for the given selector. Note that if the\n         * table has already been initialised, this parameter will cause DataTables\n         * to simply return the object that has already been set up - it will not take\n         * account of any changes you might have made to the initialisation object\n         * passed to DataTables (setting this parameter to true is an acknowledgement\n         * that you understand this). `destroy` can be used to reinitialise a table if\n         * you need.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.retrieve\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      initTable();\n         *      tableActions();\n         *    } );\n         *\n         *    function initTable ()\n         *    {\n         *      return $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false,\n         *        \"retrieve\": true\n         *      } );\n         *    }\n         *\n         *    function tableActions ()\n         *    {\n         *      var table = initTable();\n         *      // perform API operations with oTable\n         *    }\n         */\n        bRetrieve: false,\n\n        /**\n         * When vertical (y) scrolling is enabled, DataTables will force the height of\n         * the table's viewport to the given height at all times (useful for layout).\n         * However, this can look odd when filtering data down to a small data set,\n         * and the footer is left \"floating\" further down. This parameter (when\n         * enabled) will cause DataTables to collapse the table's viewport down when\n         * the result set will fit within the given Y height.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollCollapse\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200\",\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        bScrollCollapse: false,\n\n        /**\n         * Configure DataTables to use server-side processing. Note that the\n         * `ajax` parameter must also be given in order to give DataTables a\n         * source to obtain the required data for each draw.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverSide\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"xhr.php\"\n         *      } );\n         *    } );\n         */\n        bServerSide: false,\n\n        /**\n         * Enable or disable sorting of columns. Sorting of individual columns can be\n         * disabled by the `sortable` option for each column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.ordering\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"ordering\": false\n         *      } );\n         *    } );\n         */\n        bSort: true,\n\n        /**\n         * Enable or display DataTables' ability to sort multiple columns at the\n         * same time (activated by shift-click by the user).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderMulti\n         *\n         *  @example\n         *    // Disable multiple column sorting ability\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderMulti\": false\n         *      } );\n         *    } );\n         */\n        bSortMulti: true,\n\n        /**\n         * Allows control over whether DataTables should use the top (true) unique\n         * cell that is found for a single column, or the bottom (false - default).\n         * This is useful when using complex headers.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderCellsTop\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderCellsTop\": true\n         *      } );\n         *    } );\n         */\n        bSortCellsTop: false,\n\n        /**\n         * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n         * `sorting\\_3` to the columns which are currently being sorted on. This is\n         * presented as a feature switch as it can increase processing time (while\n         * classes are removed and added) so for large data sets you might want to\n         * turn this off.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.orderClasses\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderClasses\": false\n         *      } );\n         *    } );\n         */\n        bSortClasses: true,\n\n        /**\n         * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n         * used to save table display information such as pagination information,\n         * display length, filtering and sorting. As such when the end user reloads\n         * the page the display display will match what thy had previously set up.\n         *\n         * Due to the use of `localStorage` the default state saving is not supported\n         * in IE6 or 7. If state saving is required in those browsers, use\n         * `stateSaveCallback` to provide a storage solution such as cookies.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.stateSave\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true\n         *      } );\n         *    } );\n         */\n        bStateSave: false,\n\n        /**\n         * This function is called when a TR element is created (and all TD child\n         * elements have been inserted), or registered if using a DOM source, allowing\n         * manipulation of the TR element (adding classes etc).\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} dataIndex The index of this row in the internal aoData array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.createdRow\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"createdRow\": function( row, data, dataIndex ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" )\n         *          {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        fnCreatedRow: null,\n\n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify any aspect you want about the created DOM.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.drawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"drawCallback\": function( settings ) {\n         *          alert( 'DataTables has redrawn the table' );\n         *        }\n         *      } );\n         *    } );\n         */\n        fnDrawCallback: null,\n\n        /**\n         * Identical to fnHeaderCallback() but for the table footer this function\n         * allows you to modify the table footer on every 'draw' event.\n         *  @type function\n         *  @param {node} foot \"TR\" element for the footer\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.footerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n         *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n         *        }\n         *      } );\n         *    } )\n         */\n        fnFooterCallback: null,\n\n        /**\n         * When rendering large numbers in the information element for the table\n         * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n         * to have a comma separator for the 'thousands' units (e.g. 1 million is\n         * rendered as \"1,000,000\") to help readability for the end user. This\n         * function will override the default method DataTables uses.\n         *  @type function\n         *  @member\n         *  @param {int} toFormat number to be formatted\n         *  @returns {string} formatted string for DataTables to show the number\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.formatNumber\n         *\n         *  @example\n         *    // Format a number using a single quote for the separator (note that\n         *    // this can also be done with the language.thousands option)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"formatNumber\": function ( toFormat ) {\n         *          return toFormat.toString().replace(\n         *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n         *          );\n         *        };\n         *      } );\n         *    } );\n         */\n        fnFormatNumber: function (toFormat) {\n          return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands)\n        },\n\n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify the header row. This can be used to calculate and\n         * display useful information about the table.\n         *  @type function\n         *  @param {node} head \"TR\" element for the header\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.headerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"fheaderCallback\": function( head, data, start, end, display ) {\n         *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n         *        }\n         *      } );\n         *    } )\n         */\n        fnHeaderCallback: null,\n\n        /**\n         * The information element can be used to convey information about the current\n         * state of the table. Although the internationalisation options presented by\n         * DataTables are quite capable of dealing with most customisations, there may\n         * be times where you wish to customise the string further. This callback\n         * allows you to do exactly that.\n         *  @type function\n         *  @param {object} oSettings DataTables settings object\n         *  @param {int} start Starting position in data for the draw\n         *  @param {int} end End position in data for the draw\n         *  @param {int} max Total number of rows in the table (regardless of\n         *    filtering)\n         *  @param {int} total Total number of rows in the data set, after filtering\n         *  @param {string} pre The string that DataTables has formatted using it's\n         *    own rules\n         *  @returns {string} The string to be displayed in the information element.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.infoCallback\n         *\n         *  @example\n         *    $('#example').dataTable( {\n         *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n         *        return start +\" to \"+ end;\n         *      }\n         *    } );\n         */\n        fnInfoCallback: null,\n\n        /**\n         * Called when the table has been initialised. Normally DataTables will\n         * initialise sequentially and there will be no need for this function,\n         * however, this does not hold true when using external language information\n         * since that is obtained using an async XHR call.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} json The JSON object request from the server - only\n         *    present if client-side Ajax sourced data is used\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.initComplete\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"initComplete\": function(settings, json) {\n         *          alert( 'DataTables has finished its initialisation.' );\n         *        }\n         *      } );\n         *    } )\n         */\n        fnInitComplete: null,\n\n        /**\n         * Called at the very start of each table draw and can be used to cancel the\n         * draw by returning false, any other return (including undefined) results in\n         * the full draw occurring).\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @returns {boolean} False will cancel the draw, anything else (including no\n         *    return) will allow it to complete.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.preDrawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"preDrawCallback\": function( settings ) {\n         *          if ( $('#test').val() == 1 ) {\n         *            return false;\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        fnPreDrawCallback: null,\n\n        /**\n         * This function allows you to 'post process' each row after it have been\n         * generated for each table draw, but before it is rendered on screen. This\n         * function might be used for setting the row class name etc.\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} displayIndex The display index for the current table draw\n         *  @param {int} displayIndexFull The index of the data in the full list of\n         *    rows (after filtering)\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.rowCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" ) {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        fnRowCallback: null,\n\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * This parameter allows you to override the default function which obtains\n         * the data from the server so something more suitable for your application.\n         * For example you could use POST data, or pull information from a Gears or\n         * AIR database.\n         *  @type function\n         *  @member\n         *  @param {string} source HTTP source to obtain the data from (`ajax`)\n         *  @param {array} data A key/value pair object containing the data to send\n         *    to the server\n         *  @param {function} callback to be called on completion of the data get\n         *    process that will draw the data on the page.\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverData\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        fnServerData: null,\n\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         *  It is often useful to send extra data to the server when making an Ajax\n         * request - for example custom filtering information, and this callback\n         * function makes it trivial to send extra information to the server. The\n         * passed in parameter is the data set that has been constructed by\n         * DataTables, and you can add to this or modify it as you require.\n         *  @type function\n         *  @param {array} data Data array (array of objects which are name/value\n         *    pairs) that has been constructed by DataTables and will be sent to the\n         *    server. In the case of Ajax sourced data with server-side processing\n         *    this will be an empty array, for server-side processing there will be a\n         *    significant number of parameters!\n         *  @returns {undefined} Ensure that you modify the data array passed in,\n         *    as this is passed by reference.\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverParams\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        fnServerParams: null,\n\n        /**\n         * Load the table state. With this function you can define from where, and how, the\n         * state of a table is loaded. By default DataTables will load from `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @return {object} The DataTables state object to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadCallback\": function (settings) {\n         *          var o;\n         *\n         *          // Send an Ajax request to the server to get the data. Note that\n         *          // this is a synchronous request.\n         *          $.ajax( {\n         *            \"url\": \"/state_load\",\n         *            \"async\": false,\n         *            \"dataType\": \"json\",\n         *            \"success\": function (json) {\n         *              o = json;\n         *            }\n         *          } );\n         *\n         *          return o;\n         *        }\n         *      } );\n         *    } );\n         */\n        fnStateLoadCallback: function (settings) {\n          try {\n            return JSON.parse(\n              (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n                'DataTables_' + settings.sInstance + '_' + location.pathname\n              )\n            )\n          } catch (e) {}\n        },\n\n        /**\n         * Callback which allows modification of the saved state prior to loading that state.\n         * This callback is called when the table is loading state from the stored data, but\n         * prior to the settings object being modified by the saved state. Note that for\n         * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n         * a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that is to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never loaded\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Disallow state loading by returning false\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          return false;\n         *        }\n         *      } );\n         *    } );\n         */\n        fnStateLoadParams: null,\n\n        /**\n         * Callback that is called when the state has been loaded from the state saving method\n         * and the DataTables settings object has been modified as a result of the loaded state.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that was loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoaded\n         *\n         *  @example\n         *    // Show an alert with the filtering value that was saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoaded\": function (settings, data) {\n         *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n         *        }\n         *      } );\n         *    } );\n         */\n        fnStateLoaded: null,\n\n        /**\n         * Save the table state. This function allows you to define where and how the state\n         * information for the table is stored By default DataTables will use `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveCallback\": function (settings, data) {\n         *          // Send an Ajax request to the server with the state object\n         *          $.ajax( {\n         *            \"url\": \"/state_save\",\n         *            \"data\": data,\n         *            \"dataType\": \"json\",\n         *            \"method\": \"POST\"\n         *            \"success\": function () {}\n         *          } );\n         *        }\n         *      } );\n         *    } );\n         */\n        fnStateSaveCallback: function (settings, data) {\n          try {\n            ;(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n              'DataTables_' + settings.sInstance + '_' + location.pathname,\n              JSON.stringify(data)\n            )\n          } catch (e) {}\n        },\n\n        /**\n         * Callback which allows modification of the state to be saved. Called when the table\n         * has changed state a new state save is required. This method allows modification of\n         * the state saving object prior to actually doing the save, including addition or\n         * other state properties or modification. Note that for plug-in authors, you should\n         * use the `stateSaveParams` event to save parameters for a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         */\n        fnStateSaveParams: null,\n\n        /**\n         * Duration for which the saved state information is considered valid. After this period\n         * has elapsed the state will be returned to the default.\n         * Value is given in seconds.\n         *  @type int\n         *  @default 7200 <i>(2 hours)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.stateDuration\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateDuration\": 60*60*24; // 1 day\n         *      } );\n         *    } )\n         */\n        iStateDuration: 7200,\n\n        /**\n         * When enabled DataTables will not make a request to the server for the first\n         * page draw - rather it will use the data already on the page (no sorting etc\n         * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n         * is used to indicate that deferred loading is required, but it is also used\n         * to tell DataTables how many records there are in the full table (allowing\n         * the information element and pagination to be displayed correctly). In the case\n         * where a filtering is applied to the table on initial load, this can be\n         * indicated by giving the parameter as an array, where the first element is\n         * the number of records available after filtering and the second element is the\n         * number of records without filtering (allowing the table information element\n         * to be shown correctly).\n         *  @type int | array\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.deferLoading\n         *\n         *  @example\n         *    // 57 records available in the table, no filtering applied\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": 57\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": [ 57, 100 ],\n         *        \"search\": {\n         *          \"search\": \"my_filter\"\n         *        }\n         *      } );\n         *    } );\n         */\n        iDeferLoading: null,\n\n        /**\n         * Number of rows to display on a single page when using pagination. If\n         * feature enabled (`lengthChange`) then the end user will be able to override\n         * this to a custom setting using a pop-up menu.\n         *  @type int\n         *  @default 10\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pageLength\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pageLength\": 50\n         *      } );\n         *    } )\n         */\n        iDisplayLength: 10,\n\n        /**\n         * Define the starting point for data display when using DataTables with\n         * pagination. Note that this parameter is the number of records, rather than\n         * the page number, so if you have 10 records per page and want to start on\n         * the third page, it should be \"20\".\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.displayStart\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"displayStart\": 20\n         *      } );\n         *    } )\n         */\n        iDisplayStart: 0,\n\n        /**\n         * By default DataTables allows keyboard navigation of the table (sorting, paging,\n         * and filtering) by adding a `tabindex` attribute to the required elements. This\n         * allows you to tab through the controls and press the enter key to activate them.\n         * The tabindex is default 0, meaning that the tab follows the flow of the document.\n         * You can overrule this using this parameter if you wish. Use a value of -1 to\n         * disable built-in keyboard navigation.\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.tabIndex\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"tabIndex\": 1\n         *      } );\n         *    } );\n         */\n        iTabIndex: 0,\n\n        /**\n         * Classes that DataTables assigns to the various components and features\n         * that it adds to the HTML table. This allows classes to be configured\n         * during initialisation in addition to through the static\n         * {@link DataTable.ext.oStdClasses} object).\n         *  @namespace\n         *  @name DataTable.defaults.classes\n         */\n        oClasses: {},\n\n        /**\n         * All strings that DataTables uses in the user interface that it creates\n         * are defined in this object, allowing you to modified them individually or\n         * completely replace them all as required.\n         *  @namespace\n         *  @name DataTable.defaults.language\n         */\n        oLanguage: {\n          /**\n           * Strings that are used for WAI-ARIA labels and controls only (these are not\n           * actually visible on the page, but will be read by screenreaders, and thus\n           * must be internationalised as well).\n           *  @namespace\n           *  @name DataTable.defaults.language.aria\n           */\n          oAria: {\n            /**\n             * ARIA label that is added to the table headers when the column may be\n             * sorted ascending by activing the column (click or return when focused).\n             * Note that the column header is prefixed to this string.\n             *  @type string\n             *  @default : activate to sort column ascending\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.aria.sortAscending\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"aria\": {\n             *            \"sortAscending\": \" - click/return to sort ascending\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sSortAscending: ': activate to sort column ascending',\n\n            /**\n             * ARIA label that is added to the table headers when the column may be\n             * sorted descending by activing the column (click or return when focused).\n             * Note that the column header is prefixed to this string.\n             *  @type string\n             *  @default : activate to sort column ascending\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.aria.sortDescending\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"aria\": {\n             *            \"sortDescending\": \" - click/return to sort descending\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sSortDescending: ': activate to sort column descending'\n          },\n\n          /**\n           * Pagination string used by DataTables for the built-in pagination\n           * control types.\n           *  @namespace\n           *  @name DataTable.defaults.language.paginate\n           */\n          oPaginate: {\n            /**\n             * Text to use when using the 'full_numbers' type of pagination for the\n             * button to take the user to the first page.\n             *  @type string\n             *  @default First\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.paginate.first\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"paginate\": {\n             *            \"first\": \"First page\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sFirst: 'First',\n\n            /**\n             * Text to use when using the 'full_numbers' type of pagination for the\n             * button to take the user to the last page.\n             *  @type string\n             *  @default Last\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.paginate.last\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"paginate\": {\n             *            \"last\": \"Last page\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sLast: 'Last',\n\n            /**\n             * Text to use for the 'next' pagination button (to take the user to the\n             * next page).\n             *  @type string\n             *  @default Next\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.paginate.next\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"paginate\": {\n             *            \"next\": \"Next page\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sNext: 'Next',\n\n            /**\n             * Text to use for the 'previous' pagination button (to take the user to\n             * the previous page).\n             *  @type string\n             *  @default Previous\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.paginate.previous\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"paginate\": {\n             *            \"previous\": \"Previous page\"\n             *          }\n             *        }\n             *      } );\n             *    } );\n             */\n            sPrevious: 'Previous'\n          },\n\n          /**\n           * This string is shown in preference to `zeroRecords` when the table is\n           * empty of data (regardless of filtering). Note that this is an optional\n           * parameter - if it is not given, the value of `zeroRecords` will be used\n           * instead (either the default or given value).\n           *  @type string\n           *  @default No data available in table\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.emptyTable\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"emptyTable\": \"No data available in table\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sEmptyTable: 'No data available in table',\n\n          /**\n           * This string gives information to the end user about the information\n           * that is current on display on the page. The following tokens can be\n           * used in the string and will be dynamically replaced as the table\n           * display updates. This tokens can be placed anywhere in the string, or\n           * removed as needed by the language requires:\n           *\n           * * `\\_START\\_` - Display index of the first record on the current page\n           * * `\\_END\\_` - Display index of the last record on the current page\n           * * `\\_TOTAL\\_` - Number of records in the table after filtering\n           * * `\\_MAX\\_` - Number of records in the table without filtering\n           * * `\\_PAGE\\_` - Current page number\n           * * `\\_PAGES\\_` - Total number of pages of data in the table\n           *\n           *  @type string\n           *  @default Showing _START_ to _END_ of _TOTAL_ entries\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.info\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sInfo: 'Showing _START_ to _END_ of _TOTAL_ entries',\n\n          /**\n           * Display information string for when the table is empty. Typically the\n           * format of this string should match `info`.\n           *  @type string\n           *  @default Showing 0 to 0 of 0 entries\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.infoEmpty\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"infoEmpty\": \"No entries to show\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sInfoEmpty: 'Showing 0 to 0 of 0 entries',\n\n          /**\n           * When a user filters the information in a table, this string is appended\n           * to the information (`info`) to give an idea of how strong the filtering\n           * is. The variable _MAX_ is dynamically updated.\n           *  @type string\n           *  @default (filtered from _MAX_ total entries)\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.infoFiltered\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sInfoFiltered: '(filtered from _MAX_ total entries)',\n\n          /**\n           * If can be useful to append extra information to the info string at times,\n           * and this variable does exactly that. This information will be appended to\n           * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n           * being used) at all times.\n           *  @type string\n           *  @default <i>Empty string</i>\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.infoPostFix\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"infoPostFix\": \"All records shown are derived from real information.\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sInfoPostFix: '',\n\n          /**\n           * This decimal place operator is a little different from the other\n           * language options since DataTables doesn't output floating point\n           * numbers, so it won't ever use this for display of a number. Rather,\n           * what this parameter does is modify the sort methods of the table so\n           * that numbers which are in a format which has a character other than\n           * a period (`.`) as a decimal place will be sorted numerically.\n           *\n           * Note that numbers with different decimal places cannot be shown in\n           * the same table and still be sortable, the table must be consistent.\n           * However, multiple different tables on the page can use different\n           * decimal place characters.\n           *  @type string\n           *  @default\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.decimal\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"decimal\": \",\"\n           *          \"thousands\": \".\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sDecimal: '',\n\n          /**\n           * DataTables has a build in number formatter (`formatNumber`) which is\n           * used to format large numbers that are used in the table information.\n           * By default a comma is used, but this can be trivially changed to any\n           * character you wish with this parameter.\n           *  @type string\n           *  @default ,\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.thousands\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"thousands\": \"'\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sThousands: ',',\n\n          /**\n           * Detail the action that will be taken when the drop down menu for the\n           * pagination length option is changed. The '_MENU_' variable is replaced\n           * with a default select list of 10, 25, 50 and 100, and can be replaced\n           * with a custom select box if required.\n           *  @type string\n           *  @default Show _MENU_ entries\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.lengthMenu\n           *\n           *  @example\n           *    // Language change only\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"lengthMenu\": \"Display _MENU_ records\"\n           *        }\n           *      } );\n           *    } );\n           *\n           *  @example\n           *    // Language and options change\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"lengthMenu\": 'Display <select>'+\n           *            '<option value=\"10\">10</option>'+\n           *            '<option value=\"20\">20</option>'+\n           *            '<option value=\"30\">30</option>'+\n           *            '<option value=\"40\">40</option>'+\n           *            '<option value=\"50\">50</option>'+\n           *            '<option value=\"-1\">All</option>'+\n           *            '</select> records'\n           *        }\n           *      } );\n           *    } );\n           */\n          sLengthMenu: 'Show _MENU_ entries',\n\n          /**\n           * When using Ajax sourced data and during the first draw when DataTables is\n           * gathering the data, this message is shown in an empty row in the table to\n           * indicate to the end user the the data is being loaded. Note that this\n           * parameter is not used when loading data by server-side processing, just\n           * Ajax sourced data with client-side processing.\n           *  @type string\n           *  @default Loading...\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.loadingRecords\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"loadingRecords\": \"Please wait - loading...\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sLoadingRecords: 'Loading...',\n\n          /**\n           * Text which is displayed when the table is processing a user action\n           * (usually a sort command or similar).\n           *  @type string\n           *  @default Processing...\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.processing\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"processing\": \"DataTables is currently busy\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sProcessing: 'Processing...',\n\n          /**\n           * Details the actions that will be taken when the user types into the\n           * filtering input text box. The variable \"_INPUT_\", if used in the string,\n           * is replaced with the HTML text box for the filtering input allowing\n           * control over where it appears in the string. If \"_INPUT_\" is not given\n           * then the input box is appended to the string automatically.\n           *  @type string\n           *  @default Search:\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.search\n           *\n           *  @example\n           *    // Input text box will be appended at the end automatically\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"search\": \"Filter records:\"\n           *        }\n           *      } );\n           *    } );\n           *\n           *  @example\n           *    // Specify where the filter should appear\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"search\": \"Apply filter _INPUT_ to table\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sSearch: 'Search:',\n\n          /**\n           * Assign a `placeholder` attribute to the search `input` element\n           *  @type string\n           *  @default\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.searchPlaceholder\n           */\n          sSearchPlaceholder: '',\n\n          /**\n           * All of the language information can be stored in a file on the\n           * server-side, which DataTables will look up if this parameter is passed.\n           * It must store the URL of the language file, which is in a JSON format,\n           * and the object has the same properties as the oLanguage object in the\n           * initialiser object (i.e. the above parameters). Please refer to one of\n           * the example language files to see how this works in action.\n           *  @type string\n           *  @default <i>Empty string - i.e. disabled</i>\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.url\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sUrl: '',\n\n          /**\n           * Text shown inside the table records when the is no information to be\n           * displayed after filtering. `emptyTable` is shown when there is simply no\n           * information in the table at all (regardless of filtering).\n           *  @type string\n           *  @default No matching records found\n           *\n           *  @dtopt Language\n           *  @name DataTable.defaults.language.zeroRecords\n           *\n           *  @example\n           *    $(document).ready( function() {\n           *      $('#example').dataTable( {\n           *        \"language\": {\n           *          \"zeroRecords\": \"No records to display\"\n           *        }\n           *      } );\n           *    } );\n           */\n          sZeroRecords: 'No matching records found'\n        },\n\n        /**\n         * This parameter allows you to have define the global filtering state at\n         * initialisation time. As an object the `search` parameter must be\n         * defined, but all other parameters are optional. When `regex` is true,\n         * the search string will be treated as a regular expression, when false\n         * (default) it will be treated as a straight string. When `smart`\n         * DataTables will use it's smart filtering methods (to word match at\n         * any point in the data), when false this will not be done.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.search\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"search\": {\"search\": \"Initial search\"}\n         *      } );\n         *    } )\n         */\n        oSearch: $.extend({}, DataTable.models.oSearch),\n\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * By default DataTables will look for the property `data` (or `aaData` for\n         * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n         * source or for server-side processing - this parameter allows that\n         * property to be changed. You can use Javascript dotted object notation to\n         * get a data source for multiple levels of nesting.\n         *  @type string\n         *  @default data\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxDataProp\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        sAjaxDataProp: 'data',\n\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * You can instruct DataTables to load data from an external\n         * source using this parameter (use aData if you want to pass data in you\n         * already have). Simply provide a url a JSON object can be obtained from.\n         *  @type string\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxSource\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        sAjaxSource: null,\n\n        /**\n         * This initialisation variable allows you to specify exactly where in the\n         * DOM you want DataTables to inject the various controls it adds to the page\n         * (for example you might want the pagination controls at the top of the\n         * table). DIV elements (with or without a custom class) can also be added to\n         * aid styling. The follow syntax is used:\n         *   <ul>\n         *     <li>The following options are allowed:\n         *       <ul>\n         *         <li>'l' - Length changing</li>\n         *         <li>'f' - Filtering input</li>\n         *         <li>'t' - The table!</li>\n         *         <li>'i' - Information</li>\n         *         <li>'p' - Pagination</li>\n         *         <li>'r' - pRocessing</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following constants are allowed:\n         *       <ul>\n         *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n         *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following syntax is expected:\n         *       <ul>\n         *         <li>'&lt;' and '&gt;' - div elements</li>\n         *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n         *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n         *       </ul>\n         *     </li>\n         *     <li>Examples:\n         *       <ul>\n         *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n         *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n         *       </ul>\n         *     </li>\n         *   </ul>\n         *  @type string\n         *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n         *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.dom\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n         *      } );\n         *    } );\n         */\n        sDom: 'lfrtip',\n\n        /**\n         * DataTables features four different built-in options for the buttons to\n         * display for pagination control:\n         *\n         * * `simple` - 'Previous' and 'Next' buttons only\n         * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n         * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n         * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus\n         *   page numbers\n         *\n         * Further methods can be added using {@link DataTable.ext.oPagination}.\n         *  @type string\n         *  @default simple_numbers\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pagingType\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pagingType\": \"full_numbers\"\n         *      } );\n         *    } )\n         */\n        sPaginationType: 'simple_numbers',\n\n        /**\n         * Enable horizontal scrolling. When a table is too wide to fit into a\n         * certain layout, or you have a large number of columns in the table, you\n         * can enable x-scrolling to show the table in a viewport, which can be\n         * scrolled. This property can be `true` which will allow the table to\n         * scroll horizontally when needed, or any CSS unit, or a number (in which\n         * case it will be treated as a pixel measurement). Setting as simply `true`\n         * is recommended.\n         *  @type boolean|string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollX\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": true,\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        sScrollX: '',\n\n        /**\n         * This property can be used to force a DataTable to use more width than it\n         * might otherwise do when x-scrolling is enabled. For example if you have a\n         * table which requires to be well spaced, this parameter is useful for\n         * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n         * any CSS unit, or a number (in which case it will be treated as a pixel\n         * measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollXInner\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": \"100%\",\n         *        \"scrollXInner\": \"110%\"\n         *      } );\n         *    } );\n         */\n        sScrollXInner: '',\n\n        /**\n         * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n         * to the given height, and enable scrolling for any data which overflows the\n         * current viewport. This can be used as an alternative to paging to display\n         * a lot of data in a small area (although paging and scrolling can both be\n         * enabled at the same time). This property can be any CSS unit, or a number\n         * (in which case it will be treated as a pixel measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollY\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *    } );\n         */\n        sScrollY: '',\n\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * Set the HTTP method that is used to make the Ajax call for server-side\n         * processing or Ajax sourced data.\n         *  @type string\n         *  @default GET\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverMethod\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        sServerMethod: 'GET',\n\n        /**\n         * DataTables makes use of renderers when displaying HTML elements for\n         * a table. These renderers can be added or modified by plug-ins to\n         * generate suitable mark-up for a site. For example the Bootstrap\n         * integration plug-in for DataTables uses a paging button renderer to\n         * display pagination buttons in the mark-up required by Bootstrap.\n         *\n         * For further information about the renderers available see\n         * DataTable.ext.renderer\n         *  @type string|object\n         *  @default null\n         *\n         *  @name DataTable.defaults.renderer\n         *\n         */\n        renderer: null\n      }\n\n      _fnHungarianMap(DataTable.defaults)\n\n      /*\n       * Developer note - See note in model.defaults.js about the use of Hungarian\n       * notation and camel case.\n       */\n\n      /**\n       * Column options that can be given to DataTables at initialisation time.\n       *  @namespace\n       */\n      DataTable.defaults.column = {\n        /**\n         * Define which column(s) an order will occur on for this column. This\n         * allows a column's ordering to take multiple columns into account when\n         * doing a sort or use the data from a different column. For example first\n         * name / last name columns make sense to do a multi-column sort over the\n         * two columns.\n         *  @type array|int\n         *  @default null <i>Takes the value of the column index automatically</i>\n         *\n         *  @name DataTable.defaults.column.orderData\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n         *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n         *          { \"orderData\": 2, \"targets\": [ 2 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderData\": [ 0, 1 ] },\n         *          { \"orderData\": [ 1, 0 ] },\n         *          { \"orderData\": 2 },\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        aDataSort: null,\n        iDataSort: -1,\n\n        /**\n         * You can control the default ordering direction, and even alter the\n         * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n         * using this parameter.\n         *  @type array\n         *  @default [ 'asc', 'desc' ]\n         *\n         *  @name DataTable.defaults.column.orderSequence\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n         *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          { \"orderSequence\": [ \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\" ] },\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        asSorting: ['asc', 'desc'],\n\n        /**\n         * Enable or disable filtering on the data in this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.searchable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"searchable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"searchable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        bSearchable: true,\n\n        /**\n         * Enable or disable ordering on this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.orderable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        bSortable: true,\n\n        /**\n         * Enable or disable the display of this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.visible\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"visible\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"visible\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        bVisible: true,\n\n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} td The TD node that has been created\n         *  @param {*} cellData The Data for the cell\n         *  @param {array|object} rowData The data for the whole row\n         *  @param {int} row The row index for the aoData data store\n         *  @param {int} col The column index for aoColumns\n         *\n         *  @name DataTable.defaults.column.createdCell\n         *  @dtopt Columns\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [3],\n         *          \"createdCell\": function (td, cellData, rowData, row, col) {\n         *            if ( cellData == \"1.7\" ) {\n         *              $(td).css('color', 'blue')\n         *            }\n         *          }\n         *        } ]\n         *      });\n         *    } );\n         */\n        fnCreatedCell: null,\n\n        /**\n         * This parameter has been replaced by `data` in DataTables to ensure naming\n         * consistency. `dataProp` can still be used, as there is backwards\n         * compatibility in DataTables for this option, but it is strongly\n         * recommended that you use `data` in preference to `dataProp`.\n         *  @name DataTable.defaults.column.dataProp\n         */\n\n        /**\n         * This property can be used to read data from any data source property,\n         * including deeply nested objects / properties. `data` can be given in a\n         * number of different ways which effect its behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object. Note that\n         *      function notation is recommended for use in `render` rather than\n         *      `data` as it is much simpler to use as a renderer.\n         * * `null` - use the original data source for the row rather than plucking\n         *   data directly from it. This action has effects on two other\n         *   initialisation options:\n         *    * `defaultContent` - When null is given as the `data` option and\n         *      `defaultContent` is specified for the column, the value defined by\n         *      `defaultContent` will be used for the cell.\n         *    * `render` - When null is used for the `data` option and the `render`\n         *      option is specified for the column, the whole data source for the\n         *      row is used for the renderer.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * `{array|object}` The data source for the row\n         *      * `{string}` The type call data requested - this will be 'set' when\n         *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n         *        when gathering data. Note that when `undefined` is given for the\n         *        type DataTables expects to get the raw data for the object back<\n         *      * `{*}` Data to set when the second parameter is 'set'.\n         *    * Return:\n         *      * The return value from the function is not required when 'set' is\n         *        the type of call, but otherwise the return is what will be used\n         *        for the data requested.\n         *\n         * Note that `data` is a getter and setter option. If you just require\n         * formatting of data for output, you will likely want to use `render` which\n         * is simply a getter and thus simpler to use.\n         *\n         * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n         * name change reflects the flexibility of this property and is consistent\n         * with the naming of mRender. If 'mDataProp' is given, then it will still\n         * be used by DataTables, as it automatically maps the old name to the new\n         * if required.\n         *\n         *  @type string|int|function|null\n         *  @default null <i>Use automatically calculated column index</i>\n         *\n         *  @name DataTable.defaults.column.data\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Read table data from objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {value},\n         *    //      \"version\": {value},\n         *    //      \"grade\": {value}\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/objects.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform\" },\n         *          { \"data\": \"version\" },\n         *          { \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Read information from deeply nested objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {\n         *    //         \"inner\": {value}\n         *    //      },\n         *    //      \"details\": [\n         *    //         {value}, {value}\n         *    //      ]\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform.inner\" },\n         *          { \"data\": \"platform.details.0\" },\n         *          { \"data\": \"platform.details.1\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `data` as a function to provide different information for\n         *    // sorting, filtering and display. In this case, currency (price)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": function ( source, type, val ) {\n         *            if (type === 'set') {\n         *              source.price = val;\n         *              // Store the computed dislay and filter values for efficiency\n         *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n         *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n         *              return;\n         *            }\n         *            else if (type === 'display') {\n         *              return source.price_display;\n         *            }\n         *            else if (type === 'filter') {\n         *              return source.price_filter;\n         *            }\n         *            // 'sort', 'type' and undefined all just use the integer\n         *            return source.price;\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using default content\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null,\n         *          \"defaultContent\": \"Click to edit\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using array notation - outputting a list from an array\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"name[, ]\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         */\n        mData: null,\n\n        /**\n         * This property is the rendering partner to `data` and it is suggested that\n         * when you want to manipulate data for display (including filtering,\n         * sorting etc) without altering the underlying data for the table, use this\n         * property. `render` can be considered to be the the read only companion to\n         * `data` which is read / write (then as such more complex). Like `data`\n         * this option can be given in a number of different ways to effect its\n         * behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object.\n         * * `object` - use different data for the different data types requested by\n         *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n         *   of the object is the data type the property refers to and the value can\n         *   defined using an integer, string or function using the same rules as\n         *   `render` normally does. Note that an `_` option _must_ be specified.\n         *   This is the default value to use if you haven't specified a value for\n         *   the data type requested by DataTables.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * {array|object} The data source for the row (based on `data`)\n         *      * {string} The type call data requested - this will be 'filter',\n         *        'display', 'type' or 'sort'.\n         *      * {array|object} The full data source for the row (not based on\n         *        `data`)\n         *    * Return:\n         *      * The return value from the function is what will be used for the\n         *        data requested.\n         *\n         *  @type string|int|function|object|null\n         *  @default null Use the data source value.\n         *\n         *  @name DataTable.defaults.column.render\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Create a comma separated list from an array of objects\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          {\n         *            \"data\": \"platform\",\n         *            \"render\": \"[, ].name\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Execute a function to obtain data\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": \"browserName()\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // As an object, extracting different data for the different types\n         *    // This would be used with a data source such as:\n         *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n         *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n         *    // (which has both forms) is used for filtering for if a user inputs either format, while\n         *    // the formatted phone number is the one that is shown in the table.\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": {\n         *            \"_\": \"phone\",\n         *            \"filter\": \"phone_filter\",\n         *            \"display\": \"phone_display\"\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Use as a function to create a link from the data source\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"download_link\",\n         *          \"render\": function ( data, type, full ) {\n         *            return '<a href=\"'+data+'\">Download</a>';\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         */\n        mRender: null,\n\n        /**\n         * Change the cell type created for the column - either TD cells or TH cells. This\n         * can be useful as TH cells have semantic meaning in the table body, allowing them\n         * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n         *  @type string\n         *  @default td\n         *\n         *  @name DataTable.defaults.column.cellType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Make the first column use TH cells\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"cellType\": \"th\"\n         *        } ]\n         *      } );\n         *    } );\n         */\n        sCellType: 'td',\n\n        /**\n         * Class to give to each cell in this column.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.class\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"class\": \"my_class\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        sClass: '',\n\n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         * Generally you shouldn't need this!\n         *  @type string\n         *  @default <i>Empty string<i>\n         *\n         *  @name DataTable.defaults.column.contentPadding\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"contentPadding\": \"mmm\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        sContentPadding: '',\n\n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because `data`\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         *\n         *  @name DataTable.defaults.column.defaultContent\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\",\n         *            \"targets\": [ -1 ]\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        sDefaultContent: null,\n\n        /**\n         * This parameter is only used in DataTables' server-side processing. It can\n         * be exceptionally useful to know what columns are being displayed on the\n         * client side, and to map these to database fields. When defined, the names\n         * also allow DataTables to reorder information from the server if it comes\n         * back in an unexpected order (i.e. if you switch your columns around on the\n         * client-side, your server-side code does not also need updating).\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.name\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n         *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n         *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n         *          { \"name\": \"version\", \"targets\": [ 3 ] },\n         *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"name\": \"engine\" },\n         *          { \"name\": \"browser\" },\n         *          { \"name\": \"platform\" },\n         *          { \"name\": \"version\" },\n         *          { \"name\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        sName: '',\n\n        /**\n         * Defines a data source type for the ordering which can be used to read\n         * real-time information from the table (updating the internally cached\n         * version) prior to ordering. This allows ordering to occur on user\n         * editable elements such as form inputs.\n         *  @type string\n         *  @default std\n         *\n         *  @name DataTable.defaults.column.orderDataType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n         *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n         *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n         *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          { \"orderDataType\": \"dom-text\" },\n         *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n         *          { \"orderDataType\": \"dom-select\" },\n         *          { \"orderDataType\": \"dom-checkbox\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        sSortDataType: 'std',\n\n        /**\n         * The title of this column.\n         *  @type string\n         *  @default null <i>Derived from the 'TH' value for this column in the\n         *    original HTML table.</i>\n         *\n         *  @name DataTable.defaults.column.title\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"title\": \"My column title\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        sTitle: null,\n\n        /**\n         * The type allows you to specify how the data for this column will be\n         * ordered. Four types (string, numeric, date and html (which will strip\n         * HTML tags before ordering)) are currently available. Note that only date\n         * formats understood by Javascript's Date() object will be accepted as type\n         * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n         * 'numeric', 'date' or 'html' (by default). Further types can be adding\n         * through plug-ins.\n         *  @type string\n         *  @default null <i>Auto-detected from raw data</i>\n         *\n         *  @name DataTable.defaults.column.type\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"type\": \"html\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"type\": \"html\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        sType: null,\n\n        /**\n         * Defining the width of the column, this parameter may take any CSS value\n         * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n         * been given a specific width through this interface ensuring that the table\n         * remains readable.\n         *  @type string\n         *  @default null <i>Automatic</i>\n         *\n         *  @name DataTable.defaults.column.width\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"width\": \"20%\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        sWidth: null\n      }\n\n      _fnHungarianMap(DataTable.defaults.column)\n\n      /**\n       * DataTables settings object - this holds all the information needed for a\n       * given table, including configuration, data and current application of the\n       * table options. DataTables does not have a single instance for each DataTable\n       * with the settings attached to that instance, but rather instances of the\n       * DataTable \"class\" are created on-the-fly as needed (typically by a\n       * $().dataTable() call) and the settings object is then applied to that\n       * instance.\n       *\n       * Note that this object is related to {@link DataTable.defaults} but this\n       * one is the internal data store for DataTables's cache of columns. It should\n       * NOT be manipulated outside of DataTables. Any configuration should be done\n       * through the initialisation options.\n       *  @namespace\n       *  @todo Really should attach the settings object to individual instances so we\n       *    don't need to create new instances on each $().dataTable() call (if the\n       *    table already exists). It would also save passing oSettings around and\n       *    into every single function. However, this is a very significant\n       *    architecture change for DataTables and will almost certainly break\n       *    backwards compatibility with older installations. This is something that\n       *    will be done in 2.0.\n       */\n      DataTable.models.oSettings = {\n        /**\n         * Primary features of DataTables and their enablement state.\n         *  @namespace\n         */\n        oFeatures: {\n          /**\n           * Flag to say if DataTables should automatically try to calculate the\n           * optimum table and columns widths (true) or not (false).\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bAutoWidth: null,\n\n          /**\n           * Delay the creation of TR and TD elements until they are actually\n           * needed by a driven page draw. This can give a significant speed\n           * increase for Ajax source and Javascript source data, but makes no\n           * difference at all fro DOM and server-side processing tables.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bDeferRender: null,\n\n          /**\n           * Enable filtering on the table or not. Note that if this is disabled\n           * then there is no filtering at all on the table, including fnFilter.\n           * To just remove the filtering input use sDom and remove the 'f' option.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bFilter: null,\n\n          /**\n           * Table information element (the 'Showing x of y records' div) enable\n           * flag.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bInfo: null,\n\n          /**\n           * Present a user control allowing the end user to change the page size\n           * when pagination is enabled.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bLengthChange: null,\n\n          /**\n           * Pagination enabled or not. Note that if this is disabled then length\n           * changing must also be disabled.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bPaginate: null,\n\n          /**\n           * Processing indicator enable flag whenever DataTables is enacting a\n           * user request - typically an Ajax request for server-side processing.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bProcessing: null,\n\n          /**\n           * Server-side processing enabled flag - when enabled DataTables will\n           * get all data from the server for every draw - there is no filtering,\n           * sorting or paging done on the client-side.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bServerSide: null,\n\n          /**\n           * Sorting enablement flag.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bSort: null,\n\n          /**\n           * Multi-column sorting\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bSortMulti: null,\n\n          /**\n           * Apply a class to the columns which are being sorted to provide a\n           * visual highlight or not. This can slow things down when enabled since\n           * there is a lot of DOM interaction.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bSortClasses: null,\n\n          /**\n           * State saving enablement flag.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bStateSave: null\n        },\n\n        /**\n         * Scrolling settings for a table.\n         *  @namespace\n         */\n        oScroll: {\n          /**\n           * When the table is shorter in height than sScrollY, collapse the\n           * table container down to the height of the table (when true).\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type boolean\n           */\n          bCollapse: null,\n\n          /**\n           * Width of the scrollbar for the web-browser's platform. Calculated\n           * during table initialisation.\n           *  @type int\n           *  @default 0\n           */\n          iBarWidth: 0,\n\n          /**\n           * Viewport width for horizontal scrolling. Horizontal scrolling is\n           * disabled if an empty string.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type string\n           */\n          sX: null,\n\n          /**\n           * Width to expand the table to when using x-scrolling. Typically you\n           * should not need to use this.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type string\n           *  @deprecated\n           */\n          sXInner: null,\n\n          /**\n           * Viewport height for vertical scrolling. Vertical scrolling is disabled\n           * if an empty string.\n           * Note that this parameter will be set by the initialisation routine. To\n           * set a default use {@link DataTable.defaults}.\n           *  @type string\n           */\n          sY: null\n        },\n\n        /**\n         * Language information for the table.\n         *  @namespace\n         *  @extends DataTable.defaults.oLanguage\n         */\n        oLanguage: {\n          /**\n           * Information callback function. See\n           * {@link DataTable.defaults.fnInfoCallback}\n           *  @type function\n           *  @default null\n           */\n          fnInfoCallback: null\n        },\n\n        /**\n         * Browser support parameters\n         *  @namespace\n         */\n        oBrowser: {\n          /**\n           * Indicate if the browser incorrectly calculates width:100% inside a\n           * scrolling element (IE6/7)\n           *  @type boolean\n           *  @default false\n           */\n          bScrollOversize: false,\n\n          /**\n           * Determine if the vertical scrollbar is on the right or left of the\n           * scrolling container - needed for rtl language layout, although not\n           * all browsers move the scrollbar (Safari).\n           *  @type boolean\n           *  @default false\n           */\n          bScrollbarLeft: false\n        },\n\n        ajax: null,\n\n        /**\n         * Array referencing the nodes which are used for the features. The\n         * parameters of this object match what is allowed by sDom - i.e.\n         *   <ul>\n         *     <li>'l' - Length changing</li>\n         *     <li>'f' - Filtering input</li>\n         *     <li>'t' - The table!</li>\n         *     <li>'i' - Information</li>\n         *     <li>'p' - Pagination</li>\n         *     <li>'r' - pRocessing</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        aanFeatures: [],\n\n        /**\n         * Store data information - see {@link DataTable.models.oRow} for detailed\n         * information.\n         *  @type array\n         *  @default []\n         */\n        aoData: [],\n\n        /**\n         * Array of indexes which are in the current display (after filtering etc)\n         *  @type array\n         *  @default []\n         */\n        aiDisplay: [],\n\n        /**\n         * Array of indexes for display - no filtering\n         *  @type array\n         *  @default []\n         */\n        aiDisplayMaster: [],\n\n        /**\n         * Store information about each column that is in use\n         *  @type array\n         *  @default []\n         */\n        aoColumns: [],\n\n        /**\n         * Store information about the table's header\n         *  @type array\n         *  @default []\n         */\n        aoHeader: [],\n\n        /**\n         * Store information about the table's footer\n         *  @type array\n         *  @default []\n         */\n        aoFooter: [],\n\n        /**\n         * Store the applied global search information in case we want to force a\n         * research or compare the old search to a new one.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         */\n        oPreviousSearch: {},\n\n        /**\n         * Store the applied search for each column - see\n         * {@link DataTable.models.oSearch} for the format that is used for the\n         * filtering information for each column.\n         *  @type array\n         *  @default []\n         */\n        aoPreSearchCols: [],\n\n        /**\n         * Sorting that is applied to the table. Note that the inner arrays are\n         * used in the following manner:\n         * <ul>\n         *   <li>Index 0 - column number</li>\n         *   <li>Index 1 - current sorting direction</li>\n         * </ul>\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @todo These inner arrays should really be objects\n         */\n        aaSorting: null,\n\n        /**\n         * Sorting that is always applied to the table (i.e. prefixed in front of\n         * aaSorting).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        aaSortingFixed: [],\n\n        /**\n         * Classes to use for the striping of a table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        asStripeClasses: null,\n\n        /**\n         * If restoring a table - we should restore its striping classes as well\n         *  @type array\n         *  @default []\n         */\n        asDestroyStripes: [],\n\n        /**\n         * If restoring a table - we should restore its width\n         *  @type int\n         *  @default 0\n         */\n        sDestroyWidth: 0,\n\n        /**\n         * Callback functions array for every time a row is inserted (i.e. on a draw).\n         *  @type array\n         *  @default []\n         */\n        aoRowCallback: [],\n\n        /**\n         * Callback functions for the header on each draw.\n         *  @type array\n         *  @default []\n         */\n        aoHeaderCallback: [],\n\n        /**\n         * Callback function for the footer on each draw.\n         *  @type array\n         *  @default []\n         */\n        aoFooterCallback: [],\n\n        /**\n         * Array of callback functions for draw callback functions\n         *  @type array\n         *  @default []\n         */\n        aoDrawCallback: [],\n\n        /**\n         * Array of callback functions for row created function\n         *  @type array\n         *  @default []\n         */\n        aoRowCreatedCallback: [],\n\n        /**\n         * Callback functions for just before the table is redrawn. A return of\n         * false will be used to cancel the draw.\n         *  @type array\n         *  @default []\n         */\n        aoPreDrawCallback: [],\n\n        /**\n         * Callback functions for when the table has been initialised.\n         *  @type array\n         *  @default []\n         */\n        aoInitComplete: [],\n\n        /**\n         * Callbacks for modifying the settings to be stored for state saving, prior to\n         * saving state.\n         *  @type array\n         *  @default []\n         */\n        aoStateSaveParams: [],\n\n        /**\n         * Callbacks for modifying the settings that have been stored for state saving\n         * prior to using the stored values to restore the state.\n         *  @type array\n         *  @default []\n         */\n        aoStateLoadParams: [],\n\n        /**\n         * Callbacks for operating on the settings object once the saved state has been\n         * loaded\n         *  @type array\n         *  @default []\n         */\n        aoStateLoaded: [],\n\n        /**\n         * Cache the table ID for quick access\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        sTableId: '',\n\n        /**\n         * The TABLE node for the main table\n         *  @type node\n         *  @default null\n         */\n        nTable: null,\n\n        /**\n         * Permanent ref to the thead element\n         *  @type node\n         *  @default null\n         */\n        nTHead: null,\n\n        /**\n         * Permanent ref to the tfoot element - if it exists\n         *  @type node\n         *  @default null\n         */\n        nTFoot: null,\n\n        /**\n         * Permanent ref to the tbody element\n         *  @type node\n         *  @default null\n         */\n        nTBody: null,\n\n        /**\n         * Cache the wrapper node (contains all DataTables controlled elements)\n         *  @type node\n         *  @default null\n         */\n        nTableWrapper: null,\n\n        /**\n         * Indicate if when using server-side processing the loading of data\n         * should be deferred until the second draw.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         *  @default false\n         */\n        bDeferLoading: false,\n\n        /**\n         * Indicate if all required information has been read in\n         *  @type boolean\n         *  @default false\n         */\n        bInitialised: false,\n\n        /**\n         * Information about open rows. Each object in the array has the parameters\n         * 'nTr' and 'nParent'\n         *  @type array\n         *  @default []\n         */\n        aoOpenRows: [],\n\n        /**\n         * Dictate the positioning of DataTables' control elements - see\n         * {@link DataTable.model.oInit.sDom}.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        sDom: null,\n\n        /**\n         * Which type of pagination should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default two_button\n         */\n        sPaginationType: 'two_button',\n\n        /**\n         * The state duration (for `stateSave`) in seconds.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type int\n         *  @default 0\n         */\n        iStateDuration: 0,\n\n        /**\n         * Array of callback functions for state saving. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the JSON string to save that has been thus far created. Returns\n         *       a JSON string to be inserted into a json object\n         *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        aoStateSave: [],\n\n        /**\n         * Array of callback functions for state loading. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the object stored. May return false to cancel state loading</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        aoStateLoad: [],\n\n        /**\n         * State that was saved. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        oSavedState: null,\n\n        /**\n         * State that was loaded. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        oLoadedState: null,\n\n        /**\n         * Source url for AJAX data for the table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        sAjaxSource: null,\n\n        /**\n         * Property from a given object from which to read the table data from. This\n         * can be an empty string (when not server-side processing), in which case\n         * it is  assumed an an array is given directly.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        sAjaxDataProp: null,\n\n        /**\n         * Note if draw should be blocked while getting data\n         *  @type boolean\n         *  @default true\n         */\n        bAjaxDataGet: true,\n\n        /**\n         * The last jQuery XHR object that was used for server-side data gathering.\n         * This can be used for working with the XHR information in one of the\n         * callbacks\n         *  @type object\n         *  @default null\n         */\n        jqXHR: null,\n\n        /**\n         * JSON returned from the server in the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        json: undefined,\n\n        /**\n         * Data submitted as part of the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        oAjaxData: undefined,\n\n        /**\n         * Function to get the server-side data.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        fnServerData: null,\n\n        /**\n         * Functions which are called prior to sending an Ajax request so extra\n         * parameters can easily be sent to the server\n         *  @type array\n         *  @default []\n         */\n        aoServerParams: [],\n\n        /**\n         * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n         * required).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        sServerMethod: null,\n\n        /**\n         * Format numbers for display.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        fnFormatNumber: null,\n\n        /**\n         * List of options that can be used for the user selectable length menu.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        aLengthMenu: null,\n\n        /**\n         * Counter for the draws that the table does. Also used as a tracker for\n         * server-side processing\n         *  @type int\n         *  @default 0\n         */\n        iDraw: 0,\n\n        /**\n         * Indicate if a redraw is being done - useful for Ajax\n         *  @type boolean\n         *  @default false\n         */\n        bDrawing: false,\n\n        /**\n         * Draw index (iDraw) of the last error when parsing the returned data\n         *  @type int\n         *  @default -1\n         */\n        iDrawError: -1,\n\n        /**\n         * Paging display length\n         *  @type int\n         *  @default 10\n         */\n        _iDisplayLength: 10,\n\n        /**\n         * Paging start point - aiDisplay index\n         *  @type int\n         *  @default 0\n         */\n        _iDisplayStart: 0,\n\n        /**\n         * Server-side processing - number of records in the result set\n         * (i.e. before filtering), Use fnRecordsTotal rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type int\n         *  @default 0\n         *  @private\n         */\n        _iRecordsTotal: 0,\n\n        /**\n         * Server-side processing - number of records in the current display set\n         * (i.e. after filtering). Use fnRecordsDisplay rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type boolean\n         *  @default 0\n         *  @private\n         */\n        _iRecordsDisplay: 0,\n\n        /**\n         * Flag to indicate if jQuery UI marking and classes should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        bJUI: null,\n\n        /**\n         * The classes to use for the table\n         *  @type object\n         *  @default {}\n         */\n        oClasses: {},\n\n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if filtering has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        bFiltered: false,\n\n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if sorting has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        bSorted: false,\n\n        /**\n         * Indicate that if multiple rows are in the header and there is more than\n         * one unique cell per column, if the top one (true) or bottom one (false)\n         * should be used for sorting / title by DataTables.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        bSortCellsTop: null,\n\n        /**\n         * Initialisation object that is used for the table\n         *  @type object\n         *  @default null\n         */\n        oInit: null,\n\n        /**\n         * Destroy callback functions - for plug-ins to attach themselves to the\n         * destroy so they can clean up markup and events.\n         *  @type array\n         *  @default []\n         */\n        aoDestroyCallback: [],\n\n        /**\n         * Get the number of records in the current record set, before filtering\n         *  @type function\n         */\n        fnRecordsTotal: function () {\n          return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length\n        },\n\n        /**\n         * Get the number of records in the current record set, after filtering\n         *  @type function\n         */\n        fnRecordsDisplay: function () {\n          return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length\n        },\n\n        /**\n         * Get the display end point - aiDisplay index\n         *  @type function\n         */\n        fnDisplayEnd: function () {\n          var len = this._iDisplayLength,\n            start = this._iDisplayStart,\n            calc = start + len,\n            records = this.aiDisplay.length,\n            features = this.oFeatures,\n            paginate = features.bPaginate\n\n          if (features.bServerSide) {\n            return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay)\n          } else {\n            return !paginate || calc > records || len === -1 ? records : calc\n          }\n        },\n\n        /**\n         * The DataTables object for this table\n         *  @type object\n         *  @default null\n         */\n        oInstance: null,\n\n        /**\n         * Unique identifier for each instance of the DataTables object. If there\n         * is an ID on the table node, then it takes that value, otherwise an\n         * incrementing internal counter is used.\n         *  @type string\n         *  @default null\n         */\n        sInstance: null,\n\n        /**\n         * tabindex attribute value that is added to DataTables control elements, allowing\n         * keyboard navigation of the table and its controls.\n         */\n        iTabIndex: 0,\n\n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        nScrollHead: null,\n\n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        nScrollFoot: null,\n\n        /**\n         * Last applied sort\n         *  @type array\n         *  @default []\n         */\n        aLastSort: [],\n\n        /**\n         * Stored plug-in instances\n         *  @type object\n         *  @default {}\n         */\n        oPlugins: {}\n      }\n\n      /**\n       * Extension object for DataTables that is used to provide all extension\n       * options.\n       *\n       * Note that the `DataTable.ext` object is available through\n       * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n       * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n       *  @namespace\n       *  @extends DataTable.models.ext\n       */\n\n      /**\n       * DataTables extensions\n       *\n       * This namespace acts as a collection area for plug-ins that can be used to\n       * extend DataTables capabilities. Indeed many of the build in methods\n       * use this method to provide their own capabilities (sorting methods for\n       * example).\n       *\n       * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n       * reasons\n       *\n       *  @namespace\n       */\n      DataTable.ext = _ext = {\n        /**\n         * Element class names\n         *\n         *  @type object\n         *  @default {}\n         */\n        classes: {},\n\n        /**\n         * Error reporting.\n         *\n         * How should DataTables report an error. Can take the value 'alert' or\n         * 'throw'\n         *\n         *  @type string\n         *  @default alert\n         */\n        errMode: 'alert',\n\n        /**\n         * Feature plug-ins.\n         *\n         * This is an array of objects which describe the feature plug-ins that are\n         * available to DataTables. These feature plug-ins are then available for\n         * use through the `dom` initialisation option.\n         *\n         * Each feature plug-in is described by an object which must have the\n         * following properties:\n         *\n         * * `fnInit` - function that is used to initialise the plug-in,\n         * * `cFeature` - a character so the feature can be enabled by the `dom`\n         *   instillation option. This is case sensitive.\n         *\n         * The `fnInit` function has the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         *\n         * And the following return is expected:\n         *\n         * * {node|null} The element which contains your feature. Note that the\n         *   return may also be void if your plug-in does not require to inject any\n         *   DOM elements into DataTables control (`dom`) - for example this might\n         *   be useful when developing a plug-in which allows table control via\n         *   keyboard entry\n         *\n         *  @type array\n         *\n         *  @example\n         *    $.fn.dataTable.ext.features.push( {\n         *      \"fnInit\": function( oSettings ) {\n         *        return new TableTools( { \"oDTSettings\": oSettings } );\n         *      },\n         *      \"cFeature\": \"T\"\n         *    } );\n         */\n        feature: [],\n\n        /**\n         * Row searching.\n         *\n         * This method of searching is complimentary to the default type based\n         * searching, and a lot more comprehensive as it allows you complete control\n         * over the searching logic. Each element in this array is a function\n         * (parameters described below) that is called for every row in the table,\n         * and your logic decides if it should be included in the searching data set\n         * or not.\n         *\n         * Searching functions have the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{array|object}` Data for the row to be processed (same as the\n         *    original format that was passed in as the data source, or an array\n         *    from a DOM data source\n         * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n         *    can be useful to retrieve the `TR` element if you need DOM interaction.\n         *\n         * And the following return is expected:\n         *\n         * * {boolean} Include the row in the searched result set (true) or not\n         *   (false)\n         *\n         * Note that as with the main search ability in DataTables, technically this\n         * is \"filtering\", since it is subtractive. However, for consistency in\n         * naming we call it searching here.\n         *\n         *  @type array\n         *  @default []\n         *\n         *  @example\n         *    // The following example shows custom search being applied to the\n         *    // fourth column (i.e. the data[3] index) based on two input values\n         *    // from the end-user, matching the data in a certain range.\n         *    $.fn.dataTable.ext.search.push(\n         *      function( settings, data, dataIndex ) {\n         *        var min = document.getElementById('min').value * 1;\n         *        var max = document.getElementById('max').value * 1;\n         *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n         *\n         *        if ( min == \"\" && max == \"\" ) {\n         *          return true;\n         *        }\n         *        else if ( min == \"\" && version < max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && \"\" == max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && version < max ) {\n         *          return true;\n         *        }\n         *        return false;\n         *      }\n         *    );\n         */\n        search: [],\n\n        /**\n         * Internal functions, exposed for used in plug-ins.\n         *\n         * Please note that you should not need to use the internal methods for\n         * anything other than a plug-in (and even then, try to avoid if possible).\n         * The internal function may change between releases.\n         *\n         *  @type object\n         *  @default {}\n         */\n        internal: {},\n\n        /**\n         * Legacy configuration options. Enable and disable legacy options that\n         * are available in DataTables.\n         *\n         *  @type object\n         */\n        legacy: {\n          /**\n           * Enable / disable DataTables 1.9 compatible server-side processing\n           * requests\n           *\n           *  @type boolean\n           *  @default null\n           */\n          ajax: null\n        },\n\n        /**\n         * Pagination plug-in methods.\n         *\n         * Each entry in this object is a function and defines which buttons should\n         * be shown by the pagination rendering method that is used for the table:\n         * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n         * buttons are displayed in the document, while the functions here tell it\n         * what buttons to display. This is done by returning an array of button\n         * descriptions (what each button will do).\n         *\n         * Pagination types (the four built in options and any additional plug-in\n         * options defined here) can be used through the `paginationType`\n         * initialisation parameter.\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{int} page` The current page index\n         * 2. `{int} pages` The number of pages in the table\n         *\n         * Each function is expected to return an array where each element of the\n         * array can be one of:\n         *\n         * * `first` - Jump to first page when activated\n         * * `last` - Jump to last page when activated\n         * * `previous` - Show previous page when activated\n         * * `next` - Show next page when activated\n         * * `{int}` - Show page of the index given\n         * * `{array}` - A nested array containing the above elements to add a\n         *   containing 'DIV' element (might be useful for styling).\n         *\n         * Note that DataTables v1.9- used this object slightly differently whereby\n         * an object with two functions would be defined for each plug-in. That\n         * ability is still supported by DataTables 1.10+ to provide backwards\n         * compatibility, but this option of use is now decremented and no longer\n         * documented in DataTables 1.10+.\n         *\n         *  @type object\n         *  @default {}\n         *\n         *  @example\n         *    // Show previous, next and current page buttons only\n         *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n         *      return [ 'previous', page, 'next' ];\n         *    };\n         */\n        pager: {},\n\n        renderer: {\n          pageButton: {},\n          header: {}\n        },\n\n        /**\n         * Ordering plug-ins - custom data source\n         *\n         * The extension options for ordering of data available here is complimentary\n         * to the default type based ordering that DataTables typically uses. It\n         * allows much greater control over the the data that is being used to\n         * order a column, but is necessarily therefore more complex.\n         *\n         * This type of ordering is useful if you want to do ordering based on data\n         * live from the DOM (for example the contents of an 'input' element) rather\n         * than just the static string that DataTables knows of.\n         *\n         * The way these plug-ins work is that you create an array of the values you\n         * wish to be ordering for the column in question and then return that\n         * array. The data in the array much be in the index order of the rows in\n         * the table (not the currently ordering order!). Which order data gathering\n         * function is run here depends on the `dt-init columns.orderDataType`\n         * parameter that is used for the column (if any).\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{int}` Target column index\n         *\n         * Each function is expected to return an array:\n         *\n         * * `{array}` Data for the column to be ordering upon\n         *\n         *  @type array\n         *\n         *  @example\n         *    // Ordering using `input` node values\n         *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n         *    {\n         *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n         *        return $('input', td).val();\n         *      } );\n         *    }\n         */\n        order: {},\n\n        /**\n         * Type based plug-ins.\n         *\n         * Each column in DataTables has a type assigned to it, either by automatic\n         * detection or by direct assignment using the `type` option for the column.\n         * The type of a column will effect how it is ordering and search (plug-ins\n         * can also make use of the column type if required).\n         *\n         * @namespace\n         */\n        type: {\n          /**\n           * Type detection functions.\n           *\n           * The functions defined in this object are used to automatically detect\n           * a column's type, making initialisation of DataTables super easy, even\n           * when complex data is in the table.\n           *\n           * The functions defined take two parameters:\n           *\n           *  1. `{*}` Data from the column cell to be analysed\n           *  2. `{settings}` DataTables settings object. This can be used to\n           *     perform context specific type detection - for example detection\n           *     based on language settings such as using a comma for a decimal\n           *     place. Generally speaking the options from the settings will not\n           *     be required\n           *\n           * Each function is expected to return:\n           *\n           * * `{string|null}` Data type detected, or null if unknown (and thus\n           *   pass it on to the other type detection functions.\n           *\n           *  @type array\n           *\n           *  @example\n           *    // Currency type detection plug-in:\n           *    $.fn.dataTable.ext.type.detect.push(\n           *      function ( data, settings ) {\n           *        // Check the numeric part\n           *        if ( ! $.isNumeric( data.substring(1) ) ) {\n           *          return null;\n           *        }\n           *\n           *        // Check prefixed by currency\n           *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n           *          return 'currency';\n           *        }\n           *        return null;\n           *      }\n           *    );\n           */\n          detect: [],\n\n          /**\n           * Type based search formatting.\n           *\n           * The type based searching functions can be used to pre-format the\n           * data to be search on. For example, it can be used to strip HTML\n           * tags or to de-format telephone numbers for numeric only searching.\n           *\n           * Note that is a search is not defined for a column of a given type,\n           * no search formatting will be performed.\n           *\n           * Pre-processing of searching data plug-ins - When you assign the sType\n           * for a column (or have it automatically detected for you by DataTables\n           * or a type detection plug-in), you will typically be using this for\n           * custom sorting, but it can also be used to provide custom searching\n           * by allowing you to pre-processing the data and returning the data in\n           * the format that should be searched upon. This is done by adding\n           * functions this object with a parameter name which matches the sType\n           * for that target column. This is the corollary of <i>afnSortData</i>\n           * for searching data.\n           *\n           * The functions defined take a single parameter:\n           *\n           *  1. `{*}` Data from the column cell to be prepared for searching\n           *\n           * Each function is expected to return:\n           *\n           * * `{string|null}` Formatted string that will be used for the searching.\n           *\n           *  @type object\n           *  @default {}\n           *\n           *  @example\n           *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n           *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n           *    }\n           */\n          search: {},\n\n          /**\n           * Type based ordering.\n           *\n           * The column type tells DataTables what ordering to apply to the table\n           * when a column is sorted upon. The order for each type that is defined,\n           * is defined by the functions available in this object.\n           *\n           * Each ordering option can be described by three properties added to\n           * this object:\n           *\n           * * `{type}-pre` - Pre-formatting function\n           * * `{type}-asc` - Ascending order function\n           * * `{type}-desc` - Descending order function\n           *\n           * All three can be used together, only `{type}-pre` or only\n           * `{type}-asc` and `{type}-desc` together. It is generally recommended\n           * that only `{type}-pre` is used, as this provides the optimal\n           * implementation in terms of speed, although the others are provided\n           * for compatibility with existing Javascript sort functions.\n           *\n           * `{type}-pre`: Functions defined take a single parameter:\n           *\n           *  1. `{*}` Data from the column cell to be prepared for ordering\n           *\n           * And return:\n           *\n           * * `{*}` Data to be sorted upon\n           *\n           * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n           * functions, taking two parameters:\n           *\n           *  1. `{*}` Data to compare to the second parameter\n           *  2. `{*}` Data to compare to the first parameter\n           *\n           * And returning:\n           *\n           * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n           *   than the second parameter, ===0 if the two parameters are equal and\n           *   >0 if the first parameter should be sorted height than the second\n           *   parameter.\n           *\n           *  @type object\n           *  @default {}\n           *\n           *  @example\n           *    // Numeric ordering of formatted numbers with a pre-formatter\n           *    $.extend( $.fn.dataTable.ext.type.order, {\n           *      \"string-pre\": function(x) {\n           *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n           *        return parseFloat( a );\n           *      }\n           *    } );\n           *\n           *  @example\n           *    // Case-sensitive string ordering, with no pre-formatting method\n           *    $.extend( $.fn.dataTable.ext.order, {\n           *      \"string-case-asc\": function(x,y) {\n           *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n           *      },\n           *      \"string-case-desc\": function(x,y) {\n           *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n           *      }\n           *    } );\n           */\n          order: {}\n        },\n\n        /**\n         * Unique DataTables instance counter\n         *\n         * @type int\n         * @private\n         */\n        _unique: 0,\n\n        //\n        // Depreciated\n        // The following properties are retained for backwards compatiblity only.\n        // The should not be used in new projects and will be removed in a future\n        // version\n        //\n\n        /**\n         * Version check function.\n         *  @type function\n         *  @depreciated Since 1.10\n         */\n        fnVersionCheck: DataTable.fnVersionCheck,\n\n        /**\n         * Index for what 'this' index API functions should use\n         *  @type int\n         *  @deprecated Since v1.10\n         */\n        iApiIndex: 0,\n\n        /**\n         * jQuery UI class container\n         *  @type object\n         *  @deprecated Since v1.10\n         */\n        oJUIClasses: {},\n\n        /**\n         * Software version\n         *  @type string\n         *  @deprecated Since v1.10\n         */\n        sVersion: DataTable.version\n      }\n\n      //\n      // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n      //\n      $.extend(_ext, {\n        afnFiltering: _ext.search,\n        aTypes: _ext.type.detect,\n        ofnSearch: _ext.type.search,\n        oSort: _ext.type.order,\n        afnSortData: _ext.order,\n        aoFeatures: _ext.feature,\n        oApi: _ext.internal,\n        oStdClasses: _ext.classes,\n        oPagination: _ext.pager\n      })\n\n      $.extend(DataTable.ext.classes, {\n        sTable: 'dataTable',\n        sNoFooter: 'no-footer',\n\n        /* Paging buttons */\n        sPageButton: 'paginate_button',\n        sPageButtonActive: 'current',\n        sPageButtonDisabled: 'disabled',\n\n        /* Striping classes */\n        sStripeOdd: 'odd',\n        sStripeEven: 'even',\n\n        /* Empty row */\n        sRowEmpty: 'dataTables_empty',\n\n        /* Features */\n        sWrapper: 'dataTables_wrapper',\n        sFilter: 'dataTables_filter',\n        sInfo: 'dataTables_info',\n        sPaging: 'dataTables_paginate paging_' /* Note that the type is postfixed */,\n        sLength: 'dataTables_length',\n        sProcessing: 'dataTables_processing',\n\n        /* Sorting */\n        sSortAsc: 'sorting_asc',\n        sSortDesc: 'sorting_desc',\n        sSortable: 'sorting' /* Sortable in both directions */,\n        sSortableAsc: 'sorting_asc_disabled',\n        sSortableDesc: 'sorting_desc_disabled',\n        sSortableNone: 'sorting_disabled',\n        sSortColumn: 'sorting_' /* Note that an int is postfixed for the sorting order */,\n\n        /* Filtering */\n        sFilterInput: '',\n\n        /* Page length */\n        sLengthSelect: '',\n\n        /* Scrolling */\n        sScrollWrapper: 'dataTables_scroll',\n        sScrollHead: 'dataTables_scrollHead',\n        sScrollHeadInner: 'dataTables_scrollHeadInner',\n        sScrollBody: 'dataTables_scrollBody',\n        sScrollFoot: 'dataTables_scrollFoot',\n        sScrollFootInner: 'dataTables_scrollFootInner',\n\n        /* Misc */\n        sHeaderTH: '',\n        sFooterTH: '',\n\n        // Deprecated\n        sSortJUIAsc: '',\n        sSortJUIDesc: '',\n        sSortJUI: '',\n        sSortJUIAscAllowed: '',\n        sSortJUIDescAllowed: '',\n        sSortJUIWrapper: '',\n        sSortIcon: '',\n        sJUIHeader: '',\n        sJUIFooter: ''\n      })\n      ;(function () {\n        // Reused strings for better compression. Closure compiler appears to have a\n        // weird edge case where it is trying to expand strings rather than use the\n        // variable version. This results in about 200 bytes being added, for very\n        // little preference benefit since it this run on script load only.\n        var _empty = ''\n        _empty = ''\n\n        var _stateDefault = _empty + 'ui-state-default'\n        var _sortIcon = _empty + 'css_right ui-icon ui-icon-'\n        var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix'\n\n        $.extend(DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n          /* Full numbers paging buttons */\n          sPageButton: 'fg-button ui-button ' + _stateDefault,\n          sPageButtonActive: 'ui-state-disabled',\n          sPageButtonDisabled: 'ui-state-disabled',\n\n          /* Features */\n          sPaging:\n            'dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ' +\n            'ui-buttonset-multi paging_' /* Note that the type is postfixed */,\n\n          /* Sorting */\n          sSortAsc: _stateDefault + ' sorting_asc',\n          sSortDesc: _stateDefault + ' sorting_desc',\n          sSortable: _stateDefault + ' sorting',\n          sSortableAsc: _stateDefault + ' sorting_asc_disabled',\n          sSortableDesc: _stateDefault + ' sorting_desc_disabled',\n          sSortableNone: _stateDefault + ' sorting_disabled',\n          sSortJUIAsc: _sortIcon + 'triangle-1-n',\n          sSortJUIDesc: _sortIcon + 'triangle-1-s',\n          sSortJUI: _sortIcon + 'carat-2-n-s',\n          sSortJUIAscAllowed: _sortIcon + 'carat-1-n',\n          sSortJUIDescAllowed: _sortIcon + 'carat-1-s',\n          sSortJUIWrapper: 'DataTables_sort_wrapper',\n          sSortIcon: 'DataTables_sort_icon',\n\n          /* Scrolling */\n          sScrollHead: 'dataTables_scrollHead ' + _stateDefault,\n          sScrollFoot: 'dataTables_scrollFoot ' + _stateDefault,\n\n          /* Misc */\n          sHeaderTH: _stateDefault,\n          sFooterTH: _stateDefault,\n          sJUIHeader: _headerFooter + ' ui-corner-tl ui-corner-tr',\n          sJUIFooter: _headerFooter + ' ui-corner-bl ui-corner-br'\n        })\n      })()\n\n      var extPagination = DataTable.ext.pager\n\n      function _numbers (page, pages) {\n        var numbers = [],\n          buttons = extPagination.numbers_length,\n          half = Math.floor(buttons / 2),\n          i = 1\n\n        if (pages <= buttons) {\n          numbers = _range(0, pages)\n        } else if (page <= half) {\n          numbers = _range(0, buttons - 2)\n          numbers.push('ellipsis')\n          numbers.push(pages - 1)\n        } else if (page >= pages - 1 - half) {\n          numbers = _range(pages - (buttons - 2), pages)\n          numbers.splice(0, 0, 'ellipsis') // no unshift in ie6\n          numbers.splice(0, 0, 0)\n        } else {\n          numbers = _range(page - 1, page + 2)\n          numbers.push('ellipsis')\n          numbers.push(pages - 1)\n          numbers.splice(0, 0, 'ellipsis')\n          numbers.splice(0, 0, 0)\n        }\n\n        numbers.DT_el = 'span'\n        return numbers\n      }\n\n      $.extend(extPagination, {\n        simple: function (page, pages) {\n          return ['previous', 'next']\n        },\n\n        full: function (page, pages) {\n          return ['first', 'previous', 'next', 'last']\n        },\n\n        simple_numbers: function (page, pages) {\n          return ['previous', _numbers(page, pages), 'next']\n        },\n\n        full_numbers: function (page, pages) {\n          return ['first', 'previous', _numbers(page, pages), 'next', 'last']\n        },\n\n        // For testing and plug-ins to use\n        _numbers: _numbers,\n        numbers_length: 7\n      })\n\n      $.extend(true, DataTable.ext.renderer, {\n        pageButton: {\n          _: function (settings, host, idx, buttons, page, pages) {\n            var classes = settings.oClasses\n            var lang = settings.oLanguage.oPaginate\n            var btnDisplay,\n              btnClass,\n              counter = 0\n\n            var attach = function (container, buttons) {\n              var i, ien, node, button\n              var clickHandler = function (e) {\n                _fnPageChange(settings, e.data.action, true)\n              }\n\n              for (i = 0, ien = buttons.length; i < ien; i++) {\n                button = buttons[i]\n\n                if ($.isArray(button)) {\n                  var inner = $('<' + (button.DT_el || 'div') + '/>').appendTo(container)\n                  attach(inner, button)\n                } else {\n                  btnDisplay = ''\n                  btnClass = ''\n\n                  switch (button) {\n                    case 'ellipsis':\n                      container.append('<span>&hellip;</span>')\n                      break\n\n                    case 'first':\n                      btnDisplay = lang.sFirst\n                      btnClass = button + (page > 0 ? '' : ' ' + classes.sPageButtonDisabled)\n                      break\n\n                    case 'previous':\n                      btnDisplay = lang.sPrevious\n                      btnClass = button + (page > 0 ? '' : ' ' + classes.sPageButtonDisabled)\n                      break\n\n                    case 'next':\n                      btnDisplay = lang.sNext\n                      btnClass = button + (page < pages - 1 ? '' : ' ' + classes.sPageButtonDisabled)\n                      break\n\n                    case 'last':\n                      btnDisplay = lang.sLast\n                      btnClass = button + (page < pages - 1 ? '' : ' ' + classes.sPageButtonDisabled)\n                      break\n\n                    default:\n                      btnDisplay = button + 1\n                      btnClass = page === button ? classes.sPageButtonActive : ''\n                      break\n                  }\n\n                  if (btnDisplay) {\n                    node = $('<a>', {\n                      class: classes.sPageButton + ' ' + btnClass,\n                      'aria-controls': settings.sTableId,\n                      'data-dt-idx': counter,\n                      tabindex: settings.iTabIndex,\n                      id: idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n                    })\n                      .html(btnDisplay)\n                      .appendTo(container)\n\n                    _fnBindAction(node, { action: button }, clickHandler)\n\n                    counter++\n                  }\n                }\n              }\n            }\n\n            // IE9 throws an 'unknown error' if document.activeElement is used\n            // inside an iframe or frame. Try / catch the error. Not good for\n            // accessibility, but neither are frames.\n            try {\n              // Because this approach is destroying and recreating the paging\n              // elements, focus is lost on the select button which is bad for\n              // accessibility. So we want to restore focus once the draw has\n              // completed\n              var activeEl = $(document.activeElement).data('dt-idx')\n\n              attach($(host).empty(), buttons)\n\n              if (activeEl !== null) {\n                $(host)\n                  .find('[data-dt-idx=' + activeEl + ']')\n                  .focus()\n              }\n            } catch (e) {}\n          }\n        }\n      })\n\n      var __numericReplace = function (d, decimalPlace, re1, re2) {\n        if (!d || d === '-') {\n          return -Infinity\n        }\n\n        // If a decimal place other than `.` is used, it needs to be given to the\n        // function so we can detect it and replace with a `.` which is the only\n        // decimal place Javascript recognises - it is not locale aware.\n        if (decimalPlace) {\n          d = _numToDecimal(d, decimalPlace)\n        }\n\n        if (d.replace) {\n          if (re1) {\n            d = d.replace(re1, '')\n          }\n\n          if (re2) {\n            d = d.replace(re2, '')\n          }\n        }\n\n        return d * 1\n      }\n\n      // Add the numeric 'deformatting' functions for sorting. This is done in a\n      // function to provide an easy ability for the language options to add\n      // additional methods if a non-period decimal place is used.\n      function _addNumericSort (decimalPlace) {\n        $.each(\n          {\n            // Plain numbers\n            num: function (d) {\n              return __numericReplace(d, decimalPlace)\n            },\n\n            // Formatted numbers\n            'num-fmt': function (d) {\n              return __numericReplace(d, decimalPlace, _re_formatted_numeric)\n            },\n\n            // HTML numeric\n            'html-num': function (d) {\n              return __numericReplace(d, decimalPlace, _re_html)\n            },\n\n            // HTML numeric, formatted\n            'html-num-fmt': function (d) {\n              return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric)\n            }\n          },\n          function (key, fn) {\n            _ext.type.order[key + decimalPlace + '-pre'] = fn\n          }\n        )\n      }\n\n      // Default sort methods\n      $.extend(_ext.type.order, {\n        // Dates\n        'date-pre': function (d) {\n          return Date.parse(d) || 0\n        },\n\n        // html\n        'html-pre': function (a) {\n          return _empty(a) ? '' : a.replace ? a.replace(/<.*?>/g, '').toLowerCase() : a + ''\n        },\n\n        // string\n        'string-pre': function (a) {\n          // This is a little complex, but faster than always calling toString,\n          // http://jsperf.com/tostring-v-check\n          return _empty(a) ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString()\n        },\n\n        // string-asc and -desc are retained only for compatibility with the old\n        // sort methods\n        'string-asc': function (x, y) {\n          return x < y ? -1 : x > y ? 1 : 0\n        },\n\n        'string-desc': function (x, y) {\n          return x < y ? 1 : x > y ? -1 : 0\n        }\n      })\n\n      // Numeric sorting types - order doesn't matter here\n      _addNumericSort('')\n\n      // Built in type detection. See model.ext.aTypes for information about\n      // what is required from this methods.\n      $.extend(DataTable.ext.type.detect, [\n        // Plain numbers - first since V8 detects some plain numbers as dates\n        // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n        function (d, settings) {\n          var decimal = settings.oLanguage.sDecimal\n          return _isNumber(d, decimal) ? 'num' + decimal : null\n        },\n\n        // Dates (only those recognised by the browser's Date.parse)\n        function (d, settings) {\n          // V8 will remove any unknown characters at the start and end of the\n          // expression, leading to false matches such as `$245.12` or `10%` being\n          // a valid date. See forum thread 18941 for detail.\n          if (d && (!_re_date_start.test(d) || !_re_date_end.test(d))) {\n            return null\n          }\n          var parsed = Date.parse(d)\n          return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null\n        },\n\n        // Formatted numbers\n        function (d, settings) {\n          var decimal = settings.oLanguage.sDecimal\n          return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null\n        },\n\n        // HTML numeric\n        function (d, settings) {\n          var decimal = settings.oLanguage.sDecimal\n          return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null\n        },\n\n        // HTML numeric, formatted\n        function (d, settings) {\n          var decimal = settings.oLanguage.sDecimal\n          return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null\n        },\n\n        // HTML (this is strict checking - there must be html)\n        function (d, settings) {\n          return _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ? 'html' : null\n        }\n      ])\n\n      // Filter formatting functions. See model.ext.ofnSearch for information about\n      // what is required from these methods.\n\n      $.extend(DataTable.ext.type.search, {\n        html: function (data) {\n          return _empty(data)\n            ? data\n            : typeof data === 'string'\n            ? data.replace(_re_new_lines, ' ').replace(_re_html, '')\n            : ''\n        },\n\n        string: function (data) {\n          return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, ' ') : data\n        }\n      })\n\n      $.extend(true, DataTable.ext.renderer, {\n        header: {\n          _: function (settings, cell, column, classes) {\n            // No additional mark-up required\n            // Attach a sort listener to update on sort - note that using the\n            // `DT` namespace will allow the event to be removed automatically\n            // on destroy, while the `dt` namespaced event is the one we are\n            // listening for\n            $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n              if (settings !== ctx) {\n                // need to check this this is the host\n                return // table, not a nested one\n              }\n\n              var colIdx = column.idx\n\n              cell\n                .removeClass(column.sSortingClass + ' ' + classes.sSortAsc + ' ' + classes.sSortDesc)\n                .addClass(\n                  columns[colIdx] == 'asc'\n                    ? classes.sSortAsc\n                    : columns[colIdx] == 'desc'\n                    ? classes.sSortDesc\n                    : column.sSortingClass\n                )\n            })\n          },\n\n          jqueryui: function (settings, cell, column, classes) {\n            var colIdx = column.idx\n\n            $('<div/>')\n              .addClass(classes.sSortJUIWrapper)\n              .append(cell.contents())\n              .append($('<span/>').addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI))\n              .appendTo(cell)\n\n            // Attach a sort listener to update on sort\n            $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n              if (settings !== ctx) {\n                return\n              }\n\n              cell\n                .removeClass(classes.sSortAsc + ' ' + classes.sSortDesc)\n                .addClass(\n                  columns[colIdx] == 'asc'\n                    ? classes.sSortAsc\n                    : columns[colIdx] == 'desc'\n                    ? classes.sSortDesc\n                    : column.sSortingClass\n                )\n\n              cell\n                .find('span.' + classes.sSortIcon)\n                .removeClass(\n                  classes.sSortJUIAsc +\n                    ' ' +\n                    classes.sSortJUIDesc +\n                    ' ' +\n                    classes.sSortJUI +\n                    ' ' +\n                    classes.sSortJUIAscAllowed +\n                    ' ' +\n                    classes.sSortJUIDescAllowed\n                )\n                .addClass(\n                  columns[colIdx] == 'asc'\n                    ? classes.sSortJUIAsc\n                    : columns[colIdx] == 'desc'\n                    ? classes.sSortJUIDesc\n                    : column.sSortingClassJUI\n                )\n            })\n          }\n        }\n      })\n\n      /*\n       * Public helper functions. These aren't used internally by DataTables, or\n       * called by any of the options passed into DataTables, but they can be used\n       * externally by developers working with DataTables. They are helper functions\n       * to make working with DataTables a little bit easier.\n       */\n\n      /**\n       * Helpers for `columns.render`.\n       *\n       * The options defined here can be used with the `columns.render` initialisation\n       * option to provide a display renderer. The following functions are defined:\n       *\n       * * `number` - Will format numeric data (defined by `columns.data`) for\n       *   display, retaining the original unformatted data for sorting and filtering.\n       *   It takes 4 parameters:\n       *   * `string` - Thousands grouping separator\n       *   * `string` - Decimal point indicator\n       *   * `integer` - Number of decimal points to show\n       *   * `string` (optional) - Prefix.\n       *\n       * @example\n       *   // Column definition using the number renderer\n       *   {\n       *     data: \"salary\",\n       *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n       *   }\n       *\n       * @namespace\n       */\n      DataTable.render = {\n        number: function (thousands, decimal, precision, prefix) {\n          return {\n            display: function (d) {\n              var negative = d < 0 ? '-' : ''\n              d = Math.abs(parseFloat(d))\n\n              var intPart = parseInt(d, 10)\n              var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : ''\n\n              return (\n                negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart\n              )\n            }\n          }\n        }\n      }\n\n      /*\n       * This is really a good bit rubbish this method of exposing the internal methods\n       * publicly... - To be fixed in 2.0 using methods on the prototype\n       */\n\n      /**\n       * Create a wrapper function for exporting an internal functions to an external API.\n       *  @param {string} fn API function name\n       *  @returns {function} wrapped function\n       *  @memberof DataTable#internal\n       */\n      function _fnExternApiFunc (fn) {\n        return function () {\n          var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments))\n          return DataTable.ext.internal[fn].apply(this, args)\n        }\n      }\n\n      /**\n       * Reference to internal functions for use by plug-in developers. Note that\n       * these methods are references to internal functions and are considered to be\n       * private. If you use these methods, be aware that they are liable to change\n       * between versions.\n       *  @namespace\n       */\n      $.extend(DataTable.ext.internal, {\n        _fnExternApiFunc: _fnExternApiFunc,\n        _fnBuildAjax: _fnBuildAjax,\n        _fnAjaxUpdate: _fnAjaxUpdate,\n        _fnAjaxParameters: _fnAjaxParameters,\n        _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n        _fnAjaxDataSrc: _fnAjaxDataSrc,\n        _fnAddColumn: _fnAddColumn,\n        _fnColumnOptions: _fnColumnOptions,\n        _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n        _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n        _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n        _fnVisbleColumns: _fnVisbleColumns,\n        _fnGetColumns: _fnGetColumns,\n        _fnColumnTypes: _fnColumnTypes,\n        _fnApplyColumnDefs: _fnApplyColumnDefs,\n        _fnHungarianMap: _fnHungarianMap,\n        _fnCamelToHungarian: _fnCamelToHungarian,\n        _fnLanguageCompat: _fnLanguageCompat,\n        _fnBrowserDetect: _fnBrowserDetect,\n        _fnAddData: _fnAddData,\n        _fnAddTr: _fnAddTr,\n        _fnNodeToDataIndex: _fnNodeToDataIndex,\n        _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n        _fnGetCellData: _fnGetCellData,\n        _fnSetCellData: _fnSetCellData,\n        _fnSplitObjNotation: _fnSplitObjNotation,\n        _fnGetObjectDataFn: _fnGetObjectDataFn,\n        _fnSetObjectDataFn: _fnSetObjectDataFn,\n        _fnGetDataMaster: _fnGetDataMaster,\n        _fnClearTable: _fnClearTable,\n        _fnDeleteIndex: _fnDeleteIndex,\n        _fnInvalidateRow: _fnInvalidateRow,\n        _fnGetRowElements: _fnGetRowElements,\n        _fnCreateTr: _fnCreateTr,\n        _fnBuildHead: _fnBuildHead,\n        _fnDrawHead: _fnDrawHead,\n        _fnDraw: _fnDraw,\n        _fnReDraw: _fnReDraw,\n        _fnAddOptionsHtml: _fnAddOptionsHtml,\n        _fnDetectHeader: _fnDetectHeader,\n        _fnGetUniqueThs: _fnGetUniqueThs,\n        _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n        _fnFilterComplete: _fnFilterComplete,\n        _fnFilterCustom: _fnFilterCustom,\n        _fnFilterColumn: _fnFilterColumn,\n        _fnFilter: _fnFilter,\n        _fnFilterCreateSearch: _fnFilterCreateSearch,\n        _fnEscapeRegex: _fnEscapeRegex,\n        _fnFilterData: _fnFilterData,\n        _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n        _fnUpdateInfo: _fnUpdateInfo,\n        _fnInfoMacros: _fnInfoMacros,\n        _fnInitialise: _fnInitialise,\n        _fnInitComplete: _fnInitComplete,\n        _fnLengthChange: _fnLengthChange,\n        _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n        _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n        _fnPageChange: _fnPageChange,\n        _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n        _fnProcessingDisplay: _fnProcessingDisplay,\n        _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n        _fnScrollDraw: _fnScrollDraw,\n        _fnApplyToChildren: _fnApplyToChildren,\n        _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n        _fnThrottle: _fnThrottle,\n        _fnConvertToWidth: _fnConvertToWidth,\n        _fnScrollingWidthAdjust: _fnScrollingWidthAdjust,\n        _fnGetWidestNode: _fnGetWidestNode,\n        _fnGetMaxLenString: _fnGetMaxLenString,\n        _fnStringToCss: _fnStringToCss,\n        _fnScrollBarWidth: _fnScrollBarWidth,\n        _fnSortFlatten: _fnSortFlatten,\n        _fnSort: _fnSort,\n        _fnSortAria: _fnSortAria,\n        _fnSortListener: _fnSortListener,\n        _fnSortAttachListener: _fnSortAttachListener,\n        _fnSortingClasses: _fnSortingClasses,\n        _fnSortData: _fnSortData,\n        _fnSaveState: _fnSaveState,\n        _fnLoadState: _fnLoadState,\n        _fnSettingsFromNode: _fnSettingsFromNode,\n        _fnLog: _fnLog,\n        _fnMap: _fnMap,\n        _fnBindAction: _fnBindAction,\n        _fnCallbackReg: _fnCallbackReg,\n        _fnCallbackFire: _fnCallbackFire,\n        _fnLengthOverflow: _fnLengthOverflow,\n        _fnRenderer: _fnRenderer,\n        _fnDataSource: _fnDataSource,\n        _fnRowAttributes: _fnRowAttributes,\n        _fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n        // in 1.10, so this dead-end function is\n        // added to prevent errors\n      })\n\n      // jQuery access\n      $.fn.dataTable = DataTable\n\n      // Legacy aliases\n      $.fn.dataTableSettings = DataTable.settings\n      $.fn.dataTableExt = DataTable.ext\n\n      // With a capital `D` we return a DataTables API instance rather than a\n      // jQuery object\n      $.fn.DataTable = function (opts) {\n        return $(this)\n          .dataTable(opts)\n          .api()\n      }\n\n      // All properties that are available to $.fn.dataTable should also be\n      // available on $.fn.DataTable\n      $.each(DataTable, function (prop, val) {\n        $.fn.DataTable[prop] = val\n      })\n\n      // Information about events fired by DataTables - for documentation.\n      /**\n       * Draw event, fired whenever the table is redrawn on the page, at the same\n       * point as fnDrawCallback. This may be useful for binding events or\n       * performing calculations when the table is altered at all.\n       *  @name DataTable#draw.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * Search event, fired when the searching applied to the table (using the\n       * built-in global search, or column filters) is altered.\n       *  @name DataTable#search.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * Page change event, fired when the paging of the table is altered.\n       *  @name DataTable#page.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * Order event, fired when the ordering applied to the table is altered.\n       *  @name DataTable#order.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * DataTables initialisation complete event, fired when the table is fully\n       * drawn, including Ajax data loaded, if Ajax data is required.\n       *  @name DataTable#init.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} oSettings DataTables settings object\n       *  @param {object} json The JSON object request from the server - only\n       *    present if client-side Ajax sourced data is used</li></ol>\n       */\n\n      /**\n       * State save event, fired when the table has changed state a new state save\n       * is required. This event allows modification of the state saving object\n       * prior to actually doing the save, including addition or other state\n       * properties (for plug-ins) or modification of a DataTables core property.\n       *  @name DataTable#stateSaveParams.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} oSettings DataTables settings object\n       *  @param {object} json The state information to be saved\n       */\n\n      /**\n       * State load event, fired when the table is loading state from the stored\n       * data, but prior to the settings object being modified by the saved state\n       * - allowing modification of the saved state is required or loading of\n       * state for a plug-in.\n       *  @name DataTable#stateLoadParams.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} oSettings DataTables settings object\n       *  @param {object} json The saved state information\n       */\n\n      /**\n       * State loaded event, fired when state has been loaded from stored data and\n       * the settings object has been modified by the loaded data.\n       *  @name DataTable#stateLoaded.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} oSettings DataTables settings object\n       *  @param {object} json The saved state information\n       */\n\n      /**\n       * Processing event, fired when DataTables is doing some kind of processing\n       * (be it, order, searcg or anything else). It can be used to indicate to\n       * the end user that there is something happening, or that something has\n       * finished.\n       *  @name DataTable#processing.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} oSettings DataTables settings object\n       *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n       */\n\n      /**\n       * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n       * request to made to the server for new data. This event is called before\n       * DataTables processed the returned data, so it can also be used to pre-\n       * process the data returned from the server, if needed.\n       *\n       * Note that this trigger is called in `fnServerData`, if you override\n       * `fnServerData` and which to use this event, you need to trigger it in you\n       * success function.\n       *  @name DataTable#xhr.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       *  @param {object} json JSON returned from the server\n       *\n       *  @example\n       *     // Use a custom property returned from the server in another DOM element\n       *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n       *       $('#status').html( json.status );\n       *     } );\n       *\n       *  @example\n       *     // Pre-process the data returned from the server\n       *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n       *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n       *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n       *       }\n       *       // Note no return - manipulate the data directly in the JSON object.\n       *     } );\n       */\n\n      /**\n       * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n       * or passing the bDestroy:true parameter in the initialisation object. This\n       * can be used to remove bound events, added DOM nodes, etc.\n       *  @name DataTable#destroy.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * Page length change event, fired when number of records to show on each\n       * page (the length) is changed.\n       *  @name DataTable#length.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       *  @param {integer} len New length\n       */\n\n      /**\n       * Column sizing has changed.\n       *  @name DataTable#column-sizing.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       */\n\n      /**\n       * Column visibility has changed.\n       *  @name DataTable#column-visibility.dt\n       *  @event\n       *  @param {event} e jQuery event object\n       *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n       *  @param {int} column Column index\n       *  @param {bool} vis `false` if column now hidden, or `true` if visible\n       */\n\n      return $.fn.dataTable\n    }\n  )\n})(window, document)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/datatables/jquery.dataTables.js?");

/***/ }),
/* 5 */
/*!*************************************************************!*\
  !*** ./src/public/js/vendor/uikit/js/uikit_combined.min.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ 1);\n/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\n/* provided dependency */ var __webpack_provided_window_dot_moment = __webpack_require__(/*! moment */ 6);\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 1);\n/* provided dependency */ var Modernizr = __webpack_require__(/*! modernizr */ 3);\nvar __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_0__module;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_16__, __WEBPACK_LOCAL_MODULE_16__exports;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(core){if( true&&!(__WEBPACK_LOCAL_MODULE_0__module = { id: \"uikit\", exports: {}, loaded: false }, __WEBPACK_LOCAL_MODULE_0__ = (function(){var uikit=window.UIkit||core(window,__webpack_provided_window_dot_jQuery,window.document);return uikit.load=function(res,req,onload,config){var i,resources=res.split(\",\"),load=[],base=(config.config&&config.config.uikit&&config.config.uikit.base?config.config.uikit.base:\"\").replace(/\\/+$/g,\"\");if(!base)throw new Error(\"Please define base path to UIkit in the requirejs config.\");for(i=0;i<resources.length;i+=1){var resource=resources[i].replace(/\\./g,\"/\");load.push(base+\"/components/\"+resource)}req(load,function(){onload(uikit)})},uikit}).call(__WEBPACK_LOCAL_MODULE_0__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_0__module.exports, __WEBPACK_LOCAL_MODULE_0__module), __WEBPACK_LOCAL_MODULE_0__module.loaded = true, __WEBPACK_LOCAL_MODULE_0__ === undefined && (__WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__module.exports)),!__webpack_provided_window_dot_jQuery)throw new Error(\"UIkit requires jQuery\");window&&__webpack_provided_window_dot_jQuery&&core(window,__webpack_provided_window_dot_jQuery,window.document)}(function(global,$,doc){\"use strict\";var transitionEnd,hoverset,exclude,selector,UI={},_UI=global.UIkit?Object.create(global.UIkit):void 0;UI.version=\"2.25.0\",UI.noConflict=function(){return _UI&&(global.UIkit=_UI,$.UIkit=_UI,$.fn.uk=_UI.fn),UI},UI.prefix=function(str){return str},UI.$=$,UI.$doc=UI.$(document),UI.$win=UI.$(window),UI.$html=UI.$(\"html\"),UI.support={},UI.support.transition=(transitionEnd=function(){var name,element=doc.body||doc.documentElement,transEndEventNames={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(name in transEndEventNames)if(void 0!==element.style[name])return transEndEventNames[name]}())&&{end:transitionEnd},UI.support.animation=(transitionEnd=function(){var name,element=doc.body||doc.documentElement,animEndEventNames={WebkitAnimation:\"webkitAnimationEnd\",MozAnimation:\"animationend\",OAnimation:\"oAnimationEnd oanimationend\",animation:\"animationend\"};for(name in animEndEventNames)if(void 0!==element.style[name])return animEndEventNames[name]}())&&{end:transitionEnd},Date.now=Date.now||function(){return(new Date).getTime()};for(var lastTime,vendors=[\"webkit\",\"moz\"],i=0;i<vendors.length&&!window.requestAnimationFrame;++i){var vp=vendors[i];window.requestAnimationFrame=window[vp+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[vp+\"CancelAnimationFrame\"]||window[vp+\"CancelRequestAnimationFrame\"]}function domReady(){var memory,fn;UI.$body=UI.$(\"body\"),UI.ready(function(context){UI.domObserve(\"[data-uk-observe]\")}),UI.on(\"changed.uk.dom\",function(e){UI.init(e.target),UI.Utils.checkDisplay(e.target)}),UI.trigger(\"beforeready.uk.dom\"),UI.component.bootComponents(),requestAnimationFrame((memory={dir:{x:0,y:0},x:window.pageXOffset,y:window.pageYOffset},fn=function(){var wpxo=window.pageXOffset,wpyo=window.pageYOffset;memory.x==wpxo&&memory.y==wpyo||(wpxo!=memory.x?memory.dir.x=wpxo>memory.x?1:-1:memory.dir.x=0,wpyo!=memory.y?memory.dir.y=wpyo>memory.y?1:-1:memory.dir.y=0,memory.x=wpxo,memory.y=wpyo,UI.$doc.trigger(\"scrolling.uk.document\",[{dir:{x:memory.dir.x,y:memory.dir.y},x:wpxo,y:wpyo}])),requestAnimationFrame(fn)},UI.support.touch&&UI.$html.on(\"touchmove touchend MSPointerMove MSPointerUp pointermove pointerup\",fn),(memory.x||memory.y)&&fn(),fn)),UI.trigger(\"domready.uk.dom\"),UI.support.touch&&navigator.userAgent.match(/(iPad|iPhone|iPod)/g)&&UI.$win.on(\"load orientationchange resize\",UI.Utils.debounce(function(){var fn=function(){return $(\".uk-height-viewport\").css(\"height\",window.innerHeight),fn};return fn()}(),100)),UI.trigger(\"afterready.uk.dom\"),UI.domready=!0}return!/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)&&window.requestAnimationFrame&&window.cancelAnimationFrame||(lastTime=0,window.requestAnimationFrame=function(callback){var now=Date.now(),nextTime=Math.max(lastTime+16,now);return setTimeout(function(){callback(lastTime=nextTime)},nextTime-now)},window.cancelAnimationFrame=clearTimeout),UI.support.touch=\"ontouchstart\"in document||global.DocumentTouch&&document instanceof global.DocumentTouch||global.navigator.msPointerEnabled&&0<global.navigator.msMaxTouchPoints||global.navigator.pointerEnabled&&0<global.navigator.maxTouchPoints||!1,UI.support.mutationobserver=global.MutationObserver||global.WebKitMutationObserver||null,UI.Utils={},UI.Utils.isFullscreen=function(){return document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.fullscreenElement||!1},UI.Utils.str2json=function(str,notevil){try{return notevil?JSON.parse(str.replace(/([\\$\\w]+)\\s*:/g,function(_,$1){return'\"'+$1+'\":'}).replace(/'([^']+)'/g,function(_,$1){return'\"'+$1+'\"'})):new Function(\"\",\"var json = \"+str+\"; return JSON.parse(JSON.stringify(json));\")()}catch(e){return!1}},UI.Utils.debounce=function(func,wait,immediate){var timeout;return function(){var context=this,args=arguments,callNow=immediate&&!timeout;clearTimeout(timeout),timeout=setTimeout(function(){timeout=null,immediate||func.apply(context,args)},wait),callNow&&func.apply(context,args)}},UI.Utils.removeCssRules=function(selectorRegEx){var idx,idxs,stylesheet,_i,_j,_k,_len,_len1,_len2,_ref;selectorRegEx&&setTimeout(function(){try{for(_ref=document.styleSheets,_i=0,_len=_ref.length;_i<_len;_i++){for(stylesheet=_ref[_i],idxs=[],stylesheet.cssRules=stylesheet.cssRules,idx=_j=0,_len1=stylesheet.cssRules.length;_j<_len1;idx=++_j)stylesheet.cssRules[idx].type===CSSRule.STYLE_RULE&&selectorRegEx.test(stylesheet.cssRules[idx].selectorText)&&idxs.unshift(idx);for(_k=0,_len2=idxs.length;_k<_len2;_k++)stylesheet.deleteRule(idxs[_k])}}catch(_error){}},0)},UI.Utils.isInView=function(element,options){element=$(element);if(!element.is(\":visible\"))return!1;var window_left=UI.$win.scrollLeft(),window_top=UI.$win.scrollTop(),offset=element.offset(),left=offset.left,offset=offset.top;return options=$.extend({topoffset:0,leftoffset:0},options),offset+element.height()>=window_top&&offset-options.topoffset<=window_top+UI.$win.height()&&left+element.width()>=window_left&&left-options.leftoffset<=window_left+UI.$win.width()},UI.Utils.checkDisplay=function(context,initanimation){var elements=UI.$(\"[data-uk-margin], [data-uk-grid-match], [data-uk-grid-margin], [data-uk-check-display]\",context||document);return(elements=context&&!elements.length?$(context):elements).trigger(\"display.uk.check\"),initanimation&&elements.find(initanimation=\"string\"!=typeof initanimation?'[class*=\"uk-animation-\"]':initanimation).each(function(){var ele=UI.$(this),anim=ele.attr(\"class\").match(/uk\\-animation\\-(.+)/);ele.removeClass(anim[0]).width(),ele.addClass(anim[0])}),elements},UI.Utils.options=function(string){if(\"string\"!=$.type(string))return string;var start=(string=-1!=string.indexOf(\":\")&&\"}\"!=string.trim().substr(-1)?\"{\"+string+\"}\":string)?string.indexOf(\"{\"):-1,options={};if(-1!=start)try{options=UI.Utils.str2json(string.substr(start))}catch(e){}return options},UI.Utils.animate=function(element,cls){var d=$.Deferred();return(element=UI.$(element)).css(\"display\",\"none\").addClass(cls).one(UI.support.animation.end,function(){element.removeClass(cls),d.resolve()}),element.css(\"display\",\"\"),d.promise()},UI.Utils.uid=function(prefix){return(prefix||\"id\")+(new Date).getTime()+\"RAND\"+Math.ceil(1e5*Math.random())},UI.Utils.template=function(str,data){for(var toc,cmd,prop,tokens=str.replace(/\\n/g,\"\\\\n\").replace(/\\{\\{\\{\\s*(.+?)\\s*\\}\\}\\}/g,\"{{!$1}}\").split(/(\\{\\{\\s*(.+?)\\s*\\}\\})/g),i=0,output=[],openblocks=0;i<tokens.length;){if((toc=tokens[i]).match(/\\{\\{\\s*(.+?)\\s*\\}\\}/))switch(cmd=(toc=tokens[i+=1])[0],prop=toc.substring(toc.match(/^(\\^|\\#|\\!|\\~|\\:)/)?1:0),cmd){case\"~\":output.push(\"for(var $i=0;$i<\"+prop+\".length;$i++) { var $item = \"+prop+\"[$i];\"),openblocks++;break;case\":\":output.push(\"for(var $key in \"+prop+\") { var $val = \"+prop+\"[$key];\"),openblocks++;break;case\"#\":output.push(\"if(\"+prop+\") {\"),openblocks++;break;case\"^\":output.push(\"if(!\"+prop+\") {\"),openblocks++;break;case\"/\":output.push(\"}\"),openblocks--;break;case\"!\":output.push(\"__ret.push(\"+prop+\");\");break;default:output.push(\"__ret.push(escape(\"+prop+\"));\")}else output.push(\"__ret.push('\"+toc.replace(/\\'/g,\"\\\\'\")+\"');\");i+=1}return str=new Function(\"$data\",[\"var __ret = [];\",\"try {\",\"with($data){\",openblocks?'__ret = [\"Not all blocks are closed correctly.\"]':output.join(\"\"),\"};\",\"}catch(e){__ret = [e.message];}\",'return __ret.join(\"\").replace(/\\\\n\\\\n/g, \"\\\\n\");',\"function escape(html) { return String(html).replace(/&/g, '&amp;').replace(/\\\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');}\"].join(\"\\n\")),data?str(data):str},UI.Utils.events={},UI.Utils.events.click=UI.support.touch?\"tap\":\"click\",(global.UIkit=UI).fn=function(command,options){var args=arguments,command=command.match(/^([a-z\\-]+)(?:\\.([a-z]+))?/i),component=command[1],method=command[2];return UI[component]?this.each(function(){var $this=$(this),data=$this.data(component);data||$this.data(component,data=UI[component](this,method?void 0:options)),method&&data[method].apply(data,Array.prototype.slice.call(args,1))}):($.error(\"UIkit component [\"+component+\"] does not exist.\"),this)},$.UIkit=UI,$.fn.uk=UI.fn,UI.langdirection=\"rtl\"==UI.$html.attr(\"dir\")?\"right\":\"left\",UI.components={},UI.component=function(name,def){function fn(element,options){var $this=this;return this.UIkit=UI,this.element=element?UI.$(element):null,this.options=$.extend(!0,{},this.defaults,options),this.plugins={},this.element&&this.element.data(name,this),this.init(),(this.options.plugins.length?this.options.plugins:Object.keys(fn.plugins)).forEach(function(plugin){fn.plugins[plugin].init&&(fn.plugins[plugin].init($this),$this.plugins[plugin]=!0)}),this.trigger(\"init.uk.component\",[name,this]),this}return fn.plugins={},$.extend(!0,fn.prototype,{defaults:{plugins:[]},boot:function(){},init:function(){},on:function(a1,a2,a3){return UI.$(this.element||this).on(a1,a2,a3)},one:function(a1,a2,a3){return UI.$(this.element||this).one(a1,a2,a3)},off:function(evt){return UI.$(this.element||this).off(evt)},trigger:function(evt,params){return UI.$(this.element||this).trigger(evt,params)},find:function(selector){return UI.$(this.element||[]).find(selector)},proxy:function(obj,methods){var $this=this;methods.split(\" \").forEach(function(method){$this[method]||($this[method]=function(){return obj[method].apply(obj,arguments)})})},mixin:function(obj,methods){var $this=this;methods.split(\" \").forEach(function(method){$this[method]||($this[method]=obj[method].bind($this))})},option:function(){if(1==arguments.length)return this.options[arguments[0]]||void 0;2==arguments.length&&(this.options[arguments[0]]=arguments[1])}},def),this.components[name]=fn,this[name]=function(){var element,options;if(arguments.length)switch(arguments.length){case 1:\"string\"==typeof arguments[0]||arguments[0].nodeType||arguments[0]instanceof jQuery?element=$(arguments[0]):options=arguments[0];break;case 2:element=$(arguments[0]),options=arguments[1]}return element&&element.data(name)?element.data(name):new UI.components[name](element,options)},UI.domready&&UI.component.boot(name),fn},UI.plugin=function(component,name,def){this.components[component].plugins[name]=def},UI.component.boot=function(name){UI.components[name].prototype&&UI.components[name].prototype.boot&&!UI.components[name].booted&&(UI.components[name].prototype.boot.apply(UI,[]),UI.components[name].booted=!0)},UI.component.bootComponents=function(){for(var component in UI.components)UI.component.boot(component)},UI.domObservers=[],UI.domready=!1,UI.ready=function(fn){UI.domObservers.push(fn),UI.domready&&fn(document)},UI.on=function(a1,a2,a3){return a1&&-1<a1.indexOf(\"ready.uk.dom\")&&UI.domready&&a2.apply(UI.$doc),UI.$doc.on(a1,a2,a3)},UI.one=function(a1,a2,a3){return a1&&-1<a1.indexOf(\"ready.uk.dom\")&&UI.domready?(a2.apply(UI.$doc),UI.$doc):UI.$doc.one(a1,a2,a3)},UI.trigger=function(evt,params){return UI.$doc.trigger(evt,params)},UI.domObserve=function(selector,fn){UI.support.mutationobserver&&(fn=fn||function(){},UI.$(selector).each(function(){var element=this,$element=UI.$(element);if(!$element.data(\"observer\"))try{var observer=new UI.support.mutationobserver(UI.Utils.debounce(function(mutations){fn.apply(element,[]),$element.trigger(\"changed.uk.dom\")},50));observer.observe(element,{childList:!0,subtree:!0}),$element.data(\"observer\",observer)}catch(e){}}))},UI.init=function(root){root=root||document,UI.domObservers.forEach(function(fn){fn(root)})},UI.on(\"domready.uk.dom\",function(){UI.init(),UI.domready&&UI.Utils.checkDisplay()}),document.addEventListener(\"DOMContentLoaded\",(\"complete\"!=document.readyState&&\"interactive\"!=document.readyState||setTimeout(domReady),domReady)),UI.$html.addClass(UI.support.touch?\"uk-touch\":\"uk-notouch\"),UI.support.touch&&(hoverset=!1,UI.$html.on(\"mouseenter touchstart MSPointerDown pointerdown\",selector=\".uk-overlay, .uk-overlay-hover, .uk-overlay-toggle, .uk-animation-hover, .uk-has-hover\",function(){hoverset&&$(\".uk-hover\").removeClass(\"uk-hover\"),hoverset=$(this).addClass(\"uk-hover\")}).on(\"mouseleave touchend MSPointerUp pointerup\",function(e){exclude=$(e.target).parents(selector),hoverset&&hoverset.not(exclude).removeClass(\"uk-hover\")})),UI}),function($){var touch,touchTimeout,tapTimeout,swipeTimeout,longTapTimeout,gesture;function longTap(){longTapTimeout=null,touch.last&&(void 0!==touch.el&&touch.el.trigger(\"longTap\"),touch={})}function cancelLongTap(){longTapTimeout&&clearTimeout(longTapTimeout),longTapTimeout=null}function cancelAll(){touchTimeout&&clearTimeout(touchTimeout),tapTimeout&&clearTimeout(tapTimeout),swipeTimeout&&clearTimeout(swipeTimeout),longTapTimeout&&clearTimeout(longTapTimeout),touchTimeout=tapTimeout=swipeTimeout=longTapTimeout=null,touch={}}function isPrimaryTouch(event){return event.pointerType==event.MSPOINTER_TYPE_TOUCH&&event.isPrimary}$.fn.swipeLeft||(touch={},$(function(){var now,delta,firstTouch,deltaX=0,deltaY=0;\"MSGesture\"in window&&((gesture=new MSGesture).target=document.body),$(document).on(\"MSGestureEnd gestureend\",function(e){e=1<e.originalEvent.velocityX?\"Right\":e.originalEvent.velocityX<-1?\"Left\":1<e.originalEvent.velocityY?\"Down\":e.originalEvent.velocityY<-1?\"Up\":null;e&&void 0!==touch.el&&(touch.el.trigger(\"swipe\"),touch.el.trigger(\"swipe\"+e))}).on(\"touchstart MSPointerDown pointerdown\",function(e){\"MSPointerDown\"==e.type&&!isPrimaryTouch(e.originalEvent)||(firstTouch=\"MSPointerDown\"==e.type||\"pointerdown\"==e.type?e:e.originalEvent.touches[0],now=Date.now(),delta=now-(touch.last||now),touch.el=$(\"tagName\"in firstTouch.target?firstTouch.target:firstTouch.target.parentNode),touchTimeout&&clearTimeout(touchTimeout),touch.x1=firstTouch.pageX,touch.y1=firstTouch.pageY,0<delta&&delta<=250&&(touch.isDoubleTap=!0),touch.last=now,longTapTimeout=setTimeout(longTap,750),!gesture||\"MSPointerDown\"!=e.type&&\"pointerdown\"!=e.type&&\"touchstart\"!=e.type||gesture.addPointer(e.originalEvent.pointerId))}).on(\"touchmove MSPointerMove pointermove\",function(e){\"MSPointerMove\"==e.type&&!isPrimaryTouch(e.originalEvent)||(firstTouch=\"MSPointerMove\"==e.type||\"pointermove\"==e.type?e:e.originalEvent.touches[0],cancelLongTap(),touch.x2=firstTouch.pageX,touch.y2=firstTouch.pageY,deltaX+=Math.abs(touch.x1-touch.x2),deltaY+=Math.abs(touch.y1-touch.y2))}).on(\"touchend MSPointerUp pointerup\",function(e){\"MSPointerUp\"==e.type&&!isPrimaryTouch(e.originalEvent)||(cancelLongTap(),touch.x2&&30<Math.abs(touch.x1-touch.x2)||touch.y2&&30<Math.abs(touch.y1-touch.y2)?swipeTimeout=setTimeout(function(){var x1,x2,y1,y2;void 0!==touch.el&&(touch.el.trigger(\"swipe\"),touch.el.trigger(\"swipe\"+(x1=touch.x1,x2=touch.x2,y1=touch.y1,y2=touch.y2,Math.abs(x1-x2)>=Math.abs(y1-y2)?0<x1-x2?\"Left\":\"Right\":0<y1-y2?\"Up\":\"Down\"))),touch={}},0):\"last\"in touch&&(isNaN(deltaX)||deltaX<30&&deltaY<30?tapTimeout=setTimeout(function(){var event=$.Event(\"tap\");event.cancelTouch=cancelAll,void 0!==touch.el&&touch.el.trigger(event),touch.isDoubleTap?(void 0!==touch.el&&touch.el.trigger(\"doubleTap\"),touch={}):touchTimeout=setTimeout(function(){touchTimeout=null,void 0!==touch.el&&touch.el.trigger(\"singleTap\"),touch={}},250)},0):touch={},deltaX=deltaY=0))}).on(\"touchcancel MSPointerCancel\",cancelAll),$(window).on(\"scroll\",cancelAll)}),[\"swipe\",\"swipeLeft\",\"swipeRight\",\"swipeUp\",\"swipeDown\",\"doubleTap\",\"tap\",\"singleTap\",\"longTap\"].forEach(function(eventName){$.fn[eventName]=function(callback){return $(this).on(eventName,callback)}}))}(jQuery),function(UI){\"use strict\";var elements,cacheSvgs,stacks=[];function check(ele){var width,iwidth,height;ele.is(\":visible\")&&(width=ele.parent().width(),iwidth=ele.data(\"width\"),height=Math.floor(width/iwidth*ele.data(\"height\")),ele.css({height:width<iwidth?height:ele.data(\"height\")}))}UI.component(\"stackMargin\",{defaults:{cls:\"uk-margin-small-top\",rowfirst:!1},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-margin]\",context).each(function(){var ele=UI.$(this);ele.data(\"stackMargin\")||UI.stackMargin(ele,UI.Utils.options(ele.attr(\"data-uk-margin\")))})})},init:function(){var $this=this;function fn(){$this.process()}UI.$win.on(\"resize orientationchange\",(UI.$(function(){fn(),UI.$win.on(\"load\",fn)}),UI.Utils.debounce(fn,20))),UI.$html.on(\"changed.uk.dom\",function(e){$this.process()}),this.on(\"display.uk.check\",function(e){this.element.is(\":visible\")&&this.process()}.bind(this)),stacks.push(this)},process:function(){var pos_cache,$this=this,columns=this.element.children();return UI.Utils.stackMargin(columns,this.options),!this.options.rowfirst||(pos_cache=columns.removeClass(this.options.rowfirst).filter(\":visible\").first().position())&&columns.each(function(){UI.$(this)[UI.$(this).position().left==pos_cache.left?\"addClass\":\"removeClass\"]($this.options.rowfirst)}),this}}),elements=[],UI.component(\"responsiveElement\",{defaults:{},boot:function(){UI.ready(function(context){UI.$(\"iframe.uk-responsive-width, [data-uk-responsive]\",context).each(function(){var ele=UI.$(this);ele.data(\"responsiveElement\")||UI.responsiveElement(ele,{})})})},init:function(){var ele=this.element;ele.attr(\"width\")&&ele.attr(\"height\")&&(ele.data({width:ele.attr(\"width\"),height:ele.attr(\"height\")}).on(\"display.uk.check\",function(){check(ele)}),check(ele),elements.push(ele))}}),UI.$win.on(\"resize load\",UI.Utils.debounce(function(){elements.forEach(function(ele){check(ele)})},15)),UI.Utils.stackMargin=function(elements,options){(options=UI.$.extend({cls:\"uk-margin-small-top\"},options)).cls=options.cls,elements=UI.$(elements).removeClass(options.cls);var skip=!1,firstvisible=elements.filter(\":visible:first\"),offset=!!firstvisible.length&&firstvisible.position().top+firstvisible.outerHeight()-1;!1!==offset&&1!=elements.length&&elements.each(function(){var column=UI.$(this);column.is(\":visible\")&&(skip?column.addClass(options.cls):column.position().top>=offset&&(skip=column.addClass(options.cls)))})},UI.Utils.matchHeights=function(elements,options){elements=UI.$(elements).css(\"min-height\",\"\"),options=UI.$.extend({row:!0},options);function matchHeights(group){var max;group.length<2||(max=0,group.each(function(){max=Math.max(max,UI.$(this).outerHeight())}).each(function(){var element=UI.$(this),height=max-(\"border-box\"==element.css(\"box-sizing\")?0:element.outerHeight()-element.height());element.css(\"min-height\",height+\"px\")}))}options.row?(elements.first().width(),setTimeout(function(){var lastoffset=!1,group=[];elements.each(function(){var ele=UI.$(this),offset=ele.offset().top;offset!=lastoffset&&group.length&&(matchHeights(UI.$(group)),group=[],offset=ele.offset().top),group.push(ele),lastoffset=offset}),group.length&&matchHeights(UI.$(group))},0)):matchHeights(elements)},cacheSvgs={},UI.Utils.inlineSvg=function(selector,root){UI.$(selector||'img[src$=\".svg\"]',root||document).each(function(){var d,img=UI.$(this),src=img.attr(\"src\");cacheSvgs[src]||(d=UI.$.Deferred(),UI.$.get(src,{nc:Math.random()},function(data){d.resolve(UI.$(data).find(\"svg\"))}),cacheSvgs[src]=d.promise()),cacheSvgs[src].then(function(svg){svg=UI.$(svg).clone();img.attr(\"id\")&&svg.attr(\"id\",img.attr(\"id\")),img.attr(\"class\")&&svg.attr(\"class\",img.attr(\"class\")),img.attr(\"style\")&&svg.attr(\"style\",img.attr(\"style\")),img.attr(\"width\")&&(svg.attr(\"width\",img.attr(\"width\")),img.attr(\"height\")||svg.removeAttr(\"height\")),img.attr(\"height\")&&(svg.attr(\"height\",img.attr(\"height\")),img.attr(\"width\")||svg.removeAttr(\"width\")),img.replaceWith(svg)})})},UI.ready(function(context){UI.Utils.inlineSvg(\"[data-uk-svg]\",context)})}(UIkit),function(UI){\"use strict\";function scrollToElement(ele,options){options=UI.$.extend({duration:1e3,transition:\"easeOutExpo\",offset:0,complete:function(){}},options);var ele=ele.offset().top-options.offset,docheight=UI.$doc.height(),winheight=window.innerHeight;docheight<ele+winheight&&(ele=docheight-winheight),UI.$(\"html,body\").stop().animate({scrollTop:ele},options.duration,options.transition).promise().done(options.complete)}UI.component(\"smoothScroll\",{boot:function(){UI.$html.on(\"click.smooth-scroll.uikit\",\"[data-uk-smooth-scroll]\",function(e){var ele=UI.$(this);return ele.data(\"smoothScroll\")||(UI.smoothScroll(ele,UI.Utils.options(ele.attr(\"data-uk-smooth-scroll\"))),ele.trigger(\"click\")),!1})},init:function(){var $this=this;this.on(\"click\",function(e){e.preventDefault(),scrollToElement(UI.$(this.hash).length?UI.$(this.hash):UI.$(\"body\"),$this.options)})}}),UI.Utils.scrollToElement=scrollToElement,UI.$.easing.easeOutExpo||(UI.$.easing.easeOutExpo=function(x,t,b,c,d){return t==d?b+c:c*(1-Math.pow(2,-10*t/d))+b})}(UIkit),function(UI){\"use strict\";function checkScrollSpy(){for(var i=0;i<scrollspies.length;i++)window.requestAnimationFrame.apply(window,[scrollspies[i].check])}function checkScrollSpyNavs(){for(var i=0;i<scrollspynavs.length;i++)window.requestAnimationFrame.apply(window,[scrollspynavs[i].check])}var $win=UI.$win,$doc=UI.$doc,scrollspies=[],scrollspynavs=(UI.component(\"scrollspy\",{defaults:{target:!1,cls:\"uk-scrollspy-inview\",initcls:\"uk-scrollspy-init-inview\",topoffset:0,leftoffset:0,repeat:!1,delay:0},boot:function(){$doc.on(\"scrolling.uk.document\",checkScrollSpy),$win.on(\"load resize orientationchange\",UI.Utils.debounce(checkScrollSpy,50)),UI.ready(function(context){UI.$(\"[data-uk-scrollspy]\",context).each(function(){var element=UI.$(this);element.data(\"scrollspy\")||UI.scrollspy(element,UI.Utils.options(element.attr(\"data-uk-scrollspy\")))})})},init:function(){function fn(){var elements=$this.options.target?$this.element.find($this.options.target):$this.element,delayIdx=1===elements.length?1:0,toggleclsIdx=0;elements.each(function(idx){var element=UI.$(this),inviewstate=element.data(\"inviewstate\"),inview=UI.Utils.isInView(element,$this.options),toggle=element.data(\"ukScrollspyCls\")||togglecls[toggleclsIdx].trim();!inview||inviewstate||element.data(\"scrollspy-idle\")||(initinview||(element.addClass($this.options.initcls),$this.offset=element.offset(),initinview=!0,element.trigger(\"init.uk.scrollspy\")),element.data(\"scrollspy-idle\",setTimeout(function(){element.addClass(\"uk-scrollspy-inview\").toggleClass(toggle).width(),element.trigger(\"inview.uk.scrollspy\"),element.data(\"scrollspy-idle\",!1),element.data(\"inviewstate\",!0)},$this.options.delay*delayIdx)),delayIdx++),!inview&&inviewstate&&$this.options.repeat&&(element.data(\"scrollspy-idle\")&&(clearTimeout(element.data(\"scrollspy-idle\")),element.data(\"scrollspy-idle\",!1)),element.removeClass(\"uk-scrollspy-inview\").toggleClass(toggle),element.data(\"inviewstate\",!1),element.trigger(\"outview.uk.scrollspy\")),toggleclsIdx=togglecls[toggleclsIdx+1]?toggleclsIdx+1:0})}var initinview,$this=this,togglecls=this.options.cls.split(/,/);fn(),this.check=fn,scrollspies.push(this)}}),[]);UI.component(\"scrollspynav\",{defaults:{cls:\"uk-active\",closest:!1,topoffset:0,leftoffset:0,smoothscroll:!1},boot:function(){$doc.on(\"scrolling.uk.document\",checkScrollSpyNavs),$win.on(\"resize orientationchange\",UI.Utils.debounce(checkScrollSpyNavs,50)),UI.ready(function(context){UI.$(\"[data-uk-scrollspy-nav]\",context).each(function(){var element=UI.$(this);element.data(\"scrollspynav\")||UI.scrollspynav(element,UI.Utils.options(element.attr(\"data-uk-scrollspy-nav\")))})})},init:function(){function fn(){inviews=[];for(var navitems,scrollTop,target,i=0;i<targets.length;i++)UI.Utils.isInView(targets.eq(i),$this.options)&&inviews.push(targets.eq(i));inviews.length&&(scrollTop=$win.scrollTop(),(target=function(){for(var i=0;i<inviews.length;i++)if(inviews[i].offset().top>=scrollTop)return inviews[i]}())&&(navitems=$this.options.closest?(links.blur().closest(clsClosest).removeClass(clsActive),links.filter(\"a[href='#\"+target.attr(\"id\")+\"']\").closest(clsClosest).addClass(clsActive)):links.removeClass(clsActive).filter(\"a[href='#\"+target.attr(\"id\")+\"']\").addClass(clsActive),$this.element.trigger(\"inview.uk.scrollspynav\",[target,navitems])))}var inviews,ids=[],links=this.find(\"a[href^='#']\").each(function(){\"#\"!==this.getAttribute(\"href\").trim()&&ids.push(this.getAttribute(\"href\"))}),targets=UI.$(ids.join(\",\")),clsActive=this.options.cls,clsClosest=this.options.closest||this.options.closest,$this=this;this.options.smoothscroll&&UI.smoothScroll&&links.each(function(){UI.smoothScroll(this,$this.options.smoothscroll)}),fn(),this.element.data(\"scrollspynav\",this),this.check=fn,scrollspynavs.push(this)}})}(UIkit),function(UI){\"use strict\";var toggles=[];UI.component(\"toggle\",{defaults:{target:!1,cls:\"uk-hidden\",animation:!1,duration:200},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-toggle]\",context).each(function(){var ele=UI.$(this);ele.data(\"toggle\")||UI.toggle(ele,UI.Utils.options(ele.attr(\"data-uk-toggle\")))}),setTimeout(function(){toggles.forEach(function(toggle){toggle.getToggles()})},0)})},init:function(){var $this=this;this.aria=-1!==this.options.cls.indexOf(\"uk-hidden\"),this.getToggles(),this.on(\"click\",function(e){$this.element.is('a[href=\"#\"]')&&e.preventDefault(),$this.toggle()}),toggles.push(this)},toggle:function(){var $this,animations;this.totoggle.length&&(this.options.animation&&UI.support.animation?(1==(animations=($this=this).options.animation.split(\",\")).length&&(animations[1]=animations[0]),animations[0]=animations[0].trim(),animations[1]=animations[1].trim(),this.totoggle.css(\"animation-duration\",this.options.duration+\"ms\"),this.totoggle.each(function(){var ele=UI.$(this);ele.hasClass($this.options.cls)?(ele.toggleClass($this.options.cls),UI.Utils.animate(ele,animations[0]).then(function(){ele.css(\"animation-duration\",\"\"),UI.Utils.checkDisplay(ele)})):UI.Utils.animate(this,animations[1]+\" uk-animation-reverse\").then(function(){ele.toggleClass($this.options.cls).css(\"animation-duration\",\"\"),UI.Utils.checkDisplay(ele)})})):(this.totoggle.toggleClass(this.options.cls),UI.Utils.checkDisplay(this.totoggle)),this.updateAria())},getToggles:function(){this.totoggle=this.options.target?UI.$(this.options.target):[],this.updateAria()},updateAria:function(){this.aria&&this.totoggle.length&&this.totoggle.each(function(){UI.$(this).attr(\"aria-hidden\",UI.$(this).hasClass(\"uk-hidden\"))})}})}(UIkit),function(UI){\"use strict\";UI.component(\"alert\",{defaults:{fade:!0,duration:200,trigger:\".uk-alert-close\"},boot:function(){UI.$html.on(\"click.alert.uikit\",\"[data-uk-alert]\",function(e){var ele=UI.$(this);ele.data(\"alert\")||(ele=UI.alert(ele,UI.Utils.options(ele.attr(\"data-uk-alert\"))),UI.$(e.target).is(ele.options.trigger)&&(e.preventDefault(),ele.close()))})},init:function(){var $this=this;this.on(\"click\",this.options.trigger,function(e){e.preventDefault(),$this.close()})},close:function(){var element=this.trigger(\"close.uk.alert\"),removeElement=function(){this.trigger(\"closed.uk.alert\").remove()}.bind(this);this.options.fade?element.css(\"overflow\",\"hidden\").css(\"max-height\",element.height()).animate({height:0,opacity:0,\"padding-top\":0,\"padding-bottom\":0,\"margin-top\":0,\"margin-bottom\":0},this.options.duration,removeElement):removeElement()}})}(UIkit),function(UI){\"use strict\";UI.component(\"buttonRadio\",{defaults:{activeClass:\"uk-active\",target:\".uk-button\"},boot:function(){UI.$html.on(\"click.buttonradio.uikit\",\"[data-uk-button-radio]\",function(e){var ele=UI.$(this);ele.data(\"buttonRadio\")||(ele=UI.buttonRadio(ele,UI.Utils.options(ele.attr(\"data-uk-button-radio\"))),(e=UI.$(e.target)).is(ele.options.target)&&e.trigger(\"click\"))})},init:function(){var $this=this;this.find($this.options.target).attr(\"aria-checked\",\"false\").filter(\".\"+$this.options.activeClass).attr(\"aria-checked\",\"true\"),this.on(\"click\",this.options.target,function(e){var ele=UI.$(this);ele.is('a[href=\"#\"]')&&e.preventDefault(),$this.find($this.options.target).not(ele).removeClass($this.options.activeClass).blur(),ele.addClass($this.options.activeClass),$this.find($this.options.target).not(ele).attr(\"aria-checked\",\"false\"),ele.attr(\"aria-checked\",\"true\"),$this.trigger(\"change.uk.button\",[ele])})},getSelected:function(){return this.find(\".\"+this.options.activeClass)}}),UI.component(\"buttonCheckbox\",{defaults:{activeClass:\"uk-active\",target:\".uk-button\"},boot:function(){UI.$html.on(\"click.buttoncheckbox.uikit\",\"[data-uk-button-checkbox]\",function(e){var ele=UI.$(this);ele.data(\"buttonCheckbox\")||(ele=UI.buttonCheckbox(ele,UI.Utils.options(ele.attr(\"data-uk-button-checkbox\"))),(e=UI.$(e.target)).is(ele.options.target)&&e.trigger(\"click\"))})},init:function(){var $this=this;this.find($this.options.target).attr(\"aria-checked\",\"false\").filter(\".\"+$this.options.activeClass).attr(\"aria-checked\",\"true\"),this.on(\"click\",this.options.target,function(e){var ele=UI.$(this);ele.is('a[href=\"#\"]')&&e.preventDefault(),ele.toggleClass($this.options.activeClass).blur(),ele.attr(\"aria-checked\",ele.hasClass($this.options.activeClass)),$this.trigger(\"change.uk.button\",[ele])})},getSelected:function(){return this.find(\".\"+this.options.activeClass)}}),UI.component(\"button\",{defaults:{},boot:function(){UI.$html.on(\"click.button.uikit\",\"[data-uk-button]\",function(e){var ele=UI.$(this);ele.data(\"button\")||(UI.button(ele,UI.Utils.options(ele.attr(\"data-uk-button\"))),ele.trigger(\"click\"))})},init:function(){var $this=this;this.element.attr(\"aria-pressed\",this.element.hasClass(\"uk-active\")),this.on(\"click\",function(e){$this.element.is('a[href=\"#\"]')&&e.preventDefault(),$this.toggle(),$this.trigger(\"change.uk.button\",[$this.element.blur().hasClass(\"uk-active\")])})},toggle:function(){this.element.toggleClass(\"uk-active\"),this.element.attr(\"aria-pressed\",this.element.hasClass(\"uk-active\"))}})}(UIkit),function(UI){\"use strict\";var hoverIdle,active=!1,flips={x:{\"bottom-left\":\"bottom-right\",\"bottom-right\":\"bottom-left\",\"bottom-center\":\"bottom-center\",\"top-left\":\"top-right\",\"top-right\":\"top-left\",\"top-center\":\"top-center\",\"left-top\":\"right-top\",\"left-bottom\":\"right-bottom\",\"left-center\":\"right-center\",\"right-top\":\"left-top\",\"right-bottom\":\"left-bottom\",\"right-center\":\"left-center\"},y:{\"bottom-left\":\"top-left\",\"bottom-right\":\"top-right\",\"bottom-center\":\"top-center\",\"top-left\":\"bottom-left\",\"top-right\":\"bottom-right\",\"top-center\":\"bottom-center\",\"left-top\":\"left-bottom\",\"left-bottom\":\"left-top\",\"left-center\":\"left-center\",\"right-top\":\"right-bottom\",\"right-bottom\":\"right-top\",\"right-center\":\"right-center\"},xy:{\"bottom-left\":\"top-right\",\"bottom-right\":\"top-left\",\"bottom-center\":\"top-center\",\"top-left\":\"bottom-right\",\"top-right\":\"bottom-left\",\"top-center\":\"bottom-center\",\"left-top\":\"right-bottom\",\"left-bottom\":\"right-top\",\"left-center\":\"right-center\",\"right-top\":\"left-bottom\",\"right-bottom\":\"left-top\",\"right-center\":\"left-center\"}};function justify(ele,justifyTo,boundarywidth,offset){var jwidth;ele=UI.$(ele),justifyTo=UI.$(justifyTo),boundarywidth=boundarywidth||window.innerWidth,offset=offset||ele.offset(),justifyTo.length&&(jwidth=justifyTo.outerWidth(),ele.css(\"min-width\",jwidth),\"right\"==UI.langdirection?(jwidth=boundarywidth-(justifyTo.offset().left+jwidth),boundarywidth=boundarywidth-(ele.offset().left+ele.outerWidth()),ele.css(\"margin-right\",jwidth-boundarywidth)):ele.css(\"margin-left\",justifyTo.offset().left-offset.left))}UI.component(\"dropdown\",{defaults:{mode:\"hover\",pos:\"bottom-left\",offset:0,remaintime:800,justify:!1,boundary:UI.$win,delay:0,dropdownSelector:\".uk-dropdown,.uk-dropdown-blank\",hoverDelayIdle:250,preventflip:!1},remainIdle:!1,boot:function(){var triggerevent=UI.support.touch?\"click\":\"mouseenter\";UI.$html.on(triggerevent+\".dropdown.uikit\",\"[data-uk-dropdown]\",function(e){var ele=UI.$(this);ele.data(\"dropdown\")||(ele=UI.dropdown(ele,UI.Utils.options(ele.attr(\"data-uk-dropdown\"))),(\"click\"==triggerevent||\"mouseenter\"==triggerevent&&\"hover\"==ele.options.mode)&&ele.element.trigger(triggerevent),ele.element.find(ele.options.dropdownSelector).length&&e.preventDefault())})},init:function(){var $this=this;this.dropdown=this.find(this.options.dropdownSelector),this.offsetParent=this.dropdown.parents().filter(function(){return-1!==UI.$.inArray(UI.$(this).css(\"position\"),[\"relative\",\"fixed\",\"absolute\"])}).slice(0,1),this.centered=this.dropdown.hasClass(\"uk-dropdown-center\"),this.justified=!!this.options.justify&&UI.$(this.options.justify),this.boundary=UI.$(this.options.boundary),this.boundary.length||(this.boundary=UI.$win),this.dropdown.hasClass(\"uk-dropdown-up\")&&(this.options.pos=\"top-left\"),this.dropdown.hasClass(\"uk-dropdown-flip\")&&(this.options.pos=this.options.pos.replace(\"left\",\"right\")),this.dropdown.hasClass(\"uk-dropdown-center\")&&(this.options.pos=this.options.pos.replace(/(left|right)/,\"center\")),this.element.attr(\"aria-haspopup\",\"true\"),this.element.attr(\"aria-expanded\",this.element.hasClass(\"uk-open\")),\"click\"==this.options.mode||UI.support.touch?this.on(\"click.uk.dropdown\",function(e){var $target=UI.$(e.target);$target.parents($this.options.dropdownSelector).length||(($target.is(\"a[href='#']\")||$target.parent().is(\"a[href='#']\")||$this.dropdown.length&&!$this.dropdown.is(\":visible\"))&&e.preventDefault(),$target.blur()),$this.element.hasClass(\"uk-open\")?$this.dropdown.find(e.target).length&&!$target.is(\".uk-dropdown-close\")&&!$target.parents(\".uk-dropdown-close\").length||$this.hide():$this.show()}):this.on(\"mouseenter\",function(e){$this.trigger(\"pointerenter.uk.dropdown\",[$this]),$this.remainIdle&&clearTimeout($this.remainIdle),hoverIdle&&clearTimeout(hoverIdle),active&&active==$this||(hoverIdle=active&&active!=$this?setTimeout(function(){hoverIdle=setTimeout($this.show.bind($this),$this.options.delay)},$this.options.hoverDelayIdle):setTimeout($this.show.bind($this),$this.options.delay))}).on(\"mouseleave\",function(){hoverIdle&&clearTimeout(hoverIdle),$this.remainIdle=setTimeout(function(){active&&active==$this&&$this.hide()},$this.options.remaintime),$this.trigger(\"pointerleave.uk.dropdown\",[$this])}).on(\"click\",function(e){var $target=UI.$(e.target);$this.remainIdle&&clearTimeout($this.remainIdle),active&&active==$this?$this.dropdown.find(e.target).length&&!$target.is(\".uk-dropdown-close\")&&!$target.parents(\".uk-dropdown-close\").length||$this.hide():(($target.is(\"a[href='#']\")||$target.parent().is(\"a[href='#']\"))&&e.preventDefault(),$this.show())})},show:function(){UI.$html.off(\"click.outer.dropdown\"),active&&active!=this&&active.hide(!0),hoverIdle&&clearTimeout(hoverIdle),this.trigger(\"beforeshow.uk.dropdown\",[this]),this.checkDimensions(),this.element.addClass(\"uk-open\"),this.element.attr(\"aria-expanded\",\"true\"),this.trigger(\"show.uk.dropdown\",[this]),UI.Utils.checkDisplay(this.dropdown,!0),(active=this).registerOuterClick()},hide:function(force){this.trigger(\"beforehide.uk.dropdown\",[this,force]),this.element.removeClass(\"uk-open\"),this.remainIdle&&clearTimeout(this.remainIdle),this.remainIdle=!1,this.element.attr(\"aria-expanded\",\"false\"),this.trigger(\"hide.uk.dropdown\",[this,force]),active==this&&(active=!1)},registerOuterClick:function(){var $this=this;UI.$html.off(\"click.outer.dropdown\"),setTimeout(function(){UI.$html.on(\"click.outer.dropdown\",function(e){hoverIdle&&clearTimeout(hoverIdle);UI.$(e.target);active!=$this||$this.element.find(e.target).length||($this.hide(!0),UI.$html.off(\"click.outer.dropdown\"))})},10)},checkDimensions:function(){if(this.dropdown.length){this.dropdown.removeClass(\"uk-dropdown-top uk-dropdown-bottom uk-dropdown-left uk-dropdown-right uk-dropdown-stack\").css({\"top-left\":\"\",left:\"\",\"margin-left\":\"\",\"margin-right\":\"\"}),this.justified&&this.justified.length&&this.dropdown.css(\"min-width\",\"\");var fdpos,pos=UI.$.extend({},this.offsetParent.offset(),{width:this.offsetParent[0].offsetWidth,height:this.offsetParent[0].offsetHeight}),posoffset=this.options.offset,dropdown=this.dropdown,width=(dropdown.show().offset(),dropdown.outerWidth()),height=dropdown.outerHeight(),boundarywidth=this.boundary.width(),dpos=(this.boundary[0]!==window&&this.boundary.offset()&&this.boundary.offset(),this.options.pos),posoffset={\"bottom-left\":{top:0+pos.height+posoffset,left:0},\"bottom-right\":{top:0+pos.height+posoffset,left:0+pos.width-width},\"bottom-center\":{top:0+pos.height+posoffset,left:0+pos.width/2-width/2},\"top-left\":{top:0-height-posoffset,left:0},\"top-right\":{top:0-height-posoffset,left:0+pos.width-width},\"top-center\":{top:0-height-posoffset,left:0+pos.width/2-width/2},\"left-top\":{top:0,left:0-width-posoffset},\"left-bottom\":{top:0+pos.height-height,left:0-width-posoffset},\"left-center\":{top:0+pos.height/2-height/2,left:0-width-posoffset},\"right-top\":{top:0,left:0+pos.width+posoffset},\"right-bottom\":{top:0+pos.height-height,left:0+pos.width+posoffset},\"right-center\":{top:0+pos.height/2-height/2,left:0+pos.width+posoffset}},css={},pp=dpos.split(\"-\"),css=posoffset[dpos]||posoffset[\"bottom-left\"];if(this.justified&&this.justified.length)justify(dropdown.css({left:0}),this.justified,boundarywidth);else if(!0!==this.options.preventflip){switch(this.checkBoundary(pos.left+css.left,pos.top+css.top,width,height,boundarywidth)){case\"x\":\"x\"!==this.options.preventflip&&(fdpos=flips.x[dpos]||\"right-top\");break;case\"y\":\"y\"!==this.options.preventflip&&(fdpos=flips.y[dpos]||\"top-left\");break;case\"xy\":this.options.preventflip||(fdpos=flips.xy[dpos]||\"right-bottom\")}fdpos&&(pp=fdpos.split(\"-\"),this.checkBoundary(pos.left+(css=posoffset[fdpos]||posoffset[\"bottom-left\"]).left,pos.top+css.top,width,height,boundarywidth)&&(pp=dpos.split(\"-\"),css=posoffset[dpos]||posoffset[\"bottom-left\"]))}boundarywidth<width&&(dropdown.addClass(\"uk-dropdown-stack\"),this.trigger(\"stack.uk.dropdown\",[this])),dropdown.css(css).css(\"display\",\"\").addClass(\"uk-dropdown-\"+pp[0])}},checkBoundary:function(left,top,width,height,boundarywidth){var axis=\"\";return(left<0||left-UI.$win.scrollLeft()+width>boundarywidth)&&(axis+=\"x\"),(top-UI.$win.scrollTop()<0||top-UI.$win.scrollTop()+height>window.innerHeight)&&(axis+=\"y\"),axis}}),UI.component(\"dropdownOverlay\",{defaults:{justify:!1,cls:\"\",duration:200},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-dropdown-overlay]\",context).each(function(){var ele=UI.$(this);ele.data(\"dropdownOverlay\")||UI.dropdownOverlay(ele,UI.Utils.options(ele.attr(\"data-uk-dropdown-overlay\")))})})},init:function(){var $this=this;this.justified=!!this.options.justify&&UI.$(this.options.justify),this.overlay=this.element.find(\"uk-dropdown-overlay\"),this.overlay.length||(this.overlay=UI.$('<div class=\"uk-dropdown-overlay\"></div>').appendTo(this.element)),this.overlay.addClass(this.options.cls),this.on({\"beforeshow.uk.dropdown\":function(e,dropdown){$this.dropdown=dropdown,$this.justified&&$this.justified.length&&justify($this.overlay.css({display:\"block\",\"margin-left\":\"\",\"margin-right\":\"\"}),$this.justified,$this.justified.outerWidth())},\"show.uk.dropdown\":function(e,dropdown){var h=$this.dropdown.dropdown.outerHeight(!0);$this.dropdown.element.removeClass(\"uk-open\"),$this.overlay.stop().css(\"display\",\"block\").animate({height:h},$this.options.duration,function(){$this.dropdown.dropdown.css(\"visibility\",\"\"),$this.dropdown.element.addClass(\"uk-open\"),UI.Utils.checkDisplay($this.dropdown.dropdown,!0)}),$this.pointerleave=!1},\"hide.uk.dropdown\":function(){$this.overlay.stop().animate({height:0},$this.options.duration)},\"pointerenter.uk.dropdown\":function(e,dropdown){clearTimeout($this.remainIdle)},\"pointerleave.uk.dropdown\":function(e,dropdown){$this.pointerleave=!0}}),this.overlay.on({mouseenter:function(){$this.remainIdle&&(clearTimeout($this.dropdown.remainIdle),clearTimeout($this.remainIdle))},mouseleave:function(){$this.pointerleave&&active&&($this.remainIdle=setTimeout(function(){active&&active.hide()},active.options.remaintime))}})}})}(UIkit),function(UI){\"use strict\";var grids=[];UI.component(\"gridMatchHeight\",{defaults:{target:!1,row:!0,ignorestacked:!1},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-grid-match]\",context).each(function(){var grid=UI.$(this);grid.data(\"gridMatchHeight\")||UI.gridMatchHeight(grid,UI.Utils.options(grid.attr(\"data-uk-grid-match\")))})})},init:function(){var $this=this;function fn(){$this.match()}this.columns=this.element.children(),this.elements=this.options.target?this.find(this.options.target):this.columns,this.columns.length&&(UI.$win.on(\"load resize orientationchange\",(UI.$(function(){fn()}),UI.Utils.debounce(fn,50))),UI.$html.on(\"changed.uk.dom\",function(e){$this.columns=$this.element.children(),$this.elements=$this.options.target?$this.find($this.options.target):$this.columns,$this.match()}),this.on(\"display.uk.check\",function(e){this.element.is(\":visible\")&&this.match()}.bind(this)),grids.push(this))},match:function(){var firstvisible=this.columns.filter(\":visible:first\");if(firstvisible.length)return 100<=Math.ceil(100*parseFloat(firstvisible.css(\"width\"))/parseFloat(firstvisible.parent().css(\"width\")))&&!this.options.ignorestacked?this.revert():UI.Utils.matchHeights(this.elements,this.options),this},revert:function(){return this.elements.css(\"min-height\",\"\"),this}}),UI.component(\"gridMargin\",{defaults:{cls:\"uk-grid-margin\",rowfirst:\"uk-row-first\"},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-grid-margin]\",context).each(function(){var grid=UI.$(this);grid.data(\"gridMargin\")||UI.gridMargin(grid,UI.Utils.options(grid.attr(\"data-uk-grid-margin\")))})})},init:function(){UI.stackMargin(this.element,this.options)}})}(UIkit),function(UI){\"use strict\";var body,active=!1,activeCount=0,$html=UI.$html;UI.component(\"modal\",{defaults:{keyboard:!0,bgclose:!0,minScrollHeight:150,center:!1,modal:!0},scrollable:!1,transition:!1,hasTransitioned:!0,init:function(){var $this;body=body||UI.$(\"body\"),this.element.length&&(($this=this).paddingdir=\"padding-\"+(\"left\"==UI.langdirection?\"right\":\"left\"),this.dialog=this.find(\".uk-modal-dialog\"),this.active=!1,this.element.attr(\"aria-hidden\",this.element.hasClass(\"uk-open\")),this.on(\"click\",\".uk-modal-close\",function(e){e.preventDefault(),$this.hide()}).on(\"click\",function(e){UI.$(e.target)[0]==$this.element[0]&&$this.options.bgclose&&$this.hide()}))},toggle:function(){return this[this.isActive()?\"hide\":\"show\"]()},show:function(){if(this.element.length){var $this=this;if(!this.isActive())return this.options.modal&&active&&active.hide(!0),this.element.removeClass(\"uk-open\").show(),this.resize(),this.options.modal&&(active=this),this.active=!0,activeCount++,UI.support.transition?(this.hasTransitioned=!1,this.element.one(UI.support.transition.end,function(){$this.hasTransitioned=!0}).addClass(\"uk-open\")):this.element.addClass(\"uk-open\"),$html.addClass(\"uk-modal-page\").height(),this.element.attr(\"aria-hidden\",\"false\"),this.element.trigger(\"show.uk.modal\"),UI.Utils.checkDisplay(this.dialog,!0),this}},hide:function(force){var $this;return!force&&UI.support.transition&&this.hasTransitioned?($this=this).one(UI.support.transition.end,function(){$this._hide()}).removeClass(\"uk-open\"):this._hide(),this},resize:function(){var pad,bodywidth=body.width();this.scrollbarwidth=window.innerWidth-bodywidth,body.css(this.paddingdir,this.scrollbarwidth),this.element.css(\"overflow-y\",this.scrollbarwidth?\"scroll\":\"auto\"),!this.updateScrollable()&&this.options.center&&((bodywidth=this.dialog.outerHeight())+(pad=parseInt(this.dialog.css(\"margin-top\"),10)+parseInt(this.dialog.css(\"margin-bottom\"),10))<window.innerHeight?this.dialog.css({top:window.innerHeight/2-bodywidth/2-pad}):this.dialog.css({top:\"\"}))},updateScrollable:function(){var dh,offset,scrollable=this.dialog.find(\".uk-overflow-container:visible:first\");return!!scrollable.length&&(scrollable.css(\"height\",0),offset=Math.abs(parseInt(this.dialog.css(\"margin-top\"),10)),dh=this.dialog.outerHeight(),offset=window.innerHeight-2*(offset<20?20:offset)-dh,scrollable.css({\"max-height\":offset<this.options.minScrollHeight?\"\":offset,height:\"\"}),!0)},_hide:function(){this.active=!1,0<activeCount?activeCount--:activeCount=0,this.element.hide().removeClass(\"uk-open\"),this.element.attr(\"aria-hidden\",\"true\"),activeCount||($html.removeClass(\"uk-modal-page\"),body.css(this.paddingdir,\"\")),active===this&&(active=!1),this.trigger(\"hide.uk.modal\")},isActive:function(){return this.active}}),UI.component(\"modalTrigger\",{boot:function(){UI.$html.on(\"click.modal.uikit\",\"[data-uk-modal]\",function(e){var ele=UI.$(this);ele.is(\"a\")&&e.preventDefault(),ele.data(\"modalTrigger\")||UI.modalTrigger(ele,UI.Utils.options(ele.attr(\"data-uk-modal\"))).show()}),UI.$html.on(\"keydown.modal.uikit\",function(e){active&&27===e.keyCode&&active.options.keyboard&&(e.preventDefault(),active.hide())}),UI.$win.on(\"resize orientationchange\",UI.Utils.debounce(function(){active&&active.resize()},150))},init:function(){var $this=this;this.options=UI.$.extend({target:!!$this.element.is(\"a\")&&$this.element.attr(\"href\")},this.options),this.modal=UI.modal(this.options.target,this.options),this.on(\"click\",function(e){e.preventDefault(),$this.show()}),this.proxy(this.modal,\"show hide isActive\")}}),UI.modal.dialog=function(content,options){var modal=UI.modal(UI.$(UI.modal.dialog.template).appendTo(\"body\"),options);return modal.on(\"hide.uk.modal\",function(){modal.persist&&(modal.persist.appendTo(modal.persist.data(\"modalPersistParent\")),modal.persist=!1),modal.element.remove()}),function(content,modal){if(modal)\"object\"==typeof content?(content=content instanceof jQuery?content:UI.$(content)).parent().length&&(modal.persist=content,modal.persist.data(\"modalPersistParent\",content.parent())):content=\"string\"==typeof content||\"number\"==typeof content?UI.$(\"<div></div>\").html(content):UI.$(\"<div></div>\").html(\"UIkit.modal Error: Unsupported data type: \"+typeof content),content.appendTo(modal.element.find(\".uk-modal-dialog\"))}(content,modal),modal},UI.modal.dialog.template='<div class=\"uk-modal\"><div class=\"uk-modal-dialog\" style=\"min-height:0;\"></div></div>',UI.modal.alert=function(content,options){options=UI.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:UI.modal.labels},options);var modal=UI.modal.dialog(['<div class=\"uk-margin uk-modal-content\">'+String(content)+\"</div>\",'<div class=\"uk-modal-footer uk-text-right\"><button class=\"uk-button uk-button-primary uk-modal-close\">'+options.labels.Ok+\"</button></div>\"].join(\"\"),options);return modal.on(\"show.uk.modal\",function(){setTimeout(function(){modal.element.find(\"button:first\").focus()},50)}),modal.show()},UI.modal.confirm=function(content,onconfirm,oncancel){var options=1<arguments.length&&arguments[arguments.length-1]?arguments[arguments.length-1]:{},modal=(onconfirm=UI.$.isFunction(onconfirm)?onconfirm:function(){},oncancel=UI.$.isFunction(oncancel)?oncancel:function(){},options=UI.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:UI.modal.labels,confirmButtonClass:\"\",cancelButtonClass:\"\"},UI.$.isFunction(options)?{}:options),UI.modal.dialog(['<div class=\"uk-margin uk-modal-content\">'+String(content)+\"</div>\",'<div class=\"uk-modal-footer uk-text-right\"><button class=\"uk-button js-modal-confirm-cancel '+options.cancelButtonClass+'\">'+options.labels.Cancel+'</button> <button class=\"uk-button uk-button-primary js-modal-confirm '+options.confirmButtonClass+'\">'+options.labels.Ok+\"</button></div>\"].join(\"\"),options));return modal.element.find(\".js-modal-confirm, .js-modal-confirm-cancel\").on(\"click\",function(){(UI.$(this).is(\".js-modal-confirm\")?onconfirm:oncancel)(),modal.hide()}),modal.on(\"show.uk.modal\",function(){setTimeout(function(){modal.element.find(\".js-modal-confirm\").focus()},50)}),modal.show()},UI.modal.prompt=function(text,value,onsubmit,options){onsubmit=UI.$.isFunction(onsubmit)?onsubmit:function(value){},options=UI.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:UI.modal.labels},options);var modal=UI.modal.dialog([text?'<div class=\"uk-modal-content uk-form\">'+String(text)+\"</div>\":\"\",'<div class=\"uk-margin-small-top uk-modal-content uk-form\"><p><input type=\"text\" class=\"uk-width-1-1\"></p></div>','<div class=\"uk-modal-footer uk-text-right\"><button class=\"uk-button uk-modal-close\">'+options.labels.Cancel+'</button> <button class=\"uk-button uk-button-primary js-modal-ok\">'+options.labels.Ok+\"</button></div>\"].join(\"\"),options),input=modal.element.find(\"input[type='text']\").val(value||\"\").on(\"keyup\",function(e){13==e.keyCode&&modal.element.find(\".js-modal-ok\").trigger(\"click\")});return modal.element.find(\".js-modal-ok\").on(\"click\",function(){!1!==onsubmit(input.val())&&modal.hide()}),modal.on(\"show.uk.modal\",function(){setTimeout(function(){input.focus()},50)}),modal.show()},UI.modal.blockUI=function(content,options){content=UI.modal.dialog(['<div class=\"uk-margin uk-modal-content\">'+String(content||'<div class=\"uk-text-center\">...</div>')+\"</div>\"].join(\"\"),UI.$.extend({bgclose:!1,keyboard:!1,modal:!1},options));return content.content=content.element.find(\".uk-modal-content:first\"),content.show()},UI.modal.labels={Ok:\"Ok\",Cancel:\"Cancel\"}}(UIkit),function(UI){\"use strict\";UI.component(\"nav\",{defaults:{toggle:\">li.uk-parent > a[href='#']\",lists:\">li.uk-parent > ul\",multiple:!1},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-nav]\",context).each(function(){var nav=UI.$(this);nav.data(\"nav\")||UI.nav(nav,UI.Utils.options(nav.attr(\"data-uk-nav\")))})})},init:function(){var $this=this;this.on(\"click.uk.nav\",this.options.toggle,function(e){e.preventDefault();e=UI.$(this);$this.open(e.parent()[0]==$this.element[0]?e:e.parent(\"li\"))}),this.find(this.options.lists).each(function(){var $ele=UI.$(this),parent=$ele.parent(),active=parent.hasClass(\"uk-active\");$ele.wrap('<div style=\"overflow:hidden;height:0;position:relative;\"></div>'),parent.data(\"list-container\",$ele.parent()[active?\"removeClass\":\"addClass\"](\"uk-hidden\")),parent.attr(\"aria-expanded\",parent.hasClass(\"uk-open\")),active&&$this.open(parent,!0)})},open:function(li,noanimation){var $this=this,element=this.element,$li=UI.$(li),$container=$li.data(\"list-container\");this.options.multiple||element.children(\".uk-open\").not(li).each(function(){var ele=UI.$(this);ele.data(\"list-container\")&&ele.data(\"list-container\").stop().animate({height:0},function(){UI.$(this).parent().removeClass(\"uk-open\").end().addClass(\"uk-hidden\")})}),$li.toggleClass(\"uk-open\"),$li.attr(\"aria-expanded\",$li.hasClass(\"uk-open\")),$container&&($li.hasClass(\"uk-open\")&&$container.removeClass(\"uk-hidden\"),noanimation?($container.stop().height($li.hasClass(\"uk-open\")?\"auto\":0),$li.hasClass(\"uk-open\")||$container.addClass(\"uk-hidden\"),this.trigger(\"display.uk.check\")):$container.stop().animate({height:$li.hasClass(\"uk-open\")?function(ele){var ele=UI.$(ele),height=\"auto\";{var tmp;ele.is(\":visible\")?height=ele.outerHeight():(tmp={position:ele.css(\"position\"),visibility:ele.css(\"visibility\"),display:ele.css(\"display\")},height=ele.css({position:\"absolute\",visibility:\"hidden\",display:\"block\"}).outerHeight(),ele.css(tmp))}return height}($container.find(\"ul:first\")):0},function(){$li.hasClass(\"uk-open\")?$container.css(\"height\",\"\"):$container.addClass(\"uk-hidden\"),$this.trigger(\"display.uk.check\")}))}})}(UIkit),function(UI){\"use strict\";var scrollpos={x:window.scrollX,y:window.scrollY},$html=(UI.$win,UI.$doc,UI.$html),Offcanvas={show:function(element,options){var $body,bar,rtl,dir,scrollbarwidth;(element=UI.$(element)).length&&(options=UI.$.extend({mode:\"push\"},options),$body=UI.$(\"body\"),bar=element.find(\".uk-offcanvas-bar:first\"),rtl=\"right\"==UI.langdirection,dir=(bar.hasClass(\"uk-offcanvas-bar-flip\")?-1:1)*(rtl?-1:1),scrollbarwidth=window.innerWidth-$body.width(),scrollpos={x:window.pageXOffset,y:window.pageYOffset},bar.attr(\"mode\",options.mode),element.addClass(\"uk-active\"),$body.css({width:window.innerWidth-scrollbarwidth,height:window.innerHeight}).addClass(\"uk-offcanvas-page\"),\"push\"!=options.mode&&\"reveal\"!=options.mode||$body.css(rtl?\"margin-right\":\"margin-left\",(rtl?-1:1)*(bar.outerWidth()*dir)),\"reveal\"==options.mode&&bar.css(\"clip\",\"rect(0, \"+bar.outerWidth()+\"px, 100vh, 0)\"),$html.css(\"margin-top\",-1*scrollpos.y).width(),bar.addClass(\"uk-offcanvas-bar-show\"),this._initElement(element),bar.trigger(\"show.uk.offcanvas\",[element,bar]),element.attr(\"aria-hidden\",\"false\"))},hide:function(force){function finalize(){$body.removeClass(\"uk-offcanvas-page\").css({width:\"\",height:\"\",marginLeft:\"\",marginRight:\"\"}),panel.removeClass(\"uk-active\"),bar.removeClass(\"uk-offcanvas-bar-show\"),$html.css(\"margin-top\",\"\"),window.scrollTo(scrollpos.x,scrollpos.y),bar.trigger(\"hide.uk.offcanvas\",[panel,bar]),panel.attr(\"aria-hidden\",\"true\")}var $body=UI.$(\"body\"),panel=UI.$(\".uk-offcanvas.uk-active\"),rtl=\"right\"==UI.langdirection,bar=panel.find(\".uk-offcanvas-bar:first\");panel.length&&(\"none\"==bar.attr(\"mode\")&&(force=!0),UI.support.transition&&!force?($body.one(UI.support.transition.end,function(){finalize()}).css(rtl?\"margin-right\":\"margin-left\",\"\"),\"reveal\"==bar.attr(\"mode\")&&bar.css(\"clip\",\"\"),setTimeout(function(){bar.removeClass(\"uk-offcanvas-bar-show\")},0)):finalize())},_initElement:function(element){element.data(\"OffcanvasInit\")||(element.on(\"click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas\",function(e){var target=UI.$(e.target);if(!e.type.match(/swipe/)&&!target.hasClass(\"uk-offcanvas-close\")){if(target.hasClass(\"uk-offcanvas-bar\"))return;if(target.parents(\".uk-offcanvas-bar:first\").length)return}e.stopImmediatePropagation(),Offcanvas.hide()}),element.on(\"click\",'a[href*=\"#\"]',function(e){var link=UI.$(this),href=link.attr(\"href\");\"#\"!=href&&(UI.$doc.one(\"hide.uk.offcanvas\",function(){var target;try{target=UI.$(link[0].hash)}catch(e){target=\"\"}(target=target.length?target:UI.$('[name=\"'+link[0].hash.replace(\"#\",\"\")+'\"]')).length&&UI.Utils.scrollToElement?UI.Utils.scrollToElement(target,UI.Utils.options(link.attr(\"data-uk-smooth-scroll\")||\"{}\")):window.location.href=href}),Offcanvas.hide())}),element.data(\"OffcanvasInit\",!0))}};UI.component(\"offcanvasTrigger\",{boot:function(){$html.on(\"click.offcanvas.uikit\",\"[data-uk-offcanvas]\",function(e){e.preventDefault();e=UI.$(this);e.data(\"offcanvasTrigger\")||(UI.offcanvasTrigger(e,UI.Utils.options(e.attr(\"data-uk-offcanvas\"))),e.trigger(\"click\"))}),$html.on(\"keydown.uk.offcanvas\",function(e){27===e.keyCode&&Offcanvas.hide()})},init:function(){var $this=this;this.options=UI.$.extend({target:!!$this.element.is(\"a\")&&$this.element.attr(\"href\"),mode:\"push\"},this.options),this.on(\"click\",function(e){e.preventDefault(),Offcanvas.show($this.options.target,$this.options)})}}),UI.offcanvas=Offcanvas}(UIkit),function(UI){\"use strict\";var Animations;function coreAnimation(cls,current,next){var release,d=UI.$.Deferred(),clsIn=cls,clsOut=cls;return next[0]===current[0]?d.resolve():(\"object\"==typeof cls&&(clsIn=cls[0],clsOut=cls[1]||cls[0]),UI.$body.css(\"overflow-x\",\"hidden\"),release=function(){current&&current.hide().removeClass(\"uk-active \"+clsOut+\" uk-animation-reverse\"),next.addClass(clsIn).one(UI.support.animation.end,function(){next.removeClass(\"\"+clsIn).css({opacity:\"\",display:\"\"}),d.resolve(),UI.$body.css(\"overflow-x\",\"\"),current&&current.css({opacity:\"\",display:\"\"})}.bind(this)).show()},next.css(\"animation-duration\",this.options.duration+\"ms\"),current&&current.length?(current.css(\"animation-duration\",this.options.duration+\"ms\"),current.css(\"display\",\"none\").addClass(clsOut+\" uk-animation-reverse\").one(UI.support.animation.end,function(){release()}.bind(this)).css(\"display\",\"\")):(next.addClass(\"uk-active\"),release())),d.promise()}UI.component(\"switcher\",{defaults:{connect:!1,toggle:\">*\",active:0,animation:!1,duration:200,swiping:!0},animating:!1,boot:function(){UI.ready(function(context){UI.$(\"[data-uk-switcher]\",context).each(function(){var switcher=UI.$(this);switcher.data(\"switcher\")||UI.switcher(switcher,UI.Utils.options(switcher.attr(\"data-uk-switcher\")))})})},init:function(){var $this=this;if(this.on(\"click.uk.switcher\",this.options.toggle,function(e){e.preventDefault(),$this.show(this)}),this.options.connect){this.connect=UI.$(this.options.connect),this.connect.find(\".uk-active\").removeClass(\".uk-active\"),this.connect.length&&(this.connect.children().attr(\"aria-hidden\",\"true\"),this.connect.on(\"click\",\"[data-uk-switcher-item]\",function(e){e.preventDefault();var item=UI.$(this).attr(\"data-uk-switcher-item\");if($this.index!=item)switch(item){case\"next\":case\"previous\":$this.show($this.index+(\"next\"==item?1:-1));break;default:$this.show(parseInt(item,10))}}),this.options.swiping&&this.connect.on(\"swipeRight swipeLeft\",function(e){e.preventDefault(),window.getSelection().toString()||$this.show($this.index+(\"swipeLeft\"==e.type?1:-1))}));var toggles=this.find(this.options.toggle),active=toggles.filter(\".uk-active\");if(active.length)this.show(active,!1);else{if(!1===this.options.active)return;active=toggles.eq(this.options.active),this.show(active.length?active:toggles.eq(0),!1)}toggles.not(active).attr(\"aria-expanded\",\"false\"),active.attr(\"aria-expanded\",\"true\"),this.on(\"changed.uk.dom\",function(){$this.connect=UI.$($this.options.connect)})}},show:function(tab,animate){var $this,toggles,animation;this.animating||(tab=isNaN(tab)?UI.$(tab):(toggles=this.find(this.options.toggle),tab=tab<0?toggles.length-1:tab,toggles.eq(toggles[tab]?tab:0)),toggles=($this=this).find(this.options.toggle),tab=UI.$(tab),animation=Animations[this.options.animation]||function(current,next){if(!$this.options.animation)return Animations.none.apply($this);var anim=$this.options.animation.split(\",\");return 1==anim.length&&(anim[1]=anim[0]),anim[0]=anim[0].trim(),anim[1]=anim[1].trim(),coreAnimation.apply($this,[anim,current,next])},!1!==animate&&UI.support.animation||(animation=Animations.none),tab.hasClass(\"uk-disabled\")||(toggles.attr(\"aria-expanded\",\"false\"),tab.attr(\"aria-expanded\",\"true\"),toggles.filter(\".uk-active\").removeClass(\"uk-active\"),tab.addClass(\"uk-active\"),this.options.connect&&this.connect.length&&(this.index=this.find(this.options.toggle).index(tab),-1==this.index&&(this.index=0),this.connect.each(function(){var container=UI.$(this),container=UI.$(container.children()),current=UI.$(container.filter(\".uk-active\")),next=UI.$(container.eq($this.index));$this.animating=!0,animation.apply($this,[current,next]).then(function(){current.removeClass(\"uk-active\"),next.addClass(\"uk-active\"),current.attr(\"aria-hidden\",\"true\"),next.attr(\"aria-hidden\",\"false\"),UI.Utils.checkDisplay(next,!0),$this.animating=!1})})),this.trigger(\"show.uk.switcher\",[tab])))}}),Animations={none:function(){var d=UI.$.Deferred();return d.resolve(),d.promise()},fade:function(current,next){return coreAnimation.apply(this,[\"uk-animation-fade\",current,next])},\"slide-bottom\":function(current,next){return coreAnimation.apply(this,[\"uk-animation-slide-bottom\",current,next])},\"slide-top\":function(current,next){return coreAnimation.apply(this,[\"uk-animation-slide-top\",current,next])},\"slide-vertical\":function(current,next,dir){var anim=[\"uk-animation-slide-top\",\"uk-animation-slide-bottom\"];return current&&current.index()>next.index()&&anim.reverse(),coreAnimation.apply(this,[anim,current,next])},\"slide-left\":function(current,next){return coreAnimation.apply(this,[\"uk-animation-slide-left\",current,next])},\"slide-right\":function(current,next){return coreAnimation.apply(this,[\"uk-animation-slide-right\",current,next])},\"slide-horizontal\":function(current,next,dir){var anim=[\"uk-animation-slide-right\",\"uk-animation-slide-left\"];return current&&current.index()>next.index()&&anim.reverse(),coreAnimation.apply(this,[anim,current,next])},scale:function(current,next){return coreAnimation.apply(this,[\"uk-animation-scale-up\",current,next])}},UI.switcher.animations=Animations}(UIkit),function(UI){\"use strict\";UI.component(\"tab\",{defaults:{target:\">li:not(.uk-tab-responsive, .uk-disabled)\",connect:!1,active:0,animation:!1,duration:200,swiping:!0},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-tab]\",context).each(function(){var tab=UI.$(this);tab.data(\"tab\")||UI.tab(tab,UI.Utils.options(tab.attr(\"data-uk-tab\")))})})},init:function(){var $this=this;this.current=!1,this.on(\"click.uk.tab\",this.options.target,function(e){e.preventDefault(),$this.switcher&&$this.switcher.animating||((e=$this.find($this.options.target).not(this)).removeClass(\"uk-active\").blur(),$this.trigger(\"change.uk.tab\",[UI.$(this).addClass(\"uk-active\"),$this.current]),$this.current=UI.$(this),$this.options.connect||(e.attr(\"aria-expanded\",\"false\"),UI.$(this).attr(\"aria-expanded\",\"true\")))}),this.options.connect&&(this.connect=UI.$(this.options.connect)),this.responsivetab=UI.$('<li class=\"uk-tab-responsive uk-active\"><a></a></li>').append('<div class=\"uk-dropdown uk-dropdown-small\"><ul class=\"uk-nav uk-nav-dropdown\"></ul><div>'),this.responsivetab.dropdown=this.responsivetab.find(\".uk-dropdown\"),this.responsivetab.lst=this.responsivetab.dropdown.find(\"ul\"),this.responsivetab.caption=this.responsivetab.find(\"a:first\"),this.element.hasClass(\"uk-tab-bottom\")&&this.responsivetab.dropdown.addClass(\"uk-dropdown-up\"),this.responsivetab.lst.on(\"click.uk.tab\",\"a\",function(e){e.preventDefault(),e.stopPropagation();e=UI.$(this);$this.element.children(\"li:not(.uk-tab-responsive)\").eq(e.data(\"index\")).trigger(\"click\")}),this.on(\"show.uk.switcher change.uk.tab\",function(e,tab){$this.responsivetab.caption.html(tab.text())}),this.element.append(this.responsivetab),this.options.connect&&(this.switcher=UI.switcher(this.element,{toggle:\">li:not(.uk-tab-responsive)\",connect:this.options.connect,active:this.options.active,animation:this.options.animation,duration:this.options.duration,swiping:this.options.swiping})),UI.dropdown(this.responsivetab,{mode:\"click\",preventflip:\"y\"}),$this.trigger(\"change.uk.tab\",[this.element.find(this.options.target).not(\".uk-tab-responsive\").filter(\".uk-active\")]),this.check(),UI.$win.on(\"resize orientationchange\",UI.Utils.debounce(function(){$this.element.is(\":visible\")&&$this.check()},100)),this.on(\"display.uk.check\",function(){$this.element.is(\":visible\")&&$this.check()})},check:function(){var children=this.element.children(\"li:not(.uk-tab-responsive)\").removeClass(\"uk-hidden\");if(children.length){var item,clone,top=children.eq(0).offset().top+Math.ceil(children.eq(0).height()/2),doresponsive=!1;if(this.responsivetab.lst.empty(),children.each(function(){UI.$(this).offset().top>top&&(doresponsive=!0)}),doresponsive)for(var i=0;i<children.length;i++)(item=UI.$(children.eq(i))).find(\"a\"),\"none\"==item.css(\"float\")||item.attr(\"uk-dropdown\")||(item.hasClass(\"uk-disabled\")||(clone=item[0].outerHTML.replace(\"<a \",'<a data-index=\"'+i+'\" '),this.responsivetab.lst.append(clone)),item.addClass(\"uk-hidden\"));this.responsivetab[this.responsivetab.lst.children(\"li\").length?\"removeClass\":\"addClass\"](\"uk-hidden\")}else this.responsivetab.addClass(\"uk-hidden\")}})}(UIkit),function(UI){\"use strict\";UI.component(\"cover\",{defaults:{automute:!0},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-cover]\",context).each(function(){var ele=UI.$(this);ele.data(\"cover\")||UI.cover(ele,UI.Utils.options(ele.attr(\"data-uk-cover\")))})})},init:function(){var src;this.parent=this.element.parent(),UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(){this.check()}.bind(this),100)),this.on(\"display.uk.check\",function(e){this.element.is(\":visible\")&&this.check()}.bind(this)),this.check(),this.element.is(\"iframe\")&&this.options.automute&&(src=this.element.attr(\"src\"),this.element.attr(\"src\",\"\").on(\"load\",function(){this.contentWindow.postMessage('{ \"event\": \"command\", \"func\": \"mute\", \"method\":\"setVolume\", \"value\":0}',\"*\")}).attr(\"src\",[src,-1<src.indexOf(\"?\")?\"&\":\"?\",\"enablejsapi=1&api=1\"].join(\"\")))},check:function(){this.element.css({width:\"\",height:\"\"}),this.dimension={w:this.element.width(),h:this.element.height()},this.element.attr(\"width\")&&!isNaN(this.element.attr(\"width\"))&&(this.dimension.w=this.element.attr(\"width\")),this.element.attr(\"height\")&&!isNaN(this.element.attr(\"height\"))&&(this.dimension.h=this.element.attr(\"height\")),this.ratio=this.dimension.w/this.dimension.h;var width,w=this.parent.width(),h=this.parent.height(),h=w/this.ratio<h?(width=Math.ceil(h*this.ratio),h):(width=w,Math.ceil(w/this.ratio));this.element.css({width:width,height:h})}})}(UIkit),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";return UI.component(\"accordion\",{defaults:{showfirst:!0,collapse:!0,animate:!0,easing:\"swing\",duration:300,toggle:\".uk-accordion-title\",containers:\".uk-accordion-content\",clsactive:\"uk-active\"},boot:function(){UI.ready(function(context){setTimeout(function(){UI.$(\"[data-uk-accordion]\",context).each(function(){var ele=UI.$(this);ele.data(\"accordion\")||UI.accordion(ele,UI.Utils.options(ele.attr(\"data-uk-accordion\")))})},0)})},init:function(){var $this=this;this.element.on(\"click.uk.accordion\",this.options.toggle,function(e){e.preventDefault(),$this.toggleItem(UI.$(this).data(\"wrapper\"),$this.options.animate,$this.options.collapse)}),this.update(),this.options.showfirst&&this.toggleItem(this.toggle.eq(0).data(\"wrapper\"),!1,!1)},toggleItem:function(wrapper,animated,collapse){var $this=this,active=(wrapper.data(\"toggle\").toggleClass(this.options.clsactive),wrapper.data(\"content\").toggleClass(this.options.clsactive),wrapper.data(\"toggle\").hasClass(this.options.clsactive));collapse&&(this.toggle.not(wrapper.data(\"toggle\")).removeClass(this.options.clsactive),this.content.not(wrapper.data(\"content\")).removeClass(this.options.clsactive).parent().stop().css(\"overflow\",\"hidden\").animate({height:0},{easing:this.options.easing,duration:animated?this.options.duration:0}).attr(\"aria-expanded\",\"false\")),wrapper.stop().css(\"overflow\",\"hidden\"),animated?wrapper.animate({height:active?function(ele){var ele=UI.$(ele),height=\"auto\";{var tmp;ele.is(\":visible\")?height=ele.outerHeight():(tmp={position:ele.css(\"position\"),visibility:ele.css(\"visibility\"),display:ele.css(\"display\")},height=ele.css({position:\"absolute\",visibility:\"hidden\",display:\"block\"}).outerHeight(),ele.css(tmp))}return height}(wrapper.data(\"content\")):0},{easing:this.options.easing,duration:this.options.duration,complete:function(){active&&(wrapper.css({overflow:\"\",height:\"auto\"}),UI.Utils.checkDisplay(wrapper.data(\"content\"))),$this.trigger(\"display.uk.check\")}}):(wrapper.height(active?\"auto\":0),active&&(wrapper.css({overflow:\"\"}),UI.Utils.checkDisplay(wrapper.data(\"content\"))),this.trigger(\"display.uk.check\")),wrapper.attr(\"aria-expanded\",active),this.element.trigger(\"toggle.uk.accordion\",[active,wrapper.data(\"toggle\"),wrapper.data(\"content\")])},update:function(){var $content,$wrapper,$toggle,$this=this;this.toggle=this.find(this.options.toggle),this.content=this.find(this.options.containers),this.content.each(function(index){($content=UI.$(this)).parent().data(\"wrapper\")?$wrapper=$content.parent():($wrapper=UI.$(this).wrap('<div data-wrapper=\"true\" style=\"overflow:hidden;height:0;position:relative;\"></div>').parent()).attr(\"aria-expanded\",\"false\"),$toggle=$this.toggle.eq(index),$wrapper.data(\"toggle\",$toggle),$wrapper.data(\"content\",$content),$toggle.data(\"wrapper\",$wrapper),$content.data(\"wrapper\",$wrapper)}),this.element.trigger(\"update.uk.accordion\",[this])}}),UI.accordion}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var active;return UI.component(\"autocomplete\",{defaults:{minLength:3,param:\"search\",method:\"post\",delay:300,loadingClass:\"uk-loading\",flipDropdown:!1,skipClass:\"uk-skip\",hoverClass:\"uk-active\",source:null,renderer:null,template:'<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>'},visible:!1,value:null,selected:null,boot:function(){UI.$html.on(\"focus.autocomplete.uikit\",\"[data-uk-autocomplete]\",function(e){var ele=UI.$(this);ele.data(\"autocomplete\")||UI.autocomplete(ele,UI.Utils.options(ele.attr(\"data-uk-autocomplete\")))}),UI.$html.on(\"click.autocomplete.uikit\",function(e){active&&e.target!=active.input[0]&&active.hide()})},init:function(){var $this=this,select=!1,trigger=UI.Utils.debounce(function(e){if(select)return select=!1;$this.handle()},this.options.delay);this.dropdown=this.find(\".uk-dropdown\"),this.template=this.find('script[type=\"text/autocomplete\"]').html(),this.template=UI.Utils.template(this.template||this.options.template),this.input=this.find(\"input:first\").attr(\"autocomplete\",\"off\"),this.dropdown.length||(this.dropdown=UI.$('<div class=\"uk-dropdown\"></div>').appendTo(this.element)),this.options.flipDropdown&&this.dropdown.addClass(\"uk-dropdown-flip\"),this.dropdown.attr(\"aria-expanded\",\"false\"),this.input.on({keydown:function(e){if(e&&e.which&&!e.shiftKey)switch(e.which){case 13:select=!0,$this.selected&&(e.preventDefault(),$this.select());break;case 38:e.preventDefault(),$this.pick(\"prev\",!0);break;case 40:e.preventDefault(),$this.pick(\"next\",!0);break;case 27:case 9:$this.hide()}},keyup:trigger}),this.dropdown.on(\"click\",\".uk-autocomplete-results > *\",function(){$this.select()}),this.dropdown.on(\"mouseover\",\".uk-autocomplete-results > *\",function(){$this.pick(UI.$(this))}),this.triggercomplete=trigger},handle:function(){var old=this.value;return this.value=this.input.val(),this.value.length<this.options.minLength?this.hide():(this.value!=old&&this.request(),this)},pick:function(item,scrollinview){var index,items=UI.$(this.dropdown.find(\".uk-autocomplete-results\").children(\":not(.\"+this.options.skipClass+\")\")),selected=!1;\"string\"==typeof item||item.hasClass(this.options.skipClass)?\"next\"!=item&&\"prev\"!=item||(selected=this.selected?(index=items.index(this.selected),\"next\"==item?items.eq(index+1<items.length?index+1:0):items.eq(index-1<0?items.length-1:index-1)):items[\"next\"==item?\"first\":\"last\"](),selected=UI.$(selected)):selected=item,selected&&selected.length&&(this.selected=selected,items.removeClass(this.options.hoverClass),this.selected.addClass(this.options.hoverClass),scrollinview&&(index=selected.position().top,item=this.dropdown.scrollTop(),(this.dropdown.height()<index||index<0)&&this.dropdown.scrollTop(item+index)))},select:function(){var data;this.selected&&(data=this.selected.data(),this.trigger(\"selectitem.uk.autocomplete\",[data,this]),data.value&&this.input.val(data.value).trigger(\"change\"),this.hide())},show:function(){if(!this.visible)return this.visible=!0,this.element.addClass(\"uk-open\"),active&&active!==this&&active.hide(),(active=this).dropdown.attr(\"aria-expanded\",\"true\"),this},hide:function(){if(this.visible)return this.visible=!1,this.element.removeClass(\"uk-open\"),active===this&&(active=!1),this.dropdown.attr(\"aria-expanded\",\"false\"),this},request:function(){function release(data){data&&$this.render(data),$this.element.removeClass($this.options.loadingClass)}var $this=this;if(this.element.addClass(this.options.loadingClass),this.options.source){var items,source=this.options.source;switch(typeof this.options.source){case\"function\":this.options.source.apply(this,[release]);break;case\"object\":source.length&&(items=[],source.forEach(function(item){item.value&&-1!=item.value.toLowerCase().indexOf($this.value.toLowerCase())&&items.push(item)}),release(items));break;case\"string\":var params={};params[this.options.param]=this.value,UI.$.ajax({url:this.options.source,data:params,type:this.options.method,dataType:\"json\"}).done(function(json){release(json||[])});break;default:release(null)}}else this.element.removeClass($this.options.loadingClass)},render:function(data){return this.dropdown.empty(),this.selected=!1,this.options.renderer?this.options.renderer.apply(this,[data]):data&&data.length&&(this.dropdown.append(this.template({items:data})),this.show(),this.trigger(\"show.uk.autocomplete\")),this}}),UI.autocomplete}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var dropdown,moment,active=!1;return UI.component(\"datepicker\",{defaults:{mobile:!1,weekstart:1,i18n:{months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],weekdays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]},format:\"YYYY-MM-DD\",offsettop:5,maxDate:!1,minDate:!1,pos:\"auto\",template:function(data,opts){var content=\"\",content=(content+='<div class=\"uk-datepicker-nav\">')+'<a href=\"\" class=\"no-ajaxy uk-datepicker-previous\"></a>'+'<a href=\"\" class=\"no-ajaxy uk-datepicker-next\"></a>';if(UI.formSelect){for(var months,minYear,maxYear,currentyear=(new Date).getFullYear(),options=[],i=0;i<opts.i18n.months.length;i++)i==data.month?options.push('<option value=\"'+i+'\" selected>'+opts.i18n.months[i]+\"</option>\"):options.push('<option value=\"'+i+'\">'+opts.i18n.months[i]+\"</option>\");for(months='<span class=\"uk-form-select\">'+opts.i18n.months[data.month]+'<select class=\"update-picker-month\">'+options.join(\"\")+\"</select></span>\",options=[],minYear=data.minDate?data.minDate.year():currentyear-50,maxYear=data.maxDate?data.maxDate.year():currentyear+20,i=minYear;i<=maxYear;i++)i==data.year?options.push('<option value=\"'+i+'\" selected>'+i+\"</option>\"):options.push('<option value=\"'+i+'\">'+i+\"</option>\");content+='<div class=\"uk-datepicker-heading\">'+months+\" \"+('<span class=\"uk-form-select\">'+data.year+'<select class=\"update-picker-year\">'+options.join(\"\")+\"</select></span>\")+\"</div>\"}else content+='<div class=\"uk-datepicker-heading\">'+opts.i18n.months[data.month]+\" \"+data.year+\"</div>\";for(content=(content+=\"</div>\")+'<table class=\"uk-datepicker-table\">'+\"<thead>\",i=0;i<data.weekdays.length;i++)data.weekdays[i]&&(content+=\"<th>\"+data.weekdays[i]+\"</th>\");for(content=content+\"</thead>\"+\"<tbody>\",i=0;i<data.days.length;i++)if(data.days[i]&&data.days[i].length){content+=\"<tr>\";for(var day,cls,d=0;d<data.days[i].length;d++)data.days[i][d]&&(cls=[],(day=data.days[i][d]).inmonth||cls.push(\"uk-datepicker-table-muted\"),day.selected&&cls.push(\"uk-active\"),day.disabled&&cls.push(\"uk-datepicker-date-disabled uk-datepicker-table-muted\"),content+='<td><a href=\"\" class=\"no-ajaxy '+cls.join(\" \")+'\" data-date=\"'+day.day.format()+'\">'+day.day.format(\"D\")+\"</a></td>\");content+=\"</tr>\"}return content=content+\"</tbody>\"+\"</table>\"}},boot:function(){UI.$win.on(\"resize orientationchange\",function(){active&&active.hide()}),UI.$html.on(\"focus.datepicker.uikit\",\"[data-uk-datepicker]\",function(e){var ele=UI.$(this);ele.data(\"datepicker\")||(e.preventDefault(),UI.datepicker(ele,UI.Utils.options(ele.attr(\"data-uk-datepicker\"))),ele.trigger(\"focus\"))}),UI.$html.on(\"click focus\",\"*\",function(e){e=UI.$(e.target);!active||e[0]==dropdown[0]||e.data(\"datepicker\")||e.parents(\".uk-datepicker:first\").length||active.hide()})},init:function(){var $this;UI.support.touch&&\"date\"==this.element.attr(\"type\")&&!this.options.mobile||(($this=this).current=this.element.val()?moment(this.element.val(),this.options.format):moment(),this.on(\"click focus\",function(){active!==$this&&$this.pick(this.value||$this.options.minDate||\"\")}).on(\"change\",function(){$this.element.val()&&!moment($this.element.val(),$this.options.format).isValid()&&$this.element.val(moment().format($this.options.format))}),dropdown||((dropdown=UI.$('<div class=\"uk-dropdown uk-datepicker\"></div>')).on(\"click\",\".uk-datepicker-next, .uk-datepicker-previous, [data-date]\",function(e){e.stopPropagation(),e.preventDefault();e=UI.$(this);if(e.hasClass(\"uk-datepicker-date-disabled\"))return!1;e.is(\"[data-date]\")?(active.current=moment(e.data(\"date\")),active.element.val(active.current.format(active.options.format)).trigger(\"change\"),active.hide()):active.add(e.hasClass(\"uk-datepicker-next\")?1:-1,\"months\")}),dropdown.on(\"change\",\".update-picker-month, .update-picker-year\",function(){var select=UI.$(this);active[select.is(\".update-picker-year\")?\"setYear\":\"setMonth\"](Number(select.val()))}),dropdown.appendTo(\"body\")))},pick:function(initdate){var offset=this.element.offset(),css={left:offset.left,right:\"\"},initdate=(this.current=isNaN(initdate)?moment(initdate,this.options.format):moment(),this.initdate=this.current.format(\"YYYY-MM-DD\"),this.update(),\"right\"==UI.langdirection&&(css.right=window.innerWidth-(css.left+this.element.outerWidth()),css.left=\"\"),offset.top-this.element.outerHeight()+this.element.height()-this.options.offsettop-dropdown.outerHeight()),offset=offset.top+this.element.outerHeight()+this.options.offsettop;css.top=offset,(\"top\"==this.options.pos||\"auto\"==this.options.pos&&window.innerHeight-offset-dropdown.outerHeight()<0&&0<=initdate)&&(css.top=initdate),dropdown.css(css).show(),this.trigger(\"show.uk.datepicker\"),active=this},add:function(unit,value){this.current.add(unit,value),this.update()},setMonth:function(month){this.current.month(month),this.update()},setYear:function(year){this.current.year(year),this.update()},update:function(){var data=this.getRows(this.current.year(),this.current.month()),data=this.options.template(data,this.options);dropdown.html(data),this.trigger(\"update.uk.datepicker\")},getRows:function(year,month){for(var day,isDisabled,isSelected,isToday,isInMonth,opts=this.options,now=moment().format(\"YYYY-MM-DD\"),days=[31,year%4==0&&year%100!=0||year%400==0?29:28,31,30,31,30,31,31,30,31,30,31][month],before=new Date(year,month,1,12).getDay(),data={month:month,year:year,weekdays:[],days:[],maxDate:!1,minDate:!1},row=[],cells=(!1!==opts.maxDate&&(data.maxDate=isNaN(opts.maxDate)?moment(opts.maxDate,opts.format):moment().add(opts.maxDate,\"days\")),!1!==opts.minDate&&(data.minDate=isNaN(opts.minDate)?moment(opts.minDate,opts.format):moment().add(opts.minDate-1,\"days\")),data.weekdays=function(){for(var i=0,arr=[];i<7;i++){for(var day=i+(opts.weekstart||0);7<=day;)day-=7;arr.push(opts.i18n.weekdays[day])}return arr}(),opts.weekstart&&0<opts.weekstart&&(before-=opts.weekstart)<0&&(before+=7),days+before),after=cells;7<after;)after-=7;cells+=7-after;for(var i=0,r=0;i<cells;i++)day=new Date(year,month,i-before+1,12),isDisabled=data.minDate&&data.minDate>day||data.maxDate&&day>data.maxDate,isInMonth=!(i<before||days+before<=i),day=moment(day),isSelected=this.initdate==day.format(\"YYYY-MM-DD\"),isToday=now==day.format(\"YYYY-MM-DD\"),row.push({selected:isSelected,today:isToday,disabled:isDisabled,day:day,inmonth:isInMonth}),7==++r&&(data.days.push(row),row=[],r=0);return data},hide:function(){active&&active===this&&(dropdown.hide(),active=!1,this.trigger(\"hide.uk.datepicker\"))}}),moment=__webpack_provided_window_dot_moment,UI.Utils.moment=moment,UI.datepicker}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";return UI.component(\"formPassword\",{defaults:{lblShow:\"Show\",lblHide:\"Hide\"},boot:function(){UI.$html.on(\"click.formpassword.uikit\",\"[data-uk-form-password]\",function(e){var ele=UI.$(this);ele.data(\"formPassword\")||(e.preventDefault(),UI.formPassword(ele,UI.Utils.options(ele.attr(\"data-uk-form-password\"))),ele.trigger(\"click\"))})},init:function(){var $this=this;this.on(\"click\",function(e){e.preventDefault(),$this.input.length&&(e=$this.input.attr(\"type\"),$this.input.attr(\"type\",\"text\"==e?\"password\":\"text\"),$this.element.html($this.options[\"text\"==e?\"lblShow\":\"lblHide\"]))}),this.input=this.element.next(\"input\").length?this.element.next(\"input\"):this.element.prev(\"input\"),this.element.html(this.options[this.input.is(\"[type='password']\")?\"lblShow\":\"lblHide\"]),this.element.data(\"formPassword\",this)}}),UI.formPassword}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";return UI.component(\"formSelect\",{defaults:{target:\">span:first\",activeClass:\"uk-active\"},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-form-select]\",context).each(function(){var ele=UI.$(this);ele.data(\"formSelect\")||UI.formSelect(ele,UI.Utils.options(ele.attr(\"data-uk-form-select\")))})})},init:function(){var select,$this=this;function fn(){try{$this.target.text(select.options[select.selectedIndex].text)}catch(e){}return $this.element[$this.select.val()?\"addClass\":\"removeClass\"]($this.options.activeClass),fn}this.target=this.find(this.options.target),this.select=this.find(\"select\"),this.select.on(\"change\",(select=$this.select[0],fn())),this.element.data(\"formSelect\",this)}}),UI.formSelect}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";UI.component(\"grid\",{defaults:{colwidth:\"auto\",animation:!0,duration:300,gutter:0,controls:!1,filter:!1},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-grid]\",context).each(function(){var ele=UI.$(this);ele.data(\"grid\")||UI.grid(ele,UI.Utils.options(ele.attr(\"data-uk-grid\")))})})},init:function(){var $this=this,gutter=String(this.options.gutter).trim().split(\" \");this.gutterv=parseInt(gutter[0],10),this.gutterh=parseInt(gutter[1]||gutter[0],10),this.element.css({position:\"relative\"}),this.controls=null,this.options.controls&&(this.controls=UI.$(this.options.controls),this.controls.on(\"click\",\"[data-uk-filter]\",function(e){e.preventDefault(),$this.filter(UI.$(this).data(\"ukFilter\"))}),this.controls.on(\"click\",\"[data-uk-sort]\",function(e){e.preventDefault();e=UI.$(this).attr(\"data-uk-sort\").split(\":\");$this.sort(e[0],e[1])})),UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(){$this.currentfilter?$this.filter($this.currentfilter):this.updateLayout()}.bind(this),100)),this.on(\"display.uk.check\",function(){$this.element.is(\":visible\")&&$this.updateLayout()}),UI.$html.on(\"changed.uk.dom\",function(e){$this.updateLayout()}),!1!==this.options.filter?this.filter(this.options.filter):this.updateLayout()},_prepareElements:function(){var css,children=this.element.children(\":not([data-grid-prepared])\");children.length&&(css={position:\"absolute\",\"box-sizing\":\"border-box\",width:\"auto\"==this.options.colwidth?\"\":this.options.colwidth},this.options.gutter&&(css[\"padding-left\"]=this.gutterh,css[\"padding-bottom\"]=this.gutterv,this.element.css(\"margin-left\",-1*this.gutterh)),children.attr(\"data-grid-prepared\",\"true\").css(css))},updateLayout:function(elements){this._prepareElements();var item,width,pos,z,size,elements=elements=elements||this.element.children(\":visible\"),maxwidth=this.element.width()+2*this.gutterh+2,left=0,top=0,positions=[];this.trigger(\"beforeupdate.uk.grid\",[elements]),elements.each(function(index){for(size=_getSize(this),item=UI.$(this),width=size.outerWidth,size=size.outerHeight,i=top=left=0,max=positions.length;i<max;i++)pos=positions[i],left<=pos.aX&&(left=pos.aX),maxwidth<left+width&&(left=0),top<=pos.aY&&(top=pos.aY);positions.push({ele:item,top:top,left:left,width:width,height:size,aY:top+size,aX:left+width})});for(var posPrev,maxHeight=0,i=0,max=positions.length;i<max;i++){for(pos=positions[i],z=top=0;z<i;z++)posPrev=positions[z],pos.left<posPrev.aX&&posPrev.left+1<pos.aX&&(top=posPrev.aY);pos.top=top,pos.aY=top+pos.height,maxHeight=Math.max(maxHeight,pos.aY)}maxHeight-=this.gutterv,this.options.animation?(this.element.stop().animate({height:maxHeight},100),positions.forEach(function(pos){pos.ele.stop().animate({top:pos.top,left:pos.left,opacity:1},this.options.duration)}.bind(this))):(this.element.css(\"height\",maxHeight),positions.forEach(function(pos){pos.ele.css({top:pos.top,left:pos.left,opacity:1})}.bind(this))),setTimeout(function(){UI.$doc.trigger(\"scrolling.uk.document\")},2*this.options.duration*(this.options.animation?1:0)),this.trigger(\"afterupdate.uk.grid\",[elements])},filter:function(filter){\"string\"==typeof(filter=\"number\"==typeof(filter=(this.currentfilter=filter)||[])?filter.toString():filter)&&(filter=filter.split(/,/).map(function(item){return item.trim()}));var children=this.element.children(),elements={visible:[],hidden:[]};children.each(function(index){var ele=UI.$(this),f=ele.attr(\"data-uk-filter\"),infilter=!filter.length;f&&(f=f.split(/,/).map(function(item){return item.trim()}),filter.forEach(function(item){-1<f.indexOf(item)&&(infilter=!0)})),elements[infilter?\"visible\":\"hidden\"].push(ele)}),elements.hidden=UI.$(elements.hidden).map(function(){return this[0]}),elements.visible=UI.$(elements.visible).map(function(){return this[0]}),elements.hidden.attr(\"aria-hidden\",\"true\").filter(\":visible\").fadeOut(this.options.duration),elements.visible.attr(\"aria-hidden\",\"false\").filter(\":hidden\").css(\"opacity\",0).show(),this.updateLayout(elements.visible),this.controls&&this.controls.length&&this.controls.find(\"[data-uk-filter]\").removeClass(\"uk-active\").filter('[data-uk-filter=\"'+filter+'\"]').addClass(\"uk-active\")},sort:function(by,order){\"string\"==typeof(order=order||1)&&(order=\"desc\"==order.toLowerCase()?-1:1);var elements=this.element.children();elements.sort(function(a,b){return a=UI.$(a),((b=UI.$(b)).data(by)||\"\")<(a.data(by)||\"\")?order:-1*order}).appendTo(this.element),this.updateLayout(elements.filter(\":visible\")),this.controls&&this.controls.length&&this.controls.find(\"[data-uk-sort]\").removeClass(\"uk-active\").filter('[data-uk-sort=\"'+by+\":\"+(-1==order?\"desc\":\"asc\")+'\"]').addClass(\"uk-active\")}});prefixes=\"Webkit Moz ms Ms O\".split(\" \"),docElemStyle=document.documentElement.style,logError=\"undefined\"==typeof console?function(){}:function(message){console.error(message)},isSetup=!(measurements=[\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"paddingBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\",\"borderLeftWidth\",\"borderRightWidth\",\"borderTopWidth\",\"borderBottomWidth\"]);var prefixes,docElemStyle,logError,measurements,getStyle,boxSizingProp,isBoxSizeOuter,isSetup,_getSize=function(elem){if(setup(),(elem=\"string\"==typeof elem?document.querySelector(elem):elem)&&\"object\"==typeof elem&&elem.nodeType){var style=getStyle(elem);if(\"none\"===style.display)return function(){for(var size={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},i=0,len=measurements.length;i<len;i++)size[measurements[i]]=0;return size}();for(var size={},elem=(size.width=elem.offsetWidth,size.height=elem.offsetHeight,size.isBorderBox=!(!boxSizingProp||!style[boxSizingProp]||\"border-box\"!==style[boxSizingProp])),i=0,len=measurements.length;i<len;i++){var measurement=measurements[i],value=style[measurement],value=parseFloat(value);size[measurement]=isNaN(value)?0:value}var paddingWidth=size.paddingLeft+size.paddingRight,paddingHeight=size.paddingTop+size.paddingBottom,marginWidth=size.marginLeft+size.marginRight,marginHeight=size.marginTop+size.marginBottom,borderWidth=size.borderLeftWidth+size.borderRightWidth,borderHeight=size.borderTopWidth+size.borderBottomWidth,elem=elem&&isBoxSizeOuter,styleWidth=getStyleSize(style.width),styleWidth=(!1!==styleWidth&&(size.width=styleWidth+(elem?0:paddingWidth+borderWidth)),getStyleSize(style.height));return!1!==styleWidth&&(size.height=styleWidth+(elem?0:paddingHeight+borderHeight)),size.innerWidth=size.width-(paddingWidth+borderWidth),size.innerHeight=size.height-(paddingHeight+borderHeight),size.outerWidth=size.width+marginWidth,size.outerHeight=size.height+marginHeight,size}};function getStyleSize(value){var num=parseFloat(value);return-1===value.indexOf(\"%\")&&!isNaN(num)&&num}function setup(){var getComputedStyle,getStyleFn,div,body,style;isSetup||(isSetup=!0,getComputedStyle=window.getComputedStyle,getStyleFn=getComputedStyle?function(elem){return getComputedStyle(elem,null)}:function(elem){return elem.currentStyle},getStyle=function(elem){elem=getStyleFn(elem);return elem||logError(\"Style returned \"+elem+\". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1\"),elem},(boxSizingProp=function(propName){if(propName){if(\"string\"==typeof docElemStyle[propName])return propName;var prefixed;propName=propName.charAt(0).toUpperCase()+propName.slice(1);for(var i=0,len=prefixes.length;i<len;i++)if(prefixed=prefixes[i]+propName,\"string\"==typeof docElemStyle[prefixed])return prefixed}}(\"boxSizing\"))&&((div=document.createElement(\"div\")).style.width=\"200px\",div.style.padding=\"1px 2px 3px 4px\",div.style.borderStyle=\"solid\",div.style.borderWidth=\"1px 2px 3px 4px\",div.style[boxSizingProp]=\"border-box\",(body=document.body||document.documentElement).appendChild(div),style=getStyle(div),isBoxSizeOuter=200===getStyleSize(style.width),body.removeChild(div)))}}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var editors=[];return UI.component(\"htmleditor\",{defaults:{iframe:!1,mode:\"split\",markdown:!1,autocomplete:!0,height:500,maxsplitsize:1e3,codemirror:{mode:\"htmlmixed\",lineWrapping:!0,dragDrop:!1,autoCloseTags:!0,matchTags:!0,autoCloseBrackets:!0,matchBrackets:!0,indentUnit:4,indentWithTabs:!1,tabSize:4,hintOptions:{completionSingle:!1}},toolbar:[\"bold\",\"italic\",\"strike\",\"link\",\"image\",\"blockquote\",\"listUl\",\"listOl\"],lblPreview:\"Preview\",lblCodeview:\"HTML\",lblMarkedview:\"Markdown\"},boot:function(){UI.ready(function(context){UI.$(\"textarea[data-uk-htmleditor]\",context).each(function(){var editor=UI.$(this);editor.data(\"htmleditor\")||UI.htmleditor(editor,UI.Utils.options(editor.attr(\"data-uk-htmleditor\")))})})},init:function(){var $this=this,tpl=UI.components.htmleditor.template,previewContainer=(this.CodeMirror=this.options.CodeMirror||CodeMirror,this.buttons={},tpl=(tpl=tpl.replace(/\\{:lblPreview}/g,this.options.lblPreview)).replace(/\\{:lblCodeview}/g,this.options.lblCodeview),this.htmleditor=UI.$(tpl),this.content=this.htmleditor.find(\".uk-htmleditor-content\"),this.toolbar=this.htmleditor.find(\".uk-htmleditor-toolbar\"),this.preview=this.htmleditor.find(\".uk-htmleditor-preview\").children().eq(0),this.code=this.htmleditor.find(\".uk-htmleditor-code\"),this.element.before(this.htmleditor).appendTo(this.code),this.editor=this.CodeMirror.fromTextArea(this.element[0],this.options.codemirror),(this.editor.htmleditor=this).editor.on(\"change\",UI.Utils.debounce(function(){$this.render()},150)),this.editor.on(\"change\",function(){$this.editor.save(),$this.element.trigger(\"input\")}),this.code.find(\".CodeMirror\").css(\"height\",this.options.height),this.options.iframe?(this.iframe=UI.$('<iframe class=\"uk-htmleditor-iframe\" frameborder=\"0\" scrolling=\"auto\" height=\"100\" width=\"100%\"></iframe>'),this.preview.append(this.iframe),this.iframe[0].contentWindow.document.open(),this.iframe[0].contentWindow.document.close(),this.preview.container=UI.$(this.iframe[0].contentWindow.document).find(\"body\"),\"string\"==typeof this.options.iframe&&this.preview.container.parent().append('<link rel=\"stylesheet\" href=\"'+this.options.iframe+'\">')):this.preview.container=this.preview,UI.$win.on(\"resize load\",UI.Utils.debounce(function(){$this.fit()},200)),this.iframe?this.preview.container:$this.preview.parent()),codeContent=this.code.find(\".CodeMirror-sizer\"),codeScroll=this.code.find(\".CodeMirror-scroll\").on(\"scroll\",UI.Utils.debounce(function(){var codeHeight;\"tab\"!=$this.htmleditor.attr(\"data-mode\")&&(codeHeight=codeContent.height()-codeScroll.height(),codeHeight=(previewContainer[0].scrollHeight-($this.iframe||previewContainer).height())/codeHeight,codeHeight=codeScroll.scrollTop()*codeHeight,previewContainer.scrollTop(codeHeight))},10));this.htmleditor.on(\"click\",\".uk-htmleditor-button-code, .uk-htmleditor-button-preview\",function(e){e.preventDefault(),\"tab\"==$this.htmleditor.attr(\"data-mode\")&&($this.htmleditor.find(\".uk-htmleditor-button-code, .uk-htmleditor-button-preview\").removeClass(\"uk-active\").filter(this).addClass(\"uk-active\"),$this.activetab=UI.$(this).hasClass(\"uk-htmleditor-button-code\")?\"code\":\"preview\",$this.htmleditor.attr(\"data-active-tab\",$this.activetab),$this.editor.refresh())}),this.htmleditor.on(\"click\",\"a[data-htmleditor-button]\",function(){$this.code.is(\":visible\")&&$this.trigger(\"action.\"+UI.$(this).data(\"htmleditor-button\"),[$this.editor])}),this.preview.parent().css(\"height\",this.code.height()),this.options.autocomplete&&this.CodeMirror.showHint&&this.CodeMirror.hint&&this.CodeMirror.hint.html&&this.editor.on(\"inputRead\",UI.Utils.debounce(function(){var POS=$this.editor.getDoc().getCursor();\"xml\"==$this.CodeMirror.innerMode($this.editor.getMode(),$this.editor.getTokenAt(POS).state).mode.name&&(POS=$this.editor.getCursor(),\"<\"!=(POS=$this.editor.getTokenAt(POS)).string.charAt(0)&&\"attribute\"!=POS.type||$this.CodeMirror.showHint($this.editor,$this.CodeMirror.hint.html,{completeSingle:!1}))},100)),this.debouncedRedraw=UI.Utils.debounce(function(){$this.redraw()},5),this.on(\"init.uk.component\",function(){$this.debouncedRedraw()}),this.element.attr(\"data-uk-check-display\",1).on(\"display.uk.check\",function(e){this.htmleditor.is(\":visible\")&&this.fit()}.bind(this)),editors.push(this)},addButton:function(name,button){this.buttons[name]=button},addButtons:function(buttons){UI.$.extend(this.buttons,buttons)},replaceInPreview:function(regexp,callback){var editor=this.editor,results=[],value=editor.getValue(),offset=-1,index=0;function translateOffset(offset){offset=editor.getValue().substring(0,offset).split(\"\\n\");return{line:offset.length-1,ch:offset[offset.length-1].length}}return this.currentvalue=this.currentvalue.replace(regexp,function(){offset=value.indexOf(arguments[0],++offset);var match={matches:arguments,from:translateOffset(offset),to:translateOffset(offset+arguments[0].length),replace:function(value){editor.replaceRange(value,match.from,match.to)},inRange:function(cursor){return cursor.line===match.from.line&&cursor.line===match.to.line?cursor.ch>=match.from.ch&&cursor.ch<match.to.ch:cursor.line===match.from.line&&cursor.ch>=match.from.ch||cursor.line>match.from.line&&cursor.line<match.to.line||cursor.line===match.to.line&&cursor.ch<match.to.ch}},result=callback(match,index);return result?(index++,results.push(match),result):arguments[0]}),results},_buildtoolbar:function(){var $this,bar;this.options.toolbar&&this.options.toolbar.length&&(bar=[],($this=this).toolbar.empty(),this.options.toolbar.forEach(function(button){var title;$this.buttons[button]&&(title=$this.buttons[button].title||button,bar.push('<li><a data-htmleditor-button=\"'+button+'\" title=\"'+title+'\" data-uk-tooltip>'+$this.buttons[button].label+\"</a></li>\"))}),this.toolbar.html(bar.join(\"\\n\")))},fit:function(){var mode=this.options.mode;\"tab\"==(mode=\"split\"==mode&&this.htmleditor.width()<this.options.maxsplitsize?\"tab\":mode)&&(this.activetab||(this.activetab=\"code\",this.htmleditor.attr(\"data-active-tab\",this.activetab)),this.htmleditor.find(\".uk-htmleditor-button-code, .uk-htmleditor-button-preview\").removeClass(\"uk-active\").filter(\"code\"==this.activetab?\".uk-htmleditor-button-code\":\".uk-htmleditor-button-preview\").addClass(\"uk-active\")),this.editor.refresh(),this.preview.parent().css(\"height\",this.code.height()),this.htmleditor.attr(\"data-mode\",mode)},redraw:function(){this._buildtoolbar(),this.render(),this.fit()},getMode:function(){return this.editor.getOption(\"mode\")},getCursorMode:function(){var param={mode:\"html\"};return this.trigger(\"cursorMode\",[param]),param.mode},render:function(){if(this.currentvalue=this.editor.getValue(),!this.currentvalue)return this.element.val(\"\"),void this.preview.container.html(\"\");this.trigger(\"render\",[this]),this.trigger(\"renderLate\",[this]),this.preview.container.html(this.currentvalue)},addShortcut:function(name,callback){var map={};return(name=UI.$.isArray(name)?name:[name]).forEach(function(key){map[key]=callback}),this.editor.addKeyMap(map),map},addShortcutAction:function(action,shortcuts){var editor=this;this.addShortcut(shortcuts,function(){editor.element.trigger(\"action.\"+action,[editor.editor])})},replaceSelection:function(replace){var text=this.editor.getSelection();if(!text.length){for(var cur=this.editor.getCursor(),curLine=this.editor.getLine(cur.line),start=cur.ch,end=start;end<curLine.length&&/[\\w$]+/.test(curLine.charAt(end));)++end;for(;start&&/[\\w$]+/.test(curLine.charAt(start-1));)--start;var curWord=start!=end&&curLine.slice(start,end);curWord&&(this.editor.setSelection({line:cur.line,ch:start},{line:cur.line,ch:end}),text=curWord)}cur=replace.replace(\"$1\",text);this.editor.replaceSelection(cur,\"end\"),this.editor.focus()},replaceLine:function(replace){var pos=this.editor.getDoc().getCursor(),text=this.editor.getLine(pos.line),replace=replace.replace(\"$1\",text);this.editor.replaceRange(replace,{line:pos.line,ch:0},{line:pos.line,ch:text.length}),this.editor.setCursor({line:pos.line,ch:replace.length}),this.editor.focus()},save:function(){this.editor.save()}}),UI.components.htmleditor.template=['<div class=\"uk-htmleditor uk-clearfix\" data-mode=\"split\">','<div class=\"uk-htmleditor-navbar\">','<ul class=\"uk-htmleditor-navbar-nav uk-htmleditor-toolbar\"></ul>','<div class=\"uk-htmleditor-navbar-flip\">','<ul class=\"uk-htmleditor-navbar-nav\">','<li class=\"uk-htmleditor-button-code\"><a>{:lblCodeview}</a></li>','<li class=\"uk-htmleditor-button-preview\"><a>{:lblPreview}</a></li>','<li><a data-htmleditor-button=\"fullscreen\"><i class=\"uk-icon-expand\"></i></a></li>',\"</ul>\",\"</div>\",\"</div>\",'<div class=\"uk-htmleditor-content\">','<div class=\"uk-htmleditor-code\"></div>','<div class=\"uk-htmleditor-preview\"><div></div></div>',\"</div>\",\"</div>\"].join(\"\"),UI.plugin(\"htmleditor\",\"base\",{init:function(editor){editor.addButtons({fullscreen:{title:\"Fullscreen\",label:'<i class=\"uk-icon-expand\"></i>'},bold:{title:\"Bold\",label:'<i class=\"uk-icon-bold\"></i>'},italic:{title:\"Italic\",label:'<i class=\"uk-icon-italic\"></i>'},strike:{title:\"Strikethrough\",label:'<i class=\"uk-icon-strikethrough\"></i>'},blockquote:{title:\"Blockquote\",label:'<i class=\"uk-icon-quote-right\"></i>'},link:{title:\"Link\",label:'<i class=\"uk-icon-link\"></i>'},image:{title:\"Image\",label:'<i class=\"uk-icon-picture-o\"></i>'},listUl:{title:\"Unordered List\",label:'<i class=\"uk-icon-list-ul\"></i>'},listOl:{title:\"Ordered List\",label:'<i class=\"uk-icon-list-ol\"></i>'}}),addAction(\"bold\",\"<strong>$1</strong>\"),addAction(\"italic\",\"<em>$1</em>\"),addAction(\"strike\",\"<del>$1</del>\"),addAction(\"blockquote\",\"<blockquote><p>$1</p></blockquote>\",\"replaceLine\"),addAction(\"link\",'<a href=\"http://\">$1</a>'),addAction(\"image\",'<img src=\"http://\" alt=\"$1\">');function listfn(){if(\"html\"==editor.getCursorMode()){for(var cm=editor.editor,pos=cm.getDoc().getCursor(!0),posend=cm.getDoc().getCursor(!1),i=pos.line;i<posend.line+1;i++)cm.replaceRange(\"<li>\"+cm.getLine(i)+\"</li>\",{line:i,ch:0},{line:i,ch:cm.getLine(i).length});cm.setCursor({line:posend.line,ch:cm.getLine(posend.line).length}),cm.focus()}}function addAction(name,replace,mode){editor.on(\"action.\"+name,function(){\"html\"==editor.getCursorMode()&&editor[\"replaceLine\"==mode?\"replaceLine\":\"replaceSelection\"](replace)})}editor.on(\"action.listUl\",function(){listfn()}),editor.on(\"action.listOl\",function(){listfn()}),editor.htmleditor.on(\"click\",'a[data-htmleditor-button=\"fullscreen\"]',function(){editor.htmleditor.toggleClass(\"uk-htmleditor-fullscreen\");var info,wrap=editor.editor.getWrapperElement();editor.htmleditor.hasClass(\"uk-htmleditor-fullscreen\")?(editor.editor.state.fullScreenRestore={scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset,width:wrap.style.width,height:wrap.style.height},wrap.style.width=\"\",wrap.style.height=editor.content.height()+\"px\",document.documentElement.style.overflow=\"hidden\"):(document.documentElement.style.overflow=\"\",info=editor.editor.state.fullScreenRestore,wrap.style.width=info.width,wrap.style.height=info.height,window.scrollTo(info.scrollLeft,info.scrollTop)),setTimeout(function(){editor.fit(),UI.$win.trigger(\"resize\")},50)}),editor.addShortcut([\"Ctrl-S\",\"Cmd-S\"],function(){editor.element.trigger(\"htmleditor-save\",[editor])}),editor.addShortcutAction(\"bold\",[\"Ctrl-B\",\"Cmd-B\"])}}),UI.plugin(\"htmleditor\",\"markdown\",{init:function(editor){var parser=editor.options.mdparser||marked||null;function enableMarkdown(){editor.editor.setOption(\"mode\",\"gfm\"),editor.htmleditor.find(\".uk-htmleditor-button-code a\").html(editor.options.lblMarkedview)}function addAction(name,replace,mode){editor.on(\"action.\"+name,function(){\"markdown\"==editor.getCursorMode()&&editor[\"replaceLine\"==mode?\"replaceLine\":\"replaceSelection\"](replace)})}parser&&(editor.options.markdown&&enableMarkdown(),addAction(\"bold\",\"**$1**\"),addAction(\"italic\",\"*$1*\"),addAction(\"strike\",\"~~$1~~\"),addAction(\"blockquote\",\"> $1\",\"replaceLine\"),addAction(\"link\",\"[$1](http://)\"),addAction(\"image\",\"![$1](http://)\"),editor.on(\"action.listUl\",function(){if(\"markdown\"==editor.getCursorMode()){for(var cm=editor.editor,pos=cm.getDoc().getCursor(!0),posend=cm.getDoc().getCursor(!1),i=pos.line;i<posend.line+1;i++)cm.replaceRange(\"* \"+cm.getLine(i),{line:i,ch:0},{line:i,ch:cm.getLine(i).length});cm.setCursor({line:posend.line,ch:cm.getLine(posend.line).length}),cm.focus()}}),editor.on(\"action.listOl\",function(){if(\"markdown\"==editor.getCursorMode()){var matches,cm=editor.editor,pos=cm.getDoc().getCursor(!0),posend=cm.getDoc().getCursor(!1),prefix=1;0<pos.line&&(matches=cm.getLine(pos.line-1).match(/^(\\d+)\\./))&&(prefix=Number(matches[1])+1);for(var i=pos.line;i<posend.line+1;i++)cm.replaceRange(prefix+\". \"+cm.getLine(i),{line:i,ch:0},{line:i,ch:cm.getLine(i).length}),prefix++;cm.setCursor({line:posend.line,ch:cm.getLine(posend.line).length}),cm.focus()}}),editor.on(\"renderLate\",function(){\"gfm\"==editor.editor.options.mode&&(editor.currentvalue=parser(editor.currentvalue))}),editor.on(\"cursorMode\",function(e,param){var pos;\"gfm\"==editor.editor.options.mode&&(pos=editor.editor.getDoc().getCursor(),editor.editor.getTokenAt(pos).state.base.htmlState||(param.mode=\"markdown\"))}),UI.$.extend(editor,{enableMarkdown:function(){enableMarkdown(),this.render()},disableMarkdown:function(){this.editor.setOption(\"mode\",\"htmlmixed\"),this.htmleditor.find(\".uk-htmleditor-button-code a\").html(this.options.lblCodeview),this.render()}}),editor.on({enableMarkdown:function(){editor.enableMarkdown()},disableMarkdown:function(){editor.disableMarkdown()}}))}}),UI.htmleditor}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var modal,cache={};return UI.component(\"lightbox\",{defaults:{group:!1,duration:400,keyboard:!0},index:0,items:!1,boot:function(){UI.$html.on(\"click\",\"[data-uk-lightbox]\",function(e){e.preventDefault();e=UI.$(this);e.data(\"lightbox\")||UI.lightbox(e,UI.Utils.options(e.attr(\"data-uk-lightbox\"))),e.data(\"lightbox\").show(e)}),UI.$doc.on(\"keyup\",function(e){if(modal&&modal.is(\":visible\")&&modal.lightbox.options.keyboard)switch(e.preventDefault(),e.keyCode){case 37:modal.lightbox.previous();break;case 39:modal.lightbox.next()}})},init:function(){var domSiblings,siblings=[];this.index=0,this.siblings=[],this.element&&this.element.length?((domSiblings=this.options.group?UI.$(['[data-uk-lightbox*=\"'+this.options.group+'\"]',\"[data-uk-lightbox*='\"+this.options.group+\"']\"].join(\",\")):this.element).each(function(){var ele=UI.$(this);siblings.push({source:ele.attr(\"href\"),title:ele.attr(\"data-title\")||ele.attr(\"title\"),type:ele.attr(\"data-lightbox-type\")||\"auto\",link:ele})}),this.index=domSiblings.index(this.element),this.siblings=siblings):this.options.group&&this.options.group.length&&(this.siblings=this.options.group),this.trigger(\"lightbox-init\",[this])},show:function(index){this.modal=function(lightbox){return modal||((modal=UI.$(['<div class=\"uk-modal\">','<div class=\"uk-modal-dialog uk-modal-dialog-lightbox uk-slidenav-position\" style=\"margin-left:auto;margin-right:auto;width:200px;height:200px;top:'+Math.abs(window.innerHeight/2-200)+'px;\">','<a href=\"#\" class=\"uk-modal-close uk-close uk-close-alt\"></a>','<div class=\"uk-lightbox-content\"></div>','<div class=\"uk-modal-spinner uk-hidden\"></div>',\"</div>\",\"</div>\"].join(\"\")).appendTo(\"body\")).dialog=modal.find(\".uk-modal-dialog:first\"),modal.content=modal.find(\".uk-lightbox-content:first\"),modal.loader=modal.find(\".uk-modal-spinner:first\"),modal.closer=modal.find(\".uk-close.uk-close-alt\"),modal.modal=UI.modal(modal,{modal:!1}),modal.on(\"swipeRight swipeLeft\",function(e){modal.lightbox[\"swipeLeft\"==e.type?\"next\":\"previous\"]()}).on(\"click\",\"[data-lightbox-previous], [data-lightbox-next]\",function(e){e.preventDefault(),modal.lightbox[UI.$(this).is(\"[data-lightbox-next]\")?\"next\":\"previous\"]()}),modal.on(\"hide.uk.modal\",function(e){modal.content.html(\"\")}),UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(e){modal.is(\":visible\")&&!UI.Utils.isFullscreen()&&modal.lightbox.fitSize()}.bind(this),100))),modal.lightbox=lightbox,modal}(this),this.modal.dialog.stop(),this.modal.content.stop();var data,item,$this=this,promise=UI.$.Deferred();\"object\"==typeof(index=index||0)&&this.siblings.forEach(function(s,idx){index[0]===s.link[0]&&(index=idx)}),index<0?index=this.siblings.length-index:this.siblings[index]||(index=0),item=this.siblings[index],data={lightbox:$this,source:item.source,type:item.type,index:index,promise:promise,title:item.title,item:item,meta:{content:\"\",width:null,height:null}},this.index=index,this.modal.content.empty(),this.modal.is(\":visible\")||(this.modal.content.css({width:\"\",height:\"\"}).empty(),this.modal.modal.show()),this.modal.loader.removeClass(\"uk-hidden\"),promise.promise().done(function(){$this.data=data,$this.fitSize(data)}).fail(function(){data.meta.content='<div class=\"uk-position-cover uk-flex uk-flex-middle uk-flex-center\"><strong>Loading resource failed!</strong></div>',data.meta.width=400,data.meta.height=300,$this.data=data,$this.fitSize(data)}),$this.trigger(\"showitem.uk.lightbox\",[data])},fitSize:function(){var maxheight,$this=this,data=this.data,pad=this.modal.dialog.outerWidth()-this.modal.dialog.width(),dpad=parseInt(this.modal.dialog.css(\"margin-top\"),10)+parseInt(this.modal.dialog.css(\"margin-bottom\"),10),content=data.meta.content,duration=$this.options.duration,tmp=(1<this.siblings.length&&(content=[content,'<a href=\"#\" class=\"uk-slidenav uk-slidenav-contrast uk-slidenav-previous uk-hidden-touch\" data-lightbox-previous></a>','<a href=\"#\" class=\"uk-slidenav uk-slidenav-contrast uk-slidenav-next uk-hidden-touch\" data-lightbox-next></a>'].join(\"\")),UI.$(\"<div>&nbsp;</div>\").css({opacity:0,position:\"absolute\",top:0,left:0,width:\"100%\",\"max-width\":$this.modal.dialog.css(\"max-width\"),padding:$this.modal.dialog.css(\"padding\"),margin:$this.modal.dialog.css(\"margin\")})),w=data.meta.width,h=data.meta.height,tmp=(tmp.appendTo(\"body\").width(),maxwidth=tmp.width(),maxheight=window.innerHeight-dpad,tmp.remove(),this.modal.dialog.find(\".uk-modal-caption\").remove(),data.title&&(this.modal.dialog.append('<div class=\"uk-modal-caption\">'+data.title+\"</div>\"),maxheight-=this.modal.dialog.find(\".uk-modal-caption\").outerHeight()),maxwidth<data.meta.width&&(h=Math.floor(h*(maxwidth/w)),w=maxwidth),maxheight<h&&(h=Math.floor(maxheight),w=Math.ceil(data.meta.width*(maxheight/data.meta.height))),this.modal.content.css(\"opacity\",0).width(w).html(content),\"iframe\"==data.type&&this.modal.content.find(\"iframe:first\").height(h),h+pad),maxwidth=Math.floor(window.innerHeight/2-tmp/2)-dpad;maxwidth<0&&(maxwidth=0),this.modal.closer.addClass(\"uk-hidden\"),$this.modal.data(\"mwidth\")==w&&$this.modal.data(\"mheight\")==h&&(duration=0),this.modal.dialog.animate({width:w+pad,height:h+pad,top:maxwidth},duration,\"swing\",function(){$this.modal.loader.addClass(\"uk-hidden\"),$this.modal.content.css({width:\"\"}).animate({opacity:1},function(){$this.modal.closer.removeClass(\"uk-hidden\")}),$this.modal.data({mwidth:w,mheight:h})})},next:function(){this.show(this.siblings[this.index+1]?this.index+1:0)},previous:function(){this.show(this.siblings[this.index-1]?this.index-1:this.siblings.length-1)}}),UI.plugin(\"lightbox\",\"image\",{init:function(lightbox){lightbox.on(\"showitem.uk.lightbox\",function(e,data){var resolve,img;(\"image\"==data.type||data.source&&data.source.match(/\\.(jpg|jpeg|png|gif|svg)$/i))&&(resolve=function(source,width,height){data.meta={content:'<img class=\"uk-responsive-width\" width=\"'+width+'\" height=\"'+height+'\" src =\"'+source+'\">',width:width,height:height},data.type=\"image\",data.promise.resolve()},cache[data.source]?resolve(data.source,cache[data.source].width,cache[data.source].height):((img=new Image).onerror=function(){data.promise.reject(\"Loading image failed\")},img.onload=function(){cache[data.source]={width:img.width,height:img.height},resolve(data.source,cache[data.source].width,cache[data.source].height)},img.src=data.source))})}}),UI.plugin(\"lightbox\",\"youtube\",{init:function(lightbox){var youtubeRegExp=/(\\/\\/.*?youtube\\.[a-z]+)\\/watch\\?v=([^&]+)&?(.*)/,youtubeRegExpShort=/youtu\\.be\\/(.*)/;lightbox.on(\"showitem.uk.lightbox\",function(e,data){function resolve(id,width,height){data.meta={content:'<iframe src=\"//www.youtube.com/embed/'+id+'\" width=\"'+width+'\" height=\"'+height+'\" style=\"max-width:100%;\"></iframe>',width:width,height:height},data.type=\"iframe\",data.promise.resolve()}var id,matches,img,lowres;(matches=data.source.match(youtubeRegExp))&&(id=matches[2]),(id=(matches=data.source.match(youtubeRegExpShort))?matches[1]:id)&&(cache[id]?resolve(id,cache[id].width,cache[id].height):(img=new Image,lowres=!1,img.onerror=function(){cache[id]={width:640,height:320},resolve(id,cache[id].width,cache[id].height)},img.onload=function(){120==img.width&&90==img.height?lowres?(cache[id]={width:640,height:320},resolve(id,cache[id].width,cache[id].height)):(lowres=!0,img.src=\"//img.youtube.com/vi/\"+id+\"/0.jpg\"):(cache[id]={width:img.width,height:img.height},resolve(id,img.width,img.height))},img.src=\"//img.youtube.com/vi/\"+id+\"/maxresdefault.jpg\"),e.stopImmediatePropagation())})}}),UI.plugin(\"lightbox\",\"vimeo\",{init:function(lightbox){var matches,regex=/(\\/\\/.*?)vimeo\\.[a-z]+\\/([0-9]+).*?/;lightbox.on(\"showitem.uk.lightbox\",function(e,data){function resolve(id,width,height){data.meta={content:'<iframe src=\"//player.vimeo.com/video/'+id+'\" width=\"'+width+'\" height=\"'+height+'\" style=\"width:100%;box-sizing:border-box;\"></iframe>',width:width,height:height},data.type=\"iframe\",data.promise.resolve()}var id;(matches=data.source.match(regex))&&(id=matches[2],cache[id]?resolve(id,cache[id].width,cache[id].height):UI.$.ajax({type:\"GET\",url:\"http://vimeo.com/api/oembed.json?url=\"+encodeURI(data.source),jsonp:\"callback\",dataType:\"jsonp\",success:function(data){cache[id]={width:data.width,height:data.height},resolve(id,cache[id].width,cache[id].height)}}),e.stopImmediatePropagation())})}}),UI.plugin(\"lightbox\",\"video\",{init:function(lightbox){lightbox.on(\"showitem.uk.lightbox\",function(e,data){function resolve(source,width,height){data.meta={content:'<video class=\"uk-responsive-width\" src=\"'+source+'\" width=\"'+width+'\" height=\"'+height+'\" controls></video>',width:width,height:height},data.type=\"video\",data.promise.resolve()}var vid,idle;\"video\"!=data.type&&!data.source.match(/\\.(mp4|webm|ogv)$/i)||(cache[data.source]?resolve(data.source,cache[data.source].width,cache[data.source].height):(vid=UI.$('<video style=\"position:fixed;visibility:hidden;top:-10000px;\"></video>').attr(\"src\",data.source).appendTo(\"body\"),idle=setInterval(function(){vid[0].videoWidth&&(clearInterval(idle),cache[data.source]={width:vid[0].videoWidth,height:vid[0].videoHeight},resolve(data.source,cache[data.source].width,cache[data.source].height),vid.remove())},20)))})}}),UI.lightbox.create=function(items,options){var group;if(items)return group=[],items.forEach(function(item){group.push(UI.$.extend({source:\"\",title:\"\",type:\"auto\",link:!1},\"string\"==typeof item?{source:item}:item))}),UI.lightbox(UI.$.extend({},options,{group:group}))},UI.lightbox}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var draggingElement,hasTouch=\"ontouchstart\"in window,html=UI.$html,touchedlists=[],$win=UI.$win,eStart=hasTouch?\"touchstart\":\"mousedown\",eMove=hasTouch?\"touchmove\":\"mousemove\",eEnd=hasTouch?\"touchend\":\"mouseup\",eCancel=hasTouch?\"touchcancel\":\"mouseup\";return UI.component(\"nestable\",{defaults:{listBaseClass:\"uk-nestable\",listClass:\"uk-nestable-list\",listItemClass:\"uk-nestable-item\",dragClass:\"uk-nestable-dragged\",movingClass:\"uk-nestable-moving\",noChildrenClass:\"uk-nestable-nochildren\",emptyClass:\"uk-nestable-empty\",handleClass:\"\",collapsedClass:\"uk-collapsed\",placeholderClass:\"uk-nestable-placeholder\",noDragClass:\"uk-nestable-nodrag\",group:!1,maxDepth:10,threshold:20,idlethreshold:10},boot:function(){UI.$html.on(\"mousemove touchmove\",function(e){var top;draggingElement&&((top=draggingElement.offset().top)<UI.$win.scrollTop()?UI.$win.scrollTop(UI.$win.scrollTop()-Math.ceil(draggingElement.height()/2)):top+draggingElement.height()>window.innerHeight+UI.$win.scrollTop()&&UI.$win.scrollTop(UI.$win.scrollTop()+Math.ceil(draggingElement.height()/2)))}),UI.ready(function(context){UI.$(\"[data-uk-nestable]\",context).each(function(){var ele=UI.$(this);ele.data(\"nestable\")||UI.nestable(ele,UI.Utils.options(ele.attr(\"data-uk-nestable\")))})})},init:function(){function onStartEvent(e){var handle=UI.$(e.target);e.target===$this.element[0]||handle.is($this.options._noDragClass)||handle.closest($this.options._noDragClass).length||handle.is(\"[data-nestable-action]\")||handle.closest(\"[data-nestable-action]\").length||!(handle=$this.options.handleClass&&!handle.hasClass($this.options.handleClass)&&$this.options.handleClass?handle.closest($this.options._handleClass):handle).length||$this.dragEl||!hasTouch&&0!==e.button||hasTouch&&1!==e.touches.length||(e.originalEvent&&e.originalEvent.touches&&(e=evt.originalEvent.touches[0]),$this.delayMove=function(evt){evt.preventDefault(),$this.dragStart(e),$this.trigger(\"start.uk.nestable\",[$this]),$this.delayMove=!1},$this.delayMove.x=parseInt(e.pageX,10),$this.delayMove.y=parseInt(e.pageY,10),$this.delayMove.threshold=$this.options.idlethreshold,e.preventDefault())}function onMoveEvent(e){e.originalEvent&&e.originalEvent.touches&&(e=e.originalEvent.touches[0]),$this.delayMove&&(Math.abs(e.pageX-$this.delayMove.x)>$this.delayMove.threshold||Math.abs(e.pageY-$this.delayMove.y)>$this.delayMove.threshold)&&(window.getSelection().toString()?$this.delayMove=!1:$this.delayMove(e)),$this.dragEl&&(e.preventDefault(),$this.dragMove(e),$this.trigger(\"move.uk.nestable\",[$this]))}function onEndEvent(e){$this.dragEl&&(e.preventDefault(),$this.dragStop(hasTouch?e.touches[0]:e)),draggingElement=!1,$this.delayMove=!1}var $this=this;Object.keys(this.options).forEach(function(key){-1!=String(key).indexOf(\"Class\")&&($this.options[\"_\"+key]=\".\"+$this.options[key])}),this.find(this.options._listItemClass).find(\">ul\").addClass(this.options.listClass),this.checkEmptyList(),this.reset(),this.element.data(\"nestable-group\",this.options.group||UI.Utils.uid(\"nestable-group\")),this.find(this.options._listItemClass).each(function(){$this.setParent(UI.$(this))}),this.on(\"click\",\"[data-nestable-action]\",function(e){var action;$this.dragEl||!hasTouch&&0!==e.button||(e.preventDefault(),action=(e=UI.$(e.currentTarget)).data(\"nestableAction\"),e=e.closest($this.options._listItemClass),\"collapse\"===action&&$this.collapseItem(e),\"expand\"===action&&$this.expandItem(e),\"toggle\"===action&&$this.toggleItem(e))});hasTouch?(this.element[0].addEventListener(eStart,onStartEvent,!1),window.addEventListener(eMove,onMoveEvent,!1),window.addEventListener(eEnd,onEndEvent,!1),window.addEventListener(eCancel,onEndEvent,!1)):(this.on(eStart,onStartEvent),$win.on(eMove,onMoveEvent),$win.on(eEnd,onEndEvent))},serialize:function(){function step(level,depth){var array=[];return level.children(list.options._listItemClass).each(function(){for(var attribute,li=UI.$(this),item={},sub=li.children(list.options._listClass),i=0;i<li[0].attributes.length;i++)0===(attribute=li[0].attributes[i]).name.indexOf(\"data-\")&&(item[attribute.name.substr(5)]=UI.Utils.str2json(attribute.value));sub.length&&(item.children=step(sub,depth+1)),array.push(item)}),array}var list=this;return step(list.element,0)},list:function(options){var data=[],step=function(level,depth,parent){level.children(options._listItemClass).each(function(index){var li=UI.$(this),index=UI.$.extend({parent_id:parent||null,depth:depth,order:index},li.data()),sub=li.children(options._listClass);data.push(index),sub.length&&step(sub,depth+1,li.data(options.idProperty||\"id\"))})};return options=UI.$.extend({},this.options,options),step(this.element,0),data},reset:function(){this.mouse={offsetX:0,offsetY:0,startX:0,startY:0,lastX:0,lastY:0,nowX:0,nowY:0,distX:0,distY:0,dirAx:0,dirX:0,dirY:0,lastDirX:0,lastDirY:0,distAxX:0,distAxY:0},this.moving=!1,this.dragEl=null,this.dragRootEl=null,this.dragDepth=0,this.hasNewRoot=!1,this.pointEl=null;for(var i=0;i<touchedlists.length;i++)this.checkEmptyList(touchedlists[i]);touchedlists=[]},toggleItem:function(li){this[li.hasClass(this.options.collapsedClass)?\"expandItem\":\"collapseItem\"](li)},expandItem:function(li){li.removeClass(this.options.collapsedClass)},collapseItem:function(li){li.children(this.options._listClass).length&&li.addClass(this.options.collapsedClass)},expandAll:function(){var list=this;this.find(list.options._listItemClass).each(function(){list.expandItem(UI.$(this))})},collapseAll:function(){var list=this;this.find(list.options._listItemClass).each(function(){list.collapseItem(UI.$(this))})},setParent:function(li){li.children(this.options._listClass).length&&li.addClass(\"uk-parent\")},unsetParent:function(li){li.removeClass(\"uk-parent \"+this.options.collapsedClass),li.children(this.options._listClass).remove()},dragStart:function(e){var mouse=this.mouse,dragItem=UI.$(e.target).closest(this.options._listItemClass),offset=dragItem.offset();this.placeEl=dragItem,mouse.offsetX=e.pageX-offset.left,mouse.offsetY=e.pageY-offset.top,mouse.startX=mouse.lastX=offset.left,mouse.startY=mouse.lastY=offset.top,this.dragRootEl=this.element,this.dragEl=UI.$(\"<ul></ul>\").addClass(this.options.listClass+\" \"+this.options.dragClass).append(dragItem.clone()),this.dragEl.css(\"width\",dragItem.width()),this.placeEl.addClass(this.options.placeholderClass),draggingElement=this.dragEl,this.tmpDragOnSiblings=[dragItem[0].previousSibling,dragItem[0].nextSibling],UI.$body.append(this.dragEl),this.dragEl.css({left:offset.left,top:offset.top});for(var depth,items=this.dragEl.find(this.options._listItemClass),i=0;i<items.length;i++)(depth=UI.$(items[i]).parents(this.options._listClass+\",\"+this.options._listBaseClass).length)>this.dragDepth&&(this.dragDepth=depth);html.addClass(this.options.movingClass)},dragStop:function(e){var el=UI.$(this.placeEl),root=this.placeEl.parents(this.options._listBaseClass+\":first\");this.placeEl.removeClass(this.options.placeholderClass),this.dragEl.remove(),this.element[0]!==root[0]?(root.trigger(\"change.uk.nestable\",[root.data(\"nestable\"),el,\"added\"]),this.element.trigger(\"change.uk.nestable\",[this,el,\"removed\"])):this.element.trigger(\"change.uk.nestable\",[this,el,\"moved\"]),this.trigger(\"stop.uk.nestable\",[this,el]),this.reset(),html.removeClass(this.options.movingClass)},dragMove:function(e){var opt=this.options,mouse=this.mouse,maxDepth=(this.dragRootEl?this.dragRootEl.data(\"nestable\").options:opt).maxDepth,newAx=(this.dragEl.css({left:e.pageX-mouse.offsetX,top:e.pageY-mouse.offsetY}),mouse.lastX=mouse.nowX,mouse.lastY=mouse.nowY,mouse.nowX=e.pageX,mouse.nowY=e.pageY,mouse.distX=mouse.nowX-mouse.lastX,mouse.distY=mouse.nowY-mouse.lastY,mouse.lastDirX=mouse.dirX,mouse.lastDirY=mouse.dirY,mouse.dirX=0===mouse.distX?0:0<mouse.distX?1:-1,mouse.dirY=0===mouse.distY?0:0<mouse.distY?1:-1,Math.abs(mouse.distX)>Math.abs(mouse.distY)?1:0);if(!mouse.moving)return mouse.dirAx=newAx,void(mouse.moving=!0);mouse.dirAx!==newAx?(mouse.distAxX=0,mouse.distAxY=0):(mouse.distAxX+=Math.abs(mouse.distX),0!==mouse.dirX&&mouse.dirX!==mouse.lastDirX&&(mouse.distAxX=0),mouse.distAxY+=Math.abs(mouse.distY),0!==mouse.dirY&&mouse.dirY!==mouse.lastDirY&&(mouse.distAxY=0)),mouse.dirAx=newAx,mouse.dirAx&&mouse.distAxX>=opt.threshold&&(mouse.distAxX=0,newAx=this.placeEl.prev(\"li\"),0<mouse.distX&&newAx.length&&!newAx.hasClass(opt.collapsedClass)&&!newAx.hasClass(opt.noChildrenClass)&&(list=newAx.find(opt._listClass).last(),this.placeEl.parents(opt._listClass+\",\"+opt._listBaseClass).length+this.dragDepth<=maxDepth&&(list.length?(list=newAx.children(opt._listClass).last()).append(this.placeEl):((list=UI.$(\"<ul/>\").addClass(opt.listClass)).append(this.placeEl),newAx.append(list),this.setParent(newAx)))),mouse.distX<0&&(this.placeEl.next(opt._listItemClass).length||(newAx=(list=this.placeEl.closest([opt._listBaseClass,opt._listClass].join(\",\"))).closest(opt._listItemClass)).length&&(newAx.after(this.placeEl),list.children().length||this.unsetParent(newAx))));var list=!1,newAx=e.pageX-(window.pageXOffset||document.scrollLeft||0),pointY=e.pageY-(window.pageYOffset||document.documentElement.scrollTop);if(this.pointEl=UI.$(document.elementFromPoint(newAx,pointY)),opt.handleClass&&this.pointEl.hasClass(opt.handleClass)?this.pointEl=this.pointEl.closest(opt._listItemClass):(newAx=this.pointEl.closest(opt._listItemClass)).length&&(this.pointEl=newAx),!this.placeEl.find(this.pointEl).length){if(this.pointEl.data(\"nestable\")&&!this.pointEl.children().length)list=!0,this.checkEmptyList(this.pointEl);else if(!this.pointEl.length||!this.pointEl.hasClass(opt.listItemClass))return;var pointY=this.element,newAx=this.pointEl.closest(this.options._listBaseClass),isNewRoot=pointY[0]!=newAx[0];mouse.dirAx&&!isNewRoot&&!list||isNewRoot&&opt.group!==newAx.data(\"nestable-group\")||(touchedlists.push(pointY),maxDepth<this.dragDepth-1+this.pointEl.parents(opt._listClass+\",\"+opt._listBaseClass).length||(mouse=e.pageY<this.pointEl.offset().top+this.pointEl.height()/2,maxDepth=this.placeEl.parent(),list?this.pointEl.append(this.placeEl):mouse?this.pointEl.before(this.placeEl):this.pointEl.after(this.placeEl),maxDepth.children().length||maxDepth.data(\"nestable\")||this.unsetParent(maxDepth.parent()),this.checkEmptyList(this.dragRootEl),this.checkEmptyList(pointY),isNewRoot&&(this.dragRootEl=newAx,this.hasNewRoot=this.element[0]!==this.dragRootEl[0])))}},checkEmptyList:function(list){list=list?UI.$(list):this.element,this.options.emptyClass&&list[list.children().length?\"removeClass\":\"addClass\"](this.options.emptyClass)}}),UI.nestable}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";function notify(options){return\"string\"==UI.$.type(options)&&(options={message:options}),arguments[1]&&(options=UI.$.extend(options,\"string\"==UI.$.type(arguments[1])?{status:arguments[1]}:arguments[1])),new Message(options).show()}function Message(options){this.options=UI.$.extend({},Message.defaults,options),this.uuid=UI.Utils.uid(\"notifymsg\"),this.element=UI.$(['<div class=\"uk-notify-message\">','<a class=\"uk-close\"></a>',\"<div></div>\",\"</div>\"].join(\"\")).data(\"notifyMessage\",this),this.content(this.options.message),this.options.status&&(this.element.addClass(\"uk-notify-message-\"+this.options.status),this.currentstatus=this.options.status),this.group=this.options.group,messages[this.uuid]=this,containers[this.options.pos]||(containers[this.options.pos]=UI.$('<div class=\"uk-notify uk-notify-'+this.options.pos+'\"></div>').appendTo(\"body\").on(\"click\",\".uk-notify-message\",function(){var message=UI.$(this).data(\"notifyMessage\");message.element.trigger(\"manualclose.uk.notify\",[message]),message.close()}))}var containers={},messages={};return UI.$.extend(Message.prototype,{uuid:!1,element:!1,timout:!1,currentstatus:\"\",group:!1,show:function(){var $this,marginbottom;if(!this.element.is(\":visible\"))return $this=this,containers[this.options.pos].show().prepend(this.element),marginbottom=parseInt(this.element.css(\"margin-bottom\"),10),this.element.css({opacity:0,\"margin-top\":-1*this.element.outerHeight(),\"margin-bottom\":0}).animate({opacity:1,\"margin-top\":0,\"margin-bottom\":marginbottom},function(){var closefn;$this.options.timeout&&(closefn=function(){$this.close()},$this.timeout=setTimeout(closefn,$this.options.timeout),$this.element.hover(function(){clearTimeout($this.timeout)},function(){$this.timeout=setTimeout(closefn,$this.options.timeout)}))}),this},close:function(instantly){function finalize(){$this.element.remove(),containers[$this.options.pos].children().length||containers[$this.options.pos].hide(),$this.options.onClose.apply($this,[]),$this.element.trigger(\"close.uk.notify\",[$this]),delete messages[$this.uuid]}var $this=this;this.timeout&&clearTimeout(this.timeout),instantly?finalize():this.element.animate({opacity:0,\"margin-top\":-1*this.element.outerHeight(),\"margin-bottom\":0},function(){finalize()})},content:function(html){var container=this.element.find(\">div\");return html?(container.html(html),this):container.html()},status:function(status){return status?(this.element.removeClass(\"uk-notify-message-\"+this.currentstatus).addClass(\"uk-notify-message-\"+status),this.currentstatus=status,this):this.currentstatus}}),Message.defaults={message:\"\",status:\"\",timeout:5e3,group:null,pos:\"top-center\",onClose:function(){}},UI.notify=notify,UI.notify.message=Message,UI.notify.closeAll=function(group,instantly){if(group)for(var id in messages)group===messages[id].group&&messages[id].close(instantly);else for(id in messages)messages[id].close(instantly)},notify}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";return UI.component(\"pagination\",{defaults:{items:1,itemsOnPage:1,pages:0,displayedPages:7,edges:1,currentPage:0,lblPrev:!1,lblNext:!1,onSelectPage:function(){}},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-pagination]\",context).each(function(){var ele=UI.$(this);ele.data(\"pagination\")||UI.pagination(ele,UI.Utils.options(ele.attr(\"data-uk-pagination\")))})})},init:function(){var $this=this;this.pages=this.options.pages||(Math.ceil(this.options.items/this.options.itemsOnPage)?Math.ceil(this.options.items/this.options.itemsOnPage):1),this.items=this.options.items,this.currentPage=this.options.currentPage,this.halfDisplayed=this.options.displayedPages/2,this.on(\"click\",\"a[data-page]\",function(e){e.preventDefault(),$this.selectPage(UI.$(this).data(\"page\"))}),this._render()},_getInterval:function(){return{start:Math.ceil(this.currentPage>this.halfDisplayed?Math.max(Math.min(this.currentPage-this.halfDisplayed,this.pages-this.options.displayedPages),0):0),end:Math.ceil(this.currentPage>this.halfDisplayed?Math.min(this.currentPage+this.halfDisplayed,this.pages):Math.min(this.options.displayedPages,this.pages))}},render:function(pages){this.pages=pages||this.pages,this._render()},selectPage:function(pageIndex,pages){this.currentPage=pageIndex,this.render(pages),this.options.onSelectPage.apply(this,[pageIndex]),this.trigger(\"select.uk.pagination\",[pageIndex,this])},_render:function(){var o=this.options,interval=this._getInterval();if(this.element.empty(),o.lblPrev&&this._append(this.currentPage-1,{text:o.lblPrev}),0<interval.start&&0<o.edges){for(var end=Math.min(o.edges,interval.start),i=0;i<end;i++)this._append(i);o.edges<interval.start&&interval.start-o.edges!=1?this.element.append(\"<li><span>...</span></li>\"):interval.start-o.edges==1&&this._append(o.edges)}for(i=interval.start;i<interval.end;i++)this._append(i);if(interval.end<this.pages&&0<o.edges)for(this.pages-o.edges>interval.end&&this.pages-o.edges-interval.end!=1?this.element.append(\"<li><span>...</span></li>\"):this.pages-o.edges-interval.end==1&&this._append(interval.end++),i=Math.max(this.pages-o.edges,interval.end);i<this.pages;i++)this._append(i);o.lblNext&&this._append(this.currentPage+1,{text:o.lblNext})},_append:function(pageIndex,opts){pageIndex=pageIndex<0?0:pageIndex<this.pages?pageIndex:this.pages-1,opts=UI.$.extend({text:pageIndex+1},opts),pageIndex=pageIndex==this.currentPage?'<li class=\"uk-active\"><span>'+opts.text+\"</span></li>\":'<li><a href=\"#page-'+(pageIndex+1)+'\" class=\"no-ajaxy\" data-page=\"'+pageIndex+'\">'+opts.text+\"</a></li>\",this.element.append(pageIndex)}}),UI.pagination}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";function checkParallaxes(){scrolltop=UI.$win.scrollTop(),window.requestAnimationFrame(function(){for(var i=0;i<parallaxes.length;i++)parallaxes[i].process()})}var parallaxes=[],supports3d=!1,scrolltop=0,wh=window.innerHeight;UI.component(\"parallax\",{defaults:{velocity:.5,target:!1,viewport:!1,media:!1},boot:function(){supports3d=function(){var has3d,t,el=document.createElement(\"div\"),transforms={WebkitTransform:\"-webkit-transform\",MSTransform:\"-ms-transform\",MozTransform:\"-moz-transform\",Transform:\"transform\"};for(t in document.body.insertBefore(el,null),transforms)void 0!==el.style[t]&&(el.style[t]=\"translate3d(1px,1px,1px)\",has3d=window.getComputedStyle(el).getPropertyValue(transforms[t]));return document.body.removeChild(el),void 0!==has3d&&0<has3d.length&&\"none\"!==has3d}(),UI.$doc.on(\"scrolling.uk.document\",checkParallaxes),UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(){wh=window.innerHeight,checkParallaxes()},50)),UI.ready(function(context){UI.$(\"[data-uk-parallax]\",context).each(function(){var parallax=UI.$(this);parallax.data(\"parallax\")||UI.parallax(parallax,UI.Utils.options(parallax.attr(\"data-uk-parallax\")))})})},init:function(){this.base=this.options.target?UI.$(this.options.target):this.element,this.props={},this.velocity=this.options.velocity||1;var reserved=[\"target\",\"velocity\",\"viewport\",\"plugins\",\"media\"];Object.keys(this.options).forEach(function(prop){var start,end,dir,diff,startend;-1===reserved.indexOf(prop)&&(startend=String(this.options[prop]).split(\",\"),prop.match(/color/i)?(start=startend[1]?startend[0]:this._getStartValue(prop),end=startend[1]||startend[0],start=start||\"rgba(255,255,255,0)\"):(diff=(start=parseFloat(startend[1]?startend[0]:this._getStartValue(prop)))<(end=parseFloat(startend[1]||startend[0]))?end-start:start-end,dir=start<end?1:-1),this.props[prop]={start:start,end:end,dir:dir,diff:diff})}.bind(this)),parallaxes.push(this)},process:function(){if(this.options.media)switch(typeof this.options.media){case\"number\":if(window.innerWidth<this.options.media)return!1;break;case\"string\":if(window.matchMedia&&!window.matchMedia(this.options.media).matches)return!1}var percent=this.percentageInViewport();!1!==this.options.viewport&&(percent=0===this.options.viewport?1:percent/this.options.viewport),this.update(percent)},percentageInViewport:function(){var top=this.base.offset().top,height=this.base.outerHeight(),top=scrolltop+wh<top?0:top+height<scrolltop?1:top+height<wh?(scrolltop<wh?scrolltop:scrolltop-wh)/(top+height):(top=scrolltop+wh-top,Math.round(top/((wh+height)/100))/100);return top},update:function(percent){var opts,val,css={transform:\"\"},compercent=percent*(1-(this.velocity-this.velocity*percent));1<(compercent=compercent<0?0:compercent)&&(compercent=1),void 0!==this._percent&&this._percent==compercent||(Object.keys(this.props).forEach(function(prop){switch(opts=this.props[prop],0===percent?val=opts.start:1===percent?val=opts.end:void 0!==opts.diff&&(val=opts.start+opts.diff*compercent*opts.dir),\"bg\"!=prop&&\"bgp\"!=prop||this._bgcover||(this._bgcover=function(obj,prop,opts){var url,element,size,check,ratio,width,height,img=new Image;return element=obj.element.css({\"background-size\":\"cover\",\"background-repeat\":\"no-repeat\"}),url=element.css(\"background-image\").replace(/^url\\(/g,\"\").replace(/\\)$/g,\"\").replace(/(\"|')/g,\"\"),check=function(){var w=element.innerWidth(),h=element.innerHeight(),extra=\"bg\"==prop?opts.diff:opts.diff/100*h;if(h+=extra,(w+=Math.ceil(extra*ratio))-extra<size.w&&h<size.h)return obj.element.css({\"background-size\":\"auto\"});w/ratio<h?(width=Math.ceil(h*ratio),(height=h)>window.innerHeight&&(width*=1.2,height*=1.2)):(width=w,height=Math.ceil(w/ratio)),element.css({\"background-size\":width+\"px \"+height+\"px\"}).data(\"bgsize\",{w:width,h:height})},img.onerror=function(){},img.onload=function(){size={w:img.width,h:img.height},ratio=img.width/img.height,UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(){check()},50)),check()},img.src=url,!0}(this,prop,opts)),prop){case\"x\":css.transform+=supports3d?\" translate3d(\"+val+\"px, 0, 0)\":\" translateX(\"+val+\"px)\";break;case\"xp\":css.transform+=supports3d?\" translate3d(\"+val+\"%, 0, 0)\":\" translateX(\"+val+\"%)\";break;case\"y\":css.transform+=supports3d?\" translate3d(0, \"+val+\"px, 0)\":\" translateY(\"+val+\"px)\";break;case\"yp\":css.transform+=supports3d?\" translate3d(0, \"+val+\"%, 0)\":\" translateY(\"+val+\"%)\";break;case\"rotate\":css.transform+=\" rotate(\"+val+\"deg)\";break;case\"scale\":css.transform+=\" scale(\"+val+\")\";break;case\"bg\":css[\"background-position\"]=\"50% \"+val+\"px\";break;case\"bgp\":css[\"background-position\"]=\"50% \"+val+\"%\";break;case\"color\":case\"background-color\":case\"border-color\":css[prop]=(start=opts.start,end=opts.end,pos=compercent,start=parseColor(start),end=parseColor(end),function(begin,end,pos){pos=\"rgba(\"+parseInt(begin[0]+pos*(end[0]-begin[0]),10)+\",\"+parseInt(begin[1]+pos*(end[1]-begin[1]),10)+\",\"+parseInt(begin[2]+pos*(end[2]-begin[2]),10)+\",\"+(begin&&end?parseFloat(begin[3]+pos*(end[3]-begin[3])):1);return pos+=\")\"}(start,end,pos=pos||0));break;default:css[prop]=val}var start,end,pos}.bind(this)),this.element.css(css),this._percent=compercent)},_getStartValue:function(prop){return(\"scale\"===prop?1:this.element.css(prop))||0}});var colors={black:[0,0,0,1],blue:[0,0,255,1],brown:[165,42,42,1],cyan:[0,255,255,1],fuchsia:[255,0,255,1],gold:[255,215,0,1],green:[0,128,0,1],indigo:[75,0,130,1],khaki:[240,230,140,1],lime:[0,255,0,1],magenta:[255,0,255,1],maroon:[128,0,0,1],navy:[0,0,128,1],olive:[128,128,0,1],orange:[255,165,0,1],pink:[255,192,203,1],purple:[128,0,128,1],violet:[128,0,128,1],red:[255,0,0,1],silver:[192,192,192,1],white:[255,255,255,1],yellow:[255,255,0,1],transparent:[255,255,255,0]};function parseColor(color){var match=(match=/#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})/.exec(color))?[parseInt(match[1],16),parseInt(match[2],16),parseInt(match[3],16),1]:(match=/#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])/.exec(color))?[17*parseInt(match[1],16),17*parseInt(match[2],16),17*parseInt(match[3],16),1]:(match=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(color))?[parseInt(match[1]),parseInt(match[2]),parseInt(match[3]),1]:(match=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9\\.]*)\\s*\\)/.exec(color))?[parseInt(match[1],10),parseInt(match[2],10),parseInt(match[3],10),parseFloat(match[4])]:colors[color]||[255,255,255,0];return match}return UI.parallax}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){function checkParallaxes(){requestAnimationFrame(function(){for(var i=0;i<parallaxes.length;i++)parallaxes[i].process()})}var parallaxes=[];function getcolumns(element){for(var children=element.children(),element=children.filter(\":visible:first\"),top=element[0].offsetTop+element.outerHeight(),column=0;column<children.length&&!(children[column].offsetTop>=top);column++);return column||1}UI.component(\"gridparallax\",{defaults:{target:!1,smooth:150,translate:150},boot:function(){UI.$doc.on(\"scrolling.uk.document\",checkParallaxes),UI.$win.on(\"load resize orientationchange\",UI.Utils.debounce(function(){checkParallaxes()},50)),UI.ready(function(context){UI.$(\"[data-uk-grid-parallax]\",context).each(function(){var parallax=UI.$(this);parallax.data(\"gridparallax\")||UI.gridparallax(parallax,UI.Utils.options(parallax.attr(\"data-uk-grid-parallax\")))})})},init:function(){var $this=this;function fn(){var columns=getcolumns($this.element);$this.element.css(\"margin-bottom\",\"\"),1<columns&&$this.element.css(\"margin-bottom\",$this.options.translate+parseInt($this.element.css(\"margin-bottom\")))}this.initItems().process(),parallaxes.push(this),UI.$win.on(\"load resize orientationchange\",(UI.$(function(){fn()}),UI.Utils.debounce(fn,50)))},initItems:function(){var smooth=this.options.smooth;return this.items=(this.options.target?this.element.find(this.options.target):this.element.children()).each(function(){UI.$(this).css({transition:\"transform \"+smooth+\"ms linear\",transform:\"\"})}),this},process:function(){var percent=function(element){var distance,percent,top=element.offset().top,element=element.outerHeight(),scrolltop=UIkit.$win.scrollTop(),wh=window.innerHeight;scrolltop+wh<top?percent=0:top+element<scrolltop?percent=1:(percent=top+element<wh?(scrolltop<wh?scrolltop:scrolltop-wh)/(top+element):(distance=scrolltop+wh-top,Math.round(distance/((wh+element)/100))/100),top<wh&&(percent=percent*scrolltop/(top+element-wh)));return 1<percent?1:percent}(this.element),columns=getcolumns(this.element),items=this.items,mods=[columns-1];if(1!=columns&&percent){for(;mods.length<columns&&mods[mods.length-1]-2;)mods.push(mods[mods.length-1]-2);var percenttranslate=percent*this.options.translate;items.each(function(idx,ele,translate){translate=-1!=mods.indexOf((idx+1)%columns)?percenttranslate:percenttranslate/8,UI.$(this).css(\"transform\",\"translate3d(0,\"+translate+\"px, 0)\")})}else items.css(\"transform\",\"\")}})}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";UI.component(\"search\",{defaults:{msgResultsHeader:\"Search Results\",msgMoreResults:\"More Results\",msgNoResults:\"No results found\",template:'<ul class=\"uk-nav uk-nav-search uk-autocomplete-results\">                                      {{#msgResultsHeader}}<li class=\"uk-nav-header uk-skip\">{{msgResultsHeader}}</li>{{/msgResultsHeader}}                                      {{#items && items.length}}                                          {{~items}}                                          <li data-url=\"{{!$item.url}}\">                                              <a href=\"{{!$item.url}}\">                                                  {{{$item.title}}}                                                  {{#$item.text}}<div>{{{$item.text}}}</div>{{/$item.text}}                                              </a>                                          </li>                                          {{/items}}                                          {{#msgMoreResults}}                                              <li class=\"uk-nav-divider uk-skip\"></li>                                              <li class=\"uk-search-moreresults\" data-moreresults=\"true\"><a href=\"#\" onclick=\"jQuery(this).closest(\\'form\\').submit();\">{{msgMoreResults}}</a></li>                                          {{/msgMoreResults}}                                      {{/end}}                                      {{^items.length}}                                        {{#msgNoResults}}<li class=\"uk-skip\"><a>{{msgNoResults}}</a></li>{{/msgNoResults}}                                      {{/end}}                                  </ul>',renderer:function(data){var opts=this.options;this.dropdown.append(this.template({items:data.results||[],msgResultsHeader:opts.msgResultsHeader,msgMoreResults:opts.msgMoreResults,msgNoResults:opts.msgNoResults})),this.show()}},boot:function(){UI.$html.on(\"focus.search.uikit\",\"[data-uk-search]\",function(e){var ele=UI.$(this);ele.data(\"search\")||UI.search(ele,UI.Utils.options(ele.attr(\"data-uk-search\")))})},init:function(){var $this=this;this.autocomplete=UI.autocomplete(this.element,this.options),this.autocomplete.dropdown.addClass(\"uk-dropdown-search\"),this.autocomplete.input.on(\"keyup\",function(){$this.element[$this.autocomplete.input.val()?\"addClass\":\"removeClass\"](\"uk-active\")}).closest(\"form\").on(\"reset\",function(){$this.value=\"\",$this.element.removeClass(\"uk-active\")}),this.on(\"selectitem.uk.autocomplete\",function(e,data){data.url?location.href=data.url:data.moreresults&&$this.autocomplete.input.closest(\"form\").submit()}),this.element.data(\"search\",this)}})}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var dragging,delayIdle,anchor,dragged,store={};return UI.component(\"slider\",{defaults:{center:!1,threshold:10,infinite:!0,autoplay:!1,autoplayInterval:7e3,pauseOnHover:!0,activecls:\"uk-active\"},boot:function(){UI.ready(function(context){setTimeout(function(){UI.$(\"[data-uk-slider]\",context).each(function(){var ele=UI.$(this);ele.data(\"slider\")||UI.slider(ele,UI.Utils.options(ele.attr(\"data-uk-slider\")))})},0)})},init:function(){var $this=this;this.container=this.element.find(\".uk-slider\"),this.focus=0,UI.$win.on(\"resize load\",UI.Utils.debounce(function(){$this.resize(!0)},100)),this.on(\"click.uk.slider\",\"[data-uk-slider-item]\",function(e){e.preventDefault();var item=UI.$(this).attr(\"data-uk-slider-item\");if($this.focus!=item)switch($this.stop(),item){case\"next\":case\"previous\":$this[\"next\"==item?\"next\":\"previous\"]();break;default:$this.updateFocus(parseInt(item,10))}}),this.container.on({\"touchstart mousedown\":function(evt){(evt=evt.originalEvent&&evt.originalEvent.touches?evt.originalEvent.touches[0]:evt).button&&2==evt.button||!$this.active||($this.stop(),anchor=UI.$(evt.target).is(\"a\")?UI.$(evt.target):UI.$(evt.target).parents(\"a:first\"),dragged=!1,anchor.length&&anchor.one(\"click\",function(e){dragged&&e.preventDefault()}),(delayIdle=function(e){dragged=!0,dragging=$this,store={touchx:parseInt(e.pageX,10),dir:1,focus:$this.focus,base:$this.options.center?\"center\":\"area\"},e.originalEvent&&e.originalEvent.touches&&(e=e.originalEvent.touches[0]),dragging.element.data({\"pointer-start\":{x:parseInt(e.pageX,10),y:parseInt(e.pageY,10)},\"pointer-pos-start\":$this.pos}),$this.container.addClass(\"uk-drag\"),delayIdle=!1}).x=parseInt(evt.pageX,10),delayIdle.threshold=$this.options.threshold)},mouseenter:function(){$this.options.pauseOnHover&&($this.hovering=!0)},mouseleave:function(){$this.hovering=!1}}),this.resize(!0),this.on(\"display.uk.check\",function(){$this.element.is(\":visible\")&&$this.resize(!0)}),this.element.find(\"a,img\").attr(\"draggable\",\"false\"),this.options.autoplay&&this.start()},resize:function(focus){var item,width,cwidth,size,$this=this,pos=0,maxheight=0;if(this.items=this.container.children().filter(\":visible\"),this.vp=this.element[0].getBoundingClientRect().width,this.container.css({\"min-width\":\"\",\"min-height\":\"\"}),this.items.each(function(idx){item=UI.$(this),size=item.css({left:\"\",width:\"\"})[0].getBoundingClientRect(),width=size.width,cwidth=item.width(),maxheight=Math.max(maxheight,size.height),item.css({left:pos,width:width}).data({idx:idx,left:pos,width:width,cwidth:cwidth,area:pos+width,center:pos-($this.vp/2-cwidth/2)}),pos+=width}),this.container.css({\"min-width\":pos,\"min-height\":maxheight}),this.options.infinite&&(pos<=2*this.vp||this.items.length<5)&&!this.itemsResized)return this.container.children().each(function(idx){$this.container.append($this.items.eq(idx).clone(!0).attr(\"id\",\"\"))}).each(function(idx){$this.container.append($this.items.eq(idx).clone(!0).attr(\"id\",\"\"))}),this.itemsResized=!0,this.resize();this.cw=pos,this.pos=0,this.active=pos>=this.vp,this.container.css({\"-ms-transform\":\"\",\"-webkit-transform\":\"\",transform:\"\"}),focus&&this.updateFocus(this.focus)},updatePos:function(pos){this.pos=pos,this.container.css({\"-ms-transform\":\"translateX(\"+pos+\"px)\",\"-webkit-transform\":\"translateX(\"+pos+\"px)\",transform:\"translateX(\"+pos+\"px)\"})},updateFocus:function(idx,dir){if(this.active){dir=dir||(idx>this.focus?1:-1);var area,i,item=this.items.eq(idx);if(this.options.infinite&&this.infinite(idx,dir),this.options.center)this.updatePos(-1*item.data(\"center\")),this.items.filter(\".\"+this.options.activecls).removeClass(this.options.activecls),item.addClass(this.options.activecls);else if(this.options.infinite)this.updatePos(-1*item.data(\"left\"));else{for(area=0,i=idx;i<this.items.length;i++)area+=this.items.eq(i).data(\"width\");if(area>this.vp)this.updatePos(-1*item.data(\"left\"));else if(1==dir){for(area=0,i=this.items.length-1;0<=i;i--){if((area+=this.items.eq(i).data(\"width\"))==this.vp){idx=i;break}if(area>this.vp){idx=i<this.items.length-1?i+1:i;break}}area>this.vp?this.updatePos(-1*(this.container.width()-this.vp)):this.updatePos(-1*this.items.eq(idx).data(\"left\"))}}var left=this.items.eq(idx).data(\"left\");this.items.removeClass(\"uk-slide-before uk-slide-after\").each(function(i){i!==idx&&UI.$(this).addClass(UI.$(this).data(\"left\")<left?\"uk-slide-before\":\"uk-slide-after\")}),this.focus=idx,this.trigger(\"focusitem.uk.slider\",[idx,this.items.eq(idx),this])}},next:function(){var focus=this.items[this.focus+1]?this.focus+1:this.options.infinite?0:this.focus;this.updateFocus(focus,1)},previous:function(){var focus=this.items[this.focus-1]?this.focus-1:this.options.infinite?this.items[this.focus-1]?this.items-1:this.items.length-1:this.focus;this.updateFocus(focus,-1)},start:function(){this.stop();var $this=this;this.interval=setInterval(function(){$this.hovering||$this.next()},this.options.autoplayInterval)},stop:function(){this.interval&&clearInterval(this.interval)},infinite:function(baseidx,direction){var i,$this=this,item=this.items.eq(baseidx),z=baseidx,move=[],area=0;if(1==direction){for(i=0;i<this.items.length&&(z!=baseidx&&(area+=this.items.eq(z).data(\"width\"),move.push(this.items.eq(z))),!(area>this.vp));i++)z=z+1==this.items.length?0:z+1;move.length&&move.forEach(function(itm){var left=item.data(\"area\");itm.css({left:left}).data({left:left,area:left+itm.data(\"width\"),center:left-($this.vp/2-itm.data(\"cwidth\")/2)}),item=itm})}else{for(i=this.items.length-1;-1<i&&(area+=this.items.eq(z).data(\"width\"),z!=baseidx&&move.push(this.items.eq(z)),!(area>this.vp));i--)z=z-1==-1?this.items.length-1:z-1;move.length&&move.forEach(function(itm){var left=item.data(\"left\")-itm.data(\"width\");itm.css({left:left}).data({left:left,area:left+itm.data(\"width\"),center:left-($this.vp/2-itm.data(\"cwidth\")/2)}),item=itm})}}}),UI.$doc.on(\"mousemove.uk.slider touchmove.uk.slider\",function(e){if(e.originalEvent&&e.originalEvent.touches&&(e=e.originalEvent.touches[0]),delayIdle&&Math.abs(e.pageX-delayIdle.x)>delayIdle.threshold&&(window.getSelection().toString()?dragging=delayIdle=!1:delayIdle(e)),dragging){var xDiff,pos,x,focus,item,diff,i,z,itm;if(e.clientX||e.clientY?x=e.clientX:(e.pageX||e.pageY)&&(x=e.pageX-document.body.scrollLeft-document.documentElement.scrollLeft),focus=store.focus,xDiff=x-dragging.element.data(\"pointer-start\").x,pos=dragging.element.data(\"pointer-pos-start\")+xDiff,x=x>dragging.element.data(\"pointer-start\").x?-1:1,item=dragging.items.eq(store.focus),1==x)for(diff=item.data(\"left\")+Math.abs(xDiff),i=0,z=store.focus;i<dragging.items.length;i++){if(itm=dragging.items.eq(z),z!=store.focus&&itm.data(\"left\")<diff&&itm.data(\"area\")>diff){focus=z;break}z=z+1==dragging.items.length?0:z+1}else for(diff=item.data(\"left\")-Math.abs(xDiff),i=0,z=store.focus;i<dragging.items.length;i++){if(itm=dragging.items.eq(z),z!=store.focus&&itm.data(\"area\")<=item.data(\"left\")&&itm.data(\"center\")<diff){focus=z;break}z=z-1==-1?dragging.items.length-1:z-1}dragging.options.infinite&&focus!=store._focus&&dragging.infinite(focus,x),dragging.updatePos(pos),store.dir=x,store._focus=focus,store.touchx=parseInt(e.pageX,10),store.diff=diff}}),UI.$doc.on(\"mouseup.uk.slider touchend.uk.slider\",function(e){if(dragging){dragging.container.removeClass(\"uk-drag\"),dragging.items.eq(store.focus);var itm,i,z,focus=!1;if(1==store.dir)for(i=0,z=store.focus;i<dragging.items.length;i++){if(itm=dragging.items.eq(z),z!=store.focus&&itm.data(\"left\")>store.diff){focus=z;break}z=z+1==dragging.items.length?0:z+1}else for(i=0,z=store.focus;i<dragging.items.length;i++){if(itm=dragging.items.eq(z),z!=store.focus&&itm.data(\"left\")<store.diff){focus=z;break}z=z-1==-1?dragging.items.length-1:z-1}dragging.updateFocus(!1!==focus?focus:store._focus)}dragging=delayIdle=!1}),UI.slider}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_LOCAL_MODULE_16__ = (function(){return component||addon(UIkit)}).apply(__WEBPACK_LOCAL_MODULE_16__exports = {}, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_LOCAL_MODULE_16__ === undefined && (__WEBPACK_LOCAL_MODULE_16__ = __WEBPACK_LOCAL_MODULE_16__exports))}(function(UI){\"use strict\";var Animations,playerId=0;UI.component(\"slideshow\",{defaults:{animation:\"fade\",duration:500,height:\"auto\",start:0,autoplay:!1,autoplayInterval:7e3,videoautoplay:!0,videomute:!0,slices:15,pauseOnHover:!0,kenburns:!1,kenburnsanimations:[\"uk-animation-middle-left\",\"uk-animation-top-right\",\"uk-animation-bottom-left\",\"uk-animation-top-center\",\"\",\"uk-animation-bottom-right\"]},current:!1,interval:null,hovering:!1,boot:function(){UI.ready(function(context){UI.$(\"[data-uk-slideshow]\",context).each(function(){var slideshow=UI.$(this);slideshow.data(\"slideshow\")||UI.slideshow(slideshow,UI.Utils.options(slideshow.attr(\"data-uk-slideshow\")))})})},init:function(){var canvas,kbanimduration,$this=this;this.container=this.element.hasClass(\"uk-slideshow\")?this.element:UI.$(this.find(\".uk-slideshow\")),this.slides=this.container.children(),this.slidesCount=this.slides.length,this.current=this.options.start,this.animating=!1,this.triggers=this.find(\"[data-uk-slideshow-item]\"),this.fixFullscreen=navigator.userAgent.match(/(iPad|iPhone|iPod)/g)&&this.container.hasClass(\"uk-slideshow-fullscreen\"),this.options.kenburns&&(kbanimduration=!0===this.options.kenburns?\"15s\":this.options.kenburns,String(kbanimduration).match(/(ms|s)$/)||(kbanimduration+=\"ms\"),\"string\"==typeof this.options.kenburnsanimations&&(this.options.kenburnsanimations=this.options.kenburnsanimations.split(\",\"))),this.slides.each(function(index){var placeholder,img,slide=UI.$(this),media=slide.children(\"img,video,iframe\").eq(0);if(slide.data(\"media\",media),slide.data(\"sizer\",media),media.length){switch(media[0].nodeName){case\"IMG\":var cover=UI.$('<div class=\"uk-cover-background uk-position-cover\"></div>').css({\"background-image\":\"url(\"+media.attr(\"src\")+\")\"});media.attr(\"width\")&&media.attr(\"height\")&&(placeholder=UI.$(\"<canvas></canvas>\").attr({width:media.attr(\"width\"),height:media.attr(\"height\")}),media.replaceWith(placeholder),media=placeholder,placeholder=void 0),media.css({width:\"100%\",height:\"auto\",opacity:0}),slide.prepend(cover).data(\"cover\",cover);break;case\"IFRAME\":var cover=media[0].src,iframeId=\"sw-\"+ ++playerId;media.attr(\"src\",\"\").on(\"load\",function(){var inv,ic;index===$this.current&&(index!=$this.current||$this.options.videoautoplay)||$this.pausemedia(media),$this.options.videomute&&($this.mutemedia(media),inv=setInterval((ic=0,function(){$this.mutemedia(media),4<=++ic&&clearInterval(inv)}),250))}).data(\"slideshow\",$this).attr(\"data-player-id\",iframeId).attr(\"src\",[cover,-1<cover.indexOf(\"?\")?\"&\":\"?\",\"enablejsapi=1&api=1&player_id=\"+iframeId].join(\"\")).addClass(\"uk-position-absolute\"),UI.support.touch||media.css(\"pointer-events\",\"none\"),placeholder=!0,UI.cover&&(UI.cover(media),media.attr(\"data-uk-cover\",\"{}\"));break;case\"VIDEO\":media.addClass(\"uk-cover-object uk-position-absolute\"),placeholder=!0,$this.options.videomute&&$this.mutemedia(media)}placeholder&&(canvas=UI.$(\"<canvas></canvas>\").attr({width:media[0].width,height:media[0].height}),img=UI.$('<img style=\"width:100%;height:auto;\">').attr(\"src\",canvas[0].toDataURL()),slide.prepend(img),slide.data(\"sizer\",img))}else slide.data(\"sizer\",slide);$this.hasKenBurns(slide)&&slide.data(\"cover\").css({\"-webkit-animation-duration\":kbanimduration,\"animation-duration\":kbanimduration})}),this.on(\"click.uk.slideshow\",\"[data-uk-slideshow-item]\",function(e){e.preventDefault();var slide=UI.$(this).attr(\"data-uk-slideshow-item\");if($this.current!=slide){switch(slide){case\"next\":case\"previous\":$this[\"next\"==slide?\"next\":\"previous\"]();break;default:$this.show(parseInt(slide,10))}$this.stop()}}),this.slides.attr(\"aria-hidden\",\"true\").eq(this.current).addClass(\"uk-active\").attr(\"aria-hidden\",\"false\"),this.triggers.filter('[data-uk-slideshow-item=\"'+this.current+'\"]').addClass(\"uk-active\"),UI.$win.on(\"resize load\",UI.Utils.debounce(function(){$this.resize(),$this.fixFullscreen&&($this.container.css(\"height\",window.innerHeight),$this.slides.css(\"height\",window.innerHeight))},100)),setTimeout(function(){$this.resize()},80),this.options.autoplay&&this.start(),this.options.videoautoplay&&this.slides.eq(this.current).data(\"media\")&&this.playmedia(this.slides.eq(this.current).data(\"media\")),this.options.kenburns&&this.applyKenBurns(this.slides.eq(this.current)),this.container.on({mouseenter:function(){$this.options.pauseOnHover&&($this.hovering=!0)},mouseleave:function(){$this.hovering=!1}}),this.on(\"swipeRight swipeLeft\",function(e){$this[\"swipeLeft\"==e.type?\"next\":\"previous\"]()}),this.on(\"display.uk.check\",function(){$this.element.is(\":visible\")&&($this.resize(),$this.fixFullscreen&&($this.container.css(\"height\",window.innerHeight),$this.slides.css(\"height\",window.innerHeight)))})},resize:function(){var height;this.container.hasClass(\"uk-slideshow-fullscreen\")||(height=this.options.height,\"auto\"===this.options.height&&(height=0,this.slides.css(\"height\",\"\").each(function(){height=Math.max(height,UI.$(this).height())})),this.container.css(\"height\",height),this.slides.css(\"height\",height))},show:function(index,direction){var $this,current,next,currentmedia,animation,nextmedia;this.animating||this.current==index||(this.animating=!0,current=($this=this).slides.eq(this.current),next=this.slides.eq(index),direction=direction||(this.current<index?1:-1),currentmedia=current.data(\"media\"),animation=Animations[this.options.animation]?this.options.animation:\"fade\",nextmedia=next.data(\"media\"),$this.applyKenBurns(next),UI.support.animation||(animation=\"none\"),current=UI.$(current),next=UI.$(next),$this.trigger(\"beforeshow.uk.slideshow\",[next,current,$this]),Animations[animation].apply(this,[current,next,direction]).then(function(){$this.animating&&(currentmedia&&currentmedia.is(\"video,iframe\")&&$this.pausemedia(currentmedia),nextmedia&&nextmedia.is(\"video,iframe\")&&$this.playmedia(nextmedia),next.addClass(\"uk-active\").attr(\"aria-hidden\",\"false\"),current.removeClass(\"uk-active\").attr(\"aria-hidden\",\"true\"),$this.animating=!1,$this.current=index,UI.Utils.checkDisplay(next,'[class*=\"uk-animation-\"]:not(.uk-cover-background.uk-position-cover)'),$this.trigger(\"show.uk.slideshow\",[next,current,$this]))}),$this.triggers.removeClass(\"uk-active\"),$this.triggers.filter('[data-uk-slideshow-item=\"'+index+'\"]').addClass(\"uk-active\"))},applyKenBurns:function(slide){var animations,index;this.hasKenBurns(slide)&&(animations=this.options.kenburnsanimations,index=this.kbindex||0,slide.data(\"cover\").attr(\"class\",\"uk-cover-background uk-position-cover\").width(),slide.data(\"cover\").addClass([\"uk-animation-scale\",\"uk-animation-reverse\",animations[index].trim()].join(\" \")),this.kbindex=animations[index+1]?index+1:0)},hasKenBurns:function(slide){return this.options.kenburns&&slide.data(\"cover\")},next:function(){this.show(this.slides[this.current+1]?this.current+1:0,1)},previous:function(){this.show(this.slides[this.current-1]?this.current-1:this.slides.length-1,-1)},start:function(){this.stop();var $this=this;this.interval=setInterval(function(){$this.hovering||$this.next()},this.options.autoplayInterval)},stop:function(){this.interval&&clearInterval(this.interval)},playmedia:function(media){if(media&&media[0])switch(media[0].nodeName){case\"VIDEO\":this.options.videomute||(media[0].muted=!1),media[0].play();break;case\"IFRAME\":this.options.videomute||media[0].contentWindow.postMessage('{ \"event\": \"command\", \"func\": \"unmute\", \"method\":\"setVolume\", \"value\":1}',\"*\"),media[0].contentWindow.postMessage('{ \"event\": \"command\", \"func\": \"playVideo\", \"method\":\"play\"}',\"*\")}},pausemedia:function(media){switch(media[0].nodeName){case\"VIDEO\":media[0].pause();break;case\"IFRAME\":media[0].contentWindow.postMessage('{ \"event\": \"command\", \"func\": \"pauseVideo\", \"method\":\"pause\"}',\"*\")}},mutemedia:function(media){switch(media[0].nodeName){case\"VIDEO\":media[0].muted=!0;break;case\"IFRAME\":media[0].contentWindow.postMessage('{ \"event\": \"command\", \"func\": \"mute\", \"method\":\"setVolume\", \"value\":0}',\"*\")}}}),Animations={none:function(){var d=UI.$.Deferred();return d.resolve(),d.promise()},scroll:function(current,next,dir){var d=UI.$.Deferred();return current.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"opacity\",1).one(UI.support.animation.end,function(){current.removeClass(-1==dir?\"uk-slideshow-scroll-backward-out\":\"uk-slideshow-scroll-forward-out\"),next.css(\"opacity\",\"\").removeClass(-1==dir?\"uk-slideshow-scroll-backward-in\":\"uk-slideshow-scroll-forward-in\"),d.resolve()}.bind(this)),current.addClass(-1==dir?\"uk-slideshow-scroll-backward-out\":\"uk-slideshow-scroll-forward-out\"),next.addClass(-1==dir?\"uk-slideshow-scroll-backward-in\":\"uk-slideshow-scroll-forward-in\"),next.width(),d.promise()},swipe:function(current,next,dir){var d=UI.$.Deferred();return current.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"opacity\",1).one(UI.support.animation.end,function(){current.removeClass(-1===dir?\"uk-slideshow-swipe-backward-out\":\"uk-slideshow-swipe-forward-out\"),next.css(\"opacity\",\"\").removeClass(-1===dir?\"uk-slideshow-swipe-backward-in\":\"uk-slideshow-swipe-forward-in\"),d.resolve()}.bind(this)),current.addClass(-1==dir?\"uk-slideshow-swipe-backward-out\":\"uk-slideshow-swipe-forward-out\"),next.addClass(-1==dir?\"uk-slideshow-swipe-backward-in\":\"uk-slideshow-swipe-forward-in\"),next.width(),d.promise()},scale:function(current,next,dir){var d=UI.$.Deferred();return current.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"opacity\",1),current.one(UI.support.animation.end,function(){current.removeClass(\"uk-slideshow-scale-out\"),next.css(\"opacity\",\"\"),d.resolve()}.bind(this)),current.addClass(\"uk-slideshow-scale-out\"),current.width(),d.promise()},fade:function(current,next,dir){var d=UI.$.Deferred();return current.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"animation-duration\",this.options.duration+\"ms\"),next.css(\"opacity\",1),next.data(\"cover\")||next.data(\"placeholder\")||next.css(\"opacity\",1).one(UI.support.animation.end,function(){next.removeClass(\"uk-slideshow-fade-in\")}).addClass(\"uk-slideshow-fade-in\"),current.one(UI.support.animation.end,function(){current.removeClass(\"uk-slideshow-fade-out\"),next.css(\"opacity\",\"\"),d.resolve()}.bind(this)),current.addClass(\"uk-slideshow-fade-out\"),current.width(),d.promise()}},UI.slideshow.animations=Animations,window.addEventListener(\"message\",function(e){var data=e.data;if(\"string\"==typeof data)try{data=JSON.parse(data)}catch(err){data={}}e.origin&&-1<e.origin.indexOf(\"vimeo\")&&\"ready\"==data.event&&data.player_id&&(e=UI.$('[data-player-id=\"'+data.player_id+'\"]')).length&&e.data(\"slideshow\").mutemedia(e)},!1)}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__,__WEBPACK_LOCAL_MODULE_16__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var Animations=UI.slideshow.animations,shuffle=(UI.$.extend(UI.slideshow.animations,{slice:function(current,next,dir,fromfx){if(!current.data(\"cover\"))return Animations.fade.apply(this,arguments);for(var d=UI.$.Deferred(),sliceWidth=Math.ceil(this.element.width()/this.options.slices),bgimage=next.data(\"cover\").css(\"background-image\"),ghost=UI.$(\"<li></li>\").css({top:0,left:0,width:this.container.width(),height:this.container.height(),opacity:1,zIndex:15}),ghostWidth=ghost.width(),ghostHeight=ghost.height(),i=0;i<this.options.slices;i++){\"slice-up-down\"==fromfx&&0,this.options.slices;var clipto=\"rect(0px, \"+sliceWidth*(i+1)+\"px, \"+ghostHeight+\"px, \"+sliceWidth*i+\"px)\",clipfrom=\"slice-up\"==fromfx||\"slice-up-down\"==fromfx&&(i%2+2)%2==0?\"rect(\"+ghostHeight+\"px, \"+sliceWidth*(i+1)+\"px, \"+ghostHeight+\"px, \"+sliceWidth*i+\"px)\":\"rect(0px, \"+sliceWidth*(i+1)+\"px, 0px, \"+sliceWidth*i+\"px)\",clipfrom=UI.$('<div class=\"uk-cover-background\"></div>').css({position:\"absolute\",top:0,left:0,width:ghostWidth,height:ghostHeight,\"background-image\":bgimage,clip:clipfrom,opacity:0,transition:\"all \"+this.options.duration+\"ms ease-in-out \"+60*i+\"ms\",\"-webkit-transition\":\"all \"+this.options.duration+\"ms ease-in-out \"+60*i+\"ms\"}).data(\"clip\",clipto);ghost.append(clipfrom)}return this.container.append(ghost),ghost.children().last().on(UI.support.transition.end,function(){ghost.remove(),d.resolve()}),ghost.width(),ghost.children().each(function(){var bar=UI.$(this);bar.css({clip:bar.data(\"clip\"),opacity:1})}),d.promise()},\"slice-up\":function(current,next,dir){return Animations.slice.apply(this,[current,next,dir,\"slice-up\"])},\"slice-down\":function(current,next,dir){return Animations.slice.apply(this,[current,next,dir,\"slice-down\"])},\"slice-up-down\":function(current,next,dir){return Animations.slice.apply(this,[current,next,dir,\"slice-up-down\"])},fold:function(current,next,dir){if(!next.data(\"cover\"))return Animations.fade.apply(this,arguments);for(var bar,d=UI.$.Deferred(),sliceWidth=Math.ceil(this.element.width()/this.options.slices),bgimage=next.data(\"cover\").css(\"background-image\"),ghost=UI.$(\"<li></li>\").css({width:next.width(),height:next.height(),opacity:1,zIndex:15}),ghostWidth=next.width(),ghostHeight=next.height(),i=0;i<this.options.slices;i++)bar=UI.$('<div class=\"uk-cover-background\"></div>').css({position:\"absolute\",top:0,left:0,width:ghostWidth,height:ghostHeight,\"background-image\":bgimage,\"transform-origin\":sliceWidth*i+\"px 0 0\",clip:\"rect(0px, \"+sliceWidth*(i+1)+\"px, \"+ghostHeight+\"px, \"+sliceWidth*i+\"px)\",opacity:0,transform:\"scaleX(0.000001)\",transition:\"all \"+this.options.duration+\"ms ease-in-out \"+(100+60*i)+\"ms\",\"-webkit-transition\":\"all \"+this.options.duration+\"ms ease-in-out \"+(100+60*i)+\"ms\"}),ghost.prepend(bar);return this.container.append(ghost),ghost.width(),ghost.children().first().on(UI.support.transition.end,function(){ghost.remove(),d.resolve()}).end().css({transform:\"scaleX(1)\",opacity:1}),d.promise()},puzzle:function(current,next,dir){if(!next.data(\"cover\"))return Animations.fade.apply(this,arguments);for(var rect,d=UI.$.Deferred(),$this=this,boxCols=Math.round(this.options.slices/2),boxWidth=Math.round(next.width()/boxCols),boxRows=Math.round(next.height()/boxWidth),boxHeight=Math.round(next.height()/boxRows)+1,bgimage=next.data(\"cover\").css(\"background-image\"),ghost=UI.$(\"<li></li>\").css({width:this.container.width(),height:this.container.height(),opacity:1,zIndex:15}),ghostWidth=this.container.width(),ghostHeight=this.container.height(),rows=0;rows<boxRows;rows++)for(var cols=0;cols<boxCols;cols++)rect=[boxHeight*rows+\"px\",(cols==boxCols-1?boxWidth+2:boxWidth)*(cols+1)+\"px\",boxHeight*(rows+1)+\"px\",boxWidth*cols+\"px\"],rect=UI.$('<div class=\"uk-cover-background\"></div>').css({position:\"absolute\",top:0,left:0,opacity:0,width:ghostWidth,height:ghostHeight,\"background-image\":bgimage,clip:\"rect(\"+rect.join(\",\")+\")\",\"-webkit-transform\":\"translateZ(0)\",transform:\"translateZ(0)\"}),ghost.append(rect);this.container.append(ghost);next=shuffle(ghost.children());return next.each(function(i){UI.$(this).css({transition:\"all \"+$this.options.duration+\"ms ease-in-out \"+(50+25*i)+\"ms\",\"-webkit-transition\":\"all \"+$this.options.duration+\"ms ease-in-out \"+(50+25*i)+\"ms\"})}).last().on(UI.support.transition.end,function(){ghost.remove(),d.resolve()}),ghost.width(),next.css({opacity:1}),d.promise()},boxes:function(current,next,dir,fromfx){if(!next.data(\"cover\"))return Animations.fade.apply(this,arguments);for(var rect,cols,d=UI.$.Deferred(),boxCols=Math.round(this.options.slices/2),boxWidth=Math.round(next.width()/boxCols),boxRows=Math.round(next.height()/boxWidth),boxHeight=Math.round(next.height()/boxRows)+1,bgimage=next.data(\"cover\").css(\"background-image\"),ghost=UI.$(\"<li></li>\").css({width:next.width(),height:next.height(),opacity:1,zIndex:15}),ghostWidth=next.width(),ghostHeight=next.height(),rows=0;rows<boxRows;rows++)for(cols=0;cols<boxCols;cols++)rect=[boxHeight*rows+\"px\",(cols==boxCols-1?boxWidth+2:boxWidth)*(cols+1)+\"px\",boxHeight*(rows+1)+\"px\",boxWidth*cols+\"px\"],rect=UI.$('<div class=\"uk-cover-background\"></div>').css({position:\"absolute\",top:0,left:0,opacity:1,width:ghostWidth,height:ghostHeight,\"background-image\":bgimage,\"transform-origin\":rect[3]+\" \"+rect[0]+\" 0\",clip:\"rect(\"+rect.join(\",\")+\")\",\"-webkit-transform\":\"scale(0.0000000000000001)\",transform:\"scale(0.0000000000000001)\"}),ghost.append(rect);this.container.append(ghost);var rowIndex=0,colIndex=0,timeBuff=0,box2Darr=[[]],next=ghost.children();for((next=\"boxes-reverse\"==fromfx?[].reverse.apply(next):next).each(function(){box2Darr[rowIndex][colIndex]=UI.$(this),++colIndex==boxCols&&(colIndex=0,box2Darr[++rowIndex]=[])}),prevCol=cols=0;cols<boxCols*boxRows;cols++){for(var prevCol=cols,row=0;row<boxRows;row++)0<=prevCol&&prevCol<boxCols&&box2Darr[row][prevCol].css({transition:\"all \"+this.options.duration+\"ms linear \"+(50+timeBuff)+\"ms\",\"-webkit-transition\":\"all \"+this.options.duration+\"ms linear \"+(50+timeBuff)+\"ms\"}),prevCol--;timeBuff+=100}return next.last().on(UI.support.transition.end,function(){ghost.remove(),d.resolve()}),ghost.width(),next.css({\"-webkit-transform\":\"scale(1)\",transform:\"scale(1)\"}),d.promise()},\"boxes-reverse\":function(current,next,dir){return Animations.boxes.apply(this,[current,next,dir,\"boxes-reverse\"])},\"random-fx\":function(){var animations=[\"slice-up\",\"fold\",\"puzzle\",\"slice-down\",\"boxes\",\"slice-up-down\",\"boxes-reverse\"];return this.fxIndex=(void 0===this.fxIndex?-1:this.fxIndex)+1,animations[this.fxIndex]||(this.fxIndex=0),Animations[animations[this.fxIndex]].apply(this,arguments)}}),function(arr){for(var j,x,i=arr.length;i;j=parseInt(Math.random()*i),x=arr[--i],arr[i]=arr[j],arr[j]=x);return arr});return UI.slideshow.animations}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var draggingPlaceholder,currentlyDraggingElement,currentlyDraggingTarget,moving,delayIdle,touchedlists,moved,overElement,supportsTouch=\"ontouchstart\"in window||window.DocumentTouch&&document instanceof DocumentTouch;return UI.component(\"sortable\",{defaults:{animation:150,threshold:10,childClass:\"uk-sortable-item\",placeholderClass:\"uk-sortable-placeholder\",overClass:\"uk-sortable-over\",draggingClass:\"uk-sortable-dragged\",dragMovingClass:\"uk-sortable-moving\",baseClass:\"uk-sortable\",noDragClass:\"uk-sortable-nodrag\",emptyClass:\"uk-sortable-empty\",dragCustomClass:\"\",handleClass:!1,group:!1,stop:function(){},start:function(){},change:function(){}},boot:function(){UI.ready(function(context){UI.$(\"[data-uk-sortable]\",context).each(function(){var ele=UI.$(this);ele.data(\"sortable\")||UI.sortable(ele,UI.Utils.options(ele.attr(\"data-uk-sortable\")))})}),UI.$html.on(\"mousemove touchmove\",function(e){var src,left;delayIdle&&(src=e.originalEvent.targetTouches?e.originalEvent.targetTouches[0]:e,(Math.abs(src.pageX-delayIdle.pos.x)>delayIdle.threshold||Math.abs(src.pageY-delayIdle.pos.y)>delayIdle.threshold)&&delayIdle.apply(src)),draggingPlaceholder&&(moving||(moving=!0,draggingPlaceholder.show(),draggingPlaceholder.$current.addClass(draggingPlaceholder.$sortable.options.placeholderClass),draggingPlaceholder.$sortable.element.children().addClass(draggingPlaceholder.$sortable.options.childClass),UI.$html.addClass(draggingPlaceholder.$sortable.options.dragMovingClass)),src=draggingPlaceholder.data(\"mouse-offset\"),left=parseInt(e.originalEvent.pageX,10)+src.left,e=parseInt(e.originalEvent.pageY,10)+src.top,draggingPlaceholder.css({left:left,top:e}),e+draggingPlaceholder.height()/3>document.body.offsetHeight||(e<UI.$win.scrollTop()?UI.$win.scrollTop(UI.$win.scrollTop()-Math.ceil(draggingPlaceholder.height()/3)):e+draggingPlaceholder.height()/3>window.innerHeight+UI.$win.scrollTop()&&UI.$win.scrollTop(UI.$win.scrollTop()+Math.ceil(draggingPlaceholder.height()/3))))}),UI.$html.on(\"mouseup touchend\",function(e){var sortable,component;delayIdle=!1,currentlyDraggingElement&&draggingPlaceholder?(sortable=function(ele){ele=UI.$(ele);do{if(ele.data(\"sortable\"))return ele}while((ele=UI.$(ele).parent()).length);return ele}(currentlyDraggingElement),component=draggingPlaceholder.$sortable,e={type:e.type},sortable[0]&&component.dragDrop(e,component.element),component.dragEnd(e,component.element)):currentlyDraggingElement=draggingPlaceholder=null})},init:function(){var $this=this,element=this.element[0],handleDragStart=(touchedlists=[],this.checkEmptyList(),this.element.data(\"sortable-group\",this.options.group||UI.Utils.uid(\"sortable-group\")),delegate(function(e){if(!e.data||!e.data.sortable){var $target=UI.$(e.target),$link=$target.is(\"a[href]\")?$target:$target.parents(\"a[href]\");if(!$target.is(\":input\"))return e.preventDefault(),!supportsTouch&&$link.length&&$link.one(\"click\",function(e){e.preventDefault()}).one(\"mouseup\",function(){moved||$link.trigger(\"click\")}),e.data=e.data||{},e.data.sortable=element,$this.dragStart(e,this)}})),handleDragEnter=delegate(UI.Utils.debounce(function(e){return $this.dragEnter(e,this)})),handleDragLeave=delegate(function(e){var previousCounter=$this.dragenterData(this);$this.dragenterData(this,previousCounter-1),$this.dragenterData(this)||(UI.$(this).removeClass($this.options.overClass),$this.dragenterData(this,!1))}),handleTouchMove=delegate(function(e){return!currentlyDraggingElement||currentlyDraggingElement===this||currentlyDraggingTarget===this||($this.element.children().removeClass($this.options.overClass),currentlyDraggingTarget=this,$this.moveElementNextTo(currentlyDraggingElement,this),function(e){e.stopPropagation&&e.stopPropagation();e.preventDefault&&e.preventDefault();e.returnValue=!1}(e))});function delegate(fn){return function(e){var target;e&&(target=(supportsTouch&&e.touches&&e.touches[0]||{}).target||e.target,supportsTouch&&document.elementFromPoint&&(target=document.elementFromPoint(e.pageX-document.body.scrollLeft,e.pageY-document.body.scrollTop)),overElement=UI.$(target)),UI.$(target).hasClass($this.options.childClass)?fn.apply(target,[e]):target!==element&&(target=function(parent,child){var cur=child;if(cur!=parent)for(;cur;){if(cur.parentNode===parent)return cur;if(!(cur=cur.parentNode)||!cur.ownerDocument||11===cur.nodeType)break}return null}(element,target))&&fn.apply(target,[e])}}this.addDragHandlers=function(){supportsTouch?element.addEventListener(\"touchmove\",handleTouchMove,!1):(element.addEventListener(\"mouseover\",handleDragEnter,!1),element.addEventListener(\"mouseout\",handleDragLeave,!1))},this.removeDragHandlers=function(){supportsTouch?element.removeEventListener(\"touchmove\",handleTouchMove,!1):(element.removeEventListener(\"mouseover\",handleDragEnter,!1),element.removeEventListener(\"mouseout\",handleDragLeave,!1))},window.addEventListener(supportsTouch?\"touchmove\":\"mousemove\",function(e){currentlyDraggingElement&&$this.dragMove(e,$this)},!1),element.addEventListener(supportsTouch?\"touchstart\":\"mousedown\",handleDragStart,!1)},dragStart:function(e,elem){moving=moved=!1;var $current,offset,$this=this,target=UI.$(e.target);if(supportsTouch||2!=e.button){if($this.options.handleClass)if(!(target.hasClass($this.options.handleClass)?target:target.closest(\".\"+$this.options.handleClass,$this.element)).length)return;target.is(\".\"+$this.options.noDragClass)||target.closest(\".\"+$this.options.noDragClass).length||target.is(\":input\")||(currentlyDraggingElement=elem,draggingPlaceholder&&draggingPlaceholder.remove(),$current=UI.$(currentlyDraggingElement),offset=$current.offset(),delayIdle={pos:{x:e.pageX,y:e.pageY},threshold:$this.options.threshold,apply:function(evt){(draggingPlaceholder=UI.$('<div class=\"'+[$this.options.draggingClass,$this.options.dragCustomClass].join(\" \")+'\"></div>').css({display:\"none\",top:offset.top,left:offset.left,width:$current.width(),height:$current.height(),padding:$current.css(\"padding\")}).data({\"mouse-offset\":{left:offset.left-parseInt(evt.pageX,10),top:offset.top-parseInt(evt.pageY,10)},origin:$this.element,index:$current.index()}).append($current.html()).appendTo(\"body\")).$current=$current,draggingPlaceholder.$sortable=$this,$current.data({\"start-list\":$current.parent(),\"start-index\":$current.index(),\"sortable-group\":$this.options.group}),$this.addDragHandlers(),$this.options.start(this,currentlyDraggingElement),$this.trigger(\"start.uk.sortable\",[$this,currentlyDraggingElement]),delayIdle=!(moved=!0)}})}},dragMove:function(e,elem){var e=(overElement=UI.$(document.elementFromPoint(e.pageX-(document.body.scrollLeft||document.scrollLeft||0),e.pageY-(document.body.scrollTop||document.documentElement.scrollTop||0)))).closest(\".\"+this.options.baseClass),groupOver=e.data(\"sortable-group\"),$current=UI.$(currentlyDraggingElement),currentRoot=$current.parent(),groupCurrent=$current.data(\"sortable-group\");e[0]!==currentRoot[0]&&void 0!==groupCurrent&&groupOver===groupCurrent&&(e.data(\"sortable\").addDragHandlers(),touchedlists.push(e),e.children().addClass(this.options.childClass),0<e.children().length?(groupOver=overElement.closest(\".\"+this.options.childClass)).length?groupOver.before($current):e.append($current):overElement.append($current),UIkit.$doc.trigger(\"mouseover\")),this.checkEmptyList(),this.checkEmptyList(currentRoot)},dragEnter:function(e,elem){if(!currentlyDraggingElement||currentlyDraggingElement===elem)return!0;var previousCounter=this.dragenterData(elem);if(this.dragenterData(elem,previousCounter+1),0===previousCounter){var previousCounter=UI.$(elem).parent(),startlist=UI.$(currentlyDraggingElement).data(\"start-list\");if(previousCounter[0]!==startlist[0]){startlist=previousCounter.data(\"sortable-group\"),previousCounter=UI.$(currentlyDraggingElement).data(\"sortable-group\");if((startlist||previousCounter)&&startlist!=previousCounter)return!1}UI.$(elem).addClass(this.options.overClass),this.moveElementNextTo(currentlyDraggingElement,elem)}return!1},dragEnd:function(e,elem){var $this=this;currentlyDraggingElement&&(this.options.stop(elem),this.trigger(\"stop.uk.sortable\",[this])),currentlyDraggingTarget=currentlyDraggingElement=null,touchedlists.push(this.element),touchedlists.forEach(function(el,i){UI.$(el).children().each(function(){1===this.nodeType&&(UI.$(this).removeClass($this.options.overClass).removeClass($this.options.placeholderClass).removeClass($this.options.childClass),$this.dragenterData(this,!1))})}),touchedlists=[],UI.$html.removeClass(this.options.dragMovingClass),this.removeDragHandlers(),draggingPlaceholder&&(draggingPlaceholder.remove(),draggingPlaceholder=null)},dragDrop:function(e,elem){\"drop\"===e.type&&(e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault()),this.triggerChangeEvents()},triggerChangeEvents:function(){var $current,oldRoot,newRoot,triggers,el;currentlyDraggingElement&&($current=UI.$(currentlyDraggingElement),oldRoot=draggingPlaceholder.data(\"origin\"),newRoot=$current.closest(\".\"+this.options.baseClass),triggers=[],el=UI.$(currentlyDraggingElement),oldRoot[0]===newRoot[0]&&draggingPlaceholder.data(\"index\")!=$current.index()?triggers.push({sortable:this,mode:\"moved\"}):oldRoot[0]!=newRoot[0]&&triggers.push({sortable:UI.$(newRoot).data(\"sortable\"),mode:\"added\"},{sortable:UI.$(oldRoot).data(\"sortable\"),mode:\"removed\"}),triggers.forEach(function(trigger,i){trigger.sortable&&trigger.sortable.element.trigger(\"change.uk.sortable\",[trigger.sortable,el,trigger.mode])}))},dragenterData:function(element,val){if(element=UI.$(element),1==arguments.length)return parseInt(element.data(\"child-dragenter\"),10)||0;val?element.data(\"child-dragenter\",Math.max(0,val)):element.removeData(\"child-dragenter\")},moveElementNextTo:function(element,elementToMoveNextTo){0;var $this=this,list=UI.$(element).parent().css(\"min-height\",\"\"),next=function(el1,el2){var parent=el1.parentNode;if(el2.parentNode==parent)for(var cur=el1.previousSibling;cur&&9!==cur.nodeType;){if(cur===el2)return 1;cur=cur.previousSibling}return}(element,elementToMoveNextTo)?elementToMoveNextTo:elementToMoveNextTo.nextSibling,children=list.children(),count=children.length;if(!$this.options.animation)return elementToMoveNextTo.parentNode.insertBefore(element,next),void UI.Utils.checkDisplay($this.element.parent());list.css(\"min-height\",list.height()),children.stop().each(function(){var ele=UI.$(this),offset=ele.position();offset.width=ele.width(),ele.data(\"offset-before\",offset)}),elementToMoveNextTo.parentNode.insertBefore(element,next),UI.Utils.checkDisplay($this.element.parent()),(children=list.children().each(function(){var ele=UI.$(this);ele.data(\"offset-after\",ele.position())}).each(function(){var ele=UI.$(this),before=ele.data(\"offset-before\");ele.css({position:\"absolute\",top:before.top,left:before.left,\"min-width\":before.width})})).each(function(){var ele=UI.$(this),offset=(ele.data(\"offset-before\"),ele.data(\"offset-after\"));ele.css(\"pointer-events\",\"none\").width(),setTimeout(function(){ele.animate({top:offset.top,left:offset.left},$this.options.animation,function(){ele.css({position:\"\",top:\"\",left:\"\",\"min-width\":\"\",\"pointer-events\":\"\"}).removeClass($this.options.overClass).removeData(\"child-dragenter\"),--count||(list.css(\"min-height\",\"\"),UI.Utils.checkDisplay($this.element.parent()))})},0)})},serialize:function(){var item,attribute,data=[];return this.element.children().each(function(j,child){item={};for(var i=0;i<child.attributes.length;i++)0===(attribute=child.attributes[i]).name.indexOf(\"data-\")&&(item[attribute.name.substr(5)]=UI.Utils.str2json(attribute.value));data.push(item)}),data},checkEmptyList:function(list){list=list?UI.$(list):this.element,this.options.emptyClass&&list[list.children().length?\"removeClass\":\"addClass\"](this.options.emptyClass)}}),UI.sortable}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var $win=UI.$win,$doc=UI.$doc,sticked=[],direction=1;function checkscrollposition(){var stickies=arguments.length?arguments:sticked;if(stickies.length&&!($win.scrollTop()<0))for(var stickyHeight,newTop,bTop,sticky,scrollTop=$win.scrollTop(),documentHeight=$doc.height(),dwh=documentHeight-$win.height(),extra=dwh<scrollTop?dwh-scrollTop:0,i=0;i<stickies.length;i++)(sticky=stickies[i]).element.is(\":visible\")&&!sticky.animate&&(sticky.check()?(newTop=sticky.top<0?0:(newTop=documentHeight-(stickyHeight=sticky.element.outerHeight())-sticky.top-sticky.options.bottom-scrollTop-extra)<0?newTop+sticky.top:sticky.top,sticky.boundary&&sticky.boundary.length&&(bTop=sticky.boundary.offset().top,bTop=sticky.boundtoparent?documentHeight-(bTop+sticky.boundary.outerHeight())+parseInt(sticky.boundary.css(\"padding-bottom\")):documentHeight-bTop-parseInt(sticky.boundary.css(\"margin-top\")),newTop=scrollTop+stickyHeight>documentHeight-bTop-(sticky.top<0?0:sticky.top)?documentHeight-bTop-(scrollTop+stickyHeight):newTop),sticky.currentTop!=newTop&&(sticky.element.css({position:\"fixed\",top:newTop,width:(sticky.getWidthFrom.length?sticky.getWidthFrom:sticky.element).width()}),sticky.init||(sticky.element.addClass(sticky.options.clsinit),location.hash&&0<scrollTop&&sticky.options.target&&((bTop=UI.$(location.hash)).length&&setTimeout(function($target,sticky){return function(){sticky.element.width();var offset=$target.offset(),maxoffset=offset.top+$target.outerHeight(),stickyOffset=sticky.element.offset(),stickyHeight=sticky.element.outerHeight(),stickyMaxOffset=stickyOffset.top+stickyHeight;stickyOffset.top<maxoffset&&offset.top<stickyMaxOffset&&(scrollTop=offset.top-stickyHeight-sticky.options.target,window.scrollTo(0,scrollTop))}}(bTop,sticky),0))),sticky.element.addClass(sticky.options.clsactive).removeClass(sticky.options.clsinactive),sticky.element.trigger(\"active.uk.sticky\"),sticky.element.css(\"margin\",\"\"),sticky.options.animation&&sticky.init&&!UI.Utils.isInView(sticky.wrapper)&&sticky.element.addClass(sticky.options.animation),sticky.currentTop=newTop)):null!==sticky.currentTop&&sticky.reset(),sticky.init=!0)}return UI.component(\"sticky\",{defaults:{top:0,bottom:0,animation:\"\",clsinit:\"uk-sticky-init\",clsactive:\"uk-active\",clsinactive:\"\",getWidthFrom:\"\",showup:!1,boundary:!1,media:!1,target:!1,disabled:!1},boot:function(){UI.$doc.on(\"scrolling.uk.document\",function(e,data){data&&data.dir&&(direction=data.dir.y,checkscrollposition())}),UI.$win.on(\"resize orientationchange\",UI.Utils.debounce(function(){if(sticked.length){for(var i=0;i<sticked.length;i++)sticked[i].reset(!0);checkscrollposition()}},100)),UI.ready(function(context){setTimeout(function(){UI.$(\"[data-uk-sticky]\",context).each(function(){var $ele=UI.$(this);$ele.data(\"sticky\")||UI.sticky($ele,UI.Utils.options($ele.attr(\"data-uk-sticky\")))}),checkscrollposition()},0)})},init:function(){var boundtoparent,boundary=this.options.boundary;this.wrapper=this.element.wrap('<div class=\"uk-sticky-placeholder\"></div>').parent(),this.computeWrapper(),this.element.css(\"margin\",0),boundary&&(!0===boundary||\"!\"===boundary[0]?(boundary=!0===boundary?this.wrapper.parent():this.wrapper.closest(boundary.substr(1)),boundtoparent=!0):\"string\"==typeof boundary&&(boundary=UI.$(boundary))),this.sticky={self:this,options:this.options,element:this.element,currentTop:null,wrapper:this.wrapper,init:!1,getWidthFrom:UI.$(this.options.getWidthFrom||this.wrapper),boundary:boundary,boundtoparent:boundtoparent,top:0,calcTop:function(){var topElement,top=this.options.top;this.options.top&&\"string\"==typeof this.options.top&&(this.options.top.match(/^(-|)(\\d+)vh$/)?top=window.innerHeight*parseInt(this.options.top,10)/100:(topElement=UI.$(this.options.top).first()).length&&topElement.is(\":visible\")&&(top=-1*(topElement.offset().top+topElement.outerHeight()-this.wrapper.offset().top))),this.top=top},reset:function(force){this.calcTop();var finalize=function(){this.element.css({position:\"\",top:\"\",width:\"\",left:\"\",margin:\"0\"}),this.element.removeClass([this.options.animation,\"uk-animation-reverse\",this.options.clsactive].join(\" \")),this.element.addClass(this.options.clsinactive),this.element.trigger(\"inactive.uk.sticky\"),this.currentTop=null,this.animate=!1}.bind(this);!force&&this.options.animation&&UI.support.animation&&!UI.Utils.isInView(this.wrapper)?(this.animate=!0,this.element.removeClass(this.options.animation).one(UI.support.animation.end,function(){finalize()}).width(),this.element.addClass(this.options.animation+\" uk-animation-reverse\")):finalize()},check:function(){if(this.options.disabled)return!1;if(this.options.media)switch(typeof this.options.media){case\"number\":if(window.innerWidth<this.options.media)return!1;break;case\"string\":if(window.matchMedia&&!window.matchMedia(this.options.media).matches)return!1}var scrollTop=$win.scrollTop(),dwh=$doc.height()-window.innerHeight,dwh=dwh<scrollTop?dwh-scrollTop:0,dwh=this.wrapper.offset().top-this.top-dwh<=scrollTop;return dwh&&this.options.showup&&(1==direction&&(dwh=!1),-1==direction&&!this.element.hasClass(this.options.clsactive)&&UI.Utils.isInView(this.wrapper)&&(dwh=!1)),dwh}},this.sticky.calcTop(),sticked.push(this.sticky)},update:function(){checkscrollposition(this.sticky)},enable:function(){this.options.disabled=!1,this.update()},disable:function(force){this.options.disabled=!0,this.sticky.reset(force)},computeWrapper:function(){this.wrapper.css({height:-1==[\"absolute\",\"fixed\"].indexOf(this.element.css(\"position\"))?this.element.outerHeight():\"\",float:\"none\"!=this.element.css(\"float\")?this.element.css(\"float\"):\"\",margin:this.element.css(\"margin\")}),\"fixed\"==this.element.css(\"position\")&&this.element.css({width:(this.sticky.getWidthFrom.length?this.sticky.getWidthFrom:this.element).width()})}}),UI.sticky}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";UI.component(\"timepicker\",{defaults:{format:\"24h\",delay:0,start:0,end:24},boot:function(){UI.$html.on(\"focus.timepicker.uikit\",\"[data-uk-timepicker]\",function(e){var obj,ele=UI.$(this);ele.data(\"timepicker\")||(obj=UI.timepicker(ele,UI.Utils.options(ele.attr(\"data-uk-timepicker\"))),setTimeout(function(){obj.autocomplete.input.focus()},40))})},init:function(){var container,$this=this,times=function(start,end){end=end||24;var i,h,times={\"12h\":[],\"24h\":[]};for(i=start=start||0,h=\"\";i<end;i++)h=\"\"+i,i<10&&(h=\"0\"+h),times[\"24h\"].push({value:h+\":00\"}),times[\"24h\"].push({value:h+\":30\"}),0===i&&(h=12,times[\"12h\"].push({value:h+\":00 AM\"}),times[\"12h\"].push({value:h+\":30 AM\"})),0<i&&i<13&&12!==i&&(times[\"12h\"].push({value:h+\":00 AM\"}),times[\"12h\"].push({value:h+\":30 AM\"})),12<=i&&((h=0===(h-=12)?12:h)<10&&(h=\"0\"+String(h)),times[\"12h\"].push({value:h+\":00 PM\"}),times[\"12h\"].push({value:h+\":30 PM\"}));return times}(this.options.start,this.options.end);this.options.minLength=0,this.options.template='<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>',this.options.source=function(release){release(times[$this.options.format]||times[\"12h\"])},container=this.element.is(\"input\")?(this.element.wrap('<div class=\"uk-autocomplete\"></div>'),this.element.parent()):this.element.addClass(\"uk-autocomplete\"),this.autocomplete=UI.autocomplete(container,this.options),this.autocomplete.dropdown.addClass(\"uk-dropdown-small uk-dropdown-scrollable\"),this.autocomplete.on(\"show.uk.autocomplete\",function(){var selected=$this.autocomplete.dropdown.find('[data-value=\"'+$this.autocomplete.input.val()+'\"]');setTimeout(function(){$this.autocomplete.pick(selected,!0)},10)}),this.autocomplete.input.on(\"focus\",function(){$this.autocomplete.value=Math.random(),$this.autocomplete.triggercomplete()}).on(\"blur\",UI.Utils.debounce(function(){$this.checkTime()},100)),this.element.data(\"timepicker\",this)},checkTime:function(){var timeArray,arr,meridian=\"AM\",time=this.autocomplete.input.val();\"12h\"==this.options.format?(timeArray=(arr=time.split(\" \"))[0].split(\":\"),meridian=arr[1]):timeArray=time.split(\":\"),arr=parseInt(timeArray[0],10),time=parseInt(timeArray[1],10),isNaN(arr)&&(arr=0),isNaN(time)&&(time=0),\"12h\"==this.options.format?((12<arr||arr<0)&&(arr=12),\"am\"===meridian||\"a\"===meridian?meridian=\"AM\":\"pm\"!==meridian&&\"p\"!==meridian||(meridian=\"PM\"),\"AM\"!==meridian&&\"PM\"!==meridian&&(meridian=\"AM\")):24<=arr?arr=23:arr<0&&(arr=0),this.autocomplete.input.val(this.formatTime(arr,time=time<0||60<=time?0:time,meridian)).trigger(\"change\")},formatTime:function(hour,minute,meridian){return(hour=hour<10?\"0\"+hour:hour)+\":\"+(minute=minute<10?\"0\"+minute:minute)+(\"12h\"==this.options.format?\" \"+meridian:\"\")}})}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var $tooltip,tooltipdelay,checkdelay;return UI.component(\"tooltip\",{defaults:{offset:5,pos:\"top\",animation:!1,delay:0,cls:\"\",activeClass:\"uk-active\",src:function(ele){var title=ele.attr(\"title\");return void 0!==title&&ele.data(\"cached-title\",title).removeAttr(\"title\"),ele.data(\"cached-title\")}},tip:\"\",boot:function(){UI.$html.on(\"mouseenter.tooltip.uikit focus.tooltip.uikit\",\"[data-uk-tooltip]\",function(e){var ele=UI.$(this);ele.data(\"tooltip\")||(UI.tooltip(ele,UI.Utils.options(ele.attr(\"data-uk-tooltip\"))),ele.trigger(\"mouseenter\"))})},init:function(){var $this=this;$tooltip=$tooltip||UI.$('<div class=\"uk-tooltip\"></div>').appendTo(\"body\"),this.on({focus:function(e){$this.show()},blur:function(e){$this.hide()},mouseenter:function(e){$this.show()},mouseleave:function(e){$this.hide()}})},show:function(){if(this.tip=\"function\"==typeof this.options.src?this.options.src(this.element):this.options.src,tooltipdelay&&clearTimeout(tooltipdelay),checkdelay&&clearTimeout(checkdelay),\"string\"==typeof this.tip&&this.tip.length){$tooltip.stop().css({top:-2e3,visibility:\"hidden\"}).removeClass(this.options.activeClass).show(),$tooltip.html('<div class=\"uk-tooltip-inner\">'+this.tip+\"</div>\");var docoffset_top,$this=this,pos=UI.$.extend({},this.element.offset(),{width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}),width=$tooltip[0].offsetWidth,height=$tooltip[0].offsetHeight,offset=\"function\"==typeof this.options.offset?this.options.offset.call(this.element):this.options.offset,position=\"function\"==typeof this.options.pos?this.options.pos.call(this.element):this.options.pos,tmppos=position.split(\"-\"),tcss={display:\"none\",visibility:\"visible\",top:pos.top+pos.height+height,left:pos.left},bodyoffset=(\"fixed\"!=UI.$html.css(\"position\")&&\"fixed\"!=UI.$body.css(\"position\")||(bodyoffset=UI.$(\"body\").offset(),docoffset_top=(htmloffset=UI.$(\"html\").offset()).top+bodyoffset.top,htmloffset=htmloffset.left+bodyoffset.left,pos.left-=htmloffset,pos.top-=docoffset_top),\"left\"!=tmppos[0]&&\"right\"!=tmppos[0]||\"right\"!=UI.langdirection||(tmppos[0]=\"left\"==tmppos[0]?\"right\":\"left\"),{bottom:{top:pos.top+pos.height+offset,left:pos.left+pos.width/2-width/2},top:{top:pos.top-height-offset,left:pos.left+pos.width/2-width/2},left:{top:pos.top+pos.height/2-height/2,left:pos.left-width-offset},right:{top:pos.top+pos.height/2-height/2,left:pos.left+pos.width+offset}}),htmloffset=(UI.$.extend(tcss,bodyoffset[tmppos[0]]),2==tmppos.length&&(tcss.left=\"left\"==tmppos[1]?pos.left:pos.left+pos.width-width),this.checkBoundary(tcss.left,tcss.top,width,height));if(htmloffset){switch(htmloffset){case\"x\":position=2==tmppos.length?tmppos[0]+\"-\"+(tcss.left<0?\"left\":\"right\"):tcss.left<0?\"right\":\"left\";break;case\"y\":position=2==tmppos.length?(tcss.top<0?\"bottom\":\"top\")+\"-\"+tmppos[1]:tcss.top<0?\"bottom\":\"top\";break;case\"xy\":position=2==tmppos.length?(tcss.top<0?\"bottom\":\"top\")+\"-\"+(tcss.left<0?\"left\":\"right\"):tcss.left<0?\"right\":\"left\"}tmppos=position.split(\"-\"),UI.$.extend(tcss,bodyoffset[tmppos[0]]),2==tmppos.length&&(tcss.left=\"left\"==tmppos[1]?pos.left:pos.left+pos.width-width)}tcss.left-=UI.$body.position().left,tooltipdelay=setTimeout(function(){$tooltip.css(tcss).attr(\"class\",[\"uk-tooltip\",\"uk-tooltip-\"+position,$this.options.cls].join(\" \")),$this.options.animation?$tooltip.css({opacity:0,display:\"block\"}).addClass($this.options.activeClass).animate({opacity:1},parseInt($this.options.animation,10)||400):$tooltip.show().addClass($this.options.activeClass),tooltipdelay=!1,checkdelay=setInterval(function(){$this.element.is(\":visible\")||$this.hide()},150)},parseInt(this.options.delay,10)||0)}},hide:function(){var $this;this.element.is(\"input\")&&this.element[0]===document.activeElement||(tooltipdelay&&clearTimeout(tooltipdelay),checkdelay&&clearTimeout(checkdelay),$tooltip.stop(),this.options.animation?($this=this,$tooltip.fadeOut(parseInt(this.options.animation,10)||400,function(){$tooltip.removeClass($this.options.activeClass)})):$tooltip.hide().removeClass(this.options.activeClass))},content:function(){return this.tip},checkBoundary:function(left,top,width,height){var axis=\"\";return(left<0||left-UI.$win.scrollLeft()+width>window.innerWidth)&&(axis+=\"x\"),(top<0||top-UI.$win.scrollTop()+height>window.innerHeight)&&(axis+=\"y\"),axis}}),UI.tooltip}),function(addon){var component;window.UIkit&&(component=addon(UIkit)), true&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return component||addon(UIkit)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}(function(UI){\"use strict\";var fi;function xhrupload(files,settings){if(!UI.support.ajaxupload)return this;if(settings=UI.$.extend({},xhrupload.defaults,settings),files.length){if(\"*.*\"!==settings.allow)for(var file,i=0;file=files[i];i++)if(pattern=settings.allow,path=file.name,pattern=\"^\"+(pattern=\"^\"+pattern.replace(/\\//g,\"\\\\/\").replace(/\\*\\*/g,\"(\\\\/[^\\\\/]+)*\").replace(/\\*/g,\"[^\\\\/]+\").replace(/((?!\\\\))\\?/g,\"$1.\")+\"$\")+\"$\",null===path.match(new RegExp(pattern,\"i\")))return void(\"string\"==typeof settings.notallowed?alert(settings.notallowed):settings.notallowed(file,settings));var pattern,path,count,uploaded,allow,complete=settings.complete;settings.single?(count=files.length,allow=!(uploaded=0),settings.beforeAll(files),settings.complete=function(response,xhr){uploaded+=1,complete(response,xhr),(allow=settings.filelimit&&uploaded>=settings.filelimit?!1:allow)&&uploaded<count?upload([files[uploaded]],settings):settings.allcomplete(response,xhr)},upload([files[0]],settings)):(settings.complete=function(response,xhr){complete(response,xhr),settings.allcomplete(response,xhr)},upload(files,settings))}function upload(files,settings){var formData=new FormData,xhr=new XMLHttpRequest;if(!1!==settings.before(settings,files)){for(var f,p,i=0;f=files[i];i++)formData.append(settings.param,f);for(p in settings.params)formData.append(p,settings.params[p]);xhr.upload.addEventListener(\"progress\",function(e){var percent=e.loaded/e.total*100;settings.progress(percent,e)},!1),xhr.addEventListener(\"loadstart\",function(e){settings.loadstart(e)},!1),xhr.addEventListener(\"load\",function(e){settings.load(e)},!1),xhr.addEventListener(\"loadend\",function(e){settings.loadend(e)},!1),xhr.addEventListener(\"error\",function(e){settings.error(e)},!1),xhr.addEventListener(\"abort\",function(e){settings.abort(e)},!1),xhr.open(settings.method,settings.action,!0),\"json\"==settings.type&&xhr.setRequestHeader(\"Accept\",\"application/json\"),xhr.onreadystatechange=function(){if(settings.readystatechange(xhr),4==xhr.readyState){var response=xhr.responseText;if(\"json\"==settings.type)try{response=UI.$.parseJSON(response)}catch(e){response=!1}settings.complete(response,xhr)}},settings.beforeSend(xhr),xhr.send(formData)}}}return UI.component(\"uploadSelect\",{init:function(){var $this=this;this.on(\"change\",function(){xhrupload($this.element[0].files,$this.options);var twin=$this.element.clone(!0).data(\"uploadSelect\",$this);$this.element.replaceWith(twin),$this.element=twin})}}),UI.component(\"uploadDrop\",{defaults:{dragoverClass:\"uk-dragover\"},init:function(){var $this=this,hasdragCls=!1;this.on(\"drop\",function(e){e.dataTransfer&&e.dataTransfer.files&&(e.stopPropagation(),e.preventDefault(),$this.element.removeClass($this.options.dragoverClass),$this.element.trigger(\"dropped.uk.upload\",[e.dataTransfer.files]),xhrupload(e.dataTransfer.files,$this.options))}).on(\"dragenter\",function(e){e.stopPropagation(),e.preventDefault()}).on(\"dragover\",function(e){e.stopPropagation(),e.preventDefault(),hasdragCls||($this.element.addClass($this.options.dragoverClass),hasdragCls=!0)}).on(\"dragleave\",function(e){e.stopPropagation(),e.preventDefault(),$this.element.removeClass($this.options.dragoverClass),hasdragCls=!1})}}),UI.support.ajaxupload=((fi=document.createElement(\"INPUT\")).type=\"file\",\"files\"in fi&&!!((fi=new XMLHttpRequest)&&\"upload\"in fi&&\"onprogress\"in fi.upload)&&!!window.FormData),UI.support.ajaxupload&&UI.$.event.props.push(\"dataTransfer\"),xhrupload.defaults={action:\"\",single:!0,method:\"POST\",param:\"files[]\",params:{},allow:\"*.*\",type:\"text\",filelimit:!1,before:function(o){},beforeSend:function(xhr){},beforeAll:function(){},loadstart:function(){},load:function(){},loadend:function(){},error:function(){},abort:function(){},progress:function(){},complete:function(){},allcomplete:function(){},readystatechange:function(){},notallowed:function(file,settings){alert(\"Only the following file types are allowed: \"+settings.allow)}},UI.Utils.xhrupload=xhrupload});var easing_swiftOut=[.4,0,.2,1];\"undefined\"!=typeof UIkit&&UIkit.on(\"beforeready.uk.dom\",function(){var old_hide_function,old_show_function,$body;void 0!==UIkit.components.accordion&&$.extend(UIkit.components.accordion.prototype.defaults,{easing:easing_swiftOut,duration:200}),void 0!==UIkit.components.datepicker&&$.extend(UIkit.components.datepicker.prototype.defaults,{}),void 0!==UIkit.components.dropdown.prototype&&($.extend(UIkit.components.dropdown.prototype.defaults,{remaintime:150,delay:50}),old_show_function=UIkit.components.dropdown.prototype.show,UIkit.components.dropdown.prototype.show=function(){return this.dropdown.css({\"min-width\":this.dropdown.outerWidth()}).addClass(\"uk-dropdown-active uk-dropdown-shown\"),old_show_function.apply(this,arguments)},old_hide_function=UIkit.components.dropdown.prototype.hide,UIkit.components.dropdown.prototype.hide=function(){var this_dropdown=this.dropdown;this_dropdown.removeClass(\"uk-dropdown-shown\"),setTimeout(function(){this_dropdown.removeClass(\"uk-dropdown-active\")},280);return old_hide_function.apply(this,arguments)}),void 0!==UIkit.components.modal&&($.extend(UIkit.components.modal.prototype.defaults,{center:!0}),$body=$(\"body\"),UIkit.modal.dialog.template='<div class=\"uk-modal uk-modal-dialog-replace\"><div class=\"uk-modal-dialog\" style=\"min-height:0;\"></div></div>',$body.on(\"show.uk.modal\",\".uk-modal-dialog-replace\",function(){setTimeout(function(){var actionBtn,dialogReplace=$(\".uk-modal-dialog-replace\");dialogReplace.find(\".uk-button-primary\").length&&(actionBtn=dialogReplace.find(\".uk-button-primary\").toggleClass(\"uk-button-primary md-btn-flat-primary\")).next(\"button\")&&actionBtn.next(\"button\").after(actionBtn),dialogReplace.find(\".uk-button\").length&&dialogReplace.find(\".uk-button\").toggleClass(\"uk-button md-btn md-btn-flat\"),dialogReplace.find(\".uk-margin-small-top\").length&&dialogReplace.find(\".uk-margin-small-top\").toggleClass(\"uk-margin-small-top uk-margin-top\"),dialogReplace.find(\"input.uk-width-1-1\").length&&dialogReplace.find(\"input.uk-width-1-1\").toggleClass(\"uk-width-1-1 md-input\"),dialogReplace.find(\".uk-form\").length&&dialogReplace.find(\".uk-form\").removeClass(\"uk-form\")},50)})),void 0!==UIkit.components.tooltip&&$.extend(UIkit.components.tooltip.prototype.defaults,{animation:280,offset:8}),void 0!==UIkit.components.sortable&&Modernizr.touch&&$(\"[data-uk-sortable]\").children().addClass(\"needsclick\")});\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = UIkit;\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/uikit/js/uikit_combined.min.js?");

/***/ }),
/* 6 */
/*!***********************************************!*\
  !*** ./src/public/js/vendor/moment/moment.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n   true\n    ? (module.exports = factory())\n    : 0\n})(this, function () {\n  'use strict'\n\n  var hookCallback\n\n  function hooks () {\n    return hookCallback.apply(null, arguments)\n  }\n\n  // This is done to register the method called with moment()\n  // without creating circular dependencies.\n  function setHookCallback (callback) {\n    hookCallback = callback\n  }\n\n  function isArray (input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]'\n  }\n\n  function isObject (input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]'\n  }\n\n  function isObjectEmpty (obj) {\n    var k\n    for (k in obj) {\n      // even if its not own property I'd still call it non-empty\n      return false\n    }\n    return true\n  }\n\n  function isUndefined (input) {\n    return input === void 0\n  }\n\n  function isNumber (input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]'\n  }\n\n  function isDate (input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]'\n  }\n\n  function map (arr, fn) {\n    var res = [],\n      i\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i))\n    }\n    return res\n  }\n\n  function hasOwnProp (a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b)\n  }\n\n  function extend (a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i]\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf\n    }\n\n    return a\n  }\n\n  function createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc()\n  }\n\n  function defaultParsingFlags () {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    }\n  }\n\n  function getParsingFlags (m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags()\n    }\n    return m._pf\n  }\n\n  var some\n  if (Array.prototype.some) {\n    some = Array.prototype.some\n  } else {\n    some = function (fun) {\n      var t = Object(this)\n      var len = t.length >>> 0\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true\n        }\n      }\n\n      return false\n    }\n  }\n\n  var some$1 = some\n\n  function isValid (m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m)\n      var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n        return i != null\n      })\n      var isNowValid =\n        !isNaN(m._d.getTime()) &&\n        flags.overflow < 0 &&\n        !flags.empty &&\n        !flags.invalidMonth &&\n        !flags.invalidWeekday &&\n        !flags.nullInput &&\n        !flags.invalidFormat &&\n        !flags.userInvalidated &&\n        (!flags.meridiem || (flags.meridiem && parsedParts))\n\n      if (m._strict) {\n        isNowValid =\n          isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid\n      } else {\n        return isNowValid\n      }\n    }\n    return m._isValid\n  }\n\n  function createInvalid (flags) {\n    var m = createUTC(NaN)\n    if (flags != null) {\n      extend(getParsingFlags(m), flags)\n    } else {\n      getParsingFlags(m).userInvalidated = true\n    }\n\n    return m\n  }\n\n  // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n  var momentProperties = (hooks.momentProperties = [])\n\n  function copyConfig (to, from) {\n    var i, prop, val\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from)\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i]\n        val = from[prop]\n        if (!isUndefined(val)) {\n          to[prop] = val\n        }\n      }\n    }\n\n    return to\n  }\n\n  var updateInProgress = false\n\n  // Moment prototype object\n  function Moment (config) {\n    copyConfig(this, config)\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN)\n    if (!this.isValid()) {\n      this._d = new Date(NaN)\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true\n      hooks.updateOffset(this)\n      updateInProgress = false\n    }\n  }\n\n  function isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n  }\n\n  function absFloor (number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0\n    } else {\n      return Math.floor(number)\n    }\n  }\n\n  function toInt (argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n      value = 0\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber)\n    }\n\n    return value\n  }\n\n  // compare two arrays, return the number of differences\n  function compareArrays (array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n      lengthDiff = Math.abs(array1.length - array2.length),\n      diffs = 0,\n      i\n    for (i = 0; i < len; i++) {\n      if ((dontConvert && array1[i] !== array2[i]) || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n        diffs++\n      }\n    }\n    return diffs + lengthDiff\n  }\n\n  function warn (msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg)\n    }\n  }\n\n  function deprecate (msg, fn) {\n    var firstTime = true\n\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg)\n      }\n      if (firstTime) {\n        var args = []\n        var arg\n        for (var i = 0; i < arguments.length; i++) {\n          arg = ''\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] '\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', '\n            }\n            arg = arg.slice(0, -2) // Remove trailing comma and space\n          } else {\n            arg = arguments[i]\n          }\n          args.push(arg)\n        }\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack)\n        firstTime = false\n      }\n      return fn.apply(this, arguments)\n    }, fn)\n  }\n\n  var deprecations = {}\n\n  function deprecateSimple (name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg)\n    }\n    if (!deprecations[name]) {\n      warn(msg)\n      deprecations[name] = true\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false\n  hooks.deprecationHandler = null\n\n  function isFunction (input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]'\n  }\n\n  function set (config) {\n    var prop, i\n    for (i in config) {\n      prop = config[i]\n      if (isFunction(prop)) {\n        this[i] = prop\n      } else {\n        this['_' + i] = prop\n      }\n    }\n    this._config = config\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n      (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source\n    )\n  }\n\n  function mergeConfigs (parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n      prop\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {}\n          extend(res[prop], parentConfig[prop])\n          extend(res[prop], childConfig[prop])\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop]\n        } else {\n          delete res[prop]\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop])\n      }\n    }\n    return res\n  }\n\n  function Locale (config) {\n    if (config != null) {\n      this.set(config)\n    }\n  }\n\n  var keys\n\n  if (Object.keys) {\n    keys = Object.keys\n  } else {\n    keys = function (obj) {\n      var i,\n        res = []\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i)\n        }\n      }\n      return res\n    }\n  }\n\n  var keys$1 = keys\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  }\n\n  function calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse']\n    return isFunction(output) ? output.call(mom, now) : output\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  }\n\n  function longDateFormat (key) {\n    var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()]\n\n    if (format || !formatUpper) {\n      return format\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1)\n    })\n\n    return this._longDateFormat[key]\n  }\n\n  var defaultInvalidDate = 'Invalid date'\n\n  function invalidDate () {\n    return this._invalidDate\n  }\n\n  var defaultOrdinal = '%d'\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/\n\n  function ordinal (number) {\n    return this._ordinal.replace('%d', number)\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n\n  function relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string]\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number)\n  }\n\n  function pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past']\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output)\n  }\n\n  var aliases = {}\n\n  function addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase()\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit\n  }\n\n  function normalizeUnits (units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined\n  }\n\n  function normalizeObjectUnits (inputObject) {\n    var normalizedInput = {},\n      normalizedProp,\n      prop\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop)\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop]\n        }\n      }\n    }\n\n    return normalizedInput\n  }\n\n  var priorities = {}\n\n  function addUnitPriority (unit, priority) {\n    priorities[unit] = priority\n  }\n\n  function getPrioritizedUnits (unitsObj) {\n    var units = []\n    for (var u in unitsObj) {\n      units.push({ unit: u, priority: priorities[u] })\n    }\n    units.sort(function (a, b) {\n      return a.priority - b.priority\n    })\n    return units\n  }\n\n  function makeGetSet (unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value)\n        hooks.updateOffset(this, keepTime)\n        return this\n      } else {\n        return get(this, unit)\n      }\n    }\n  }\n\n  function get (mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN\n  }\n\n  function set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n      mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value)\n    }\n  }\n\n  // MOMENTS\n\n  function stringGet (units) {\n    units = normalizeUnits(units)\n    if (isFunction(this[units])) {\n      return this[units]()\n    }\n    return this\n  }\n\n  function stringSet (units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units)\n      var prioritized = getPrioritizedUnits(units)\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit])\n      }\n    } else {\n      units = normalizeUnits(units)\n      if (isFunction(this[units])) {\n        return this[units](value)\n      }\n    }\n    return this\n  }\n\n  function zeroFill (number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n      zerosToFill = targetLength - absNumber.length,\n      sign = number >= 0\n    return (\n      (sign ? (forceSign ? '+' : '') : '-') +\n      Math.pow(10, Math.max(0, zerosToFill))\n        .toString()\n        .substr(1) +\n      absNumber\n    )\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g\n\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g\n\n  var formatFunctions = {}\n\n  var formatTokenFunctions = {}\n\n  // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n  function addFormatToken (token, padded, ordinal, callback) {\n    var func = callback\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]()\n      }\n    }\n    if (token) {\n      formatTokenFunctions[token] = func\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2])\n      }\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token)\n      }\n    }\n  }\n\n  function removeFormattingTokens (input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '')\n    }\n    return input.replace(/\\\\/g, '')\n  }\n\n  function makeFormatFunction (format) {\n    var array = format.match(formattingTokens),\n      i,\n      length\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]]\n      } else {\n        array[i] = removeFormattingTokens(array[i])\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n        i\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i]\n      }\n      return output\n    }\n  }\n\n  // format date using native date object\n  function formatMoment (m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate()\n    }\n\n    format = expandFormat(format, m.localeData())\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format)\n\n    return formatFunctions[format](m)\n  }\n\n  function expandFormat (format, locale) {\n    var i = 5\n\n    function replaceLongDateFormatTokens (input) {\n      return locale.longDateFormat(input) || input\n    }\n\n    localFormattingTokens.lastIndex = 0\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens)\n      localFormattingTokens.lastIndex = 0\n      i -= 1\n    }\n\n    return format\n  }\n\n  var match1 = /\\d/ //       0 - 9\n  var match2 = /\\d\\d/ //      00 - 99\n  var match3 = /\\d{3}/ //     000 - 999\n  var match4 = /\\d{4}/ //    0000 - 9999\n  var match6 = /[+-]?\\d{6}/ // -999999 - 999999\n  var match1to2 = /\\d\\d?/ //       0 - 99\n  var match3to4 = /\\d\\d\\d\\d?/ //     999 - 9999\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/ //   99999 - 999999\n  var match1to3 = /\\d{1,3}/ //       0 - 999\n  var match1to4 = /\\d{1,4}/ //       0 - 9999\n  var match1to6 = /[+-]?\\d{1,6}/ // -999999 - 999999\n\n  var matchUnsigned = /\\d+/ //       0 - inf\n  var matchSigned = /[+-]?\\d+/ //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi // +00:00 -00:00 +0000 -0000 or Z\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/ // 123456789 123456789.123\n\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n  var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i\n\n  var regexes = {}\n\n  function addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex)\n      ? regex\n      : function (isStrict, localeData) {\n          return isStrict && strictRegex ? strictRegex : regex\n        }\n  }\n\n  function getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token))\n    }\n\n    return regexes[token](config._strict, config._locale)\n  }\n\n  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n  function unescapeFormat (s) {\n    return regexEscape(\n      s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4\n      })\n    )\n  }\n\n  function regexEscape (s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n\n  var tokens = {}\n\n  function addParseToken (token, callback) {\n    var i,\n      func = callback\n    if (typeof token === 'string') {\n      token = [token]\n    }\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input)\n      }\n    }\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func\n    }\n  }\n\n  function addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {}\n      callback(input, config._w, config, token)\n    })\n  }\n\n  function addTimeToArrayFromToken (token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token)\n    }\n  }\n\n  var YEAR = 0\n  var MONTH = 1\n  var DATE = 2\n  var HOUR = 3\n  var MINUTE = 4\n  var SECOND = 5\n  var MILLISECOND = 6\n  var WEEK = 7\n  var WEEKDAY = 8\n\n  var indexOf\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf\n  } else {\n    indexOf = function (o) {\n      // I know\n      var i\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i\n        }\n      }\n      return -1\n    }\n  }\n\n  var indexOf$1 = indexOf\n\n  function daysInMonth (year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate()\n  }\n\n  // FORMATTING\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1\n  })\n\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format)\n  })\n\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format)\n  })\n\n  // ALIASES\n\n  addUnitAlias('month', 'M')\n\n  // PRIORITY\n\n  addUnitPriority('month', 8)\n\n  // PARSING\n\n  addRegexToken('M', match1to2)\n  addRegexToken('MM', match1to2, match2)\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict)\n  })\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict)\n  })\n\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1\n  })\n\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict)\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month\n    } else {\n      getParsingFlags(config).invalidMonth = input\n    }\n  })\n\n  // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n    '_'\n  )\n  function localeMonths (m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone']\n    }\n    return isArray(this._months)\n      ? this._months[m.month()]\n      : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()]\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_')\n  function localeMonthsShort (m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone']\n    }\n    return isArray(this._monthsShort)\n      ? this._monthsShort[m.month()]\n      : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()]\n  }\n\n  function handleStrictParse (monthName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = monthName.toLocaleLowerCase()\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = []\n      this._longMonthsParse = []\n      this._shortMonthsParse = []\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i])\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase()\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase()\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf$1.call(this._shortMonthsParse, llc)\n        return ii !== -1 ? ii : null\n      } else {\n        ii = indexOf$1.call(this._longMonthsParse, llc)\n        return ii !== -1 ? ii : null\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf$1.call(this._shortMonthsParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._longMonthsParse, llc)\n        return ii !== -1 ? ii : null\n      } else {\n        ii = indexOf$1.call(this._longMonthsParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._shortMonthsParse, llc)\n        return ii !== -1 ? ii : null\n      }\n    }\n  }\n\n  function localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict)\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = []\n      this._longMonthsParse = []\n      this._shortMonthsParse = []\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i])\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i')\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i')\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '')\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i')\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function setMonth (mom, value) {\n    var dayOfMonth\n\n    if (!mom.isValid()) {\n      // No op\n      return mom\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value)\n      } else {\n        value = mom.localeData().monthsParse(value)\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value))\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth)\n    return mom\n  }\n\n  function getSetMonth (value) {\n    if (value != null) {\n      setMonth(this, value)\n      hooks.updateOffset(this, true)\n      return this\n    } else {\n      return get(this, 'Month')\n    }\n  }\n\n  function getDaysInMonth () {\n    return daysInMonth(this.year(), this.month())\n  }\n\n  var defaultMonthsShortRegex = matchWord\n  function monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this)\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex\n      } else {\n        return this._monthsShortRegex\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex\n      }\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex\n    }\n  }\n\n  var defaultMonthsRegex = matchWord\n  function monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this)\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex\n      } else {\n        return this._monthsRegex\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex\n      }\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex\n    }\n  }\n\n  function computeMonthsParse () {\n    function cmpLenRev (a, b) {\n      return b.length - a.length\n    }\n\n    var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i])\n      shortPieces.push(this.monthsShort(mom, ''))\n      longPieces.push(this.months(mom, ''))\n      mixedPieces.push(this.months(mom, ''))\n      mixedPieces.push(this.monthsShort(mom, ''))\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev)\n    longPieces.sort(cmpLenRev)\n    mixedPieces.sort(cmpLenRev)\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i])\n      longPieces[i] = regexEscape(longPieces[i])\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i])\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i')\n    this._monthsShortRegex = this._monthsRegex\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i')\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i')\n  }\n\n  // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year()\n    return y <= 9999 ? '' + y : '+' + y\n  })\n\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100\n  })\n\n  addFormatToken(0, ['YYYY', 4], 0, 'year')\n  addFormatToken(0, ['YYYYY', 5], 0, 'year')\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year')\n\n  // ALIASES\n\n  addUnitAlias('year', 'y')\n\n  // PRIORITIES\n\n  addUnitPriority('year', 1)\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned)\n  addRegexToken('YY', match1to2, match2)\n  addRegexToken('YYYY', match1to4, match4)\n  addRegexToken('YYYYY', match1to6, match6)\n  addRegexToken('YYYYYY', match1to6, match6)\n\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR)\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input)\n  })\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input)\n  })\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10)\n  })\n\n  // HELPERS\n\n  function daysInYear (year) {\n    return isLeapYear(year) ? 366 : 365\n  }\n\n  function isLeapYear (year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n  }\n\n  // HOOKS\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000)\n  }\n\n  // MOMENTS\n\n  var getSetYear = makeGetSet('FullYear', true)\n\n  function getIsLeapYear () {\n    return isLeapYear(this.year())\n  }\n\n  function createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms)\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n      date.setFullYear(y)\n    }\n    return date\n  }\n\n  function createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments))\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(y)\n    }\n    return date\n  }\n\n  // start-of-first-week - start-of-year\n  function firstWeekOffset (year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7\n\n    return -fwdlw + fwd - 1\n  }\n\n  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n  function dayOfYearFromWeeks (year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1\n      resDayOfYear = daysInYear(resYear) + dayOfYear\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1\n      resDayOfYear = dayOfYear - daysInYear(year)\n    } else {\n      resYear = year\n      resDayOfYear = dayOfYear\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    }\n  }\n\n  function weekOfYear (mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear\n\n    if (week < 1) {\n      resYear = mom.year() - 1\n      resWeek = week + weeksInYear(resYear, dow, doy)\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy)\n      resYear = mom.year() + 1\n    } else {\n      resYear = mom.year()\n      resWeek = week\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    }\n  }\n\n  function weeksInYear (year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy)\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7\n  }\n\n  // FORMATTING\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week')\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek')\n\n  // ALIASES\n\n  addUnitAlias('week', 'w')\n  addUnitAlias('isoWeek', 'W')\n\n  // PRIORITIES\n\n  addUnitPriority('week', 5)\n  addUnitPriority('isoWeek', 5)\n\n  // PARSING\n\n  addRegexToken('w', match1to2)\n  addRegexToken('ww', match1to2, match2)\n  addRegexToken('W', match1to2)\n  addRegexToken('WW', match1to2, match2)\n\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input)\n  })\n\n  // HELPERS\n\n  // LOCALES\n\n  function localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n\n  function localeFirstDayOfWeek () {\n    return this._week.dow\n  }\n\n  function localeFirstDayOfYear () {\n    return this._week.doy\n  }\n\n  // MOMENTS\n\n  function getSetWeek (input) {\n    var week = this.localeData().week(this)\n    return input == null ? week : this.add((input - week) * 7, 'd')\n  }\n\n  function getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week\n    return input == null ? week : this.add((input - week) * 7, 'd')\n  }\n\n  // FORMATTING\n\n  addFormatToken('d', 0, 'do', 'day')\n\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format)\n  })\n\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format)\n  })\n\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format)\n  })\n\n  addFormatToken('e', 0, 0, 'weekday')\n  addFormatToken('E', 0, 0, 'isoWeekday')\n\n  // ALIASES\n\n  addUnitAlias('day', 'd')\n  addUnitAlias('weekday', 'e')\n  addUnitAlias('isoWeekday', 'E')\n\n  // PRIORITY\n  addUnitPriority('day', 11)\n  addUnitPriority('weekday', 11)\n  addUnitPriority('isoWeekday', 11)\n\n  // PARSING\n\n  addRegexToken('d', match1to2)\n  addRegexToken('e', match1to2)\n  addRegexToken('E', match1to2)\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict)\n  })\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict)\n  })\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict)\n  })\n\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict)\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week.d = weekday\n    } else {\n      getParsingFlags(config).invalidWeekday = input\n    }\n  })\n\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input)\n  })\n\n  // HELPERS\n\n  function parseWeekday (input, locale) {\n    if (typeof input !== 'string') {\n      return input\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10)\n    }\n\n    input = locale.weekdaysParse(input)\n    if (typeof input === 'number') {\n      return input\n    }\n\n    return null\n  }\n\n  function parseIsoWeekday (input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7\n    }\n    return isNaN(input) ? null : input\n  }\n\n  // LOCALES\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_')\n  function localeWeekdays (m, format) {\n    if (!m) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone']\n    }\n    return isArray(this._weekdays)\n      ? this._weekdays[m.day()]\n      : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()]\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_')\n  function localeWeekdaysShort (m) {\n    return m ? this._weekdaysShort[m.day()] : this._weekdaysShort\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_')\n  function localeWeekdaysMin (m) {\n    return m ? this._weekdaysMin[m.day()] : this._weekdaysMin\n  }\n\n  function handleStrictParse$1 (weekdayName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = weekdayName.toLocaleLowerCase()\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = []\n      this._shortWeekdaysParse = []\n      this._minWeekdaysParse = []\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i)\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase()\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase()\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase()\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf$1.call(this._weekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      } else if (format === 'ddd') {\n        ii = indexOf$1.call(this._shortWeekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      } else {\n        ii = indexOf$1.call(this._minWeekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf$1.call(this._weekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._shortWeekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._minWeekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      } else if (format === 'ddd') {\n        ii = indexOf$1.call(this._shortWeekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._weekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._minWeekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      } else {\n        ii = indexOf$1.call(this._minWeekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._weekdaysParse, llc)\n        if (ii !== -1) {\n          return ii\n        }\n        ii = indexOf$1.call(this._shortWeekdaysParse, llc)\n        return ii !== -1 ? ii : null\n      }\n    }\n  }\n\n  function localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict)\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = []\n      this._minWeekdaysParse = []\n      this._shortWeekdaysParse = []\n      this._fullWeekdaysParse = []\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i)\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '.?') + '$', 'i')\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '.?') + '$', 'i')\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '.?') + '$', 'i')\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '')\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i')\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay()\n    if (input != null) {\n      input = parseWeekday(input, this.localeData())\n      return this.add(input - day, 'd')\n    } else {\n      return day\n    }\n  }\n\n  function getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7\n    return input == null ? weekday : this.add(input - weekday, 'd')\n  }\n\n  function getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData())\n      return this.day(this.day() % 7 ? weekday : weekday - 7)\n    } else {\n      return this.day() || 7\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord\n  function weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this)\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex\n      } else {\n        return this._weekdaysRegex\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord\n  function weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this)\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex\n      } else {\n        return this._weekdaysShortRegex\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord\n  function weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this)\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex\n      } else {\n        return this._weekdaysMinRegex\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex\n    }\n  }\n\n  function computeWeekdaysParse () {\n    function cmpLenRev (a, b) {\n      return b.length - a.length\n    }\n\n    var minPieces = [],\n      shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      minp,\n      shortp,\n      longp\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i)\n      minp = this.weekdaysMin(mom, '')\n      shortp = this.weekdaysShort(mom, '')\n      longp = this.weekdays(mom, '')\n      minPieces.push(minp)\n      shortPieces.push(shortp)\n      longPieces.push(longp)\n      mixedPieces.push(minp)\n      mixedPieces.push(shortp)\n      mixedPieces.push(longp)\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev)\n    shortPieces.sort(cmpLenRev)\n    longPieces.sort(cmpLenRev)\n    mixedPieces.sort(cmpLenRev)\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i])\n      longPieces[i] = regexEscape(longPieces[i])\n      mixedPieces[i] = regexEscape(mixedPieces[i])\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i')\n    this._weekdaysShortRegex = this._weekdaysRegex\n    this._weekdaysMinRegex = this._weekdaysRegex\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i')\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i')\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i')\n  }\n\n  // FORMATTING\n\n  function hFormat () {\n    return this.hours() % 12 || 12\n  }\n\n  function kFormat () {\n    return this.hours() || 24\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour')\n  addFormatToken('h', ['hh', 2], 0, hFormat)\n  addFormatToken('k', ['kk', 2], 0, kFormat)\n\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2)\n  })\n\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)\n  })\n\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2)\n  })\n\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)\n  })\n\n  function meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase)\n    })\n  }\n\n  meridiem('a', true)\n  meridiem('A', false)\n\n  // ALIASES\n\n  addUnitAlias('hour', 'h')\n\n  // PRIORITY\n  addUnitPriority('hour', 13)\n\n  // PARSING\n\n  function matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse\n  }\n\n  addRegexToken('a', matchMeridiem)\n  addRegexToken('A', matchMeridiem)\n  addRegexToken('H', match1to2)\n  addRegexToken('h', match1to2)\n  addRegexToken('k', match1to2)\n  addRegexToken('HH', match1to2, match2)\n  addRegexToken('hh', match1to2, match2)\n  addRegexToken('kk', match1to2, match2)\n\n  addRegexToken('hmm', match3to4)\n  addRegexToken('hmmss', match5to6)\n  addRegexToken('Hmm', match3to4)\n  addRegexToken('Hmmss', match5to6)\n\n  addParseToken(['H', 'HH'], HOUR)\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input)\n    array[HOUR] = kInput === 24 ? 0 : kInput\n  })\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input)\n    config._meridiem = input\n  })\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input)\n    getParsingFlags(config).bigHour = true\n  })\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2\n    array[HOUR] = toInt(input.substr(0, pos))\n    array[MINUTE] = toInt(input.substr(pos))\n    getParsingFlags(config).bigHour = true\n  })\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4\n    var pos2 = input.length - 2\n    array[HOUR] = toInt(input.substr(0, pos1))\n    array[MINUTE] = toInt(input.substr(pos1, 2))\n    array[SECOND] = toInt(input.substr(pos2))\n    getParsingFlags(config).bigHour = true\n  })\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2\n    array[HOUR] = toInt(input.substr(0, pos))\n    array[MINUTE] = toInt(input.substr(pos))\n  })\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4\n    var pos2 = input.length - 2\n    array[HOUR] = toInt(input.substr(0, pos1))\n    array[MINUTE] = toInt(input.substr(pos1, 2))\n    array[SECOND] = toInt(input.substr(pos2))\n  })\n\n  // LOCALES\n\n  function localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p'\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i\n  function localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM'\n    } else {\n      return isLower ? 'am' : 'AM'\n    }\n  }\n\n  // MOMENTS\n\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour he wants. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n  var getSetHour = makeGetSet('Hours', true)\n\n  // months\n  // week\n  // weekdays\n  // meridiem\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n  }\n\n  // internal storage for locale config files\n  var locales = {}\n  var localeFamilies = {}\n  var globalLocale\n\n  function normalizeLocale (key) {\n    return key ? key.toLowerCase().replace('_', '-') : key\n  }\n\n  // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n  function chooseLocale (names) {\n    var i = 0,\n      j,\n      next,\n      locale,\n      split\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-')\n      j = split.length\n      next = normalizeLocale(names[i + 1])\n      next = next ? next.split('-') : null\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'))\n        if (locale) {\n          return locale\n        }\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break\n        }\n        j--\n      }\n      i++\n    }\n    return null\n  }\n\n  function loadLocale (name) {\n    var oldLocale = null\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && \"object\" !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())\n        // because defineLocale currently also sets the global locale, we\n        // want to undo that for lazy loaded locales\n        getSetGlobalLocale(oldLocale)\n      } catch (e) {}\n    }\n    return locales[name]\n  }\n\n  // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  function getSetGlobalLocale (key, values) {\n    var data\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key)\n      } else {\n        data = defineLocale(key, values)\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data\n      }\n    }\n\n    return globalLocale._abbr\n  }\n\n  function defineLocale (name, config) {\n    if (config !== null) {\n      var parentConfig = baseConfig\n      config.abbr = name\n      if (locales[name] != null) {\n        deprecateSimple(\n          'defineLocaleOverride',\n          'use moment.updateLocale(localeName, config) to change ' +\n            'an existing locale. moment.defineLocale(localeName, ' +\n            'config) should only be used for creating a new locale ' +\n            'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n        )\n        parentConfig = locales[name]._config\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config\n        } else {\n          if (!localeFamilies[config.parentLocale]) {\n            localeFamilies[config.parentLocale] = []\n          }\n          localeFamilies[config.parentLocale].push({\n            name: name,\n            config: config\n          })\n          return null\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config))\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config)\n        })\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name)\n\n      return locales[name]\n    } else {\n      // useful for testing\n      delete locales[name]\n      return null\n    }\n  }\n\n  function updateLocale (name, config) {\n    if (config != null) {\n      var locale,\n        parentConfig = baseConfig\n      // MERGE\n      if (locales[name] != null) {\n        parentConfig = locales[name]._config\n      }\n      config = mergeConfigs(parentConfig, config)\n      locale = new Locale(config)\n      locale.parentLocale = locales[name]\n      locales[name] = locale\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name)\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale\n        } else if (locales[name] != null) {\n          delete locales[name]\n        }\n      }\n    }\n    return locales[name]\n  }\n\n  // returns locale data\n  function getLocale (key) {\n    var locale\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr\n    }\n\n    if (!key) {\n      return globalLocale\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key)\n      if (locale) {\n        return locale\n      }\n      key = [key]\n    }\n\n    return chooseLocale(key)\n  }\n\n  function listLocales () {\n    return keys$1(locales)\n  }\n\n  function checkOverflow (m) {\n    var overflow\n    var a = m._a\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow =\n        a[MONTH] < 0 || a[MONTH] > 11\n          ? MONTH\n          : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n          ? DATE\n          : a[HOUR] < 0 ||\n            a[HOUR] > 24 ||\n            (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0))\n          ? HOUR\n          : a[MINUTE] < 0 || a[MINUTE] > 59\n          ? MINUTE\n          : a[SECOND] < 0 || a[SECOND] > 59\n          ? SECOND\n          : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n          ? MILLISECOND\n          : -1\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY\n      }\n\n      getParsingFlags(m).overflow = overflow\n    }\n\n    return m\n  }\n\n  // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/\n\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/\n\n  var isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n  ]\n\n  // iso time formats and regexes\n  var isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n  ]\n\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i\n\n  // date from iso format\n  function configFromISO (config) {\n    var i,\n      l,\n      string = config._i,\n      match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n      allowTime,\n      dateFormat,\n      timeFormat,\n      tzFormat\n\n    if (match) {\n      getParsingFlags(config).iso = true\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0]\n          allowTime = isoDates[i][2] !== false\n          break\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false\n        return\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0]\n            break\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false\n          return\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false\n        return\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z'\n        } else {\n          config._isValid = false\n          return\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '')\n      configFromStringAndFormat(config)\n    } else {\n      config._isValid = false\n    }\n  }\n\n  // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n  var basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/\n\n  // date and time from ref 2822 format\n  function configFromRFC2822 (config) {\n    var string, match, dayFormat, dateFormat, timeFormat, tzFormat\n    var timezones = {\n      ' GMT': ' +0000',\n      ' EDT': ' -0400',\n      ' EST': ' -0500',\n      ' CDT': ' -0500',\n      ' CST': ' -0600',\n      ' MDT': ' -0600',\n      ' MST': ' -0700',\n      ' PDT': ' -0700',\n      ' PST': ' -0800'\n    }\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM'\n    var timezone, timezoneIndex\n\n    string = config._i\n      .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n      .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n      .replace(/^\\s|\\s$/g, '') // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string)\n\n    if (match) {\n      dayFormat = match[1] ? 'ddd' + (match[1].length === 5 ? ', ' : ' ') : ''\n      dateFormat = 'D MMM ' + (match[2].length > 10 ? 'YYYY ' : 'YY ')\n      timeFormat = 'HH:mm' + (match[4] ? ':ss' : '')\n\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      if (match[1]) {\n        // day of week given\n        var momentDate = new Date(match[2])\n        var momentDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][momentDate.getDay()]\n\n        if (match[1].substr(0, 3) !== momentDay) {\n          getParsingFlags(config).weekdayMismatch = true\n          config._isValid = false\n          return\n        }\n      }\n\n      switch (match[5].length) {\n        case 2: // military\n          if (timezoneIndex === 0) {\n            timezone = ' +0000'\n          } else {\n            timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12\n            timezone =\n              (timezoneIndex < 0 ? ' -' : ' +') + ('' + timezoneIndex).replace(/^-?/, '0').match(/..$/)[0] + '00'\n          }\n          break\n        case 4: // Zone\n          timezone = timezones[match[5]]\n          break\n        default:\n          // UT or +/-9999\n          timezone = timezones[' GMT']\n      }\n      match[5] = timezone\n      config._i = match.splice(1).join('')\n      tzFormat = ' ZZ'\n      config._f = dayFormat + dateFormat + timeFormat + tzFormat\n      configFromStringAndFormat(config)\n      getParsingFlags(config).rfc2822 = true\n    } else {\n      config._isValid = false\n    }\n  }\n\n  // date from iso format or fallback\n  function configFromString (config) {\n    var matched = aspNetJsonRegex.exec(config._i)\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1])\n      return\n    }\n\n    configFromISO(config)\n    if (config._isValid === false) {\n      delete config._isValid\n    } else {\n      return\n    }\n\n    configFromRFC2822(config)\n    if (config._isValid === false) {\n      delete config._isValid\n    } else {\n      return\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config)\n  }\n\n  hooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n      'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n      'discouraged and will be removed in an upcoming major release. Please refer to ' +\n      'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n      config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''))\n    }\n  )\n\n  // Pick the first defined of two or three arguments.\n  function defaults (a, b, c) {\n    if (a != null) {\n      return a\n    }\n    if (b != null) {\n      return b\n    }\n    return c\n  }\n\n  function currentDateArray (config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now())\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()]\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()]\n  }\n\n  // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n  function configFromArray (config) {\n    var i,\n      date,\n      input = [],\n      currentDate,\n      yearToUse\n\n    if (config._d) {\n      return\n    }\n\n    currentDate = currentDateArray(config)\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config)\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR])\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear)\n      config._a[MONTH] = date.getUTCMonth()\n      config._a[DATE] = date.getUTCDate()\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i]\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i]\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true\n      config._a[HOUR] = 0\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input)\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm)\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24\n    }\n  }\n\n  function dayOfYearFromWeekInfo (config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow\n\n    w = config._w\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1\n      doy = 4\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year)\n      week = defaults(w.W, 1)\n      weekday = defaults(w.E, 1)\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true\n      }\n    } else {\n      dow = config._locale._week.dow\n      doy = config._locale._week.doy\n\n      var curWeek = weekOfYear(createLocal(), dow, doy)\n\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year)\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week)\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from begining of week\n        weekday = w.e + dow\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true\n        }\n      } else {\n        // default to begining of week\n        weekday = dow\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy)\n      config._a[YEAR] = temp.year\n      config._dayOfYear = temp.dayOfYear\n    }\n  }\n\n  // constant that refers to the ISO standard\n  hooks.ISO_8601 = function () {}\n\n  // constant that refers to the RFC 2822 form\n  hooks.RFC_2822 = function () {}\n\n  // date from string and format string\n  function configFromStringAndFormat (config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config)\n      return\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config)\n      return\n    }\n    config._a = []\n    getParsingFlags(config).empty = true\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n      i,\n      parsedInput,\n      tokens,\n      token,\n      skipped,\n      stringLength = string.length,\n      totalParsedInputLength = 0\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || []\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i]\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]\n      // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput))\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped)\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length)\n        totalParsedInputLength += parsedInput.length\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false\n        } else {\n          getParsingFlags(config).unusedTokens.push(token)\n        }\n        addTimeToArrayFromToken(token, parsedInput, config)\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token)\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string)\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0)\n    getParsingFlags(config).meridiem = config._meridiem\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem)\n\n    configFromArray(config)\n    checkOverflow(config)\n  }\n\n  function meridiemFixWrap (locale, hour, meridiem) {\n    var isPm\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem)\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem)\n      if (isPm && hour < 12) {\n        hour += 12\n      }\n      if (!isPm && hour === 12) {\n        hour = 0\n      }\n      return hour\n    } else {\n      // this is not supposed to happen\n      return hour\n    }\n  }\n\n  // date from string and array of format strings\n  function configFromStringAndArray (config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true\n      config._d = new Date(NaN)\n      return\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0\n      tempConfig = copyConfig({}, config)\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC\n      }\n      tempConfig._f = config._f[i]\n      configFromStringAndFormat(tempConfig)\n\n      if (!isValid(tempConfig)) {\n        continue\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver\n\n      //or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10\n\n      getParsingFlags(tempConfig).score = currentScore\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore\n        bestMoment = tempConfig\n      }\n    }\n\n    extend(config, bestMoment || tempConfig)\n  }\n\n  function configFromObject (config) {\n    if (config._d) {\n      return\n    }\n\n    var i = normalizeObjectUnits(config._i)\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10)\n    })\n\n    configFromArray(config)\n  }\n\n  function createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)))\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd')\n      res._nextDay = undefined\n    }\n\n    return res\n  }\n\n  function prepareConfig (config) {\n    var input = config._i,\n      format = config._f\n\n    config._locale = config._locale || getLocale(config._l)\n\n    if (input === null || (format === undefined && input === '')) {\n      return createInvalid({ nullInput: true })\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input)\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input))\n    } else if (isDate(input)) {\n      config._d = input\n    } else if (isArray(format)) {\n      configFromStringAndArray(config)\n    } else if (format) {\n      configFromStringAndFormat(config)\n    } else {\n      configFromInput(config)\n    }\n\n    if (!isValid(config)) {\n      config._d = null\n    }\n\n    return config\n  }\n\n  function configFromInput (config) {\n    var input = config._i\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now())\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf())\n    } else if (typeof input === 'string') {\n      configFromString(config)\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10)\n      })\n      configFromArray(config)\n    } else if (isObject(input)) {\n      configFromObject(config)\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input)\n    } else {\n      hooks.createFromInputFallback(config)\n    }\n  }\n\n  function createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {}\n\n    if (locale === true || locale === false) {\n      strict = locale\n      locale = undefined\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) || (isArray(input) && input.length === 0)) {\n      input = undefined\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true\n    c._useUTC = c._isUTC = isUTC\n    c._l = locale\n    c._i = input\n    c._f = format\n    c._strict = strict\n\n    return createFromConfig(c)\n  }\n\n  function createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false)\n  }\n\n  var prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n      var other = createLocal.apply(null, arguments)\n      if (this.isValid() && other.isValid()) {\n        return other < this ? this : other\n      } else {\n        return createInvalid()\n      }\n    }\n  )\n\n  var prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n      var other = createLocal.apply(null, arguments)\n      if (this.isValid() && other.isValid()) {\n        return other > this ? this : other\n      } else {\n        return createInvalid()\n      }\n    }\n  )\n\n  // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n  function pickBy (fn, moments) {\n    var res, i\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0]\n    }\n    if (!moments.length) {\n      return createLocal()\n    }\n    res = moments[0]\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i]\n      }\n    }\n    return res\n  }\n\n  // TODO: Use [].sort instead?\n  function min () {\n    var args = [].slice.call(arguments, 0)\n\n    return pickBy('isBefore', args)\n  }\n\n  function max () {\n    var args = [].slice.call(arguments, 0)\n\n    return pickBy('isAfter', args)\n  }\n\n  var now = function () {\n    return Date.now ? Date.now() : +new Date()\n  }\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond']\n\n  function isDurationValid (m) {\n    for (var key in m) {\n      if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false\n      }\n    }\n\n    var unitHasDecimal = false\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true\n        }\n      }\n    }\n\n    return true\n  }\n\n  function isValid$1 () {\n    return this._isValid\n  }\n\n  function createInvalid$1 () {\n    return createDuration(NaN)\n  }\n\n  function Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0\n\n    this._isValid = isDurationValid(normalizedInput)\n\n    // representation for dateAddRemove\n    this._milliseconds =\n      +milliseconds +\n      seconds * 1e3 + // 1000\n      minutes * 6e4 + // 1000 * 60\n      hours * 1000 * 60 * 60 //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12\n\n    this._data = {}\n\n    this._locale = getLocale()\n\n    this._bubble()\n  }\n\n  function isDuration (obj) {\n    return obj instanceof Duration\n  }\n\n  function absRound (number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1\n    } else {\n      return Math.round(number)\n    }\n  }\n\n  // FORMATTING\n\n  function offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset()\n      var sign = '+'\n      if (offset < 0) {\n        offset = -offset\n        sign = '-'\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2)\n    })\n  }\n\n  offset('Z', ':')\n  offset('ZZ', '')\n\n  // PARSING\n\n  addRegexToken('Z', matchShortOffset)\n  addRegexToken('ZZ', matchShortOffset)\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true\n    config._tzm = offsetFromString(matchShortOffset, input)\n  })\n\n  // HELPERS\n\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi\n\n  function offsetFromString (matcher, string) {\n    var matches = (string || '').match(matcher)\n\n    if (matches === null) {\n      return null\n    }\n\n    var chunk = matches[matches.length - 1] || []\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0]\n    var minutes = +(parts[1] * 60) + toInt(parts[2])\n\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes\n  }\n\n  // Return a moment from input, that is local/utc/zone equivalent to model.\n  function cloneWithOffset (input, model) {\n    var res, diff\n    if (model._isUTC) {\n      res = model.clone()\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf()\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff)\n      hooks.updateOffset(res, false)\n      return res\n    } else {\n      return createLocal(input).local()\n    }\n  }\n\n  function getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15\n  }\n\n  // HOOKS\n\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n  hooks.updateOffset = function () {}\n\n  // MOMENTS\n\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n  function getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n      localAdjust\n    if (!this.isValid()) {\n      return input != null ? this : NaN\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input)\n        if (input === null) {\n          return this\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this)\n      }\n      this._offset = input\n      this._isUTC = true\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm')\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false)\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true\n          hooks.updateOffset(this, true)\n          this._changeInProgress = null\n        }\n      }\n      return this\n    } else {\n      return this._isUTC ? offset : getDateOffset(this)\n    }\n  }\n\n  function getSetZone (input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input\n      }\n\n      this.utcOffset(input, keepLocalTime)\n\n      return this\n    } else {\n      return -this.utcOffset()\n    }\n  }\n\n  function setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime)\n  }\n\n  function setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime)\n      this._isUTC = false\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm')\n      }\n    }\n    return this\n  }\n\n  function setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true)\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i)\n      if (tZone != null) {\n        this.utcOffset(tZone)\n      } else {\n        this.utcOffset(0, true)\n      }\n    }\n    return this\n  }\n\n  function hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n      return false\n    }\n    input = input ? createLocal(input).utcOffset() : 0\n\n    return (this.utcOffset() - input) % 60 === 0\n  }\n\n  function isDaylightSavingTime () {\n    return (\n      this.utcOffset() >\n        this.clone()\n          .month(0)\n          .utcOffset() ||\n      this.utcOffset() >\n        this.clone()\n          .month(5)\n          .utcOffset()\n    )\n  }\n\n  function isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted\n    }\n\n    var c = {}\n\n    copyConfig(c, this)\n    c = prepareConfig(c)\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a)\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0\n    } else {\n      this._isDSTShifted = false\n    }\n\n    return this._isDSTShifted\n  }\n\n  function isLocal () {\n    return this.isValid() ? !this._isUTC : false\n  }\n\n  function isUtcOffset () {\n    return this.isValid() ? this._isUTC : false\n  }\n\n  function isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false\n  }\n\n  // ASP.NET json date format regex\n  var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/\n\n  // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n  var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/\n\n  function createDuration (input, key) {\n    var duration = input,\n      // matching against regexp is expensive, do it on demand\n      match = null,\n      sign,\n      ret,\n      diffRes\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      }\n    } else if (isNumber(input)) {\n      duration = {}\n      if (key) {\n        duration[key] = input\n      } else {\n        duration.milliseconds = input\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n      }\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      }\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {}\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to))\n\n      duration = {}\n      duration.ms = diffRes.milliseconds\n      duration.M = diffRes.months\n    }\n\n    ret = new Duration(duration)\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale\n    }\n\n    return ret\n  }\n\n  createDuration.fn = Duration.prototype\n  createDuration.invalid = createInvalid$1\n\n  function parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'))\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign\n  }\n\n  function positiveMomentsDifference (base, other) {\n    var res = { milliseconds: 0, months: 0 }\n\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12\n    if (\n      base\n        .clone()\n        .add(res.months, 'M')\n        .isAfter(other)\n    ) {\n      --res.months\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M')\n\n    return res\n  }\n\n  function momentsDifference (base, other) {\n    var res\n    if (!(base.isValid() && other.isValid())) {\n      return { milliseconds: 0, months: 0 }\n    }\n\n    other = cloneWithOffset(other, base)\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other)\n    } else {\n      res = positiveMomentsDifference(other, base)\n      res.milliseconds = -res.milliseconds\n      res.months = -res.months\n    }\n\n    return res\n  }\n\n  // TODO: remove 'name' arg after deprecation is removed\n  function createAdder (direction, name) {\n    return function (val, period) {\n      var dur, tmp\n      //invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(\n          name,\n          'moment().' +\n            name +\n            '(period, number) is deprecated. Please use moment().' +\n            name +\n            '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n        )\n        tmp = val\n        val = period\n        period = tmp\n      }\n\n      val = typeof val === 'string' ? +val : val\n      dur = createDuration(val, period)\n      addSubtract(this, dur, direction)\n      return this\n    }\n  }\n\n  function addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n      days = absRound(duration._days),\n      months = absRound(duration._months)\n\n    if (!mom.isValid()) {\n      // No op\n      return\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding)\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding)\n    }\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding)\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months)\n    }\n  }\n\n  var add = createAdder(1, 'add')\n  var subtract = createAdder(-1, 'subtract')\n\n  function getCalendarFormat (myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true)\n    return diff < -6\n      ? 'sameElse'\n      : diff < -1\n      ? 'lastWeek'\n      : diff < 0\n      ? 'lastDay'\n      : diff < 1\n      ? 'sameDay'\n      : diff < 2\n      ? 'nextDay'\n      : diff < 7\n      ? 'nextWeek'\n      : 'sameElse'\n  }\n\n  function calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n      sod = cloneWithOffset(now, this).startOf('day'),\n      format = hooks.calendarFormat(this, sod) || 'sameElse'\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format])\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)))\n  }\n\n  function clone () {\n    return new Moment(this)\n  }\n\n  function isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input)\n    if (!(this.isValid() && localInput.isValid())) {\n      return false\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond')\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf()\n    } else {\n      return (\n        localInput.valueOf() <\n        this.clone()\n          .startOf(units)\n          .valueOf()\n      )\n    }\n  }\n\n  function isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input)\n    if (!(this.isValid() && localInput.isValid())) {\n      return false\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond')\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf()\n    } else {\n      return (\n        this.clone()\n          .endOf(units)\n          .valueOf() < localInput.valueOf()\n      )\n    }\n  }\n\n  function isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()'\n    return (\n      (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n      (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units))\n    )\n  }\n\n  function isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n      inputMs\n    if (!(this.isValid() && localInput.isValid())) {\n      return false\n    }\n    units = normalizeUnits(units || 'millisecond')\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf()\n    } else {\n      inputMs = localInput.valueOf()\n      return (\n        this.clone()\n          .startOf(units)\n          .valueOf() <= inputMs &&\n        inputMs <=\n          this.clone()\n            .endOf(units)\n            .valueOf()\n      )\n    }\n  }\n\n  function isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units)\n  }\n\n  function isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units)\n  }\n\n  function diff (input, units, asFloat) {\n    var that, zoneDelta, delta, output\n\n    if (!this.isValid()) {\n      return NaN\n    }\n\n    that = cloneWithOffset(input, this)\n\n    if (!that.isValid()) {\n      return NaN\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4\n\n    units = normalizeUnits(units)\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n      output = monthDiff(this, that)\n      if (units === 'quarter') {\n        output = output / 3\n      } else if (units === 'year') {\n        output = output / 12\n      }\n    } else {\n      delta = this - that\n      output =\n        units === 'second'\n          ? delta / 1e3 // 1000\n          : units === 'minute'\n          ? delta / 6e4 // 1000 * 60\n          : units === 'hour'\n          ? delta / 36e5 // 1000 * 60 * 60\n          : units === 'day'\n          ? (delta - zoneDelta) / 864e5 // 1000 * 60 * 60 * 24, negate dst\n          : units === 'week'\n          ? (delta - zoneDelta) / 6048e5 // 1000 * 60 * 60 * 24 * 7, negate dst\n          : delta\n    }\n    return asFloat ? output : absFloor(output)\n  }\n\n  function monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months')\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2)\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months')\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor)\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]'\n\n  function toString () {\n    return this.clone()\n      .locale('en')\n      .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')\n  }\n\n  function toISOString () {\n    if (!this.isValid()) {\n      return null\n    }\n    var m = this.clone().utc()\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]')\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      return this.toDate().toISOString()\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]')\n  }\n\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n  function inspect () {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)'\n    }\n    var func = 'moment'\n    var zone = ''\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone'\n      zone = 'Z'\n    }\n    var prefix = '[' + func + '(\"]'\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY'\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS'\n    var suffix = zone + '[\")]'\n\n    return this.format(prefix + year + datetime + suffix)\n  }\n\n  function format (inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat\n    }\n    var output = formatMoment(this, inputString)\n    return this.localeData().postformat(output)\n  }\n\n  function from (time, withoutSuffix) {\n    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {\n      return createDuration({ to: this, from: time })\n        .locale(this.locale())\n        .humanize(!withoutSuffix)\n    } else {\n      return this.localeData().invalidDate()\n    }\n  }\n\n  function fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix)\n  }\n\n  function to (time, withoutSuffix) {\n    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {\n      return createDuration({ from: this, to: time })\n        .locale(this.locale())\n        .humanize(!withoutSuffix)\n    } else {\n      return this.localeData().invalidDate()\n    }\n  }\n\n  function toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix)\n  }\n\n  // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n  function locale (key) {\n    var newLocaleData\n\n    if (key === undefined) {\n      return this._locale._abbr\n    } else {\n      newLocaleData = getLocale(key)\n      if (newLocaleData != null) {\n        this._locale = newLocaleData\n      }\n      return this\n    }\n  }\n\n  var lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n      if (key === undefined) {\n        return this.localeData()\n      } else {\n        return this.locale(key)\n      }\n    }\n  )\n\n  function localeData () {\n    return this._locale\n  }\n\n  function startOf (units) {\n    units = normalizeUnits(units)\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n      case 'year':\n        this.month(0)\n      /* falls through */\n      case 'quarter':\n      case 'month':\n        this.date(1)\n      /* falls through */\n      case 'week':\n      case 'isoWeek':\n      case 'day':\n      case 'date':\n        this.hours(0)\n      /* falls through */\n      case 'hour':\n        this.minutes(0)\n      /* falls through */\n      case 'minute':\n        this.seconds(0)\n      /* falls through */\n      case 'second':\n        this.milliseconds(0)\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n      this.weekday(0)\n    }\n    if (units === 'isoWeek') {\n      this.isoWeekday(1)\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n      this.month(Math.floor(this.month() / 3) * 3)\n    }\n\n    return this\n  }\n\n  function endOf (units) {\n    units = normalizeUnits(units)\n    if (units === undefined || units === 'millisecond') {\n      return this\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n      units = 'day'\n    }\n\n    return this.startOf(units)\n      .add(1, units === 'isoWeek' ? 'week' : units)\n      .subtract(1, 'ms')\n  }\n\n  function valueOf () {\n    return this._d.valueOf() - (this._offset || 0) * 60000\n  }\n\n  function unix () {\n    return Math.floor(this.valueOf() / 1000)\n  }\n\n  function toDate () {\n    return new Date(this.valueOf())\n  }\n\n  function toArray () {\n    var m = this\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()]\n  }\n\n  function toObject () {\n    var m = this\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    }\n  }\n\n  function toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null\n  }\n\n  function isValid$2 () {\n    return isValid(this)\n  }\n\n  function parsingFlags () {\n    return extend({}, getParsingFlags(this))\n  }\n\n  function invalidAt () {\n    return getParsingFlags(this).overflow\n  }\n\n  function creationData () {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    }\n  }\n\n  // FORMATTING\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100\n  })\n\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100\n  })\n\n  function addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter)\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear')\n  addWeekYearFormatToken('ggggg', 'weekYear')\n  addWeekYearFormatToken('GGGG', 'isoWeekYear')\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear')\n\n  // ALIASES\n\n  addUnitAlias('weekYear', 'gg')\n  addUnitAlias('isoWeekYear', 'GG')\n\n  // PRIORITY\n\n  addUnitPriority('weekYear', 1)\n  addUnitPriority('isoWeekYear', 1)\n\n  // PARSING\n\n  addRegexToken('G', matchSigned)\n  addRegexToken('g', matchSigned)\n  addRegexToken('GG', match1to2, match2)\n  addRegexToken('gg', match1to2, match2)\n  addRegexToken('GGGG', match1to4, match4)\n  addRegexToken('gggg', match1to4, match4)\n  addRegexToken('GGGGG', match1to6, match6)\n  addRegexToken('ggggg', match1to6, match6)\n\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input)\n  })\n\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input)\n  })\n\n  // MOMENTS\n\n  function getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(\n      this,\n      input,\n      this.week(),\n      this.weekday(),\n      this.localeData()._week.dow,\n      this.localeData()._week.doy\n    )\n  }\n\n  function getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4)\n  }\n\n  function getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4)\n  }\n\n  function getWeeksInYear () {\n    var weekInfo = this.localeData()._week\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy)\n  }\n\n  function getSetWeekYearHelper (input, week, weekday, dow, doy) {\n    var weeksTarget\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy)\n      if (week > weeksTarget) {\n        week = weeksTarget\n      }\n      return setWeekAll.call(this, input, week, weekday, dow, doy)\n    }\n  }\n\n  function setWeekAll (weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n      date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear)\n\n    this.year(date.getUTCFullYear())\n    this.month(date.getUTCMonth())\n    this.date(date.getUTCDate())\n    return this\n  }\n\n  // FORMATTING\n\n  addFormatToken('Q', 0, 'Qo', 'quarter')\n\n  // ALIASES\n\n  addUnitAlias('quarter', 'Q')\n\n  // PRIORITY\n\n  addUnitPriority('quarter', 7)\n\n  // PARSING\n\n  addRegexToken('Q', match1)\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3\n  })\n\n  // MOMENTS\n\n  function getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + (this.month() % 3))\n  }\n\n  // FORMATTING\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date')\n\n  // ALIASES\n\n  addUnitAlias('date', 'D')\n\n  // PRIOROITY\n  addUnitPriority('date', 9)\n\n  // PARSING\n\n  addRegexToken('D', match1to2)\n  addRegexToken('DD', match1to2, match2)\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient\n  })\n\n  addParseToken(['D', 'DD'], DATE)\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10)\n  })\n\n  // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true)\n\n  // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear')\n\n  // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD')\n\n  // PRIORITY\n  addUnitPriority('dayOfYear', 4)\n\n  // PARSING\n\n  addRegexToken('DDD', match1to3)\n  addRegexToken('DDDD', match3)\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input)\n  })\n\n  // HELPERS\n\n  // MOMENTS\n\n  function getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd')\n  }\n\n  // FORMATTING\n\n  addFormatToken('m', ['mm', 2], 0, 'minute')\n\n  // ALIASES\n\n  addUnitAlias('minute', 'm')\n\n  // PRIORITY\n\n  addUnitPriority('minute', 14)\n\n  // PARSING\n\n  addRegexToken('m', match1to2)\n  addRegexToken('mm', match1to2, match2)\n  addParseToken(['m', 'mm'], MINUTE)\n\n  // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false)\n\n  // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second')\n\n  // ALIASES\n\n  addUnitAlias('second', 's')\n\n  // PRIORITY\n\n  addUnitPriority('second', 15)\n\n  // PARSING\n\n  addRegexToken('s', match1to2)\n  addRegexToken('ss', match1to2, match2)\n  addParseToken(['s', 'ss'], SECOND)\n\n  // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false)\n\n  // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100)\n  })\n\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10)\n  })\n\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond')\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10\n  })\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100\n  })\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000\n  })\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000\n  })\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000\n  })\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000\n  })\n\n  // ALIASES\n\n  addUnitAlias('millisecond', 'ms')\n\n  // PRIORITY\n\n  addUnitPriority('millisecond', 16)\n\n  // PARSING\n\n  addRegexToken('S', match1to3, match1)\n  addRegexToken('SS', match1to3, match2)\n  addRegexToken('SSS', match1to3, match3)\n\n  var token\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned)\n  }\n\n  function parseMs (input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000)\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs)\n  }\n  // MOMENTS\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false)\n\n  // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr')\n  addFormatToken('zz', 0, 0, 'zoneName')\n\n  // MOMENTS\n\n  function getZoneAbbr () {\n    return this._isUTC ? 'UTC' : ''\n  }\n\n  function getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : ''\n  }\n\n  var proto = Moment.prototype\n\n  proto.add = add\n  proto.calendar = calendar$1\n  proto.clone = clone\n  proto.diff = diff\n  proto.endOf = endOf\n  proto.format = format\n  proto.from = from\n  proto.fromNow = fromNow\n  proto.to = to\n  proto.toNow = toNow\n  proto.get = stringGet\n  proto.invalidAt = invalidAt\n  proto.isAfter = isAfter\n  proto.isBefore = isBefore\n  proto.isBetween = isBetween\n  proto.isSame = isSame\n  proto.isSameOrAfter = isSameOrAfter\n  proto.isSameOrBefore = isSameOrBefore\n  proto.isValid = isValid$2\n  proto.lang = lang\n  proto.locale = locale\n  proto.localeData = localeData\n  proto.max = prototypeMax\n  proto.min = prototypeMin\n  proto.parsingFlags = parsingFlags\n  proto.set = stringSet\n  proto.startOf = startOf\n  proto.subtract = subtract\n  proto.toArray = toArray\n  proto.toObject = toObject\n  proto.toDate = toDate\n  proto.toISOString = toISOString\n  proto.inspect = inspect\n  proto.toJSON = toJSON\n  proto.toString = toString\n  proto.unix = unix\n  proto.valueOf = valueOf\n  proto.creationData = creationData\n\n  // Year\n  proto.year = getSetYear\n  proto.isLeapYear = getIsLeapYear\n\n  // Week Year\n  proto.weekYear = getSetWeekYear\n  proto.isoWeekYear = getSetISOWeekYear\n\n  // Quarter\n  proto.quarter = proto.quarters = getSetQuarter\n\n  // Month\n  proto.month = getSetMonth\n  proto.daysInMonth = getDaysInMonth\n\n  // Week\n  proto.week = proto.weeks = getSetWeek\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek\n  proto.weeksInYear = getWeeksInYear\n  proto.isoWeeksInYear = getISOWeeksInYear\n\n  // Day\n  proto.date = getSetDayOfMonth\n  proto.day = proto.days = getSetDayOfWeek\n  proto.weekday = getSetLocaleDayOfWeek\n  proto.isoWeekday = getSetISODayOfWeek\n  proto.dayOfYear = getSetDayOfYear\n\n  // Hour\n  proto.hour = proto.hours = getSetHour\n\n  // Minute\n  proto.minute = proto.minutes = getSetMinute\n\n  // Second\n  proto.second = proto.seconds = getSetSecond\n\n  // Millisecond\n  proto.millisecond = proto.milliseconds = getSetMillisecond\n\n  // Offset\n  proto.utcOffset = getSetOffset\n  proto.utc = setOffsetToUTC\n  proto.local = setOffsetToLocal\n  proto.parseZone = setOffsetToParsedOffset\n  proto.hasAlignedHourOffset = hasAlignedHourOffset\n  proto.isDST = isDaylightSavingTime\n  proto.isLocal = isLocal\n  proto.isUtcOffset = isUtcOffset\n  proto.isUtc = isUtc\n  proto.isUTC = isUtc\n\n  // Timezone\n  proto.zoneAbbr = getZoneAbbr\n  proto.zoneName = getZoneName\n\n  // Deprecations\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth)\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth)\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear)\n  proto.zone = deprecate(\n    'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n    getSetZone\n  )\n  proto.isDSTShifted = deprecate(\n    'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n    isDaylightSavingTimeShifted\n  )\n\n  function createUnix (input) {\n    return createLocal(input * 1000)\n  }\n\n  function createInZone () {\n    return createLocal.apply(null, arguments).parseZone()\n  }\n\n  function preParsePostFormat (string) {\n    return string\n  }\n\n  var proto$1 = Locale.prototype\n\n  proto$1.calendar = calendar\n  proto$1.longDateFormat = longDateFormat\n  proto$1.invalidDate = invalidDate\n  proto$1.ordinal = ordinal\n  proto$1.preparse = preParsePostFormat\n  proto$1.postformat = preParsePostFormat\n  proto$1.relativeTime = relativeTime\n  proto$1.pastFuture = pastFuture\n  proto$1.set = set\n\n  // Month\n  proto$1.months = localeMonths\n  proto$1.monthsShort = localeMonthsShort\n  proto$1.monthsParse = localeMonthsParse\n  proto$1.monthsRegex = monthsRegex\n  proto$1.monthsShortRegex = monthsShortRegex\n\n  // Week\n  proto$1.week = localeWeek\n  proto$1.firstDayOfYear = localeFirstDayOfYear\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek\n\n  // Day of Week\n  proto$1.weekdays = localeWeekdays\n  proto$1.weekdaysMin = localeWeekdaysMin\n  proto$1.weekdaysShort = localeWeekdaysShort\n  proto$1.weekdaysParse = localeWeekdaysParse\n\n  proto$1.weekdaysRegex = weekdaysRegex\n  proto$1.weekdaysShortRegex = weekdaysShortRegex\n  proto$1.weekdaysMinRegex = weekdaysMinRegex\n\n  // Hours\n  proto$1.isPM = localeIsPM\n  proto$1.meridiem = localeMeridiem\n\n  function get$1 (format, index, field, setter) {\n    var locale = getLocale()\n    var utc = createUTC().set(setter, index)\n    return locale[field](utc, format)\n  }\n\n  function listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n      index = format\n      format = undefined\n    }\n\n    format = format || ''\n\n    if (index != null) {\n      return get$1(format, index, field, 'month')\n    }\n\n    var i\n    var out = []\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month')\n    }\n    return out\n  }\n\n  // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n  function listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format\n        format = undefined\n      }\n\n      format = format || ''\n    } else {\n      format = localeSorted\n      index = format\n      localeSorted = false\n\n      if (isNumber(format)) {\n        index = format\n        format = undefined\n      }\n\n      format = format || ''\n    }\n\n    var locale = getLocale(),\n      shift = localeSorted ? locale._week.dow : 0\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day')\n    }\n\n    var i\n    var out = []\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day')\n    }\n    return out\n  }\n\n  function listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months')\n  }\n\n  function listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort')\n  }\n\n  function listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays')\n  }\n\n  function listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort')\n  }\n\n  function listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin')\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n        output = toInt((number % 100) / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th'\n      return number + output\n    }\n  })\n\n  // Side effect imports\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale)\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale)\n\n  var mathAbs = Math.abs\n\n  function abs () {\n    var data = this._data\n\n    this._milliseconds = mathAbs(this._milliseconds)\n    this._days = mathAbs(this._days)\n    this._months = mathAbs(this._months)\n\n    data.milliseconds = mathAbs(data.milliseconds)\n    data.seconds = mathAbs(data.seconds)\n    data.minutes = mathAbs(data.minutes)\n    data.hours = mathAbs(data.hours)\n    data.months = mathAbs(data.months)\n    data.years = mathAbs(data.years)\n\n    return this\n  }\n\n  function addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value)\n\n    duration._milliseconds += direction * other._milliseconds\n    duration._days += direction * other._days\n    duration._months += direction * other._months\n\n    return duration._bubble()\n  }\n\n  // supports only 2.0-style add(1, 's') or add(duration)\n  function add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1)\n  }\n\n  // supports only 2.0-style subtract(1, 's') or subtract(duration)\n  function subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1)\n  }\n\n  function absCeil (number) {\n    if (number < 0) {\n      return Math.floor(number)\n    } else {\n      return Math.ceil(number)\n    }\n  }\n\n  function bubble () {\n    var milliseconds = this._milliseconds\n    var days = this._days\n    var months = this._months\n    var data = this._data\n    var seconds, minutes, hours, years, monthsFromDays\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) || (milliseconds <= 0 && days <= 0 && months <= 0))) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5\n      days = 0\n      months = 0\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000\n\n    seconds = absFloor(milliseconds / 1000)\n    data.seconds = seconds % 60\n\n    minutes = absFloor(seconds / 60)\n    data.minutes = minutes % 60\n\n    hours = absFloor(minutes / 60)\n    data.hours = hours % 24\n\n    days += absFloor(hours / 24)\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days))\n    months += monthsFromDays\n    days -= absCeil(monthsToDays(monthsFromDays))\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12)\n    months %= 12\n\n    data.days = days\n    data.months = months\n    data.years = years\n\n    return this\n  }\n\n  function daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return (days * 4800) / 146097\n  }\n\n  function monthsToDays (months) {\n    // the reverse of daysToMonths\n    return (months * 146097) / 4800\n  }\n\n  function as (units) {\n    if (!this.isValid()) {\n      return NaN\n    }\n    var days\n    var months\n    var milliseconds = this._milliseconds\n\n    units = normalizeUnits(units)\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5\n      months = this._months + daysToMonths(days)\n      return units === 'month' ? months : months / 12\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months))\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5\n        case 'day':\n          return days + milliseconds / 864e5\n        case 'hour':\n          return days * 24 + milliseconds / 36e5\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4\n        case 'second':\n          return days * 86400 + milliseconds / 1000\n        // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds\n        default:\n          throw new Error('Unknown unit ' + units)\n      }\n    }\n  }\n\n  // TODO: Use this.as('ms')?\n  function valueOf$1 () {\n    if (!this.isValid()) {\n      return NaN\n    }\n    return this._milliseconds + this._days * 864e5 + (this._months % 12) * 2592e6 + toInt(this._months / 12) * 31536e6\n  }\n\n  function makeAs (alias) {\n    return function () {\n      return this.as(alias)\n    }\n  }\n\n  var asMilliseconds = makeAs('ms')\n  var asSeconds = makeAs('s')\n  var asMinutes = makeAs('m')\n  var asHours = makeAs('h')\n  var asDays = makeAs('d')\n  var asWeeks = makeAs('w')\n  var asMonths = makeAs('M')\n  var asYears = makeAs('y')\n\n  function get$2 (units) {\n    units = normalizeUnits(units)\n    return this.isValid() ? this[units + 's']() : NaN\n  }\n\n  function makeGetter (name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN\n    }\n  }\n\n  var milliseconds = makeGetter('milliseconds')\n  var seconds = makeGetter('seconds')\n  var minutes = makeGetter('minutes')\n  var hours = makeGetter('hours')\n  var days = makeGetter('days')\n  var months = makeGetter('months')\n  var years = makeGetter('years')\n\n  function weeks () {\n    return absFloor(this.days() / 7)\n  }\n\n  var round = Math.round\n  var thresholds = {\n    ss: 44, // a few seconds to seconds\n    s: 45, // seconds to minute\n    m: 45, // minutes to hour\n    h: 22, // hours to day\n    d: 26, // days to month\n    M: 11 // months to year\n  }\n\n  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n  function substituteTimeAgo (string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture)\n  }\n\n  function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs()\n    var seconds = round(duration.as('s'))\n    var minutes = round(duration.as('m'))\n    var hours = round(duration.as('h'))\n    var days = round(duration.as('d'))\n    var months = round(duration.as('M'))\n    var years = round(duration.as('y'))\n\n    var a = (seconds <= thresholds.ss && ['s', seconds]) ||\n      (seconds < thresholds.s && ['ss', seconds]) ||\n      (minutes <= 1 && ['m']) ||\n      (minutes < thresholds.m && ['mm', minutes]) ||\n      (hours <= 1 && ['h']) ||\n      (hours < thresholds.h && ['hh', hours]) ||\n      (days <= 1 && ['d']) ||\n      (days < thresholds.d && ['dd', days]) ||\n      (months <= 1 && ['M']) ||\n      (months < thresholds.M && ['MM', months]) ||\n      (years <= 1 && ['y']) || ['yy', years]\n\n    a[2] = withoutSuffix\n    a[3] = +posNegDuration > 0\n    a[4] = locale\n    return substituteTimeAgo.apply(null, a)\n  }\n\n  // This function allows you to set the rounding function for relative time strings\n  function getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round\n    }\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction\n      return true\n    }\n    return false\n  }\n\n  // This function allows you to set a threshold for relative time strings\n  function getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false\n    }\n    if (limit === undefined) {\n      return thresholds[threshold]\n    }\n    thresholds[threshold] = limit\n    if (threshold === 's') {\n      thresholds.ss = limit - 1\n    }\n    return true\n  }\n\n  function humanize (withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate()\n    }\n\n    var locale = this.localeData()\n    var output = relativeTime$1(this, !withSuffix, locale)\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output)\n    }\n\n    return locale.postformat(output)\n  }\n\n  var abs$1 = Math.abs\n\n  function toISOString$1 () {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate()\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000\n    var days = abs$1(this._days)\n    var months = abs$1(this._months)\n    var minutes, hours, years\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60)\n    hours = absFloor(minutes / 60)\n    seconds %= 60\n    minutes %= 60\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12)\n    months %= 12\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years\n    var M = months\n    var D = days\n    var h = hours\n    var m = minutes\n    var s = seconds\n    var total = this.asSeconds()\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D'\n    }\n\n    return (\n      (total < 0 ? '-' : '') +\n      'P' +\n      (Y ? Y + 'Y' : '') +\n      (M ? M + 'M' : '') +\n      (D ? D + 'D' : '') +\n      (h || m || s ? 'T' : '') +\n      (h ? h + 'H' : '') +\n      (m ? m + 'M' : '') +\n      (s ? s + 'S' : '')\n    )\n  }\n\n  var proto$2 = Duration.prototype\n\n  proto$2.isValid = isValid$1\n  proto$2.abs = abs\n  proto$2.add = add$1\n  proto$2.subtract = subtract$1\n  proto$2.as = as\n  proto$2.asMilliseconds = asMilliseconds\n  proto$2.asSeconds = asSeconds\n  proto$2.asMinutes = asMinutes\n  proto$2.asHours = asHours\n  proto$2.asDays = asDays\n  proto$2.asWeeks = asWeeks\n  proto$2.asMonths = asMonths\n  proto$2.asYears = asYears\n  proto$2.valueOf = valueOf$1\n  proto$2._bubble = bubble\n  proto$2.get = get$2\n  proto$2.milliseconds = milliseconds\n  proto$2.seconds = seconds\n  proto$2.minutes = minutes\n  proto$2.hours = hours\n  proto$2.days = days\n  proto$2.weeks = weeks\n  proto$2.months = months\n  proto$2.years = years\n  proto$2.humanize = humanize\n  proto$2.toISOString = toISOString$1\n  proto$2.toString = toISOString$1\n  proto$2.toJSON = toISOString$1\n  proto$2.locale = locale\n  proto$2.localeData = localeData\n\n  // Deprecations\n  proto$2.toIsoString = deprecate(\n    'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n    toISOString$1\n  )\n  proto$2.lang = lang\n\n  // Side effect imports\n\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix')\n  addFormatToken('x', 0, 0, 'valueOf')\n\n  // PARSING\n\n  addRegexToken('x', matchSigned)\n  addRegexToken('X', matchTimestamp)\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000)\n  })\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input))\n  })\n\n  // Side effect imports\n\n  hooks.version = '2.18.1'\n\n  setHookCallback(createLocal)\n\n  hooks.fn = proto\n  hooks.min = min\n  hooks.max = max\n  hooks.now = now\n  hooks.utc = createUTC\n  hooks.unix = createUnix\n  hooks.months = listMonths\n  hooks.isDate = isDate\n  hooks.locale = getSetGlobalLocale\n  hooks.invalid = createInvalid\n  hooks.duration = createDuration\n  hooks.isMoment = isMoment\n  hooks.weekdays = listWeekdays\n  hooks.parseZone = createInZone\n  hooks.localeData = getLocale\n  hooks.isDuration = isDuration\n  hooks.monthsShort = listMonthsShort\n  hooks.weekdaysMin = listWeekdaysMin\n  hooks.defineLocale = defineLocale\n  hooks.updateLocale = updateLocale\n  hooks.locales = listLocales\n  hooks.weekdaysShort = listWeekdaysShort\n  hooks.normalizeUnits = normalizeUnits\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold\n  hooks.calendarFormat = getCalendarFormat\n  hooks.prototype = proto\n\n  return hooks\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/moment/moment.js?");

/***/ }),
/* 7 */
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports =  true && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else {}\n}.call(this));\n\n\n//# sourceURL=webpack://trudesk/./node_modules/lodash/lodash.js?");

/***/ }),
/* 8 */
/*!*********************************************!*\
  !*** ./src/public/js/vendor/async/async.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/* provided dependency */ var setImmediate = __webpack_require__(/*! async */ 8);\n;(function (global, factory) {\n   true\n    ? factory(exports)\n    : 0\n})(this, function (exports) {\n  'use strict'\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply (func, thisArg, args) {\n    switch (args.length) {\n      case 0:\n        return func.call(thisArg)\n      case 1:\n        return func.call(thisArg, args[0])\n      case 2:\n        return func.call(thisArg, args[0], args[1])\n      case 3:\n        return func.call(thisArg, args[0], args[1], args[2])\n    }\n    return func.apply(thisArg, args)\n  }\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeMax = Math.max\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest$1 (func, start, transform) {\n    start = nativeMax(start === undefined ? func.length - 1 : start, 0)\n    return function () {\n      var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length)\n\n      while (++index < length) {\n        array[index] = args[start + index]\n      }\n      index = -1\n      var otherArgs = Array(start + 1)\n      while (++index < start) {\n        otherArgs[index] = args[index]\n      }\n      otherArgs[start] = transform(array)\n      return apply(func, this, otherArgs)\n    }\n  }\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity (value) {\n    return value\n  }\n\n  // Lodash rest function without function.toString()\n  // remappings\n  function rest (func, start) {\n    return overRest$1(func, start, identity)\n  }\n\n  var initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n      var callback = args.pop()\n      fn.call(this, args, callback)\n    })\n  }\n\n  function applyEach$1 (eachfn) {\n    return rest(function (fns, args) {\n      var go = initialParams(function (args, callback) {\n        var that = this\n        return eachfn(\n          fns,\n          function (fn, cb) {\n            fn.apply(that, args.concat(cb))\n          },\n          callback\n        )\n      })\n      if (args.length) {\n        return go.apply(this, args)\n      } else {\n        return go\n      }\n    })\n  }\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')()\n\n  /** Built-in value references. */\n  var Symbol$1 = root.Symbol\n\n  /** Used for built-in method references. */\n  var objectProto = Object.prototype\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString\n\n  /** Built-in value references. */\n  var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined\n\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n  function getRawTag (value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1]\n\n    try {\n      value[symToStringTag$1] = undefined\n      var unmasked = true\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value)\n    if (unmasked) {\n      if (isOwn) {\n        value[symToStringTag$1] = tag\n      } else {\n        delete value[symToStringTag$1]\n      }\n    }\n    return result\n  }\n\n  /** Used for built-in method references. */\n  var objectProto$1 = Object.prototype\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString$1 = objectProto$1.toString\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString (value) {\n    return nativeObjectToString$1.call(value)\n  }\n\n  /** `Object#toString` result references. */\n  var nullTag = '[object Null]'\n  var undefinedTag = '[object Undefined]'\n\n  /** Built-in value references. */\n  var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag (value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag\n    }\n    value = Object(value)\n    return symToStringTag && symToStringTag in value ? getRawTag(value) : objectToString(value)\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject (value) {\n    var type = typeof value\n    return value != null && (type == 'object' || type == 'function')\n  }\n\n  /** `Object#toString` result references. */\n  var asyncTag = '[object AsyncFunction]'\n  var funcTag = '[object Function]'\n  var genTag = '[object GeneratorFunction]'\n  var proxyTag = '[object Proxy]'\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction (value) {\n    if (!isObject(value)) {\n      return false\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value)\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag\n  }\n\n  /** Used as references for various `Number` constants. */\n  var MAX_SAFE_INTEGER = 9007199254740991\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength (value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER\n  }\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike (value) {\n    return value != null && isLength(value.length) && !isFunction(value)\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop () {\n    // No operation performed.\n  }\n\n  function once (fn) {\n    return function () {\n      if (fn === null) return\n      var callFn = fn\n      fn = null\n      callFn.apply(this, arguments)\n    }\n  }\n\n  var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator\n\n  var getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]()\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes (n, iteratee) {\n    var index = -1,\n      result = Array(n)\n\n    while (++index < n) {\n      result[index] = iteratee(index)\n    }\n    return result\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike (value) {\n    return value != null && typeof value == 'object'\n  }\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]'\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  function baseIsArguments (value) {\n    return isObjectLike(value) && baseGetTag(value) == argsTag\n  }\n\n  /** Used for built-in method references. */\n  var objectProto$3 = Object.prototype\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty$2 = objectProto$3.hasOwnProperty\n\n  /** Built-in value references. */\n  var propertyIsEnumerable = objectProto$3.propertyIsEnumerable\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(\n    (function () {\n      return arguments\n    })()\n  )\n    ? baseIsArguments\n    : function (value) {\n        return (\n          isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee')\n        )\n      }\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray\n\n  /**\n   * This method returns `false`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.13.0\n   * @category Util\n   * @returns {boolean} Returns `false`.\n   * @example\n   *\n   * _.times(2, _.stubFalse);\n   * // => [false, false]\n   */\n  function stubFalse () {\n    return false\n  }\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports\n\n  /** Built-in value references. */\n  var Buffer = moduleExports ? root.Buffer : undefined\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined\n\n  /**\n   * Checks if `value` is a buffer.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n   * @example\n   *\n   * _.isBuffer(new Buffer(2));\n   * // => true\n   *\n   * _.isBuffer(new Uint8Array(2));\n   * // => false\n   */\n  var isBuffer = nativeIsBuffer || stubFalse\n\n  /** Used as references for various `Number` constants. */\n  var MAX_SAFE_INTEGER$1 = 9007199254740991\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex (value, length) {\n    length = length == null ? MAX_SAFE_INTEGER$1 : length\n    return (\n      !!length && (typeof value == 'number' || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length)\n    )\n  }\n\n  /** `Object#toString` result references. */\n  var argsTag$1 = '[object Arguments]'\n  var arrayTag = '[object Array]'\n  var boolTag = '[object Boolean]'\n  var dateTag = '[object Date]'\n  var errorTag = '[object Error]'\n  var funcTag$1 = '[object Function]'\n  var mapTag = '[object Map]'\n  var numberTag = '[object Number]'\n  var objectTag = '[object Object]'\n  var regexpTag = '[object RegExp]'\n  var setTag = '[object Set]'\n  var stringTag = '[object String]'\n  var weakMapTag = '[object WeakMap]'\n\n  var arrayBufferTag = '[object ArrayBuffer]'\n  var dataViewTag = '[object DataView]'\n  var float32Tag = '[object Float32Array]'\n  var float64Tag = '[object Float64Array]'\n  var int8Tag = '[object Int8Array]'\n  var int16Tag = '[object Int16Array]'\n  var int32Tag = '[object Int32Array]'\n  var uint8Tag = '[object Uint8Array]'\n  var uint8ClampedTag = '[object Uint8ClampedArray]'\n  var uint16Tag = '[object Uint16Array]'\n  var uint32Tag = '[object Uint32Array]'\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {}\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[\n    int16Tag\n  ] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[\n    uint16Tag\n  ] = typedArrayTags[uint32Tag] = true\n  typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[\n    boolTag\n  ] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[\n    funcTag$1\n  ] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[\n    regexpTag\n  ] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false\n\n  /**\n   * The base implementation of `_.isTypedArray` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   */\n  function baseIsTypedArray (value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)]\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary (func) {\n    return function (value) {\n      return func(value)\n    }\n  }\n\n  /** Detect free variable `exports`. */\n  var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports\n\n  /** Detect free variable `module`. */\n  var freeModule$1 = freeExports$1 && \"object\" == 'object' && module && !module.nodeType && module\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports$1 && freeGlobal.process\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function () {\n    try {\n      return freeProcess && freeProcess.binding('util')\n    } catch (e) {}\n  })()\n\n  /* Node.js helper references. */\n  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray\n\n  /**\n   * Checks if `value` is classified as a typed array.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   * @example\n   *\n   * _.isTypedArray(new Uint8Array);\n   * // => true\n   *\n   * _.isTypedArray([]);\n   * // => false\n   */\n  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray\n\n  /** Used for built-in method references. */\n  var objectProto$2 = Object.prototype\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty$1 = objectProto$2.hasOwnProperty\n\n  /**\n   * Creates an array of the enumerable property names of the array-like `value`.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @param {boolean} inherited Specify returning inherited property names.\n   * @returns {Array} Returns the array of property names.\n   */\n  function arrayLikeKeys (value, inherited) {\n    var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length\n\n    for (var key in value) {\n      if (\n        (inherited || hasOwnProperty$1.call(value, key)) &&\n        !(\n          skipIndexes &&\n          // Safari 9 has enumerable `arguments.length` in strict mode.\n          (key == 'length' ||\n            // Node.js 0.10 has enumerable non-index properties on buffers.\n            (isBuff && (key == 'offset' || key == 'parent')) ||\n            // PhantomJS 2 has enumerable non-index properties on typed arrays.\n            (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n            // Skip index properties.\n            isIndex(key, length))\n        )\n      ) {\n        result.push(key)\n      }\n    }\n    return result\n  }\n\n  /** Used for built-in method references. */\n  var objectProto$5 = Object.prototype\n\n  /**\n   * Checks if `value` is likely a prototype object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n   */\n  function isPrototype (value) {\n    var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5\n\n    return value === proto\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg (func, transform) {\n    return function (arg) {\n      return func(transform(arg))\n    }\n  }\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeKeys = overArg(Object.keys, Object)\n\n  /** Used for built-in method references. */\n  var objectProto$4 = Object.prototype\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty$3 = objectProto$4.hasOwnProperty\n\n  /**\n   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function baseKeys (object) {\n    if (!isPrototype(object)) {\n      return nativeKeys(object)\n    }\n    var result = []\n    for (var key in Object(object)) {\n      if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n        result.push(key)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  function keys (object) {\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object)\n  }\n\n  function createArrayIterator (coll) {\n    var i = -1\n    var len = coll.length\n    return function next () {\n      return ++i < len ? { value: coll[i], key: i } : null\n    }\n  }\n\n  function createES2015Iterator (iterator) {\n    var i = -1\n    return function next () {\n      var item = iterator.next()\n      if (item.done) return null\n      i++\n      return { value: item.value, key: i }\n    }\n  }\n\n  function createObjectIterator (obj) {\n    var okeys = keys(obj)\n    var i = -1\n    var len = okeys.length\n    return function next () {\n      var key = okeys[++i]\n      return i < len ? { value: obj[key], key: key } : null\n    }\n  }\n\n  function iterator (coll) {\n    if (isArrayLike(coll)) {\n      return createArrayIterator(coll)\n    }\n\n    var iterator = getIterator(coll)\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll)\n  }\n\n  function onlyOnce (fn) {\n    return function () {\n      if (fn === null) throw new Error('Callback was already called.')\n      var callFn = fn\n      fn = null\n      callFn.apply(this, arguments)\n    }\n  }\n\n  // A temporary value used to identify if the loop should be broken.\n  // See #1064, #1293\n  var breakLoop = {}\n\n  function _eachOfLimit (limit) {\n    return function (obj, iteratee, callback) {\n      callback = once(callback || noop)\n      if (limit <= 0 || !obj) {\n        return callback(null)\n      }\n      var nextElem = iterator(obj)\n      var done = false\n      var running = 0\n\n      function iterateeCallback (err, value) {\n        running -= 1\n        if (err) {\n          done = true\n          callback(err)\n        } else if (value === breakLoop || (done && running <= 0)) {\n          done = true\n          return callback(null)\n        } else {\n          replenish()\n        }\n      }\n\n      function replenish () {\n        while (running < limit && !done) {\n          var elem = nextElem()\n          if (elem === null) {\n            done = true\n            if (running <= 0) {\n              callback(null)\n            }\n            return\n          }\n          running += 1\n          iteratee(elem.value, elem.key, onlyOnce(iterateeCallback))\n        }\n      }\n\n      replenish()\n    }\n  }\n\n  /**\n   * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name eachOfLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.eachOf]{@link module:Collections.eachOf}\n   * @alias forEachOfLimit\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A function to apply to each\n   * item in `coll`. The `key` is the item's key, or index in the case of an\n   * array. The iteratee is passed a `callback(err)` which must be called once it\n   * has completed. If no error has occurred, the callback should be run without\n   * arguments or with an explicit `null` argument. Invoked with\n   * (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   */\n  function eachOfLimit (coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, iteratee, callback)\n  }\n\n  function doLimit (fn, limit) {\n    return function (iterable, iteratee, callback) {\n      return fn(iterable, limit, iteratee, callback)\n    }\n  }\n\n  // eachOf implementation optimized for array-likes\n  function eachOfArrayLike (coll, iteratee, callback) {\n    callback = once(callback || noop)\n    var index = 0,\n      completed = 0,\n      length = coll.length\n    if (length === 0) {\n      callback(null)\n    }\n\n    function iteratorCallback (err) {\n      if (err) {\n        callback(err)\n      } else if (++completed === length) {\n        callback(null)\n      }\n    }\n\n    for (; index < length; index++) {\n      iteratee(coll[index], index, onlyOnce(iteratorCallback))\n    }\n  }\n\n  // a generic version of eachOf which can handle array, object, and iterator cases.\n  var eachOfGeneric = doLimit(eachOfLimit, Infinity)\n\n  /**\n   * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n   * to the iteratee.\n   *\n   * @name eachOf\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias forEachOf\n   * @category Collection\n   * @see [async.each]{@link module:Collections.each}\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each\n   * item in `coll`. The `key` is the item's key, or index in the case of an\n   * array. The iteratee is passed a `callback(err)` which must be called once it\n   * has completed. If no error has occurred, the callback should be run without\n   * arguments or with an explicit `null` argument. Invoked with\n   * (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   * @example\n   *\n   * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n   * var configs = {};\n   *\n   * async.forEachOf(obj, function (value, key, callback) {\n   *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n   *         if (err) return callback(err);\n   *         try {\n   *             configs[key] = JSON.parse(data);\n   *         } catch (e) {\n   *             return callback(e);\n   *         }\n   *         callback();\n   *     });\n   * }, function (err) {\n   *     if (err) console.error(err.message);\n   *     // configs is now a map of JSON data\n   *     doSomethingWith(configs);\n   * });\n   */\n  var eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric\n    eachOfImplementation(coll, iteratee, callback)\n  }\n\n  function doParallel (fn) {\n    return function (obj, iteratee, callback) {\n      return fn(eachOf, obj, iteratee, callback)\n    }\n  }\n\n  function _asyncMap (eachfn, arr, iteratee, callback) {\n    callback = callback || noop\n    arr = arr || []\n    var results = []\n    var counter = 0\n\n    eachfn(\n      arr,\n      function (value, _, callback) {\n        var index = counter++\n        iteratee(value, function (err, v) {\n          results[index] = v\n          callback(err)\n        })\n      },\n      function (err) {\n        callback(err, results)\n      }\n    )\n  }\n\n  /**\n   * Produces a new collection of values by mapping each value in `coll` through\n   * the `iteratee` function. The `iteratee` is called with an item from `coll`\n   * and a callback for when it has finished processing. Each of these callback\n   * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n   * `iteratee` passes an error to its callback, the main `callback` (for the\n   * `map` function) is immediately called with the error.\n   *\n   * Note, that since this function applies the `iteratee` to each item in\n   * parallel, there is no guarantee that the `iteratee` functions will complete\n   * in order. However, the results array will be in the same order as the\n   * original `coll`.\n   *\n   * If `map` is passed an Object, the results will be an Array.  The results\n   * will roughly be in the order of the original Objects' keys (but this can\n   * vary across JavaScript engines)\n   *\n   * @name map\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, transformed)` which must be called\n   * once it has completed with an error (which can be `null`) and a\n   * transformed item. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. Results is an Array of the\n   * transformed items from the `coll`. Invoked with (err, results).\n   * @example\n   *\n   * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n   *     // results is now an array of stats for each file\n   * });\n   */\n  var map = doParallel(_asyncMap)\n\n  /**\n   * Applies the provided arguments to each function in the array, calling\n   * `callback` after all functions have completed. If you only provide the first\n   * argument, `fns`, then it will return a function which lets you pass in the\n   * arguments as if it were a single function call. If more arguments are\n   * provided, `callback` is required while `args` is still optional.\n   *\n   * @name applyEach\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n   * to all call with the same arguments\n   * @param {...*} [args] - any number of separate arguments to pass to the\n   * function.\n   * @param {Function} [callback] - the final argument should be the callback,\n   * called when all functions have completed processing.\n   * @returns {Function} - If only the first argument, `fns`, is provided, it will\n   * return a function which lets you pass in the arguments as if it were a single\n   * function call. The signature is `(..args, callback)`. If invoked with any\n   * arguments, `callback` is required.\n   * @example\n   *\n   * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n   *\n   * // partial application example:\n   * async.each(\n   *     buckets,\n   *     async.applyEach([enableSearch, updateSchema]),\n   *     callback\n   * );\n   */\n  var applyEach = applyEach$1(map)\n\n  function doParallelLimit (fn) {\n    return function (obj, limit, iteratee, callback) {\n      return fn(_eachOfLimit(limit), obj, iteratee, callback)\n    }\n  }\n\n  /**\n   * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n   *\n   * @name mapLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.map]{@link module:Collections.map}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, transformed)` which must be called\n   * once it has completed with an error (which can be `null`) and a transformed\n   * item. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. Results is an array of the\n   * transformed items from the `coll`. Invoked with (err, results).\n   */\n  var mapLimit = doParallelLimit(_asyncMap)\n\n  /**\n   * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n   *\n   * @name mapSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.map]{@link module:Collections.map}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, transformed)` which must be called\n   * once it has completed with an error (which can be `null`) and a\n   * transformed item. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. Results is an array of the\n   * transformed items from the `coll`. Invoked with (err, results).\n   */\n  var mapSeries = doLimit(mapLimit, 1)\n\n  /**\n   * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n   *\n   * @name applyEachSeries\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n   * @category Control Flow\n   * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n   * call with the same arguments\n   * @param {...*} [args] - any number of separate arguments to pass to the\n   * function.\n   * @param {Function} [callback] - the final argument should be the callback,\n   * called when all functions have completed processing.\n   * @returns {Function} - If only the first argument is provided, it will return\n   * a function which lets you pass in the arguments as if it were a single\n   * function call.\n   */\n  var applyEachSeries = applyEach$1(mapSeries)\n\n  /**\n   * Creates a continuation function with some arguments already applied.\n   *\n   * Useful as a shorthand when combined with other control flow functions. Any\n   * arguments passed to the returned function are added to the arguments\n   * originally passed to apply.\n   *\n   * @name apply\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} function - The function you want to eventually apply all\n   * arguments to. Invokes with (arguments...).\n   * @param {...*} arguments... - Any number of arguments to automatically apply\n   * when the continuation is called.\n   * @example\n   *\n   * // using apply\n   * async.parallel([\n   *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n   *     async.apply(fs.writeFile, 'testfile2', 'test2')\n   * ]);\n   *\n   *\n   * // the same process without using apply\n   * async.parallel([\n   *     function(callback) {\n   *         fs.writeFile('testfile1', 'test1', callback);\n   *     },\n   *     function(callback) {\n   *         fs.writeFile('testfile2', 'test2', callback);\n   *     }\n   * ]);\n   *\n   * // It's possible to pass any number of additional arguments when calling the\n   * // continuation:\n   *\n   * node> var fn = async.apply(sys.puts, 'one');\n   * node> fn('two', 'three');\n   * one\n   * two\n   * three\n   */\n  var apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n      return fn.apply(null, args.concat(callArgs))\n    })\n  })\n\n  /**\n   * Take a sync function and make it async, passing its return value to a\n   * callback. This is useful for plugging sync functions into a waterfall,\n   * series, or other async functions. Any arguments passed to the generated\n   * function will be passed to the wrapped function (except for the final\n   * callback argument). Errors thrown will be passed to the callback.\n   *\n   * If the function passed to `asyncify` returns a Promise, that promises's\n   * resolved/rejected state will be used to call the callback, rather than simply\n   * the synchronous return value.\n   *\n   * This also means you can asyncify ES2016 `async` functions.\n   *\n   * @name asyncify\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @alias wrapSync\n   * @category Util\n   * @param {Function} func - The synchronous function to convert to an\n   * asynchronous function.\n   * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n   * (callback).\n   * @example\n   *\n   * // passing a regular synchronous function\n   * async.waterfall([\n   *     async.apply(fs.readFile, filename, \"utf8\"),\n   *     async.asyncify(JSON.parse),\n   *     function (data, next) {\n   *         // data is the result of parsing the text.\n   *         // If there was a parsing error, it would have been caught.\n   *     }\n   * ], callback);\n   *\n   * // passing a function returning a promise\n   * async.waterfall([\n   *     async.apply(fs.readFile, filename, \"utf8\"),\n   *     async.asyncify(function (contents) {\n   *         return db.model.create(contents);\n   *     }),\n   *     function (model, next) {\n   *         // `model` is the instantiated model object.\n   *         // If there was an error, this function would be skipped.\n   *     }\n   * ], callback);\n   *\n   * // es6 example\n   * var q = async.queue(async.asyncify(async function(file) {\n   *     var intermediateStep = await processFile(file);\n   *     return await somePromise(intermediateStep)\n   * }));\n   *\n   * q.push(files);\n   */\n  function asyncify (func) {\n    return initialParams(function (args, callback) {\n      var result\n      try {\n        result = func.apply(this, args)\n      } catch (e) {\n        return callback(e)\n      }\n      // if result is Promise object\n      if (isObject(result) && typeof result.then === 'function') {\n        result.then(\n          function (value) {\n            callback(null, value)\n          },\n          function (err) {\n            callback(err.message ? err : new Error(err))\n          }\n        )\n      } else {\n        callback(null, result)\n      }\n    })\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach (array, iteratee) {\n    var index = -1,\n      length = array == null ? 0 : array.length\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break\n      }\n    }\n    return array\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor (fromRight) {\n    return function (object, iteratee, keysFunc) {\n      var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index]\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break\n        }\n      }\n      return object\n    }\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor()\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn (object, iteratee) {\n    return object && baseFor(object, iteratee, keys)\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex (array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1)\n\n    while (fromRight ? index-- : ++index < length) {\n      if (predicate(array[index], index, array)) {\n        return index\n      }\n    }\n    return -1\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN (value) {\n    return value !== value\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf (array, value, fromIndex) {\n    var index = fromIndex - 1,\n      length = array.length\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index\n      }\n    }\n    return -1\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf (array, value, fromIndex) {\n    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex)\n  }\n\n  /**\n   * Determines the best order for running the functions in `tasks`, based on\n   * their requirements. Each function can optionally depend on other functions\n   * being completed first, and each function is run as soon as its requirements\n   * are satisfied.\n   *\n   * If any of the functions pass an error to their callback, the `auto` sequence\n   * will stop. Further tasks will not execute (so any other functions depending\n   * on it will not run), and the main `callback` is immediately called with the\n   * error.\n   *\n   * Functions also receive an object containing the results of functions which\n   * have completed so far as the first argument, if they have dependencies. If a\n   * task function has no dependencies, it will only be passed a callback.\n   *\n   * @name auto\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Object} tasks - An object. Each of its properties is either a\n   * function or an array of requirements, with the function itself the last item\n   * in the array. The object's key of a property serves as the name of the task\n   * defined by that property, i.e. can be used when specifying requirements for\n   * other tasks. The function receives one or two arguments:\n   * * a `results` object, containing the results of the previously executed\n   *   functions, only passed if the task has any dependencies,\n   * * a `callback(err, result)` function, which must be called when finished,\n   *   passing an `error` (which can be `null`) and the result of the function's\n   *   execution.\n   * @param {number} [concurrency=Infinity] - An optional `integer` for\n   * determining the maximum number of tasks that can be run in parallel. By\n   * default, as many as possible.\n   * @param {Function} [callback] - An optional callback which is called when all\n   * the tasks have been completed. It receives the `err` argument if any `tasks`\n   * pass an error to their callback. Results are always returned; however, if an\n   * error occurs, no further `tasks` will be performed, and the results object\n   * will only contain partial results. Invoked with (err, results).\n   * @returns undefined\n   * @example\n   *\n   * async.auto({\n   *     // this function will just be passed a callback\n   *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n   *     showData: ['readData', function(results, cb) {\n   *         // results.readData is the file's contents\n   *         // ...\n   *     }]\n   * }, callback);\n   *\n   * async.auto({\n   *     get_data: function(callback) {\n   *         console.log('in get_data');\n   *         // async code to get some data\n   *         callback(null, 'data', 'converted to array');\n   *     },\n   *     make_folder: function(callback) {\n   *         console.log('in make_folder');\n   *         // async code to create a directory to store a file in\n   *         // this is run at the same time as getting the data\n   *         callback(null, 'folder');\n   *     },\n   *     write_file: ['get_data', 'make_folder', function(results, callback) {\n   *         console.log('in write_file', JSON.stringify(results));\n   *         // once there is some data and the directory exists,\n   *         // write the data to a file in the directory\n   *         callback(null, 'filename');\n   *     }],\n   *     email_link: ['write_file', function(results, callback) {\n   *         console.log('in email_link', JSON.stringify(results));\n   *         // once the file is written let's email a link to it...\n   *         // results.write_file contains the filename returned by write_file.\n   *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n   *     }]\n   * }, function(err, results) {\n   *     console.log('err = ', err);\n   *     console.log('results = ', results);\n   * });\n   */\n  var auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n      // concurrency is optional, shift the args.\n      callback = concurrency\n      concurrency = null\n    }\n    callback = once(callback || noop)\n    var keys$$1 = keys(tasks)\n    var numTasks = keys$$1.length\n    if (!numTasks) {\n      return callback(null)\n    }\n    if (!concurrency) {\n      concurrency = numTasks\n    }\n\n    var results = {}\n    var runningTasks = 0\n    var hasError = false\n\n    var listeners = {}\n\n    var readyTasks = []\n\n    // for cycle detection:\n    var readyToCheck = [] // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {}\n\n    baseForOwn(tasks, function (task, key) {\n      if (!isArray(task)) {\n        // no dependencies\n        enqueueTask(key, [task])\n        readyToCheck.push(key)\n        return\n      }\n\n      var dependencies = task.slice(0, task.length - 1)\n      var remainingDependencies = dependencies.length\n      if (remainingDependencies === 0) {\n        enqueueTask(key, task)\n        readyToCheck.push(key)\n        return\n      }\n      uncheckedDependencies[key] = remainingDependencies\n\n      arrayEach(dependencies, function (dependencyName) {\n        if (!tasks[dependencyName]) {\n          throw new Error('async.auto task `' + key + '` has a non-existent dependency in ' + dependencies.join(', '))\n        }\n        addListener(dependencyName, function () {\n          remainingDependencies--\n          if (remainingDependencies === 0) {\n            enqueueTask(key, task)\n          }\n        })\n      })\n    })\n\n    checkForDeadlocks()\n    processQueue()\n\n    function enqueueTask (key, task) {\n      readyTasks.push(function () {\n        runTask(key, task)\n      })\n    }\n\n    function processQueue () {\n      if (readyTasks.length === 0 && runningTasks === 0) {\n        return callback(null, results)\n      }\n      while (readyTasks.length && runningTasks < concurrency) {\n        var run = readyTasks.shift()\n        run()\n      }\n    }\n\n    function addListener (taskName, fn) {\n      var taskListeners = listeners[taskName]\n      if (!taskListeners) {\n        taskListeners = listeners[taskName] = []\n      }\n\n      taskListeners.push(fn)\n    }\n\n    function taskComplete (taskName) {\n      var taskListeners = listeners[taskName] || []\n      arrayEach(taskListeners, function (fn) {\n        fn()\n      })\n      processQueue()\n    }\n\n    function runTask (key, task) {\n      if (hasError) return\n\n      var taskCallback = onlyOnce(\n        rest(function (err, args) {\n          runningTasks--\n          if (args.length <= 1) {\n            args = args[0]\n          }\n          if (err) {\n            var safeResults = {}\n            baseForOwn(results, function (val, rkey) {\n              safeResults[rkey] = val\n            })\n            safeResults[key] = args\n            hasError = true\n            listeners = []\n\n            callback(err, safeResults)\n          } else {\n            results[key] = args\n            taskComplete(key)\n          }\n        })\n      )\n\n      runningTasks++\n      var taskFn = task[task.length - 1]\n      if (task.length > 1) {\n        taskFn(results, taskCallback)\n      } else {\n        taskFn(taskCallback)\n      }\n    }\n\n    function checkForDeadlocks () {\n      // Kahn's algorithm\n      // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n      // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n      var currentTask\n      var counter = 0\n      while (readyToCheck.length) {\n        currentTask = readyToCheck.pop()\n        counter++\n        arrayEach(getDependents(currentTask), function (dependent) {\n          if (--uncheckedDependencies[dependent] === 0) {\n            readyToCheck.push(dependent)\n          }\n        })\n      }\n\n      if (counter !== numTasks) {\n        throw new Error('async.auto cannot execute tasks due to a recursive dependency')\n      }\n    }\n\n    function getDependents (taskName) {\n      var result = []\n      baseForOwn(tasks, function (task, key) {\n        if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n          result.push(key)\n        }\n      })\n      return result\n    }\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap (array, iteratee) {\n    var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length)\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array)\n    }\n    return result\n  }\n\n  /** `Object#toString` result references. */\n  var symbolTag = '[object Symbol]'\n\n  /**\n   * Checks if `value` is classified as a `Symbol` primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n   * @example\n   *\n   * _.isSymbol(Symbol.iterator);\n   * // => true\n   *\n   * _.isSymbol('abc');\n   * // => false\n   */\n  function isSymbol (value) {\n    return typeof value == 'symbol' || (isObjectLike(value) && baseGetTag(value) == symbolTag)\n  }\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0\n\n  /** Used to convert symbols to primitives and strings. */\n  var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined\n  var symbolToString = symbolProto ? symbolProto.toString : undefined\n\n  /**\n   * The base implementation of `_.toString` which doesn't convert nullish\n   * values to empty strings.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString (value) {\n    // Exit early for strings to avoid a performance hit in some environments.\n    if (typeof value == 'string') {\n      return value\n    }\n    if (isArray(value)) {\n      // Recursively convert values (susceptible to call stack limits).\n      return arrayMap(value, baseToString) + ''\n    }\n    if (isSymbol(value)) {\n      return symbolToString ? symbolToString.call(value) : ''\n    }\n    var result = value + ''\n    return result == '0' && 1 / value == -INFINITY ? '-0' : result\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice (array, start, end) {\n    var index = -1,\n      length = array.length\n\n    if (start < 0) {\n      start = -start > length ? 0 : length + start\n    }\n    end = end > length ? length : end\n    if (end < 0) {\n      end += length\n    }\n    length = start > end ? 0 : (end - start) >>> 0\n    start >>>= 0\n\n    var result = Array(length)\n    while (++index < length) {\n      result[index] = array[index + start]\n    }\n    return result\n  }\n\n  /**\n   * Casts `array` to a slice if it's needed.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {number} start The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the cast slice.\n   */\n  function castSlice (array, start, end) {\n    var length = array.length\n    end = end === undefined ? length : end\n    return !start && end >= length ? array : baseSlice(array, start, end)\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex (strSymbols, chrSymbols) {\n    var index = strSymbols.length\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex (strSymbols, chrSymbols) {\n    var index = -1,\n      length = strSymbols.length\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index\n  }\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray (string) {\n    return string.split('')\n  }\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff'\n  var rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23'\n  var rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0'\n  var rsVarRange = '\\\\ufe0e\\\\ufe0f'\n\n  /** Used to compose unicode capture groups. */\n  var rsZWJ = '\\\\u200d'\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']')\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode (string) {\n    return reHasUnicode.test(string)\n  }\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange$1 = '\\\\ud800-\\\\udfff'\n  var rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23'\n  var rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0'\n  var rsVarRange$1 = '\\\\ufe0e\\\\ufe0f'\n\n  /** Used to compose unicode capture groups. */\n  var rsAstral = '[' + rsAstralRange$1 + ']'\n  var rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']'\n  var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]'\n  var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')'\n  var rsNonAstral = '[^' + rsAstralRange$1 + ']'\n  var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}'\n  var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]'\n  var rsZWJ$1 = '\\\\u200d'\n\n  /** Used to compose unicode regexes. */\n  var reOptMod = rsModifier + '?'\n  var rsOptVar = '[' + rsVarRange$1 + ']?'\n  var rsOptJoin =\n    '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*'\n  var rsSeq = rsOptVar + reOptMod + rsOptJoin\n  var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')'\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g')\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray (string) {\n    return string.match(reUnicode) || []\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray (string) {\n    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string)\n  }\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString (value) {\n    return value == null ? '' : baseToString(value)\n  }\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g\n\n  /**\n   * Removes leading and trailing whitespace or specified characters from `string`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category String\n   * @param {string} [string=''] The string to trim.\n   * @param {string} [chars=whitespace] The characters to trim.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {string} Returns the trimmed string.\n   * @example\n   *\n   * _.trim('  abc  ');\n   * // => 'abc'\n   *\n   * _.trim('-_-abc-_-', '_-');\n   * // => 'abc'\n   *\n   * _.map(['  foo  ', '  bar  '], _.trim);\n   * // => ['foo', 'bar']\n   */\n  function trim (string, chars, guard) {\n    string = toString(string)\n    if (string && (guard || chars === undefined)) {\n      return string.replace(reTrim, '')\n    }\n    if (!string || !(chars = baseToString(chars))) {\n      return string\n    }\n    var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1\n\n    return castSlice(strSymbols, start, end).join('')\n  }\n\n  var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m\n  var FN_ARG_SPLIT = /,/\n  var FN_ARG = /(=.+)?(\\s*)$/\n  var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm\n\n  function parseParams (func) {\n    func = func.toString().replace(STRIP_COMMENTS, '')\n    func = func.match(FN_ARGS)[2].replace(' ', '')\n    func = func ? func.split(FN_ARG_SPLIT) : []\n    func = func.map(function (arg) {\n      return trim(arg.replace(FN_ARG, ''))\n    })\n    return func\n  }\n\n  /**\n   * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n   * tasks are specified as parameters to the function, after the usual callback\n   * parameter, with the parameter names matching the names of the tasks it\n   * depends on. This can provide even more readable task graphs which can be\n   * easier to maintain.\n   *\n   * If a final callback is specified, the task results are similarly injected,\n   * specified as named parameters after the initial error parameter.\n   *\n   * The autoInject function is purely syntactic sugar and its semantics are\n   * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n   *\n   * @name autoInject\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.auto]{@link module:ControlFlow.auto}\n   * @category Control Flow\n   * @param {Object} tasks - An object, each of whose properties is a function of\n   * the form 'func([dependencies...], callback). The object's key of a property\n   * serves as the name of the task defined by that property, i.e. can be used\n   * when specifying requirements for other tasks.\n   * * The `callback` parameter is a `callback(err, result)` which must be called\n   *   when finished, passing an `error` (which can be `null`) and the result of\n   *   the function's execution. The remaining parameters name other tasks on\n   *   which the task is dependent, and the results from those tasks are the\n   *   arguments of those parameters.\n   * @param {Function} [callback] - An optional callback which is called when all\n   * the tasks have been completed. It receives the `err` argument if any `tasks`\n   * pass an error to their callback, and a `results` object with any completed\n   * task results, similar to `auto`.\n   * @example\n   *\n   * //  The example from `auto` can be rewritten as follows:\n   * async.autoInject({\n   *     get_data: function(callback) {\n   *         // async code to get some data\n   *         callback(null, 'data', 'converted to array');\n   *     },\n   *     make_folder: function(callback) {\n   *         // async code to create a directory to store a file in\n   *         // this is run at the same time as getting the data\n   *         callback(null, 'folder');\n   *     },\n   *     write_file: function(get_data, make_folder, callback) {\n   *         // once there is some data and the directory exists,\n   *         // write the data to a file in the directory\n   *         callback(null, 'filename');\n   *     },\n   *     email_link: function(write_file, callback) {\n   *         // once the file is written let's email a link to it...\n   *         // write_file contains the filename returned by write_file.\n   *         callback(null, {'file':write_file, 'email':'user@example.com'});\n   *     }\n   * }, function(err, results) {\n   *     console.log('err = ', err);\n   *     console.log('email_link = ', results.email_link);\n   * });\n   *\n   * // If you are using a JS minifier that mangles parameter names, `autoInject`\n   * // will not work with plain functions, since the parameter names will be\n   * // collapsed to a single letter identifier.  To work around this, you can\n   * // explicitly specify the names of the parameters your task function needs\n   * // in an array, similar to Angular.js dependency injection.\n   *\n   * // This still has an advantage over plain `auto`, since the results a task\n   * // depends on are still spread into arguments.\n   * async.autoInject({\n   *     //...\n   *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n   *         callback(null, 'filename');\n   *     }],\n   *     email_link: ['write_file', function(write_file, callback) {\n   *         callback(null, {'file':write_file, 'email':'user@example.com'});\n   *     }]\n   *     //...\n   * }, function(err, results) {\n   *     console.log('err = ', err);\n   *     console.log('email_link = ', results.email_link);\n   * });\n   */\n  function autoInject (tasks, callback) {\n    var newTasks = {}\n\n    baseForOwn(tasks, function (taskFn, key) {\n      var params\n\n      if (isArray(taskFn)) {\n        params = taskFn.slice(0, -1)\n        taskFn = taskFn[taskFn.length - 1]\n\n        newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn)\n      } else if (taskFn.length === 1) {\n        // no dependencies, use the function as-is\n        newTasks[key] = taskFn\n      } else {\n        params = parseParams(taskFn)\n        if (taskFn.length === 0 && params.length === 0) {\n          throw new Error('autoInject task functions require explicit parameters.')\n        }\n\n        params.pop()\n\n        newTasks[key] = params.concat(newTask)\n      }\n\n      function newTask (results, taskCb) {\n        var newArgs = arrayMap(params, function (name) {\n          return results[name]\n        })\n        newArgs.push(taskCb)\n        taskFn.apply(null, newArgs)\n      }\n    })\n\n    auto(newTasks, callback)\n  }\n\n  var hasSetImmediate = typeof setImmediate === 'function' && setImmediate\n  var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function'\n\n  function fallback (fn) {\n    setTimeout(fn, 0)\n  }\n\n  function wrap (defer) {\n    return rest(function (fn, args) {\n      defer(function () {\n        fn.apply(null, args)\n      })\n    })\n  }\n\n  var _defer\n\n  if (hasSetImmediate) {\n    _defer = setImmediate\n  } else if (hasNextTick) {\n    _defer = process.nextTick\n  } else {\n    _defer = fallback\n  }\n\n  var setImmediate$1 = wrap(_defer)\n\n  // Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n  // used for queues. This implementation assumes that the node provided by the user can be modified\n  // to adjust the next and last properties. We implement only the minimal functionality\n  // for queue support.\n  function DLL () {\n    this.head = this.tail = null\n    this.length = 0\n  }\n\n  function setInitial (dll, node) {\n    dll.length = 1\n    dll.head = dll.tail = node\n  }\n\n  DLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next\n    else this.head = node.next\n    if (node.next) node.next.prev = node.prev\n    else this.tail = node.prev\n\n    node.prev = node.next = null\n    this.length -= 1\n    return node\n  }\n\n  DLL.prototype.empty = DLL\n\n  DLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node\n    newNode.next = node.next\n    if (node.next) node.next.prev = newNode\n    else this.tail = newNode\n    node.next = newNode\n    this.length += 1\n  }\n\n  DLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev\n    newNode.next = node\n    if (node.prev) node.prev.next = newNode\n    else this.head = newNode\n    node.prev = newNode\n    this.length += 1\n  }\n\n  DLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node)\n    else setInitial(this, node)\n  }\n\n  DLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node)\n    else setInitial(this, node)\n  }\n\n  DLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head)\n  }\n\n  DLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail)\n  }\n\n  function queue (worker, concurrency, payload) {\n    if (concurrency == null) {\n      concurrency = 1\n    } else if (concurrency === 0) {\n      throw new Error('Concurrency must not be zero')\n    }\n\n    function _insert (data, insertAtFront, callback) {\n      if (callback != null && typeof callback !== 'function') {\n        throw new Error('task callback must be a function')\n      }\n      q.started = true\n      if (!isArray(data)) {\n        data = [data]\n      }\n      if (data.length === 0 && q.idle()) {\n        // call drain immediately if there are no tasks\n        return setImmediate$1(function () {\n          q.drain()\n        })\n      }\n\n      for (var i = 0, l = data.length; i < l; i++) {\n        var item = {\n          data: data[i],\n          callback: callback || noop\n        }\n\n        if (insertAtFront) {\n          q._tasks.unshift(item)\n        } else {\n          q._tasks.push(item)\n        }\n      }\n      setImmediate$1(q.process)\n    }\n\n    function _next (tasks) {\n      return rest(function (args) {\n        workers -= 1\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n          var task = tasks[i]\n          var index = baseIndexOf(workersList, task, 0)\n          if (index >= 0) {\n            workersList.splice(index)\n          }\n\n          task.callback.apply(task, args)\n\n          if (args[0] != null) {\n            q.error(args[0], task.data)\n          }\n        }\n\n        if (workers <= q.concurrency - q.buffer) {\n          q.unsaturated()\n        }\n\n        if (q.idle()) {\n          q.drain()\n        }\n        q.process()\n      })\n    }\n\n    var workers = 0\n    var workersList = []\n    var q = {\n      _tasks: new DLL(),\n      concurrency: concurrency,\n      payload: payload,\n      saturated: noop,\n      unsaturated: noop,\n      buffer: concurrency / 4,\n      empty: noop,\n      drain: noop,\n      error: noop,\n      started: false,\n      paused: false,\n      push: function (data, callback) {\n        _insert(data, false, callback)\n      },\n      kill: function () {\n        q.drain = noop\n        q._tasks.empty()\n      },\n      unshift: function (data, callback) {\n        _insert(data, true, callback)\n      },\n      process: function () {\n        while (!q.paused && workers < q.concurrency && q._tasks.length) {\n          var tasks = [],\n            data = []\n          var l = q._tasks.length\n          if (q.payload) l = Math.min(l, q.payload)\n          for (var i = 0; i < l; i++) {\n            var node = q._tasks.shift()\n            tasks.push(node)\n            data.push(node.data)\n          }\n\n          if (q._tasks.length === 0) {\n            q.empty()\n          }\n          workers += 1\n          workersList.push(tasks[0])\n\n          if (workers === q.concurrency) {\n            q.saturated()\n          }\n\n          var cb = onlyOnce(_next(tasks))\n          worker(data, cb)\n        }\n      },\n      length: function () {\n        return q._tasks.length\n      },\n      running: function () {\n        return workers\n      },\n      workersList: function () {\n        return workersList\n      },\n      idle: function () {\n        return q._tasks.length + workers === 0\n      },\n      pause: function () {\n        q.paused = true\n      },\n      resume: function () {\n        if (q.paused === false) {\n          return\n        }\n        q.paused = false\n        var resumeCount = Math.min(q.concurrency, q._tasks.length)\n        // Need to call q.process once per concurrent\n        // worker to preserve full concurrency after pause\n        for (var w = 1; w <= resumeCount; w++) {\n          setImmediate$1(q.process)\n        }\n      }\n    }\n    return q\n  }\n\n  /**\n   * A cargo of tasks for the worker function to complete. Cargo inherits all of\n   * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n   * @typedef {Object} CargoObject\n   * @memberOf module:ControlFlow\n   * @property {Function} length - A function returning the number of items\n   * waiting to be processed. Invoke like `cargo.length()`.\n   * @property {number} payload - An `integer` for determining how many tasks\n   * should be process per round. This property can be changed after a `cargo` is\n   * created to alter the payload on-the-fly.\n   * @property {Function} push - Adds `task` to the `queue`. The callback is\n   * called once the `worker` has finished processing the task. Instead of a\n   * single task, an array of `tasks` can be submitted. The respective callback is\n   * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n   * @property {Function} saturated - A callback that is called when the\n   * `queue.length()` hits the concurrency and further tasks will be queued.\n   * @property {Function} empty - A callback that is called when the last item\n   * from the `queue` is given to a `worker`.\n   * @property {Function} drain - A callback that is called when the last item\n   * from the `queue` has returned from the `worker`.\n   * @property {Function} idle - a function returning false if there are items\n   * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n   * @property {Function} pause - a function that pauses the processing of tasks\n   * until `resume()` is called. Invoke like `cargo.pause()`.\n   * @property {Function} resume - a function that resumes the processing of\n   * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n   * @property {Function} kill - a function that removes the `drain` callback and\n   * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n   */\n\n  /**\n   * Creates a `cargo` object with the specified payload. Tasks added to the\n   * cargo will be processed altogether (up to the `payload` limit). If the\n   * `worker` is in progress, the task is queued until it becomes available. Once\n   * the `worker` has completed some tasks, each callback of those tasks is\n   * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n   * for how `cargo` and `queue` work.\n   *\n   * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n   * at a time, cargo passes an array of tasks to a single worker, repeating\n   * when the worker is finished.\n   *\n   * @name cargo\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.queue]{@link module:ControlFlow.queue}\n   * @category Control Flow\n   * @param {Function} worker - An asynchronous function for processing an array\n   * of queued tasks, which must call its `callback(err)` argument when finished,\n   * with an optional `err` argument. Invoked with `(tasks, callback)`.\n   * @param {number} [payload=Infinity] - An optional `integer` for determining\n   * how many tasks should be processed per round; if omitted, the default is\n   * unlimited.\n   * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n   * attached as certain properties to listen for specific events during the\n   * lifecycle of the cargo and inner queue.\n   * @example\n   *\n   * // create a cargo object with payload 2\n   * var cargo = async.cargo(function(tasks, callback) {\n   *     for (var i=0; i<tasks.length; i++) {\n   *         console.log('hello ' + tasks[i].name);\n   *     }\n   *     callback();\n   * }, 2);\n   *\n   * // add some items\n   * cargo.push({name: 'foo'}, function(err) {\n   *     console.log('finished processing foo');\n   * });\n   * cargo.push({name: 'bar'}, function(err) {\n   *     console.log('finished processing bar');\n   * });\n   * cargo.push({name: 'baz'}, function(err) {\n   *     console.log('finished processing baz');\n   * });\n   */\n  function cargo (worker, payload) {\n    return queue(worker, 1, payload)\n  }\n\n  /**\n   * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n   *\n   * @name eachOfSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.eachOf]{@link module:Collections.eachOf}\n   * @alias forEachOfSeries\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`. The\n   * `key` is the item's key, or index in the case of an array. The iteratee is\n   * passed a `callback(err)` which must be called once it has completed. If no\n   * error has occurred, the callback should be run without arguments or with an\n   * explicit `null` argument. Invoked with (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. Invoked with (err).\n   */\n  var eachOfSeries = doLimit(eachOfLimit, 1)\n\n  /**\n   * Reduces `coll` into a single value using an async `iteratee` to return each\n   * successive step. `memo` is the initial state of the reduction. This function\n   * only operates in series.\n   *\n   * For performance reasons, it may make sense to split a call to this function\n   * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n   * results. This function is for situations where each step in the reduction\n   * needs to be async; if you can get the data before reducing it, then it's\n   * probably a good idea to do so.\n   *\n   * @name reduce\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias inject\n   * @alias foldl\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {*} memo - The initial state of the reduction.\n   * @param {Function} iteratee - A function applied to each item in the\n   * array to produce the next step in the reduction. The `iteratee` is passed a\n   * `callback(err, reduction)` which accepts an optional error as its first\n   * argument, and the state of the reduction as the second. If an error is\n   * passed to the callback, the reduction is stopped and the main `callback` is\n   * immediately called with the error. Invoked with (memo, item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result is the reduced value. Invoked with\n   * (err, result).\n   * @example\n   *\n   * async.reduce([1,2,3], 0, function(memo, item, callback) {\n   *     // pointless async:\n   *     process.nextTick(function() {\n   *         callback(null, memo + item)\n   *     });\n   * }, function(err, result) {\n   *     // result is now equal to the last value of memo, which is 6\n   * });\n   */\n  function reduce (coll, memo, iteratee, callback) {\n    callback = once(callback || noop)\n    eachOfSeries(\n      coll,\n      function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n          memo = v\n          callback(err)\n        })\n      },\n      function (err) {\n        callback(err, memo)\n      }\n    )\n  }\n\n  /**\n   * Version of the compose function that is more natural to read. Each function\n   * consumes the return value of the previous function. It is the equivalent of\n   * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n   *\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @name seq\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.compose]{@link module:ControlFlow.compose}\n   * @category Control Flow\n   * @param {...Function} functions - the asynchronous functions to compose\n   * @returns {Function} a function that composes the `functions` in order\n   * @example\n   *\n   * // Requires lodash (or underscore), express3 and dresende's orm2.\n   * // Part of an app, that fetches cats of the logged user.\n   * // This example uses `seq` function to avoid overnesting and error\n   * // handling clutter.\n   * app.get('/cats', function(request, response) {\n   *     var User = request.models.User;\n   *     async.seq(\n   *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n   *         function(user, fn) {\n   *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n   *         }\n   *     )(req.session.user_id, function (err, cats) {\n   *         if (err) {\n   *             console.error(err);\n   *             response.json({ status: 'error', message: err.message });\n   *         } else {\n   *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n   *         }\n   *     });\n   * });\n   */\n  var seq$1 = rest(function seq (functions) {\n    return rest(function (args) {\n      var that = this\n\n      var cb = args[args.length - 1]\n      if (typeof cb == 'function') {\n        args.pop()\n      } else {\n        cb = noop\n      }\n\n      reduce(\n        functions,\n        args,\n        function (newargs, fn, cb) {\n          fn.apply(\n            that,\n            newargs.concat(\n              rest(function (err, nextargs) {\n                cb(err, nextargs)\n              })\n            )\n          )\n        },\n        function (err, results) {\n          cb.apply(that, [err].concat(results))\n        }\n      )\n    })\n  })\n\n  /**\n   * Creates a function which is a composition of the passed asynchronous\n   * functions. Each function consumes the return value of the function that\n   * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n   * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n   *\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @name compose\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {...Function} functions - the asynchronous functions to compose\n   * @returns {Function} an asynchronous function that is the composed\n   * asynchronous `functions`\n   * @example\n   *\n   * function add1(n, callback) {\n   *     setTimeout(function () {\n   *         callback(null, n + 1);\n   *     }, 10);\n   * }\n   *\n   * function mul3(n, callback) {\n   *     setTimeout(function () {\n   *         callback(null, n * 3);\n   *     }, 10);\n   * }\n   *\n   * var add1mul3 = async.compose(mul3, add1);\n   * add1mul3(4, function (err, result) {\n   *     // result now equals 15\n   * });\n   */\n  var compose = rest(function (args) {\n    return seq$1.apply(null, args.reverse())\n  })\n\n  function concat$1 (eachfn, arr, fn, callback) {\n    var result = []\n    eachfn(\n      arr,\n      function (x, index, cb) {\n        fn(x, function (err, y) {\n          result = result.concat(y || [])\n          cb(err)\n        })\n      },\n      function (err) {\n        callback(err, result)\n      }\n    )\n  }\n\n  /**\n   * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n   * the concatenated list. The `iteratee`s are called in parallel, and the\n   * results are concatenated as they return. There is no guarantee that the\n   * results array will be returned in the original order of `coll` passed to the\n   * `iteratee` function.\n   *\n   * @name concat\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, results)` which must be called once\n   * it has completed with an error (which can be `null`) and an array of results.\n   * Invoked with (item, callback).\n   * @param {Function} [callback(err)] - A callback which is called after all the\n   * `iteratee` functions have finished, or an error occurs. Results is an array\n   * containing the concatenated results of the `iteratee` function. Invoked with\n   * (err, results).\n   * @example\n   *\n   * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n   *     // files is now a list of filenames that exist in the 3 directories\n   * });\n   */\n  var concat = doParallel(concat$1)\n\n  function doSeries (fn) {\n    return function (obj, iteratee, callback) {\n      return fn(eachOfSeries, obj, iteratee, callback)\n    }\n  }\n\n  /**\n   * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n   *\n   * @name concatSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.concat]{@link module:Collections.concat}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, results)` which must be called once\n   * it has completed with an error (which can be `null`) and an array of results.\n   * Invoked with (item, callback).\n   * @param {Function} [callback(err)] - A callback which is called after all the\n   * `iteratee` functions have finished, or an error occurs. Results is an array\n   * containing the concatenated results of the `iteratee` function. Invoked with\n   * (err, results).\n   */\n  var concatSeries = doSeries(concat$1)\n\n  /**\n   * Returns a function that when called, calls-back with the values provided.\n   * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n   * [`auto`]{@link module:ControlFlow.auto}.\n   *\n   * @name constant\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {...*} arguments... - Any number of arguments to automatically invoke\n   * callback with.\n   * @returns {Function} Returns a function that when invoked, automatically\n   * invokes the callback with the previous given arguments.\n   * @example\n   *\n   * async.waterfall([\n   *     async.constant(42),\n   *     function (value, next) {\n   *         // value === 42\n   *     },\n   *     //...\n   * ], callback);\n   *\n   * async.waterfall([\n   *     async.constant(filename, \"utf8\"),\n   *     fs.readFile,\n   *     function (fileData, next) {\n   *         //...\n   *     }\n   *     //...\n   * ], callback);\n   *\n   * async.auto({\n   *     hostname: async.constant(\"https://server.net/\"),\n   *     port: findFreePort,\n   *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n   *         startServer(options, cb);\n   *     }],\n   *     //...\n   * }, callback);\n   */\n  var constant = rest(function (values) {\n    var args = [null].concat(values)\n    return initialParams(function (ignoredArgs, callback) {\n      return callback.apply(this, args)\n    })\n  })\n\n  function _createTester (eachfn, check, getResult) {\n    return function (arr, limit, iteratee, cb) {\n      function done () {\n        if (cb) {\n          cb(null, getResult(false))\n        }\n      }\n      function wrappedIteratee (x, _, callback) {\n        if (!cb) return callback()\n        iteratee(x, function (err, v) {\n          // Check cb as another iteratee may have resolved with a\n          // value or error since we started this iteratee\n          if (cb && (err || check(v))) {\n            if (err) cb(err)\n            else cb(err, getResult(true, x))\n            cb = iteratee = false\n            callback(err, breakLoop)\n          } else {\n            callback()\n          }\n        })\n      }\n      if (arguments.length > 3) {\n        cb = cb || noop\n        eachfn(arr, limit, wrappedIteratee, done)\n      } else {\n        cb = iteratee\n        cb = cb || noop\n        iteratee = limit\n        eachfn(arr, wrappedIteratee, done)\n      }\n    }\n  }\n\n  function _findGetResult (v, x) {\n    return x\n  }\n\n  /**\n     * Returns the first value in `coll` that passes an async truth test. The\n     * `iteratee` is applied in parallel, meaning the first iteratee to return\n     * `true` will fire the detect `callback` with that result. That means the\n     * result might not be the first item in the original `coll` (in terms of order)\n     * that passes the test.\n\n     * If order within the original `coll` is important, then look at\n     * [`detectSeries`]{@link module:Collections.detectSeries}.\n     *\n     * @name detect\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias find\n     * @category Collections\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, truthValue)` which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @example\n     *\n     * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n     */\n  var detect = _createTester(eachOf, identity, _findGetResult)\n\n  /**\n   * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name detectLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.detect]{@link module:Collections.detect}\n   * @alias findLimit\n   * @category Collections\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, truthValue)` which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called as soon as any\n   * iteratee returns `true`, or after all the `iteratee` functions have finished.\n   * Result will be the first item in the array that passes the truth test\n   * (iteratee) or the value `undefined` if none passed. Invoked with\n   * (err, result).\n   */\n  var detectLimit = _createTester(eachOfLimit, identity, _findGetResult)\n\n  /**\n   * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n   *\n   * @name detectSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.detect]{@link module:Collections.detect}\n   * @alias findSeries\n   * @category Collections\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, truthValue)` which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called as soon as any\n   * iteratee returns `true`, or after all the `iteratee` functions have finished.\n   * Result will be the first item in the array that passes the truth test\n   * (iteratee) or the value `undefined` if none passed. Invoked with\n   * (err, result).\n   */\n  var detectSeries = _createTester(eachOfSeries, identity, _findGetResult)\n\n  function consoleFunc (name) {\n    return rest(function (fn, args) {\n      fn.apply(\n        null,\n        args.concat(\n          rest(function (err, args) {\n            if (typeof console === 'object') {\n              if (err) {\n                if (console.error) {\n                  console.error(err)\n                }\n              } else if (console[name]) {\n                arrayEach(args, function (x) {\n                  console[name](x)\n                })\n              }\n            }\n          })\n        )\n      )\n    })\n  }\n\n  /**\n   * Logs the result of an `async` function to the `console` using `console.dir`\n   * to display the properties of the resulting object. Only works in Node.js or\n   * in browsers that support `console.dir` and `console.error` (such as FF and\n   * Chrome). If multiple arguments are returned from the async function,\n   * `console.dir` is called on each argument in order.\n   *\n   * @name dir\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} function - The function you want to eventually apply all\n   * arguments to.\n   * @param {...*} arguments... - Any number of arguments to apply to the function.\n   * @example\n   *\n   * // in a module\n   * var hello = function(name, callback) {\n   *     setTimeout(function() {\n   *         callback(null, {hello: name});\n   *     }, 1000);\n   * };\n   *\n   * // in the node repl\n   * node> async.dir(hello, 'world');\n   * {hello: 'world'}\n   */\n  var dir = consoleFunc('dir')\n\n  /**\n   * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n   * the order of operations, the arguments `test` and `fn` are switched.\n   *\n   * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n   * @name doDuring\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.during]{@link module:ControlFlow.during}\n   * @category Control Flow\n   * @param {Function} fn - A function which is called each time `test` passes.\n   * The function is passed a `callback(err)`, which must be called once it has\n   * completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} test - asynchronous truth test to perform before each\n   * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n   * non-error args from the previous callback of `fn`.\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has failed and repeated execution of `fn` has stopped. `callback`\n   * will be passed an error if one occured, otherwise `null`.\n   */\n  function doDuring (fn, test, callback) {\n    callback = onlyOnce(callback || noop)\n\n    var next = rest(function (err, args) {\n      if (err) return callback(err)\n      args.push(check)\n      test.apply(this, args)\n    })\n\n    function check (err, truth) {\n      if (err) return callback(err)\n      if (!truth) return callback(null)\n      fn(next)\n    }\n\n    check(null, true)\n  }\n\n  /**\n   * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n   * the order of operations, the arguments `test` and `iteratee` are switched.\n   *\n   * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n   *\n   * @name doWhilst\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.whilst]{@link module:ControlFlow.whilst}\n   * @category Control Flow\n   * @param {Function} iteratee - A function which is called each time `test`\n   * passes. The function is passed a `callback(err)`, which must be called once\n   * it has completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} test - synchronous truth test to perform after each\n   * execution of `iteratee`. Invoked with the non-error callback results of\n   * `iteratee`.\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has failed and repeated execution of `iteratee` has stopped.\n   * `callback` will be passed an error and any arguments passed to the final\n   * `iteratee`'s callback. Invoked with (err, [results]);\n   */\n  function doWhilst (iteratee, test, callback) {\n    callback = onlyOnce(callback || noop)\n    var next = rest(function (err, args) {\n      if (err) return callback(err)\n      if (test.apply(this, args)) return iteratee(next)\n      callback.apply(null, [null].concat(args))\n    })\n    iteratee(next)\n  }\n\n  /**\n   * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n   * argument ordering differs from `until`.\n   *\n   * @name doUntil\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n   * @category Control Flow\n   * @param {Function} fn - A function which is called each time `test` fails.\n   * The function is passed a `callback(err)`, which must be called once it has\n   * completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} test - synchronous truth test to perform after each\n   * execution of `fn`. Invoked with the non-error callback results of `fn`.\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has passed and repeated execution of `fn` has stopped. `callback`\n   * will be passed an error and any arguments passed to the final `fn`'s\n   * callback. Invoked with (err, [results]);\n   */\n  function doUntil (fn, test, callback) {\n    doWhilst(\n      fn,\n      function () {\n        return !test.apply(this, arguments)\n      },\n      callback\n    )\n  }\n\n  /**\n   * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n   * is passed a callback in the form of `function (err, truth)`. If error is\n   * passed to `test` or `fn`, the main callback is immediately called with the\n   * value of the error.\n   *\n   * @name during\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.whilst]{@link module:ControlFlow.whilst}\n   * @category Control Flow\n   * @param {Function} test - asynchronous truth test to perform before each\n   * execution of `fn`. Invoked with (callback).\n   * @param {Function} fn - A function which is called each time `test` passes.\n   * The function is passed a `callback(err)`, which must be called once it has\n   * completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has failed and repeated execution of `fn` has stopped. `callback`\n   * will be passed an error, if one occured, otherwise `null`.\n   * @example\n   *\n   * var count = 0;\n   *\n   * async.during(\n   *     function (callback) {\n   *         return callback(null, count < 5);\n   *     },\n   *     function (callback) {\n   *         count++;\n   *         setTimeout(callback, 1000);\n   *     },\n   *     function (err) {\n   *         // 5 seconds have passed\n   *     }\n   * );\n   */\n  function during (test, fn, callback) {\n    callback = onlyOnce(callback || noop)\n\n    function next (err) {\n      if (err) return callback(err)\n      test(check)\n    }\n\n    function check (err, truth) {\n      if (err) return callback(err)\n      if (!truth) return callback(null)\n      fn(next)\n    }\n\n    test(check)\n  }\n\n  function _withoutIndex (iteratee) {\n    return function (value, index, callback) {\n      return iteratee(value, callback)\n    }\n  }\n\n  /**\n   * Applies the function `iteratee` to each item in `coll`, in parallel.\n   * The `iteratee` is called with an item from the list, and a callback for when\n   * it has finished. If the `iteratee` passes an error to its `callback`, the\n   * main `callback` (for the `each` function) is immediately called with the\n   * error.\n   *\n   * Note, that since this function applies `iteratee` to each item in parallel,\n   * there is no guarantee that the iteratee functions will complete in order.\n   *\n   * @name each\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias forEach\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item\n   * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n   * it has completed. If no error has occurred, the `callback` should be run\n   * without arguments or with an explicit `null` argument. The array index is not\n   * passed to the iteratee. Invoked with (item, callback). If you need the index,\n   * use `eachOf`.\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   * @example\n   *\n   * // assuming openFiles is an array of file names and saveFile is a function\n   * // to save the modified contents of that file:\n   *\n   * async.each(openFiles, saveFile, function(err){\n   *   // if any of the saves produced an error, err would equal that error\n   * });\n   *\n   * // assuming openFiles is an array of file names\n   * async.each(openFiles, function(file, callback) {\n   *\n   *     // Perform operation on file here.\n   *     console.log('Processing file ' + file);\n   *\n   *     if( file.length > 32 ) {\n   *       console.log('This file name is too long');\n   *       callback('File name too long');\n   *     } else {\n   *       // Do work to process file here\n   *       console.log('File processed');\n   *       callback();\n   *     }\n   * }, function(err) {\n   *     // if any of the file processing produced an error, err would equal that error\n   *     if( err ) {\n   *       // One of the iterations produced an error.\n   *       // All processing will now stop.\n   *       console.log('A file failed to process');\n   *     } else {\n   *       console.log('All files have been processed successfully');\n   *     }\n   * });\n   */\n  function eachLimit (coll, iteratee, callback) {\n    eachOf(coll, _withoutIndex(iteratee), callback)\n  }\n\n  /**\n   * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n   *\n   * @name eachLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.each]{@link module:Collections.each}\n   * @alias forEachLimit\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A function to apply to each item in `coll`. The\n   * iteratee is passed a `callback(err)` which must be called once it has\n   * completed. If no error has occurred, the `callback` should be run without\n   * arguments or with an explicit `null` argument. The array index is not passed\n   * to the iteratee. Invoked with (item, callback). If you need the index, use\n   * `eachOfLimit`.\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   */\n  function eachLimit$1 (coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback)\n  }\n\n  /**\n   * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n   *\n   * @name eachSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.each]{@link module:Collections.each}\n   * @alias forEachSeries\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each\n   * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n   * once it has completed. If no error has occurred, the `callback` should be run\n   * without arguments or with an explicit `null` argument. The array index is\n   * not passed to the iteratee. Invoked with (item, callback). If you need the\n   * index, use `eachOfSeries`.\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   */\n  var eachSeries = doLimit(eachLimit$1, 1)\n\n  /**\n   * Wrap an async function and ensure it calls its callback on a later tick of\n   * the event loop.  If the function already calls its callback on a next tick,\n   * no extra deferral is added. This is useful for preventing stack overflows\n   * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n   * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n   * contained.\n   *\n   * @name ensureAsync\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} fn - an async function, one that expects a node-style\n   * callback as its last argument.\n   * @returns {Function} Returns a wrapped function with the exact same call\n   * signature as the function passed in.\n   * @example\n   *\n   * function sometimesAsync(arg, callback) {\n   *     if (cache[arg]) {\n   *         return callback(null, cache[arg]); // this would be synchronous!!\n   *     } else {\n   *         doSomeIO(arg, callback); // this IO would be asynchronous\n   *     }\n   * }\n   *\n   * // this has a risk of stack overflows if many results are cached in a row\n   * async.mapSeries(args, sometimesAsync, done);\n   *\n   * // this will defer sometimesAsync's callback if necessary,\n   * // preventing stack overflows\n   * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n   */\n  function ensureAsync (fn) {\n    return initialParams(function (args, callback) {\n      var sync = true\n      args.push(function () {\n        var innerArgs = arguments\n        if (sync) {\n          setImmediate$1(function () {\n            callback.apply(null, innerArgs)\n          })\n        } else {\n          callback.apply(null, innerArgs)\n        }\n      })\n      fn.apply(this, args)\n      sync = false\n    })\n  }\n\n  function notId (v) {\n    return !v\n  }\n\n  /**\n   * Returns `true` if every element in `coll` satisfies an async test. If any\n   * iteratee call returns `false`, the main `callback` is immediately called.\n   *\n   * @name every\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias all\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in the\n   * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n   * which must be called with a  boolean argument once it has completed. Invoked\n   * with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result will be either `true` or `false`\n   * depending on the values of the async tests. Invoked with (err, result).\n   * @example\n   *\n   * async.every(['file1','file2','file3'], function(filePath, callback) {\n   *     fs.access(filePath, function(err) {\n   *         callback(null, !err)\n   *     });\n   * }, function(err, result) {\n   *     // if result is true then every file exists\n   * });\n   */\n  var every = _createTester(eachOf, notId, notId)\n\n  /**\n   * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n   *\n   * @name everyLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.every]{@link module:Collections.every}\n   * @alias allLimit\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A truth test to apply to each item in the\n   * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n   * which must be called with a  boolean argument once it has completed. Invoked\n   * with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result will be either `true` or `false`\n   * depending on the values of the async tests. Invoked with (err, result).\n   */\n  var everyLimit = _createTester(eachOfLimit, notId, notId)\n\n  /**\n   * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n   *\n   * @name everySeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.every]{@link module:Collections.every}\n   * @alias allSeries\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in the\n   * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n   * which must be called with a  boolean argument once it has completed. Invoked\n   * with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result will be either `true` or `false`\n   * depending on the values of the async tests. Invoked with (err, result).\n   */\n  var everySeries = doLimit(everyLimit, 1)\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty (key) {\n    return function (object) {\n      return object == null ? undefined : object[key]\n    }\n  }\n\n  function filterArray (eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length)\n    eachfn(\n      arr,\n      function (x, index, callback) {\n        iteratee(x, function (err, v) {\n          truthValues[index] = !!v\n          callback(err)\n        })\n      },\n      function (err) {\n        if (err) return callback(err)\n        var results = []\n        for (var i = 0; i < arr.length; i++) {\n          if (truthValues[i]) results.push(arr[i])\n        }\n        callback(null, results)\n      }\n    )\n  }\n\n  function filterGeneric (eachfn, coll, iteratee, callback) {\n    var results = []\n    eachfn(\n      coll,\n      function (x, index, callback) {\n        iteratee(x, function (err, v) {\n          if (err) {\n            callback(err)\n          } else {\n            if (v) {\n              results.push({ index: index, value: x })\n            }\n            callback()\n          }\n        })\n      },\n      function (err) {\n        if (err) {\n          callback(err)\n        } else {\n          callback(\n            null,\n            arrayMap(\n              results.sort(function (a, b) {\n                return a.index - b.index\n              }),\n              baseProperty('value')\n            )\n          )\n        }\n      }\n    )\n  }\n\n  function _filter (eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric\n    filter(eachfn, coll, iteratee, callback || noop)\n  }\n\n  /**\n   * Returns a new array of all the values in `coll` which pass an async truth\n   * test. This operation is performed in parallel, but the results array will be\n   * in the same order as the original.\n   *\n   * @name filter\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias select\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results).\n   * @example\n   *\n   * async.filter(['file1','file2','file3'], function(filePath, callback) {\n   *     fs.access(filePath, function(err) {\n   *         callback(null, !err)\n   *     });\n   * }, function(err, results) {\n   *     // results now equals an array of the existing files\n   * });\n   */\n  var filter = doParallel(_filter)\n\n  /**\n   * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name filterLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.filter]{@link module:Collections.filter}\n   * @alias selectLimit\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results).\n   */\n  var filterLimit = doParallelLimit(_filter)\n\n  /**\n   * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n   *\n   * @name filterSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.filter]{@link module:Collections.filter}\n   * @alias selectSeries\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results)\n   */\n  var filterSeries = doLimit(filterLimit, 1)\n\n  /**\n     * Calls the asynchronous function `fn` with a callback parameter that allows it\n     * to call itself again, in series, indefinitely.\n\n     * If an error is passed to the\n     * callback then `errback` is called with the error, and execution stops,\n     * otherwise it will never be called.\n     *\n     * @name forever\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n     * @param {Function} [errback] - when `fn` passes an error to it's callback,\n     * this function will be called, and execution stops. Invoked with (err).\n     * @example\n     *\n     * async.forever(\n     *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n     *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n     * );\n     */\n  function forever (fn, errback) {\n    var done = onlyOnce(errback || noop)\n    var task = ensureAsync(fn)\n\n    function next (err) {\n      if (err) return done(err)\n      task(next)\n    }\n    next()\n  }\n\n  /**\n   * Logs the result of an `async` function to the `console`. Only works in\n   * Node.js or in browsers that support `console.log` and `console.error` (such\n   * as FF and Chrome). If multiple arguments are returned from the async\n   * function, `console.log` is called on each argument in order.\n   *\n   * @name log\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} function - The function you want to eventually apply all\n   * arguments to.\n   * @param {...*} arguments... - Any number of arguments to apply to the function.\n   * @example\n   *\n   * // in a module\n   * var hello = function(name, callback) {\n   *     setTimeout(function() {\n   *         callback(null, 'hello ' + name);\n   *     }, 1000);\n   * };\n   *\n   * // in the node repl\n   * node> async.log(hello, 'world');\n   * 'hello world'\n   */\n  var log = consoleFunc('log')\n\n  /**\n   * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name mapValuesLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.mapValues]{@link module:Collections.mapValues}\n   * @category Collection\n   * @param {Object} obj - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A function to apply to each value in `obj`.\n   * The iteratee is passed a `callback(err, transformed)` which must be called\n   * once it has completed with an error (which can be `null`) and a\n   * transformed value. Invoked with (value, key, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. `result` is a new object consisting\n   * of each key from `obj`, with each transformed value on the right-hand side.\n   * Invoked with (err, result).\n   */\n  function mapValuesLimit (obj, limit, iteratee, callback) {\n    callback = once(callback || noop)\n    var newObj = {}\n    eachOfLimit(\n      obj,\n      limit,\n      function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n          if (err) return next(err)\n          newObj[key] = result\n          next()\n        })\n      },\n      function (err) {\n        callback(err, newObj)\n      }\n    )\n  }\n\n  /**\n   * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n   *\n   * Produces a new Object by mapping each value of `obj` through the `iteratee`\n   * function. The `iteratee` is called each `value` and `key` from `obj` and a\n   * callback for when it has finished processing. Each of these callbacks takes\n   * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n   * passes an error to its callback, the main `callback` (for the `mapValues`\n   * function) is immediately called with the error.\n   *\n   * Note, the order of the keys in the result is not guaranteed.  The keys will\n   * be roughly in the order they complete, (but this is very engine-specific)\n   *\n   * @name mapValues\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @category Collection\n   * @param {Object} obj - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each value and key in\n   * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n   * called once it has completed with an error (which can be `null`) and a\n   * transformed value. Invoked with (value, key, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. `result` is a new object consisting\n   * of each key from `obj`, with each transformed value on the right-hand side.\n   * Invoked with (err, result).\n   * @example\n   *\n   * async.mapValues({\n   *     f1: 'file1',\n   *     f2: 'file2',\n   *     f3: 'file3'\n   * }, function (file, key, callback) {\n   *   fs.stat(file, callback);\n   * }, function(err, result) {\n   *     // result is now a map of stats for each file, e.g.\n   *     // {\n   *     //     f1: [stats for file1],\n   *     //     f2: [stats for file2],\n   *     //     f3: [stats for file3]\n   *     // }\n   * });\n   */\n\n  var mapValues = doLimit(mapValuesLimit, Infinity)\n\n  /**\n   * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n   *\n   * @name mapValuesSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.mapValues]{@link module:Collections.mapValues}\n   * @category Collection\n   * @param {Object} obj - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each value in `obj`.\n   * The iteratee is passed a `callback(err, transformed)` which must be called\n   * once it has completed with an error (which can be `null`) and a\n   * transformed value. Invoked with (value, key, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. `result` is a new object consisting\n   * of each key from `obj`, with each transformed value on the right-hand side.\n   * Invoked with (err, result).\n   */\n  var mapValuesSeries = doLimit(mapValuesLimit, 1)\n\n  function has (obj, key) {\n    return key in obj\n  }\n\n  /**\n   * Caches the results of an `async` function. When creating a hash to store\n   * function results against, the callback is omitted from the hash and an\n   * optional hash function can be used.\n   *\n   * If no hash function is specified, the first argument is used as a hash key,\n   * which may work reasonably if it is a string or a data type that converts to a\n   * distinct string. Note that objects and arrays will not behave reasonably.\n   * Neither will cases where the other arguments are significant. In such cases,\n   * specify your own hash function.\n   *\n   * The cache of results is exposed as the `memo` property of the function\n   * returned by `memoize`.\n   *\n   * @name memoize\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} fn - The function to proxy and cache results from.\n   * @param {Function} hasher - An optional function for generating a custom hash\n   * for storing results. It has all the arguments applied to it apart from the\n   * callback, and must be synchronous.\n   * @returns {Function} a memoized version of `fn`\n   * @example\n   *\n   * var slow_fn = function(name, callback) {\n   *     // do something\n   *     callback(null, result);\n   * };\n   * var fn = async.memoize(slow_fn);\n   *\n   * // fn can now be used as if it were slow_fn\n   * fn('some name', function() {\n   *     // callback\n   * });\n   */\n  function memoize (fn, hasher) {\n    var memo = Object.create(null)\n    var queues = Object.create(null)\n    hasher = hasher || identity\n    var memoized = initialParams(function memoized (args, callback) {\n      var key = hasher.apply(null, args)\n      if (has(memo, key)) {\n        setImmediate$1(function () {\n          callback.apply(null, memo[key])\n        })\n      } else if (has(queues, key)) {\n        queues[key].push(callback)\n      } else {\n        queues[key] = [callback]\n        fn.apply(\n          null,\n          args.concat(\n            rest(function (args) {\n              memo[key] = args\n              var q = queues[key]\n              delete queues[key]\n              for (var i = 0, l = q.length; i < l; i++) {\n                q[i].apply(null, args)\n              }\n            })\n          )\n        )\n      }\n    })\n    memoized.memo = memo\n    memoized.unmemoized = fn\n    return memoized\n  }\n\n  /**\n   * Calls `callback` on a later loop around the event loop. In Node.js this just\n   * calls `setImmediate`.  In the browser it will use `setImmediate` if\n   * available, otherwise `setTimeout(callback, 0)`, which means other higher\n   * priority events may precede the execution of `callback`.\n   *\n   * This is used internally for browser-compatibility purposes.\n   *\n   * @name nextTick\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @alias setImmediate\n   * @category Util\n   * @param {Function} callback - The function to call on a later loop around\n   * the event loop. Invoked with (args...).\n   * @param {...*} args... - any number of additional arguments to pass to the\n   * callback on the next tick.\n   * @example\n   *\n   * var call_order = [];\n   * async.nextTick(function() {\n   *     call_order.push('two');\n   *     // call_order now equals ['one','two']\n   * });\n   * call_order.push('one');\n   *\n   * async.setImmediate(function (a, b, c) {\n   *     // a, b, and c equal 1, 2, and 3\n   * }, 1, 2, 3);\n   */\n  var _defer$1\n\n  if (hasNextTick) {\n    _defer$1 = process.nextTick\n  } else if (hasSetImmediate) {\n    _defer$1 = setImmediate\n  } else {\n    _defer$1 = fallback\n  }\n\n  var nextTick = wrap(_defer$1)\n\n  function _parallel (eachfn, tasks, callback) {\n    callback = callback || noop\n    var results = isArrayLike(tasks) ? [] : {}\n\n    eachfn(\n      tasks,\n      function (task, key, callback) {\n        task(\n          rest(function (err, args) {\n            if (args.length <= 1) {\n              args = args[0]\n            }\n            results[key] = args\n            callback(err)\n          })\n        )\n      },\n      function (err) {\n        callback(err, results)\n      }\n    )\n  }\n\n  /**\n   * Run the `tasks` collection of functions in parallel, without waiting until\n   * the previous function has completed. If any of the functions pass an error to\n   * its callback, the main `callback` is immediately called with the value of the\n   * error. Once the `tasks` have completed, the results are passed to the final\n   * `callback` as an array.\n   *\n   * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n   * parallel execution of code.  If your tasks do not use any timers or perform\n   * any I/O, they will actually be executed in series.  Any synchronous setup\n   * sections for each task will happen one after the other.  JavaScript remains\n   * single-threaded.\n   *\n   * It is also possible to use an object instead of an array. Each property will\n   * be run as a function and the results will be passed to the final `callback`\n   * as an object instead of an array. This can be a more readable way of handling\n   * results from {@link async.parallel}.\n   *\n   * @name parallel\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n   * Each function is passed a `callback(err, result)` which it must call on\n   * completion with an error `err` (which can be `null`) and an optional `result`\n   * value.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed successfully. This function gets a results array\n   * (or object) containing all the result arguments passed to the task callbacks.\n   * Invoked with (err, results).\n   * @example\n   * async.parallel([\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'one');\n   *         }, 200);\n   *     },\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'two');\n   *         }, 100);\n   *     }\n   * ],\n   * // optional callback\n   * function(err, results) {\n   *     // the results array will equal ['one','two'] even though\n   *     // the second function had a shorter timeout.\n   * });\n   *\n   * // an example using an object instead of an array\n   * async.parallel({\n   *     one: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 1);\n   *         }, 200);\n   *     },\n   *     two: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 2);\n   *         }, 100);\n   *     }\n   * }, function(err, results) {\n   *     // results is now equals to: {one: 1, two: 2}\n   * });\n   */\n  function parallelLimit (tasks, callback) {\n    _parallel(eachOf, tasks, callback)\n  }\n\n  /**\n   * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name parallelLimit\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.parallel]{@link module:ControlFlow.parallel}\n   * @category Control Flow\n   * @param {Array|Collection} tasks - A collection containing functions to run.\n   * Each function is passed a `callback(err, result)` which it must call on\n   * completion with an error `err` (which can be `null`) and an optional `result`\n   * value.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed successfully. This function gets a results array\n   * (or object) containing all the result arguments passed to the task callbacks.\n   * Invoked with (err, results).\n   */\n  function parallelLimit$1 (tasks, limit, callback) {\n    _parallel(_eachOfLimit(limit), tasks, callback)\n  }\n\n  /**\n   * A queue of tasks for the worker function to complete.\n   * @typedef {Object} QueueObject\n   * @memberOf module:ControlFlow\n   * @property {Function} length - a function returning the number of items\n   * waiting to be processed. Invoke with `queue.length()`.\n   * @property {boolean} started - a boolean indicating whether or not any\n   * items have been pushed and processed by the queue.\n   * @property {Function} running - a function returning the number of items\n   * currently being processed. Invoke with `queue.running()`.\n   * @property {Function} workersList - a function returning the array of items\n   * currently being processed. Invoke with `queue.workersList()`.\n   * @property {Function} idle - a function returning false if there are items\n   * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n   * @property {number} concurrency - an integer for determining how many `worker`\n   * functions should be run in parallel. This property can be changed after a\n   * `queue` is created to alter the concurrency on-the-fly.\n   * @property {Function} push - add a new task to the `queue`. Calls `callback`\n   * once the `worker` has finished processing the task. Instead of a single task,\n   * a `tasks` array can be submitted. The respective callback is used for every\n   * task in the list. Invoke with `queue.push(task, [callback])`,\n   * @property {Function} unshift - add a new task to the front of the `queue`.\n   * Invoke with `queue.unshift(task, [callback])`.\n   * @property {Function} saturated - a callback that is called when the number of\n   * running workers hits the `concurrency` limit, and further tasks will be\n   * queued.\n   * @property {Function} unsaturated - a callback that is called when the number\n   * of running workers is less than the `concurrency` & `buffer` limits, and\n   * further tasks will not be queued.\n   * @property {number} buffer - A minimum threshold buffer in order to say that\n   * the `queue` is `unsaturated`.\n   * @property {Function} empty - a callback that is called when the last item\n   * from the `queue` is given to a `worker`.\n   * @property {Function} drain - a callback that is called when the last item\n   * from the `queue` has returned from the `worker`.\n   * @property {Function} error - a callback that is called when a task errors.\n   * Has the signature `function(error, task)`.\n   * @property {boolean} paused - a boolean for determining whether the queue is\n   * in a paused state.\n   * @property {Function} pause - a function that pauses the processing of tasks\n   * until `resume()` is called. Invoke with `queue.pause()`.\n   * @property {Function} resume - a function that resumes the processing of\n   * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n   * @property {Function} kill - a function that removes the `drain` callback and\n   * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n   */\n\n  /**\n   * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n   * `queue` are processed in parallel (up to the `concurrency` limit). If all\n   * `worker`s are in progress, the task is queued until one becomes available.\n   * Once a `worker` completes a `task`, that `task`'s callback is called.\n   *\n   * @name queue\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Function} worker - An asynchronous function for processing a queued\n   * task, which must call its `callback(err)` argument when finished, with an\n   * optional `error` as an argument.  If you want to handle errors from an\n   * individual task, pass a callback to `q.push()`. Invoked with\n   * (task, callback).\n   * @param {number} [concurrency=1] - An `integer` for determining how many\n   * `worker` functions should be run in parallel.  If omitted, the concurrency\n   * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n   * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n   * attached as certain properties to listen for specific events during the\n   * lifecycle of the queue.\n   * @example\n   *\n   * // create a queue object with concurrency 2\n   * var q = async.queue(function(task, callback) {\n   *     console.log('hello ' + task.name);\n   *     callback();\n   * }, 2);\n   *\n   * // assign a callback\n   * q.drain = function() {\n   *     console.log('all items have been processed');\n   * };\n   *\n   * // add some items to the queue\n   * q.push({name: 'foo'}, function(err) {\n   *     console.log('finished processing foo');\n   * });\n   * q.push({name: 'bar'}, function (err) {\n   *     console.log('finished processing bar');\n   * });\n   *\n   * // add some items to the queue (batch-wise)\n   * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n   *     console.log('finished processing item');\n   * });\n   *\n   * // add some items to the front of the queue\n   * q.unshift({name: 'bar'}, function (err) {\n   *     console.log('finished processing bar');\n   * });\n   */\n  var queue$1 = function (worker, concurrency) {\n    return queue(\n      function (items, cb) {\n        worker(items[0], cb)\n      },\n      concurrency,\n      1\n    )\n  }\n\n  /**\n   * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n   * completed in ascending priority order.\n   *\n   * @name priorityQueue\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.queue]{@link module:ControlFlow.queue}\n   * @category Control Flow\n   * @param {Function} worker - An asynchronous function for processing a queued\n   * task, which must call its `callback(err)` argument when finished, with an\n   * optional `error` as an argument.  If you want to handle errors from an\n   * individual task, pass a callback to `q.push()`. Invoked with\n   * (task, callback).\n   * @param {number} concurrency - An `integer` for determining how many `worker`\n   * functions should be run in parallel.  If omitted, the concurrency defaults to\n   * `1`.  If the concurrency is `0`, an error is thrown.\n   * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n   * differences between `queue` and `priorityQueue` objects:\n   * * `push(task, priority, [callback])` - `priority` should be a number. If an\n   *   array of `tasks` is given, all tasks will be assigned the same priority.\n   * * The `unshift` method was removed.\n   */\n  var priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency)\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n      if (callback == null) callback = noop\n      if (typeof callback !== 'function') {\n        throw new Error('task callback must be a function')\n      }\n      q.started = true\n      if (!isArray(data)) {\n        data = [data]\n      }\n      if (data.length === 0) {\n        // call drain immediately if there are no tasks\n        return setImmediate$1(function () {\n          q.drain()\n        })\n      }\n\n      priority = priority || 0\n      var nextNode = q._tasks.head\n      while (nextNode && priority >= nextNode.priority) {\n        nextNode = nextNode.next\n      }\n\n      for (var i = 0, l = data.length; i < l; i++) {\n        var item = {\n          data: data[i],\n          priority: priority,\n          callback: callback\n        }\n\n        if (nextNode) {\n          q._tasks.insertBefore(nextNode, item)\n        } else {\n          q._tasks.push(item)\n        }\n      }\n      setImmediate$1(q.process)\n    }\n\n    // Remove unshift function\n    delete q.unshift\n\n    return q\n  }\n\n  /**\n   * Runs the `tasks` array of functions in parallel, without waiting until the\n   * previous function has completed. Once any of the `tasks` complete or pass an\n   * error to its callback, the main `callback` is immediately called. It's\n   * equivalent to `Promise.race()`.\n   *\n   * @name race\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array} tasks - An array containing functions to run. Each function\n   * is passed a `callback(err, result)` which it must call on completion with an\n   * error `err` (which can be `null`) and an optional `result` value.\n   * @param {Function} callback - A callback to run once any of the functions have\n   * completed. This function gets an error or result from the first function that\n   * completed. Invoked with (err, result).\n   * @returns undefined\n   * @example\n   *\n   * async.race([\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'one');\n   *         }, 200);\n   *     },\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'two');\n   *         }, 100);\n   *     }\n   * ],\n   * // main callback\n   * function(err, result) {\n   *     // the result will be equal to 'two' as it finishes earlier\n   * });\n   */\n  function race (tasks, callback) {\n    callback = once(callback || noop)\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'))\n    if (!tasks.length) return callback()\n    for (var i = 0, l = tasks.length; i < l; i++) {\n      tasks[i](callback)\n    }\n  }\n\n  var slice = Array.prototype.slice\n\n  /**\n   * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n   *\n   * @name reduceRight\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.reduce]{@link module:Collections.reduce}\n   * @alias foldr\n   * @category Collection\n   * @param {Array} array - A collection to iterate over.\n   * @param {*} memo - The initial state of the reduction.\n   * @param {Function} iteratee - A function applied to each item in the\n   * array to produce the next step in the reduction. The `iteratee` is passed a\n   * `callback(err, reduction)` which accepts an optional error as its first\n   * argument, and the state of the reduction as the second. If an error is\n   * passed to the callback, the reduction is stopped and the main `callback` is\n   * immediately called with the error. Invoked with (memo, item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result is the reduced value. Invoked with\n   * (err, result).\n   */\n  function reduceRight (array, memo, iteratee, callback) {\n    var reversed = slice.call(array).reverse()\n    reduce(reversed, memo, iteratee, callback)\n  }\n\n  /**\n   * Wraps the function in another function that always returns data even when it\n   * errors.\n   *\n   * The object returned has either the property `error` or `value`.\n   *\n   * @name reflect\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} fn - The function you want to wrap\n   * @returns {Function} - A function that always passes null to it's callback as\n   * the error. The second argument to the callback will be an `object` with\n   * either an `error` or a `value` property.\n   * @example\n   *\n   * async.parallel([\n   *     async.reflect(function(callback) {\n   *         // do some stuff ...\n   *         callback(null, 'one');\n   *     }),\n   *     async.reflect(function(callback) {\n   *         // do some more stuff but error ...\n   *         callback('bad stuff happened');\n   *     }),\n   *     async.reflect(function(callback) {\n   *         // do some more stuff ...\n   *         callback(null, 'two');\n   *     })\n   * ],\n   * // optional callback\n   * function(err, results) {\n   *     // values\n   *     // results[0].value = 'one'\n   *     // results[1].error = 'bad stuff happened'\n   *     // results[2].value = 'two'\n   * });\n   */\n  function reflect (fn) {\n    return initialParams(function reflectOn (args, reflectCallback) {\n      args.push(\n        rest(function callback (err, cbArgs) {\n          if (err) {\n            reflectCallback(null, {\n              error: err\n            })\n          } else {\n            var value = null\n            if (cbArgs.length === 1) {\n              value = cbArgs[0]\n            } else if (cbArgs.length > 1) {\n              value = cbArgs\n            }\n            reflectCallback(null, {\n              value: value\n            })\n          }\n        })\n      )\n\n      return fn.apply(this, args)\n    })\n  }\n\n  function reject$1 (eachfn, arr, iteratee, callback) {\n    _filter(\n      eachfn,\n      arr,\n      function (value, cb) {\n        iteratee(value, function (err, v) {\n          cb(err, !v)\n        })\n      },\n      callback\n    )\n  }\n\n  /**\n   * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n   *\n   * @name reject\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.filter]{@link module:Collections.filter}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results).\n   * @example\n   *\n   * async.reject(['file1','file2','file3'], function(filePath, callback) {\n   *     fs.access(filePath, function(err) {\n   *         callback(null, !err)\n   *     });\n   * }, function(err, results) {\n   *     // results now equals an array of missing files\n   *     createFiles(results);\n   * });\n   */\n  var reject = doParallel(reject$1)\n\n  /**\n   * A helper function that wraps an array or an object of functions with reflect.\n   *\n   * @name reflectAll\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @see [async.reflect]{@link module:Utils.reflect}\n   * @category Util\n   * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n   * @returns {Array} Returns an array of functions, each function wrapped in\n   * `async.reflect`\n   * @example\n   *\n   * let tasks = [\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'one');\n   *         }, 200);\n   *     },\n   *     function(callback) {\n   *         // do some more stuff but error ...\n   *         callback(new Error('bad stuff happened'));\n   *     },\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'two');\n   *         }, 100);\n   *     }\n   * ];\n   *\n   * async.parallel(async.reflectAll(tasks),\n   * // optional callback\n   * function(err, results) {\n   *     // values\n   *     // results[0].value = 'one'\n   *     // results[1].error = Error('bad stuff happened')\n   *     // results[2].value = 'two'\n   * });\n   *\n   * // an example using an object instead of an array\n   * let tasks = {\n   *     one: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'one');\n   *         }, 200);\n   *     },\n   *     two: function(callback) {\n   *         callback('two');\n   *     },\n   *     three: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'three');\n   *         }, 100);\n   *     }\n   * };\n   *\n   * async.parallel(async.reflectAll(tasks),\n   * // optional callback\n   * function(err, results) {\n   *     // values\n   *     // results.one.value = 'one'\n   *     // results.two.error = 'two'\n   *     // results.three.value = 'three'\n   * });\n   */\n  function reflectAll (tasks) {\n    var results\n    if (isArray(tasks)) {\n      results = arrayMap(tasks, reflect)\n    } else {\n      results = {}\n      baseForOwn(tasks, function (task, key) {\n        results[key] = reflect.call(this, task)\n      })\n    }\n    return results\n  }\n\n  /**\n   * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name rejectLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.reject]{@link module:Collections.reject}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results).\n   */\n  var rejectLimit = doParallelLimit(reject$1)\n\n  /**\n   * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n   *\n   * @name rejectSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.reject]{@link module:Collections.reject}\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n   * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n   * with a boolean argument once it has completed. Invoked with (item, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Invoked with (err, results).\n   */\n  var rejectSeries = doLimit(rejectLimit, 1)\n\n  /**\n   * Creates a function that returns `value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.4.0\n   * @category Util\n   * @param {*} value The value to return from the new function.\n   * @returns {Function} Returns the new constant function.\n   * @example\n   *\n   * var objects = _.times(2, _.constant({ 'a': 1 }));\n   *\n   * console.log(objects);\n   * // => [{ 'a': 1 }, { 'a': 1 }]\n   *\n   * console.log(objects[0] === objects[1]);\n   * // => true\n   */\n  function constant$1 (value) {\n    return function () {\n      return value\n    }\n  }\n\n  /**\n   * Attempts to get a successful response from `task` no more than `times` times\n   * before returning an error. If the task is successful, the `callback` will be\n   * passed the result of the successful task. If all attempts fail, the callback\n   * will be passed the error and result (if any) of the final attempt.\n   *\n   * @name retry\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n   * object with `times` and `interval` or a number.\n   * * `times` - The number of attempts to make before giving up.  The default\n   *   is `5`.\n   * * `interval` - The time to wait between retries, in milliseconds.  The\n   *   default is `0`. The interval may also be specified as a function of the\n   *   retry count (see example).\n   * * `errorFilter` - An optional synchronous function that is invoked on\n   *   erroneous result. If it returns `true` the retry attempts will continue;\n   *   if the function returns `false` the retry flow is aborted with the current\n   *   attempt's error and result being returned to the final callback.\n   *   Invoked with (err).\n   * * If `opts` is a number, the number specifies the number of times to retry,\n   *   with the default interval of `0`.\n   * @param {Function} task - A function which receives two arguments: (1) a\n   * `callback(err, result)` which must be called when finished, passing `err`\n   * (which can be `null`) and the `result` of the function's execution, and (2)\n   * a `results` object, containing the results of the previously executed\n   * functions (if nested inside another control flow). Invoked with\n   * (callback, results).\n   * @param {Function} [callback] - An optional callback which is called when the\n   * task has succeeded, or after the final failed attempt. It receives the `err`\n   * and `result` arguments of the last attempt at completing the `task`. Invoked\n   * with (err, results).\n   * @example\n   *\n   * // The `retry` function can be used as a stand-alone control flow by passing\n   * // a callback, as shown below:\n   *\n   * // try calling apiMethod 3 times\n   * async.retry(3, apiMethod, function(err, result) {\n   *     // do something with the result\n   * });\n   *\n   * // try calling apiMethod 3 times, waiting 200 ms between each retry\n   * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n   *     // do something with the result\n   * });\n   *\n   * // try calling apiMethod 10 times with exponential backoff\n   * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n   * async.retry({\n   *   times: 10,\n   *   interval: function(retryCount) {\n   *     return 50 * Math.pow(2, retryCount);\n   *   }\n   * }, apiMethod, function(err, result) {\n   *     // do something with the result\n   * });\n   *\n   * // try calling apiMethod the default 5 times no delay between each retry\n   * async.retry(apiMethod, function(err, result) {\n   *     // do something with the result\n   * });\n   *\n   * // try calling apiMethod only when error condition satisfies, all other\n   * // errors will abort the retry control flow and return to final callback\n   * async.retry({\n   *   errorFilter: function(err) {\n   *     return err.message === 'Temporary error'; // only retry on a specific error\n   *   }\n   * }, apiMethod, function(err, result) {\n   *     // do something with the result\n   * });\n   *\n   * // It can also be embedded within other control flow functions to retry\n   * // individual methods that are not as reliable, like this:\n   * async.auto({\n   *     users: api.getUsers.bind(api),\n   *     payments: async.retry(3, api.getPayments.bind(api))\n   * }, function(err, results) {\n   *     // do something with the results\n   * });\n   *\n   */\n  function retry (opts, task, callback) {\n    var DEFAULT_TIMES = 5\n    var DEFAULT_INTERVAL = 0\n\n    var options = {\n      times: DEFAULT_TIMES,\n      intervalFunc: constant$1(DEFAULT_INTERVAL)\n    }\n\n    function parseTimes (acc, t) {\n      if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES\n\n        acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL)\n\n        acc.errorFilter = t.errorFilter\n      } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES\n      } else {\n        throw new Error('Invalid arguments for async.retry')\n      }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n      callback = task || noop\n      task = opts\n    } else {\n      parseTimes(options, opts)\n      callback = callback || noop\n    }\n\n    if (typeof task !== 'function') {\n      throw new Error('Invalid arguments for async.retry')\n    }\n\n    var attempt = 1\n    function retryAttempt () {\n      task(function (err) {\n        if (\n          err &&\n          attempt++ < options.times &&\n          (typeof options.errorFilter != 'function' || options.errorFilter(err))\n        ) {\n          setTimeout(retryAttempt, options.intervalFunc(attempt))\n        } else {\n          callback.apply(null, arguments)\n        }\n      })\n    }\n\n    retryAttempt()\n  }\n\n  /**\n   * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n   * retryable, rather than immediately calling it with retries.\n   *\n   * @name retryable\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.retry]{@link module:ControlFlow.retry}\n   * @category Control Flow\n   * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n   * options, exactly the same as from `retry`\n   * @param {Function} task - the asynchronous function to wrap\n   * @returns {Functions} The wrapped function, which when invoked, will retry on\n   * an error, based on the parameters specified in `opts`.\n   * @example\n   *\n   * async.auto({\n   *     dep1: async.retryable(3, getFromFlakyService),\n   *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n   *         maybeProcessData(results.dep1, cb);\n   *     })]\n   * }, callback);\n   */\n  var retryable = function (opts, task) {\n    if (!task) {\n      task = opts\n      opts = null\n    }\n    return initialParams(function (args, callback) {\n      function taskFn (cb) {\n        task.apply(null, args.concat(cb))\n      }\n\n      if (opts) retry(opts, taskFn, callback)\n      else retry(taskFn, callback)\n    })\n  }\n\n  /**\n   * Run the functions in the `tasks` collection in series, each one running once\n   * the previous function has completed. If any functions in the series pass an\n   * error to its callback, no more functions are run, and `callback` is\n   * immediately called with the value of the error. Otherwise, `callback`\n   * receives an array of results when `tasks` have completed.\n   *\n   * It is also possible to use an object instead of an array. Each property will\n   * be run as a function, and the results will be passed to the final `callback`\n   * as an object instead of an array. This can be a more readable way of handling\n   *  results from {@link async.series}.\n   *\n   * **Note** that while many implementations preserve the order of object\n   * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n   * explicitly states that\n   *\n   * > The mechanics and order of enumerating the properties is not specified.\n   *\n   * So if you rely on the order in which your series of functions are executed,\n   * and want this to work on all platforms, consider using an array.\n   *\n   * @name series\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n   * function is passed a `callback(err, result)` it must call on completion with\n   * an error `err` (which can be `null`) and an optional `result` value.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed. This function gets a results array (or object)\n   * containing all the result arguments passed to the `task` callbacks. Invoked\n   * with (err, result).\n   * @example\n   * async.series([\n   *     function(callback) {\n   *         // do some stuff ...\n   *         callback(null, 'one');\n   *     },\n   *     function(callback) {\n   *         // do some more stuff ...\n   *         callback(null, 'two');\n   *     }\n   * ],\n   * // optional callback\n   * function(err, results) {\n   *     // results is now equal to ['one', 'two']\n   * });\n   *\n   * async.series({\n   *     one: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 1);\n   *         }, 200);\n   *     },\n   *     two: function(callback){\n   *         setTimeout(function() {\n   *             callback(null, 2);\n   *         }, 100);\n   *     }\n   * }, function(err, results) {\n   *     // results is now equal to: {one: 1, two: 2}\n   * });\n   */\n  function series (tasks, callback) {\n    _parallel(eachOfSeries, tasks, callback)\n  }\n\n  /**\n   * Returns `true` if at least one element in the `coll` satisfies an async test.\n   * If any iteratee call returns `true`, the main `callback` is immediately\n   * called.\n   *\n   * @name some\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias any\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in the array\n   * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n   * be called with a boolean argument once it has completed. Invoked with\n   * (item, callback).\n   * @param {Function} [callback] - A callback which is called as soon as any\n   * iteratee returns `true`, or after all the iteratee functions have finished.\n   * Result will be either `true` or `false` depending on the values of the async\n   * tests. Invoked with (err, result).\n   * @example\n   *\n   * async.some(['file1','file2','file3'], function(filePath, callback) {\n   *     fs.access(filePath, function(err) {\n   *         callback(null, !err)\n   *     });\n   * }, function(err, result) {\n   *     // if result is true then at least one of the files exists\n   * });\n   */\n  var some = _createTester(eachOf, Boolean, identity)\n\n  /**\n   * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n   *\n   * @name someLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.some]{@link module:Collections.some}\n   * @alias anyLimit\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - A truth test to apply to each item in the array\n   * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n   * be called with a boolean argument once it has completed. Invoked with\n   * (item, callback).\n   * @param {Function} [callback] - A callback which is called as soon as any\n   * iteratee returns `true`, or after all the iteratee functions have finished.\n   * Result will be either `true` or `false` depending on the values of the async\n   * tests. Invoked with (err, result).\n   */\n  var someLimit = _createTester(eachOfLimit, Boolean, identity)\n\n  /**\n   * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n   *\n   * @name someSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.some]{@link module:Collections.some}\n   * @alias anySeries\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A truth test to apply to each item in the array\n   * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n   * be called with a boolean argument once it has completed. Invoked with\n   * (item, callback).\n   * @param {Function} [callback] - A callback which is called as soon as any\n   * iteratee returns `true`, or after all the iteratee functions have finished.\n   * Result will be either `true` or `false` depending on the values of the async\n   * tests. Invoked with (err, result).\n   */\n  var someSeries = doLimit(someLimit, 1)\n\n  /**\n   * Sorts a list by the results of running each `coll` value through an async\n   * `iteratee`.\n   *\n   * @name sortBy\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {Function} iteratee - A function to apply to each item in `coll`.\n   * The iteratee is passed a `callback(err, sortValue)` which must be called once\n   * it has completed with an error (which can be `null`) and a value to use as\n   * the sort criteria. Invoked with (item, callback).\n   * @param {Function} callback - A callback which is called after all the\n   * `iteratee` functions have finished, or an error occurs. Results is the items\n   * from the original `coll` sorted by the values returned by the `iteratee`\n   * calls. Invoked with (err, results).\n   * @example\n   *\n   * async.sortBy(['file1','file2','file3'], function(file, callback) {\n   *     fs.stat(file, function(err, stats) {\n   *         callback(err, stats.mtime);\n   *     });\n   * }, function(err, results) {\n   *     // results is now the original array of files sorted by\n   *     // modified date\n   * });\n   *\n   * // By modifying the callback parameter the\n   * // sorting order can be influenced:\n   *\n   * // ascending order\n   * async.sortBy([1,9,3,5], function(x, callback) {\n   *     callback(null, x);\n   * }, function(err,result) {\n   *     // result callback\n   * });\n   *\n   * // descending order\n   * async.sortBy([1,9,3,5], function(x, callback) {\n   *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n   * }, function(err,result) {\n   *     // result callback\n   * });\n   */\n  function sortBy (coll, iteratee, callback) {\n    map(\n      coll,\n      function (x, callback) {\n        iteratee(x, function (err, criteria) {\n          if (err) return callback(err)\n          callback(null, { value: x, criteria: criteria })\n        })\n      },\n      function (err, results) {\n        if (err) return callback(err)\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')))\n      }\n    )\n\n    function comparator (left, right) {\n      var a = left.criteria,\n        b = right.criteria\n      return a < b ? -1 : a > b ? 1 : 0\n    }\n  }\n\n  /**\n   * Sets a time limit on an asynchronous function. If the function does not call\n   * its callback within the specified milliseconds, it will be called with a\n   * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n   *\n   * @name timeout\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @category Util\n   * @param {Function} asyncFn - The asynchronous function you want to set the\n   * time limit.\n   * @param {number} milliseconds - The specified time limit.\n   * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n   * to timeout Error for more information..\n   * @returns {Function} Returns a wrapped function that can be used with any of\n   * the control flow functions. Invoke this function with the same\n   * parameters as you would `asyncFunc`.\n   * @example\n   *\n   * function myFunction(foo, callback) {\n   *     doAsyncTask(foo, function(err, data) {\n   *         // handle errors\n   *         if (err) return callback(err);\n   *\n   *         // do some stuff ...\n   *\n   *         // return processed data\n   *         return callback(null, data);\n   *     });\n   * }\n   *\n   * var wrapped = async.timeout(myFunction, 1000);\n   *\n   * // call `wrapped` as you would `myFunction`\n   * wrapped({ bar: 'bar' }, function(err, data) {\n   *     // if `myFunction` takes < 1000 ms to execute, `err`\n   *     // and `data` will have their expected values\n   *\n   *     // else `err` will be an Error with the code 'ETIMEDOUT'\n   * });\n   */\n  function timeout (asyncFn, milliseconds, info) {\n    var originalCallback, timer\n    var timedOut = false\n\n    function injectedCallback () {\n      if (!timedOut) {\n        originalCallback.apply(null, arguments)\n        clearTimeout(timer)\n      }\n    }\n\n    function timeoutCallback () {\n      var name = asyncFn.name || 'anonymous'\n      var error = new Error('Callback function \"' + name + '\" timed out.')\n      error.code = 'ETIMEDOUT'\n      if (info) {\n        error.info = info\n      }\n      timedOut = true\n      originalCallback(error)\n    }\n\n    return initialParams(function (args, origCallback) {\n      originalCallback = origCallback\n      // setup timer and call original function\n      timer = setTimeout(timeoutCallback, milliseconds)\n      asyncFn.apply(null, args.concat(injectedCallback))\n    })\n  }\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeCeil = Math.ceil\n  var nativeMax$1 = Math.max\n\n  /**\n   * The base implementation of `_.range` and `_.rangeRight` which doesn't\n   * coerce arguments.\n   *\n   * @private\n   * @param {number} start The start of the range.\n   * @param {number} end The end of the range.\n   * @param {number} step The value to increment or decrement by.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Array} Returns the range of numbers.\n   */\n  function baseRange (start, end, step, fromRight) {\n    var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length)\n\n    while (length--) {\n      result[fromRight ? length : ++index] = start\n      start += step\n    }\n    return result\n  }\n\n  /**\n   * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name timesLimit\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.times]{@link module:ControlFlow.times}\n   * @category Control Flow\n   * @param {number} count - The number of times to run the function.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {Function} iteratee - The function to call `n` times. Invoked with the\n   * iteration index and a callback (n, next).\n   * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n   */\n  function timeLimit (count, limit, iteratee, callback) {\n    mapLimit(baseRange(0, count, 1), limit, iteratee, callback)\n  }\n\n  /**\n   * Calls the `iteratee` function `n` times, and accumulates results in the same\n   * manner you would use with [map]{@link module:Collections.map}.\n   *\n   * @name times\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.map]{@link module:Collections.map}\n   * @category Control Flow\n   * @param {number} n - The number of times to run the function.\n   * @param {Function} iteratee - The function to call `n` times. Invoked with the\n   * iteration index and a callback (n, next).\n   * @param {Function} callback - see {@link module:Collections.map}.\n   * @example\n   *\n   * // Pretend this is some complicated async factory\n   * var createUser = function(id, callback) {\n   *     callback(null, {\n   *         id: 'user' + id\n   *     });\n   * };\n   *\n   * // generate 5 users\n   * async.times(5, function(n, next) {\n   *     createUser(n, function(err, user) {\n   *         next(err, user);\n   *     });\n   * }, function(err, users) {\n   *     // we should now have 5 users\n   * });\n   */\n  var times = doLimit(timeLimit, Infinity)\n\n  /**\n   * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n   *\n   * @name timesSeries\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.times]{@link module:ControlFlow.times}\n   * @category Control Flow\n   * @param {number} n - The number of times to run the function.\n   * @param {Function} iteratee - The function to call `n` times. Invoked with the\n   * iteration index and a callback (n, next).\n   * @param {Function} callback - see {@link module:Collections.map}.\n   */\n  var timesSeries = doLimit(timeLimit, 1)\n\n  /**\n   * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n   * element in series, each step potentially mutating an `accumulator` value.\n   * The type of the accumulator defaults to the type of collection passed in.\n   *\n   * @name transform\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @category Collection\n   * @param {Array|Iterable|Object} coll - A collection to iterate over.\n   * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n   * it will default to an empty Object or Array, depending on the type of `coll`\n   * @param {Function} iteratee - A function applied to each item in the\n   * collection that potentially modifies the accumulator. The `iteratee` is\n   * passed a `callback(err)` which accepts an optional error as its first\n   * argument. If an error is passed to the callback, the transform is stopped\n   * and the main `callback` is immediately called with the error.\n   * Invoked with (accumulator, item, key, callback).\n   * @param {Function} [callback] - A callback which is called after all the\n   * `iteratee` functions have finished. Result is the transformed accumulator.\n   * Invoked with (err, result).\n   * @example\n   *\n   * async.transform([1,2,3], function(acc, item, index, callback) {\n   *     // pointless async:\n   *     process.nextTick(function() {\n   *         acc.push(item * 2)\n   *         callback(null)\n   *     });\n   * }, function(err, result) {\n   *     // result is now equal to [2, 4, 6]\n   * });\n   *\n   * @example\n   *\n   * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n   *     setImmediate(function () {\n   *         obj[key] = val * 2;\n   *         callback();\n   *     })\n   * }, function (err, result) {\n   *     // result is equal to {a: 2, b: 4, c: 6}\n   * })\n   */\n  function transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length === 3) {\n      callback = iteratee\n      iteratee = accumulator\n      accumulator = isArray(coll) ? [] : {}\n    }\n    callback = once(callback || noop)\n\n    eachOf(\n      coll,\n      function (v, k, cb) {\n        iteratee(accumulator, v, k, cb)\n      },\n      function (err) {\n        callback(err, accumulator)\n      }\n    )\n  }\n\n  /**\n   * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n   * unmemoized form. Handy for testing.\n   *\n   * @name unmemoize\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @see [async.memoize]{@link module:Utils.memoize}\n   * @category Util\n   * @param {Function} fn - the memoized function\n   * @returns {Function} a function that calls the original unmemoized function\n   */\n  function unmemoize (fn) {\n    return function () {\n      return (fn.unmemoized || fn).apply(null, arguments)\n    }\n  }\n\n  /**\n   * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n   * stopped, or an error occurs.\n   *\n   * @name whilst\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Function} test - synchronous truth test to perform before each\n   * execution of `iteratee`. Invoked with ().\n   * @param {Function} iteratee - A function which is called each time `test` passes.\n   * The function is passed a `callback(err)`, which must be called once it has\n   * completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has failed and repeated execution of `iteratee` has stopped. `callback`\n   * will be passed an error and any arguments passed to the final `iteratee`'s\n   * callback. Invoked with (err, [results]);\n   * @returns undefined\n   * @example\n   *\n   * var count = 0;\n   * async.whilst(\n   *     function() { return count < 5; },\n   *     function(callback) {\n   *         count++;\n   *         setTimeout(function() {\n   *             callback(null, count);\n   *         }, 1000);\n   *     },\n   *     function (err, n) {\n   *         // 5 seconds have passed, n = 5\n   *     }\n   * );\n   */\n  function whilst (test, iteratee, callback) {\n    callback = onlyOnce(callback || noop)\n    if (!test()) return callback(null)\n    var next = rest(function (err, args) {\n      if (err) return callback(err)\n      if (test()) return iteratee(next)\n      callback.apply(null, [null].concat(args))\n    })\n    iteratee(next)\n  }\n\n  /**\n   * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n   * stopped, or an error occurs. `callback` will be passed an error and any\n   * arguments passed to the final `fn`'s callback.\n   *\n   * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n   *\n   * @name until\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @see [async.whilst]{@link module:ControlFlow.whilst}\n   * @category Control Flow\n   * @param {Function} test - synchronous truth test to perform before each\n   * execution of `fn`. Invoked with ().\n   * @param {Function} fn - A function which is called each time `test` fails.\n   * The function is passed a `callback(err)`, which must be called once it has\n   * completed with an optional `err` argument. Invoked with (callback).\n   * @param {Function} [callback] - A callback which is called after the test\n   * function has passed and repeated execution of `fn` has stopped. `callback`\n   * will be passed an error and any arguments passed to the final `fn`'s\n   * callback. Invoked with (err, [results]);\n   */\n  function until (test, fn, callback) {\n    whilst(\n      function () {\n        return !test.apply(this, arguments)\n      },\n      fn,\n      callback\n    )\n  }\n\n  /**\n   * Runs the `tasks` array of functions in series, each passing their results to\n   * the next in the array. However, if any of the `tasks` pass an error to their\n   * own callback, the next function is not executed, and the main `callback` is\n   * immediately called with the error.\n   *\n   * @name waterfall\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array} tasks - An array of functions to run, each function is passed\n   * a `callback(err, result1, result2, ...)` it must call on completion. The\n   * first argument is an error (which can be `null`) and any further arguments\n   * will be passed as arguments in order to the next task.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed. This will be passed the results of the last task's\n   * callback. Invoked with (err, [results]).\n   * @returns undefined\n   * @example\n   *\n   * async.waterfall([\n   *     function(callback) {\n   *         callback(null, 'one', 'two');\n   *     },\n   *     function(arg1, arg2, callback) {\n   *         // arg1 now equals 'one' and arg2 now equals 'two'\n   *         callback(null, 'three');\n   *     },\n   *     function(arg1, callback) {\n   *         // arg1 now equals 'three'\n   *         callback(null, 'done');\n   *     }\n   * ], function (err, result) {\n   *     // result now equals 'done'\n   * });\n   *\n   * // Or, with named functions:\n   * async.waterfall([\n   *     myFirstFunction,\n   *     mySecondFunction,\n   *     myLastFunction,\n   * ], function (err, result) {\n   *     // result now equals 'done'\n   * });\n   * function myFirstFunction(callback) {\n   *     callback(null, 'one', 'two');\n   * }\n   * function mySecondFunction(arg1, arg2, callback) {\n   *     // arg1 now equals 'one' and arg2 now equals 'two'\n   *     callback(null, 'three');\n   * }\n   * function myLastFunction(arg1, callback) {\n   *     // arg1 now equals 'three'\n   *     callback(null, 'done');\n   * }\n   */\n  var waterfall = function (tasks, callback) {\n    callback = once(callback || noop)\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'))\n    if (!tasks.length) return callback()\n    var taskIndex = 0\n\n    function nextTask (args) {\n      if (taskIndex === tasks.length) {\n        return callback.apply(null, [null].concat(args))\n      }\n\n      var taskCallback = onlyOnce(\n        rest(function (err, args) {\n          if (err) {\n            return callback.apply(null, [err].concat(args))\n          }\n          nextTask(args)\n        })\n      )\n\n      args.push(taskCallback)\n\n      var task = tasks[taskIndex++]\n      task.apply(null, args)\n    }\n\n    nextTask([])\n  }\n\n  /**\n   * Async is a utility module which provides straight-forward, powerful functions\n   * for working with asynchronous JavaScript. Although originally designed for\n   * use with [Node.js](http://nodejs.org) and installable via\n   * `npm install --save async`, it can also be used directly in the browser.\n   * @module async\n   */\n\n  /**\n   * A collection of `async` functions for manipulating collections, such as\n   * arrays and objects.\n   * @module Collections\n   */\n\n  /**\n   * A collection of `async` functions for controlling the flow through a script.\n   * @module ControlFlow\n   */\n\n  /**\n   * A collection of `async` utility functions.\n   * @module Utils\n   */\n  var index = {\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    apply: apply$2,\n    asyncify: asyncify,\n    auto: auto,\n    autoInject: autoInject,\n    cargo: cargo,\n    compose: compose,\n    concat: concat,\n    concatSeries: concatSeries,\n    constant: constant,\n    detect: detect,\n    detectLimit: detectLimit,\n    detectSeries: detectSeries,\n    dir: dir,\n    doDuring: doDuring,\n    doUntil: doUntil,\n    doWhilst: doWhilst,\n    during: during,\n    each: eachLimit,\n    eachLimit: eachLimit$1,\n    eachOf: eachOf,\n    eachOfLimit: eachOfLimit,\n    eachOfSeries: eachOfSeries,\n    eachSeries: eachSeries,\n    ensureAsync: ensureAsync,\n    every: every,\n    everyLimit: everyLimit,\n    everySeries: everySeries,\n    filter: filter,\n    filterLimit: filterLimit,\n    filterSeries: filterSeries,\n    forever: forever,\n    log: log,\n    map: map,\n    mapLimit: mapLimit,\n    mapSeries: mapSeries,\n    mapValues: mapValues,\n    mapValuesLimit: mapValuesLimit,\n    mapValuesSeries: mapValuesSeries,\n    memoize: memoize,\n    nextTick: nextTick,\n    parallel: parallelLimit,\n    parallelLimit: parallelLimit$1,\n    priorityQueue: priorityQueue,\n    queue: queue$1,\n    race: race,\n    reduce: reduce,\n    reduceRight: reduceRight,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    reject: reject,\n    rejectLimit: rejectLimit,\n    rejectSeries: rejectSeries,\n    retry: retry,\n    retryable: retryable,\n    seq: seq$1,\n    series: series,\n    setImmediate: setImmediate$1,\n    some: some,\n    someLimit: someLimit,\n    someSeries: someSeries,\n    sortBy: sortBy,\n    timeout: timeout,\n    times: times,\n    timesLimit: timeLimit,\n    timesSeries: timesSeries,\n    transform: transform,\n    unmemoize: unmemoize,\n    until: until,\n    waterfall: waterfall,\n    whilst: whilst,\n\n    // aliases\n    all: every,\n    any: some,\n    forEach: eachLimit,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit$1,\n    forEachOf: eachOf,\n    forEachOfSeries: eachOfSeries,\n    forEachOfLimit: eachOfLimit,\n    inject: reduce,\n    foldl: reduce,\n    foldr: reduceRight,\n    select: filter,\n    selectLimit: filterLimit,\n    selectSeries: filterSeries,\n    wrapSync: asyncify\n  }\n\n  exports['default'] = index\n  exports.applyEach = applyEach\n  exports.applyEachSeries = applyEachSeries\n  exports.apply = apply$2\n  exports.asyncify = asyncify\n  exports.auto = auto\n  exports.autoInject = autoInject\n  exports.cargo = cargo\n  exports.compose = compose\n  exports.concat = concat\n  exports.concatSeries = concatSeries\n  exports.constant = constant\n  exports.detect = detect\n  exports.detectLimit = detectLimit\n  exports.detectSeries = detectSeries\n  exports.dir = dir\n  exports.doDuring = doDuring\n  exports.doUntil = doUntil\n  exports.doWhilst = doWhilst\n  exports.during = during\n  exports.each = eachLimit\n  exports.eachLimit = eachLimit$1\n  exports.eachOf = eachOf\n  exports.eachOfLimit = eachOfLimit\n  exports.eachOfSeries = eachOfSeries\n  exports.eachSeries = eachSeries\n  exports.ensureAsync = ensureAsync\n  exports.every = every\n  exports.everyLimit = everyLimit\n  exports.everySeries = everySeries\n  exports.filter = filter\n  exports.filterLimit = filterLimit\n  exports.filterSeries = filterSeries\n  exports.forever = forever\n  exports.log = log\n  exports.map = map\n  exports.mapLimit = mapLimit\n  exports.mapSeries = mapSeries\n  exports.mapValues = mapValues\n  exports.mapValuesLimit = mapValuesLimit\n  exports.mapValuesSeries = mapValuesSeries\n  exports.memoize = memoize\n  exports.nextTick = nextTick\n  exports.parallel = parallelLimit\n  exports.parallelLimit = parallelLimit$1\n  exports.priorityQueue = priorityQueue\n  exports.queue = queue$1\n  exports.race = race\n  exports.reduce = reduce\n  exports.reduceRight = reduceRight\n  exports.reflect = reflect\n  exports.reflectAll = reflectAll\n  exports.reject = reject\n  exports.rejectLimit = rejectLimit\n  exports.rejectSeries = rejectSeries\n  exports.retry = retry\n  exports.retryable = retryable\n  exports.seq = seq$1\n  exports.series = series\n  exports.setImmediate = setImmediate$1\n  exports.some = some\n  exports.someLimit = someLimit\n  exports.someSeries = someSeries\n  exports.sortBy = sortBy\n  exports.timeout = timeout\n  exports.times = times\n  exports.timesLimit = timeLimit\n  exports.timesSeries = timesSeries\n  exports.transform = transform\n  exports.unmemoize = unmemoize\n  exports.until = until\n  exports.waterfall = waterfall\n  exports.whilst = whilst\n  exports.all = every\n  exports.allLimit = everyLimit\n  exports.allSeries = everySeries\n  exports.any = some\n  exports.anyLimit = someLimit\n  exports.anySeries = someSeries\n  exports.find = detect\n  exports.findLimit = detectLimit\n  exports.findSeries = detectSeries\n  exports.forEach = eachLimit\n  exports.forEachSeries = eachSeries\n  exports.forEachLimit = eachLimit$1\n  exports.forEachOf = eachOf\n  exports.forEachOfSeries = eachOfSeries\n  exports.forEachOfLimit = eachOfLimit\n  exports.inject = reduce\n  exports.foldl = reduce\n  exports.foldr = reduceRight\n  exports.select = filter\n  exports.selectLimit = filterLimit\n  exports.selectSeries = filterSeries\n  exports.wrapSync = asyncify\n\n  Object.defineProperty(exports, '__esModule', { value: true })\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/async/async.js?");

/***/ }),
/* 9 */
/*!*******************************************!*\
  !*** ./src/public/js/plugins/snackbar.js ***!
  \*******************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Snackbar v0.1.3\n * http://polonel.com/Snackbar\n *\n * Copyright 2016 Chris Brame and other contributors\n * Released under the MIT license\n * https://github.com/polonel/Snackbar/blob/master/LICENSE\n */\n\n;(function (root, factory) {\n  'use strict'\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return (root.Snackbar = factory())\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  } else {}\n})(this, function () {\n  var Snackbar = {}\n\n  Snackbar.current = null\n  var $defaults = {\n    text: 'Default Text',\n    textColor: '#ffffff',\n\n    width: 'auto',\n\n    showAction: true,\n    actionText: 'Dismiss',\n    actionTextColor: '#4caf50',\n\n    backgroundColor: '#323232',\n\n    pos: 'bottom-left',\n\n    duration: 5000,\n\n    customClass: '',\n\n    onActionClick: function (element) {\n      element.style.opacity = 0\n    }\n  }\n\n  Snackbar.show = function ($options) {\n    var options = extend(true, $defaults, $options)\n\n    if (Snackbar.current) {\n      Snackbar.current.style.opacity = 0\n      setTimeout(\n        function () {\n          var $parent = this.parentElement\n          if ($parent)\n            // possible null if too many/fast Snackbars\n            $parent.removeChild(this)\n        }.bind(Snackbar.current),\n        500\n      )\n    }\n\n    Snackbar.snackbar = document.createElement('div')\n    Snackbar.snackbar.className = 'snackbar-container ' + options.customClass\n    Snackbar.snackbar.style.width = options.width\n    var $p = document.createElement('p')\n    $p.style.margin = 0\n    $p.style.padding = 0\n    $p.style.color = options.textColor\n    $p.style.fontSize = '14px'\n    $p.style.fontWeight = 300\n    $p.style.lineHeight = '1em'\n    $p.innerHTML = options.text\n    Snackbar.snackbar.appendChild($p)\n    Snackbar.snackbar.style.background = options.backgroundColor\n    if (options.showAction) {\n      var actionButton = document.createElement('button')\n      actionButton.className = 'action'\n      actionButton.innerHTML = options.actionText\n      actionButton.style.color = options.actionTextColor\n      actionButton.addEventListener('click', function () {\n        options.onActionClick(Snackbar.snackbar)\n      })\n      Snackbar.snackbar.appendChild(actionButton)\n    }\n\n    setTimeout(\n      function () {\n        if (Snackbar.current === this) {\n          Snackbar.current.style.opacity = 0\n        }\n      }.bind(Snackbar.snackbar),\n      options.duration\n    )\n\n    Snackbar.snackbar.addEventListener(\n      'transitionend',\n      function (event, elapsed) {\n        if (event.propertyName == 'opacity' && this.style.opacity == '0') {\n          this.parentElement.removeChild(this)\n\n          if (Snackbar.current === this) {\n            Snackbar.current = null\n          }\n        }\n      }.bind(Snackbar.snackbar)\n    )\n\n    Snackbar.current = Snackbar.snackbar\n    document.body.style.overflow = 'hidden'\n\n    if (\n      options.pos === 'top-left' ||\n      options.pos === 'top-center' ||\n      options.pos === 'top' ||\n      options.pos === 'top-right'\n    )\n      Snackbar.snackbar.style.top = '-100px'\n\n    document.body.appendChild(Snackbar.snackbar)\n    var $bottom = getComputedStyle(Snackbar.snackbar).bottom\n    var $top = getComputedStyle(Snackbar.snackbar).top\n    Snackbar.snackbar.style.opacity = 1\n    Snackbar.snackbar.className = 'snackbar-container ' + options.customClass + ' snackbar-pos ' + options.pos\n    if (options.pos === 'top-left' || options.pos === 'top-right') Snackbar.snackbar.style.top = 0\n    else if (options.pos === 'top-center' || options.pos === 'top') Snackbar.snackbar.style.top = '25px'\n    else if (options.pos === 'bottom-center' || options.pos === 'bottom') Snackbar.snackbar.style.bottom = '-25px'\n\n    setTimeout(function () {\n      document.body.style.overflow = 'auto'\n    }, 500)\n  }\n\n  Snackbar.close = function () {\n    if (Snackbar.current) Snackbar.current.style.opacity = 0\n  }\n\n  // Pure JS Extend\n  // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\n  var extend = function () {\n    var extended = {}\n    var deep = false\n    var i = 0\n    var length = arguments.length\n\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0]\n      i++\n    }\n\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = extend(true, extended[prop], obj[prop])\n          } else {\n            extended[prop] = obj[prop]\n          }\n        }\n      }\n    }\n\n    for (; i < length; i++) {\n      var obj = arguments[i]\n      merge(obj)\n    }\n\n    return extended\n  }\n\n  return Snackbar\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/plugins/snackbar.js?");

/***/ }),
/* 10 */
/*!*****************************************************************!*\
  !*** ./src/public/js/vendor/datatables/dataTables.ipaddress.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\n/**\n * Sorts a column containing IP addresses (IPv4 and IPv6) in typical dot\n * notation / colon. This can be most useful when using DataTables for a\n * networking application, and reporting information containing IP address.\n *\n *  @name IP addresses\n *  @summary Sort IP addresses numerically\n *  @author Dominique Fournier\n *  @author Brad Wasson\n *\n *  @example\n *    $('#example').dataTable( {\n *       columnDefs: [\n *         { type: 'ip-address', targets: 0 }\n *       ]\n *    } );\n */\n\njQuery.extend(jQuery.fn.dataTableExt.oSort, {\n  'ip-address-pre': function (a) {\n    var i, item\n    var m = a.split('.'),\n      n = a.split(':'),\n      x = '',\n      xa = ''\n\n    if (m.length == 4) {\n      // IPV4\n      for (i = 0; i < m.length; i++) {\n        item = m[i]\n\n        if (item.length == 1) {\n          x += '00' + item\n        } else if (item.length == 2) {\n          x += '0' + item\n        } else {\n          x += item\n        }\n      }\n    } else if (n.length > 0) {\n      // IPV6\n      var count = 0\n      for (i = 0; i < n.length; i++) {\n        item = n[i]\n\n        if (i > 0) {\n          xa += ':'\n        }\n\n        if (item.length === 0) {\n          count += 0\n        } else if (item.length == 1) {\n          xa += '000' + item\n          count += 4\n        } else if (item.length == 2) {\n          xa += '00' + item\n          count += 4\n        } else if (item.length == 3) {\n          xa += '0' + item\n          count += 4\n        } else {\n          xa += item\n          count += 4\n        }\n      }\n\n      // Padding the ::\n      n = xa.split(':')\n      var paddDone = 0\n\n      for (i = 0; i < n.length; i++) {\n        item = n[i]\n\n        if (item.length === 0 && paddDone === 0) {\n          for (var padding = 0; padding < 32 - count; padding++) {\n            x += '0'\n            paddDone = 1\n          }\n        } else {\n          x += item\n        }\n      }\n    }\n\n    return x\n  },\n\n  'ip-address-asc': function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0\n  },\n\n  'ip-address-desc': function (a, b) {\n    return a < b ? 1 : a > b ? -1 : 0\n  }\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/datatables/dataTables.ipaddress.js?");

/***/ }),
/* 11 */
/*!******************************************!*\
  !*** ./src/public/js/modules/helpers.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n *       .                             .o8                     oooo\n *    .o8                             \"888                     `888\n *  .o888oo oooo d8b oooo  oooo   .oooo888   .ooooo.   .oooo.o  888  oooo\n *    888   `888\"\"8P `888  `888  d88' `888  d88' `88b d88(  \"8  888 .8P'\n *    888    888      888   888  888   888  888ooo888 `\"Y88b.   888888.\n *    888 .  888      888   888  888   888  888    .o o.  )88b  888 `88b.\n *    \"888\" d888b     `V88V\"V8P' `Y8bod88P\" `Y8bod8P' 8\"\"888P' o888o o888o\n *  ========================================================================\n *  Author:     Chris Brame\n *  Updated:    1/20/19 4:46 PM\n *  Copyright (c) 2014-2019. All rights reserved.\n */\n\n\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ 1),\n  __webpack_require__(/*! underscore */ 2),\n  __webpack_require__(/*! lodash */ 7),\n  __webpack_require__(/*! moment */ 6),\n  __webpack_require__(/*! uikit */ 5),\n  __webpack_require__(/*! countup */ 16),\n  __webpack_require__(/*! waves */ 17),\n  __webpack_require__(/*! selectize */ 12),\n  __webpack_require__(/*! snackbar */ 9),\n  __webpack_require__(/*! jscookie */ 14),\n  __webpack_require__(/*! tether */ 18),\n  __webpack_require__(/*! formvalidator */ 19),\n  __webpack_require__(/*! async */ 8),\n  __webpack_require__(/*! easypiechart */ 15),\n  __webpack_require__(/*! chosen */ 20),\n  __webpack_require__(/*! velocity */ 13),\n  __webpack_require__(/*! peity */ 25),\n  __webpack_require__(/*! multiselect */ 27),\n  __webpack_require__(/*! moment_timezone */ 21),\n  __webpack_require__(/*! waypoints */ 28)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, moment, UIkit, CountUp, Waves, Selectize, Snackbar, Cookies, Tether) {\n  var helpers = {}\n  var easingSwiftOut = [0.4, 0, 0.2, 1]\n\n  helpers.loaded = false\n  helpers.init = function (reload) {\n    const self = this\n    if (reload) self.loaded = false\n    if (self.loaded) {\n      console.warn('Helpers already loaded. Possible double load.')\n    }\n\n    self.prototypes()\n\n    self.resizeFullHeight()\n    self.setupScrollers()\n    self.registerFormValidators()\n    self.formvalidator()\n    self.pToolTip()\n    self.setupDonutchart()\n    self.setupBarChart()\n    self.actionButtons()\n    self.bindKeys()\n    self.ajaxFormSubmit()\n    self.setupChosen()\n    self.bindNewMessageSubmit()\n    self.jsPreventDefault()\n\n    self.UI.fabToolbar()\n    self.UI.fabSheet()\n    self.UI.inputs()\n    self.UI.cardOverlay()\n    self.UI.setupPeity()\n    self.UI.selectize()\n    self.UI.multiSelect()\n    self.UI.waves()\n    self.UI.matchHeight()\n    self.UI.onlineUserSearch()\n    self.UI.showLinkWarning('.link-warning')\n\n    const layout = self.onWindowResize()\n\n    // Initial Call to Load Layout\n    layout()\n    $(window).resize(layout)\n\n    self.loaded = true\n  }\n\n  helpers.forceSessionUpdate = () => {\n    return new Promise((resolve, reject) => {\n      if (!window.trudeskSessionService) return reject(new Error('SessionService is not loaded'))\n\n      window.trudeskSessionService.forceUpdate(() => {\n        const refreshedSessionUser = window.trudeskSessionService.getUser()\n        return resolve(refreshedSessionUser)\n      })\n    })\n  }\n\n  helpers.countUpMe = function () {\n    $('.countUpMe').each(function () {\n      var self = this\n      var countTo = $(self).text()\n      var theAnimation = new CountUp(self, 0, countTo, 0, 2)\n      theAnimation.start()\n    })\n  }\n\n  helpers.util = {}\n  helpers.util.options = function (string) {\n    if ($.type(string) !== 'string') return string\n\n    if (string.indexOf(':') !== -1 && string.trim().substr(-1) !== '}') string = '{' + string + '}'\n\n    var start = string ? string.indexOf('{') : -1,\n      options = {}\n\n    if (start !== -1) {\n      try {\n        options = helpers.util.str2json(string.substr(start))\n      } catch (e) {}\n    }\n\n    return options\n  }\n\n  helpers.util.str2json = function (str, notevil) {\n    try {\n      if (notevil) {\n        return JSON.parse(\n          str\n            // wrap keys without quote with valid double quote\n            .replace(/([$\\w]+)\\s*:/g, function (_, $1) {\n              return '\"' + $1 + '\":'\n            })\n            // replacing single quote wrapped ones to double quote\n            .replace(/'([^']+)'/g, function (_, $1) {\n              return '\"' + $1 + '\"'\n            })\n        )\n      } else return new Function('', 'var json = ' + str + '; return JSON.parse(JSON.stringify(json));')()\n    } catch (e) {\n      return false\n    }\n  }\n\n  helpers.countUpMe = function () {\n    $('.countUpMe').each(function () {\n      var self = this\n      var countTo = $(self).text()\n      var theAnimation = new CountUp(self, 0, countTo, 0, 2)\n      theAnimation.start()\n    })\n  }\n  helpers.jsPreventDefault = function () {\n    $('.js-prevent-default').each(function () {\n      $(this).on('click', function (event) {\n        event.preventDefault()\n      })\n    })\n  }\n\n  helpers.UI = {}\n\n  helpers.UI.playSound = function (soundId) {\n    var audio = $('audio#' + soundId + '_audio')\n    if (audio.length > 0) audio.trigger('play')\n  }\n\n  helpers.UI.bindAccordion = function () {\n    $('li[data-nav-accordion]').each(function () {\n      // Remove hasSubMenuOpen from LI and subMenuOpen from submenu UL to prevent menu from staying open after page load\n      $(this).removeClass('hasSubMenuOpen')\n      var subMenu = $(this).find('#' + $(this).attr('data-nav-accordion-target'))\n      if (subMenu.length > 0) {\n        if (subMenu.attr('id') !== 'side-nav-accordion-plugins') subMenu.removeClass('subMenuOpen')\n      }\n      if (\n        $(this).hasClass('active') &&\n        $(this)\n          .parents('.sidebar')\n          .hasClass('expand')\n      ) {\n        $(this).addClass('hasSubMenuOpen')\n        if (subMenu.length > 0) subMenu.addClass('subMenuOpen')\n      }\n      var $this = $(this).find('> a')\n      $this.off('click')\n      $this.on('click', function (e) {\n        e.preventDefault()\n        e.stopPropagation()\n        if (\n          !$(this)\n            .parents('.sidebar')\n            .hasClass('expand')\n        ) {\n          var href = $(this).attr('href')\n          if (href !== '#') History.pushState(null, null, href)\n          return true\n        }\n\n        // Shut all other sidebars...\n        $('li[data-nav-accordion].hasSubMenuOpen').each(function () {\n          var $tTarget = $('#' + $(this).attr('data-nav-accordion-target'))\n          $tTarget.removeClass('subMenuOpen')\n          $(this).removeClass('hasSubMenuOpen')\n        })\n\n        var $target = $('#' + $this.parent('li').attr('data-nav-accordion-target'))\n\n        if ($target.length > 0) {\n          $target.toggleClass('subMenuOpen')\n          $(this)\n            .parent('li.hasSubMenu')\n            .toggleClass('hasSubMenuOpen')\n        }\n      })\n    })\n  }\n\n  helpers.UI.expandSidebar = function () {\n    var $sidebar = $('.sidebar')\n    $sidebar.addClass('no-animation expand')\n    $('#page-content').addClass('no-animation expanded-sidebar')\n    setTimeout(function () {\n      $sidebar.removeClass('no-animation')\n      $('#page-content').removeClass('no-animation')\n    }, 500)\n  }\n\n  helpers.UI.toggleSidebar = function () {\n    var $sidebar = $('.sidebar')\n    $sidebar.toggleClass('expand')\n    $('#page-content').toggleClass('expanded-sidebar')\n    if ($sidebar.hasClass('expand')) {\n      $sidebar.find('.tether-element.tether-enabled').hide()\n      $sidebar.find('li[data-nav-accordion-target].active').addClass('hasSubMenuOpen')\n      $sidebar.find('li[data-nav-accordion-target].active > ul').addClass('subMenuOpen')\n    } else {\n      setTimeout(function () {\n        Tether.position()\n        $('.sidebar')\n          .find('.tether-element.tether-enabled')\n          .show()\n      }, 250)\n      $sidebar.find('li[data-nav-accordion-target]').removeClass('hasSubMenuOpen')\n      $sidebar.find('ul.side-nav-accordion.side-nav-sub').removeClass('subMenuOpen')\n    }\n\n    $(window).resize()\n  }\n\n  helpers.UI.bindExpand = function () {\n    var menuButton = $('#expand-menu')\n    if (menuButton.length > 0) {\n      menuButton.off('click')\n      menuButton.on('click', function (e) {\n        e.preventDefault()\n        helpers.UI.toggleSidebar()\n        if ($('.sidebar').hasClass('expand')) {\n          Cookies.set('$trudesk:sidebar:expanded', true, { expires: 999 })\n        } else {\n          Cookies.set('$trudesk:sidebar:expanded', false, { expires: 999 })\n        }\n      })\n    }\n  }\n\n  helpers.UI.initSidebar = function () {\n    if (Cookies.get('$trudesk:sidebar:expanded') === 'true') {\n      helpers.UI.expandSidebar()\n    }\n  }\n\n  helpers.UI.tooltipSidebar = function () {\n    $('.sidebar')\n      .find('a[data-uk-tooltip]')\n      .each(function () {\n        $(this).attr('style', 'padding: 0 !important; font-size: 0 !important;')\n      })\n  }\n\n  helpers.UI.setupDataTethers = function () {\n    var $elements = $('*[data-tether]')\n\n    $elements.each(function () {\n      var $this = $(this)\n      var obj = helpers.util.options($this.attr('data-tether'))\n      if (_.isObject(obj)) {\n        var $target = $(obj.target)\n\n        if ($target.length > 0) {\n          new Tether({\n            element: $this,\n            target: $target,\n            attachment: obj.pos,\n            targetAttachment: obj.targetAttachment,\n            offset: obj.offset\n          })\n        }\n      }\n    })\n  }\n\n  helpers.UI.setupSidebarTether = function () {\n    var sidebarElements = [\n      { element: '#side-nav-sub-tickets', target: 'tickets' },\n      { element: '#side-nav-sub-accounts', target: 'accounts' },\n      { element: '#side-nav-sub-reports', target: 'reports' },\n      { element: '#side-nav-sub-settings', target: 'settings' }\n    ]\n\n    _.each(sidebarElements, function (item) {\n      var element = $('.sidebar-to-right').find(item.element)\n      if (element.length < 1) return\n      var sidebar = $('.sidebar')\n      var target = sidebar.find('li[data-nav-id=\"' + item.target + '\"]')\n      if (target.length < 1) return\n      helpers.UI.sidebarTether(element, target)\n      var isInside = false\n      target.on('mouseover', function () {\n        if (sidebar.hasClass('expand')) {\n          element.removeClass('sub-menu-right-open')\n          isInside = false\n        } else {\n          element.addClass('sub-menu-right-open')\n          isInside = true\n        }\n      })\n      target.on('mouseleave', function () {\n        isInside = false\n        setTimeout(function () {\n          if (!isInside) {\n            element.removeClass('sub-menu-right-open')\n          }\n        }, 100)\n      })\n      element.on('mouseover', function () {\n        isInside = true\n      })\n      element.on('mouseleave', function () {\n        isInside = false\n        setTimeout(function () {\n          if (!isInside) {\n            element.removeClass('sub-menu-right-open')\n          }\n        }, 100)\n      })\n    })\n  }\n\n  helpers.UI.sidebarTether = function (element, target) {\n    if (_.isUndefined(element) || _.isUndefined(target) || element.length < 1 || target.length < 1) {\n      return\n    }\n\n    // eslint-disable-next-line\n    new Tether({\n      element: element,\n      target: target,\n      attachment: 'top left',\n      targetAttachment: 'top right',\n      offset: '0 -3px'\n    })\n  }\n\n  helpers.UI.setNavItem = function (id) {\n    var $sidebar = $('.sidebar')\n    $sidebar.find('li.active').removeClass('active')\n    $sidebar.find('li[data-nav-id=\"' + id.toLowerCase() + '\"]').addClass('active')\n  }\n\n  helpers.UI.tetherUpdate = function () {\n    setTimeout(function () {\n      Tether.position()\n    }, 500)\n  }\n\n  helpers.UI.onlineUserSearch = function () {\n    $(document).off('keyup', '.online-list-search-box input[type=\"text\"]', onSearchKeyUp)\n    $(document).on('keyup', '.online-list-search-box input[type=\"text\"]', onSearchKeyUp)\n\n    function onSearchKeyUp () {\n      var $searchBox = $('.online-list-search-box').find('input')\n      var searchTerm = $searchBox.val().toLowerCase()\n\n      $('.user-list li').each(function () {\n        if ($(this).filter('[data-search-term *= ' + searchTerm + ']').length > 0 || searchTerm.length < 1) {\n          $(this).show()\n        } else {\n          $(this).hide()\n        }\n      })\n    }\n  }\n\n  helpers.UI.matchHeight = function () {\n    var $d = $('div[data-match-height]')\n    $d.each(function () {\n      var self = $(this)\n      var target = self.attr('data-match-height')\n\n      var $target = $(target)\n      var $targetHeight = $target.height()\n      self.height($targetHeight)\n    })\n  }\n\n  helpers.UI.showDisconnectedOverlay = function () {\n    setTimeout(function () {\n      var $disconnected = $('.disconnected')\n\n      if ($disconnected.css('display') === 'block') {\n        return true\n      }\n\n      $disconnected.velocity('fadeIn', {\n        duration: 500,\n        easing: easingSwiftOut,\n        begin: function () {\n          $disconnected.css({\n            display: 'block',\n            opacity: 0\n          })\n        }\n      })\n    }, 500)\n  }\n\n  helpers.UI.hideDisconnectedOverlay = function () {\n    var $disconnected = $('.disconnected')\n\n    if ($disconnected.css('display') === 'none') {\n      return true\n    }\n\n    $disconnected.velocity('fadeOut', {\n      duration: 500,\n      easing: easingSwiftOut,\n      complete: function () {\n        $disconnected.css({\n          display: 'none',\n          opacity: 0\n        })\n      }\n    })\n  }\n\n  helpers.UI.showSnackbar = function () {\n    if (arguments.length === 1 && _.isObject(arguments[0])) {\n      return helpers.UI.showSnackbar_.apply(this, arguments)\n    }\n\n    return helpers.UI.showSnackbar__.apply(this, arguments)\n  }\n\n  helpers.UI.showSnackbar_ = function (options) {\n    Snackbar.show(options)\n  }\n\n  helpers.UI.showSnackbar__ = function (text, error) {\n    if (_.isUndefined(error) || _.isNull(error)) {\n      error = false\n    }\n\n    var actionText = '#4CAF50'\n    if (error) {\n      actionText = '#FF4835'\n    }\n\n    Snackbar.show({\n      text: text,\n      actionTextColor: actionText\n    })\n  }\n\n  helpers.UI.closeSnackbar = function () {\n    Snackbar.close()\n  }\n\n  helpers.UI.inputs = function (parent) {\n    var $mdInput = typeof parent === 'undefined' ? $('.md-input') : $(parent).find('.md-input')\n    $mdInput.each(function () {\n      if (!$(this).closest('.md-input-wrapper').length) {\n        var $this = $(this)\n\n        if ($this.prev('label').length) {\n          $this\n            .prev('label')\n            .andSelf()\n            .wrapAll('<div class=\"md-input-wrapper\"/>')\n        } else if ($this.siblings('[data-uk-form-password]').length) {\n          $this\n            .siblings('[data-uk-form-password]')\n            .andSelf()\n            .wrapAll('<div class=\"md-input-wrapper\"/>')\n        } else {\n          $this.wrap('<div class=\"md-input-wrapper\"/>')\n        }\n\n        $this.closest('.md-input-wrapper').append('<span class=\"md-input-bar\"/>')\n\n        updateInput($this)\n      }\n      $('body')\n        .on('focus', '.md-input', function () {\n          $(this)\n            .closest('.md-input-wrapper')\n            .addClass('md-input-focus')\n        })\n        .on('blur', '.md-input', function () {\n          $(this)\n            .closest('.md-input-wrapper')\n            .removeClass('md-input-focus')\n          if (!$(this).hasClass('label-fixed')) {\n            if ($(this).val() !== '') {\n              $(this)\n                .closest('.md-input-wrapper')\n                .addClass('md-input-filled')\n            } else {\n              $(this)\n                .closest('.md-input-wrapper')\n                .removeClass('md-input-filled')\n            }\n          }\n        })\n        .on('change', '.md-input', function () {\n          updateInput($(this))\n        })\n\n      $('.search-input')\n        .focus(function () {\n          $(this)\n            .parent()\n            .addClass('focus')\n        })\n        .blur(function () {\n          $(this)\n            .parent()\n            .removeClass('focus')\n        })\n    })\n  }\n\n  helpers.UI.reRenderInputs = function () {\n    $('.md-input').each(function () {\n      updateInput($(this))\n    })\n  }\n\n  function updateInput (object) {\n    // clear wrapper classes\n    object.closest('.uk-input-group').removeClass('uk-input-group-danger uk-input-group-success uk-input-group-nocolor')\n    object\n      .closest('.md-input-wrapper')\n      .removeClass(\n        'md-input-wrapper-danger md-input-wrapper-success uk-input-wrapper-nocolor md-input-wrapper-disabled'\n      )\n\n    if (object.hasClass('md-input-danger')) {\n      if (object.closest('.uk-input-group').length) {\n        object.closest('.uk-input-group').addClass('uk-input-group-danger')\n      }\n\n      object.closest('.md-input-wrapper').addClass('md-input-wrapper-danger')\n    }\n    if (object.hasClass('md-input-success')) {\n      if (object.closest('.uk-input-group').length) {\n        object.closest('.uk-input-group').addClass('uk-input-group-success')\n      }\n\n      object.closest('.md-input-wrapper').addClass('md-input-wrapper-success')\n    }\n    if (object.hasClass('md-input-nocolor')) {\n      if (object.closest('.uk-input-group').length) {\n        object.closest('.uk-input-group').addClass('uk-input-group-nocolor')\n      }\n\n      object.closest('.md-input-wrapper').addClass('md-input-wrapper-nocolor')\n    }\n    if (object.prop('disabled')) {\n      object.closest('.md-input-wrapper').addClass('md-input-wrapper-disabled')\n    }\n\n    if (object.hasClass('label-fixed')) {\n      object.closest('.md-input-wrapper').addClass('md-input-filled')\n    }\n\n    if (object.val() !== '') {\n      object.closest('.md-input-wrapper').addClass('md-input-filled')\n    }\n  }\n\n  helpers.UI.fabToolbar = function () {\n    var $fabToolbar = $('.md-fab-toolbar')\n\n    if ($fabToolbar) {\n      $fabToolbar.children('i').on('click', function (e) {\n        e.preventDefault()\n\n        var toolbarItems = $fabToolbar.children('.md-fab-toolbar-actions').children().length\n\n        $fabToolbar.addClass('md-fab-animated')\n\n        var fabPadding = !$fabToolbar.hasClass('md-fab-small') ? 16 : 24\n\n        var fabSize = !$fabToolbar.hasClass('md-fab-small') ? 64 : 44\n\n        setTimeout(function () {\n          $fabToolbar.width(toolbarItems * fabSize + fabPadding)\n        }, 140)\n\n        setTimeout(function () {\n          $fabToolbar.addClass('md-fab-active')\n        }, 420)\n      })\n\n      $('.page-content').on('scroll', function (e) {\n        if ($fabToolbar.hasClass('md-fab-active')) {\n          if (!$(e.target).closest($fabToolbar).length) {\n            $fabToolbar.css({ height: '', width: '' }).removeClass('md-fab-active')\n\n            setTimeout(function () {\n              $fabToolbar.removeClass('md-fab-animated')\n            }, 140)\n          }\n        }\n      })\n\n      $(document).on('click scroll', function (e) {\n        if ($fabToolbar.hasClass('md-fab-active')) {\n          if (!$(e.target).closest($fabToolbar).length) {\n            $fabToolbar.css('width', '').removeClass('md-fab-active')\n\n            setTimeout(function () {\n              $fabToolbar.removeClass('md-fab-animated')\n            }, 140)\n          }\n        }\n      })\n    }\n  }\n\n  helpers.UI.fabSheet = function () {\n    var $fabSheet = $('.md-fab-sheet')\n\n    if ($fabSheet) {\n      $fabSheet.children('i').on('click', function (e) {\n        e.preventDefault()\n\n        var sheetItems = $fabSheet.children('.md-fab-sheet-actions').children('a').length\n        $fabSheet.addClass('md-fab-animated')\n\n        setTimeout(function () {\n          $fabSheet.width('240px').height(sheetItems * 40 + 8)\n        }, 140)\n\n        setTimeout(function () {\n          $fabSheet.addClass('md-fab-active')\n        }, 280)\n      })\n\n      $fabSheet\n        .children('.md-fab-sheet-actions')\n        .children('a')\n        .on('click', function () {\n          if ($fabSheet.hasClass('md-fab-active')) {\n            $fabSheet.css({ height: '', width: '' }).removeClass('md-fab-active')\n\n            setTimeout(function () {\n              $fabSheet.removeClass('md-fab-animated')\n            }, 140)\n          }\n        })\n\n      $('.page-content').on('scroll', function (e) {\n        if ($fabSheet.hasClass('md-fab-active')) {\n          if (!$(e.target).closest($fabSheet).length) {\n            $fabSheet.css({ height: '', width: '' }).removeClass('md-fab-active')\n\n            setTimeout(function () {\n              $fabSheet.removeClass('md-fab-animated')\n            }, 140)\n          }\n        }\n      })\n\n      $(document).on('click scroll', function (e) {\n        if ($fabSheet.hasClass('md-fab-active')) {\n          if (!$(e.target).closest($fabSheet).length) {\n            $fabSheet.css({ height: '', width: '' }).removeClass('md-fab-active')\n\n            setTimeout(function () {\n              $fabSheet.removeClass('md-fab-animated')\n            }, 140)\n          }\n        }\n      })\n    }\n  }\n\n  helpers.UI.waves = function () {\n    Waves.attach('.md-btn-wave,.md-fab-wave', ['waves-button'])\n    Waves.attach('.md-btn-wave-light,.md-fab-wave-light', ['waves-button', 'waves-light'])\n    Waves.attach('.wave-box', ['waves-float'])\n    Waves.init({\n      delay: 300\n    })\n  }\n\n  helpers.UI.selectize = function (parent) {\n    // selectize plugins\n    if (typeof $.fn.selectize !== 'undefined') {\n      Selectize.define('hidden_textbox', function (options) {\n        var self = this\n        this.showInput = function () {\n          this.$control.css({ cursor: 'pointer' })\n          this.$control_input.css({ opacity: 0, position: 'relative', left: self.rtl ? 10000 : -10000 })\n          this.isInputHidden = false\n        }\n\n        this.setup_original = this.setup\n\n        this.setup = function () {\n          self.setup_original()\n          this.$control_input.prop('disabled', 'disabled')\n        }\n      })\n\n      Selectize.define('dropdown_after', function () {\n        var self = this\n        self.positionDropdown = function () {\n          var $control = this.$control\n          var position = $control.position()\n          var paddingLeft = position.left\n          var paddingTop = position.top + $control.outerHeight(true) + 32\n          this.$dropdown.css({\n            width: $control.outerWidth(),\n            top: paddingTop,\n            left: paddingLeft\n          })\n        }\n      })\n    }\n\n    var $selectize = parent ? $(parent).find('select') : $('[data-md-selectize],.data-md-selectize')\n\n    $selectize.each(function () {\n      var $this = $(this)\n      if (!$this.hasClass('selectized')) {\n        var thisPosBottom = $this.attr('data-md-selectize-bottom')\n        var posTopOffset = $this.attr('data-md-selectize-top-offset')\n        var closeOnSelect =\n          $this.attr('data-md-selectize-closeOnSelect') !== 'undefined'\n            ? $this.attr('data-md-selectize-closeOnSelect')\n            : false\n\n        var showTextBox = $this.attr('data-md-selectize-notextbox') !== 'true'\n\n        var plugins = ['remove_button']\n        if (!showTextBox) plugins.push('hidden_textbox')\n\n        $this.after('<div class=\"selectize_fix\"></div>').selectize({\n          plugins: plugins,\n          hideSelected: true,\n          dropdownParent: 'body',\n          closeAfterSelect: closeOnSelect,\n          onDropdownOpen: function ($dropdown) {\n            $dropdown.hide().velocity('slideDown', {\n              begin: function () {\n                if (typeof thisPosBottom !== 'undefined') {\n                  $dropdown.css({ 'margin-top': '0' })\n                  if (typeof posTopOffset !== 'undefined') {\n                    $dropdown.css({ 'margin-top': posTopOffset + 'px' })\n                  }\n                }\n              },\n              duration: 200,\n              easing: easingSwiftOut\n            })\n          },\n          onDropdownClose: function ($dropdown) {\n            $dropdown.show().velocity('slideUp', {\n              complete: function () {\n                if (typeof thisPosBottom !== 'undefined') {\n                  $dropdown.css({ 'margin-top': '' })\n                }\n\n                if (closeOnSelect) {\n                  $($dropdown)\n                    .prev()\n                    .find('input')\n                    .blur()\n                }\n              },\n              duration: 200,\n              easing: easingSwiftOut\n            })\n          }\n        })\n      }\n    })\n\n    // dropdowns\n    var $selectizeInline = $('[data-md-selectize-inline]')\n\n    $selectizeInline.each(function () {\n      var $this = $(this)\n      if (!$this.hasClass('selectized')) {\n        var thisPosBottom = $this.attr('data-md-selectize-bottom')\n        var posTopOffset = $this.attr('data-md-selectize-top-offset')\n        var closeOnSelect =\n          $this.attr('data-md-selectize-closeOnSelect') !== 'undefined'\n            ? $this.attr('data-md-selectize-closeOnSelect')\n            : false\n        var maxOptions =\n          $this.attr('data-md-selectize-maxOptions') !== 'undefined' ? $this.attr('data-md-selectize-maxOptions') : 1000\n        var showTextBox = $this.attr('data-md-selectize-notextbox') !== 'true'\n\n        var plugins = ['dropdown_after', 'remove_button']\n        if (!showTextBox) plugins.push('hidden_textbox')\n\n        $this\n          .after('<div class=\"selectize_fix\"></div>')\n          .closest('div')\n          .addClass('uk-position-relative')\n          .end()\n          .selectize({\n            plugins: plugins,\n            dropdownParent: $this.closest('div'),\n            hideSelected: true,\n            closeAfterSelect: closeOnSelect,\n            maxOptions: maxOptions,\n            onFocus: function () {\n              if (showTextBox) return\n\n              $this.find('.selectize-input input').attr('readonly', true)\n              $this.find('.selectize-input input, .selectize-input').css('cursor', 'pointer')\n            },\n            onDropdownOpen: function ($dropdown) {\n              $dropdown.hide().velocity('slideDown', {\n                begin: function () {\n                  if (typeof thisPosBottom !== 'undefined') {\n                    $dropdown.css({ 'margin-top': '0' })\n                    if (typeof posTopOffset !== 'undefined') {\n                      $dropdown.css({ 'margin-top': posTopOffset + 'px' })\n                    }\n                  }\n                },\n                duration: 200,\n                easing: easingSwiftOut\n              })\n            },\n            onDropdownClose: function ($dropdown) {\n              $dropdown.show().velocity('slideUp', {\n                complete: function () {\n                  if (typeof thisPosBottom !== 'undefined') {\n                    $dropdown.css({ 'margin-top': '' })\n                  }\n\n                  if (closeOnSelect) {\n                    $($dropdown)\n                      .prev()\n                      .find('input')\n                      .blur()\n                  }\n                },\n                duration: 200,\n                easing: easingSwiftOut\n              })\n            }\n          })\n      }\n    })\n  }\n\n  helpers.UI.multiSelect = function (options) {\n    $('.multiselect').each(function () {\n      var self = $(this)\n      self.multiSelect(options)\n    })\n  }\n\n  helpers.UI.cardShow = function () {\n    $('.tru-card-intro').each(function () {\n      var self = $(this)\n      self.velocity(\n        {\n          scale: 0.99999999,\n          opacity: 1\n        },\n        {\n          duration: 400,\n          easing: easingSwiftOut\n        }\n      )\n    })\n  }\n\n  helpers.UI.cardOverlay = function () {\n    var $truCard = $('.tru-card')\n\n    // replace toggler icon (x) when overlay is active\n    $truCard.each(function () {\n      var $this = $(this)\n      if ($this.hasClass('tru-card-overlay-active')) {\n        $this.find('.tru-card-overlay-toggler').html('close')\n      }\n    })\n\n    // toggle card overlay\n    $truCard.on('click', '.tru-card-overlay-toggler', function (e) {\n      e.preventDefault()\n      if (\n        !$(this)\n          .closest('.tru-card')\n          .hasClass('tru-card-overlay-active')\n      ) {\n        $(this)\n          .html('close')\n          .closest('.tru-card')\n          .addClass('tru-card-overlay-active')\n      } else {\n        $(this)\n          .html('more_vert')\n          .closest('.tru-card')\n          .removeClass('tru-card-overlay-active')\n      }\n    })\n  }\n\n  helpers.UI.setupPeity = function () {\n    $('.peity-bar').each(function () {\n      $(this).peity('bar', {\n        height: 28,\n        width: 48,\n        fill: ['#e74c3c'],\n        padding: 0.2\n      })\n    })\n\n    $('.peity-pie').each(function () {\n      $(this).peity('donut', {\n        height: 24,\n        width: 24,\n        fill: ['#29b955', '#ccc']\n      })\n    })\n\n    $('.peity-line').each(function () {\n      $(this).peity('line', {\n        height: 28,\n        width: 64,\n        fill: '#d1e4f6',\n        stroke: '#0288d1'\n      })\n    })\n  }\n\n  helpers.UI.getPlugins = function (callback) {\n    $.ajax({\n      url: '/api/v1/plugins/list/installed',\n      method: 'GET',\n      success: function (data) {\n        if (_.isFunction(callback)) return callback(null, data)\n      },\n      error: function (error) {\n        if (_.isFunction(callback)) return callback(error, null)\n      }\n    })\n  }\n\n  helpers.UI.refreshTicketGrid = function () {\n    var $aRefreshTicketGrid = $('a#refreshTicketGrid')\n    if ($aRefreshTicketGrid.length() > 0) $aRefreshTicketGrid.trigger('click')\n  }\n\n  helpers.closeNotificationsWindow = function () {\n    UIkit.modal('#viewAllNotificationsModal').hide()\n  }\n\n  helpers.showFlash = function (message, error, sticky) {\n    var flash = $('.flash-message')\n    if (flash.length < 1) return true\n\n    var e = !!error\n    var s = !!sticky\n\n    var flashTO\n    var flashText = flash.find('.flash-text')\n    flashText.html(message)\n\n    if (e) {\n      flashText.css('background', '#de4d4d')\n    } else {\n      flashText.css('background', '#29b955')\n    }\n\n    if (s) {\n      flash.off('mouseout')\n      flash.off('mouseover')\n    }\n\n    if (!s) {\n      flash.mouseout(function () {\n        flashTO = setTimeout(flashTimeout, 2000)\n      })\n\n      flash.mouseover(function () {\n        clearTimeout(flashTO)\n      })\n    }\n\n    var isShown = flashText.is(':visible')\n    if (isShown) return true\n\n    flashText.css('top', '-50px')\n    flash.show()\n    if (flashTO) clearTimeout(flashTO)\n    flashText.stop().animate({ top: '0' }, 500, function () {\n      if (!s) {\n        flashTO = setTimeout(flashTimeout, 2000)\n      }\n    })\n  }\n\n  helpers.clearFlash = function () {\n    flashTimeout()\n  }\n\n  function flashTimeout () {\n    var flashText = $('.flash-message').find('.flash-text')\n    if (flashText.length < 1) return\n    flashText.stop().animate({ top: '-50px' }, 500, function () {\n      $('.flash-message').hide()\n    })\n  }\n\n  helpers.registerFormValidators = function () {\n    if (!('validate_shortDate' in $.formUtils.validators)) {\n      $.formUtils.addValidator({\n        name: 'shortDate',\n        validatorFunction: function (value) {\n          return moment(value, helpers.getShortDateFormat(), true).isValid()\n        },\n        errorMessage: 'Invalid Date (' + helpers.getShortDateFormat() + ')',\n        errorMessageKey: 'invalidShortDate'\n      })\n    }\n  }\n\n  helpers.formvalidator = function () {\n    $.validate({\n      errorElementClass: 'uk-form-danger',\n      errorMessageClass: 'uk-form-danger'\n      // ignore: ':hidden:not([class~=selectized]),:hidden > .selectized,.selectize-control .selectize-input input'\n    })\n  }\n\n  helpers.bindKeys = function () {\n    var ticketIssue = $('#createTicketForm').find('textarea#issue')\n    if (ticketIssue.length > 0) {\n      ticketIssue.off('keydown')\n      ticketIssue.on('keydown', function (e) {\n        var keyCode = e.which ? e.which : e.keyCode\n        if (keyCode === 10 || (keyCode === 13 && e.ctrlKey)) {\n          $('#saveTicketBtn').trigger('click')\n        }\n      })\n    }\n\n    var keyBindEnter = $('*[data-keyBindSubmit]')\n    if (keyBindEnter.length > 0) {\n      $.each(keyBindEnter, function (k, val) {\n        var item = $(val)\n        if (item.length < 1) return\n        item.off('keydown')\n        var actionItem = item.attr('data-keyBindSubmit')\n        if (actionItem.length > 0) {\n          var itemObj = $(actionItem)\n          if (itemObj.length > 0) {\n            item.on('keydown', function (e) {\n              var keyCode = e.which ? e.which : e.keyCode\n              if (keyCode === 10 || (keyCode === 13 && e.ctrlKey)) {\n                itemObj.trigger('click')\n              }\n            })\n          }\n        }\n      })\n    }\n  }\n\n  helpers.onWindowResize = function () {\n    var self = this\n    return _.debounce(function () {\n      $('body > .side-nav-sub.tether-element').each(function () {\n        $(this).remove()\n      })\n\n      self.UI.tetherUpdate()\n\n      self.resizeFullHeight()\n      self.hideAllpDropDowns()\n\n      self.resizeDataTables('.ticketList')\n      self.resizeDataTables('.tagsList')\n    }, 100)\n  }\n\n  helpers.setupScrollers = function () {\n    $('.scrollable').css({ 'overflow-y': 'auto', 'overflow-x': 'hidden' })\n    $('.scrollable-dark').css({ 'overflow-y': 'auto', 'overflow-x': 'hidden' })\n  }\n\n  helpers.scrollToBottom = function (jqueryObject, animate) {\n    if (_.isUndefined(jqueryObject) || jqueryObject.length < 1) return true\n    if (_.isUndefined(animate)) animate = false\n\n    if (!jqueryObject.jquery) {\n      jqueryObject = $(jqueryObject)\n    }\n\n    if (animate) {\n      jqueryObject.animate({ scrollTop: jqueryObject[0].scrollHeight }, 1000)\n    } else {\n      jqueryObject.scrollTop(jqueryObject[0].scrollHeight)\n    }\n  }\n\n  helpers.resizeAll = function () {\n    var self = this\n    var l = _.debounce(function () {\n      self.resizeFullHeight()\n      self.UI.matchHeight()\n      self.hideAllpDropDowns()\n\n      self.resizeDataTables('.ticketList')\n      self.resizeDataTables('.tagsList')\n    }, 100)\n\n    l()\n  }\n\n  helpers.resizeFullHeight = function () {\n    var ele = $('.full-height')\n    $.each(ele, function () {\n      var self = $(this)\n      ele.ready(function () {\n        var h = $(window).height()\n        if (self.css('borderTopStyle') === 'solid') {\n          h = h - 1\n        }\n\n        var dataOffset = self.attr('data-offset')\n        if (!_.isUndefined(dataOffset)) {\n          h = h - dataOffset\n        }\n\n        // self.css('overflow', 'hidden');\n        self.height(h - self.offset().top)\n      })\n    })\n  }\n\n  helpers.resizeDataTables = function (selector, hasFooter) {\n    if (_.isUndefined(selector)) {\n      return true\n    }\n\n    if (_.isUndefined(hasFooter)) {\n      hasFooter = false\n    }\n\n    $(document).ready(function () {\n      var $selector = $(selector)\n      var scroller = $selector.find('.dataTables_scrollBody')\n      if (scroller.length !== 0) {\n        var tableHead = $selector.find('.dataTables_scrollHead')\n        var optionsHead = $selector.find('.table-options')\n        var hasFilter = $selector.find('.dataTables_filter')\n        var headHeight = 0\n        if (optionsHead.length !== 0) {\n          headHeight = optionsHead.height()\n        } else if (hasFilter.length !== 0) {\n          headHeight = hasFilter.height()\n        }\n        var footerHeight = 0\n        if (hasFooter) {\n          footerHeight = tableHead.height()\n        }\n        scroller.css({\n          height: $selector.height() - tableHead.height() - headHeight - footerHeight + 'px'\n        })\n      }\n    })\n  }\n\n  helpers.hideAllpDropDowns = function () {\n    $('.p-dropdown').each(function () {\n      const $drop = $(this)\n      if ($drop.hasClass('pDropOpen')) $drop.removeClass('pDropOpen')\n    })\n  }\n\n  helpers.hideAllUiKitDropdowns = function () {\n    var dropdowns = $('.uk-dropdown')\n    dropdowns.each(function () {\n      var thisDropdown = $(this)\n      thisDropdown.removeClass('uk-dropdown-shown')\n\n      setTimeout(function () {\n        thisDropdown.removeClass('uk-dropdown-active')\n        thisDropdown\n          .parents('*[data-uk-dropdown]')\n          .removeClass('uk-open')\n          .attr('aria-expanded', false)\n      }, 280)\n    })\n  }\n\n  helpers.pToolTip = function () {\n    $(document).ready(function () {\n      var pToolTip = $('span[data-ptooltip]')\n      pToolTip.each(function () {\n        var title = $(this).attr('data-title')\n        var type = $(this).attr('data-ptooltip-type')\n        var html =\n          \"<div class='ptooltip-box-wrap' data-ptooltip-id='\" +\n          $(this).attr('id') +\n          \"'><div class='ptooltip-box'><span>\" +\n          title +\n          '</span>'\n        if (type.toLowerCase() === 'service') {\n          var status = $(this).attr('data-service-status')\n          var color = '#fff'\n          if (status.toLowerCase() === 'starting' || status.toLowerCase() === 'stopping') {\n            color = '#e77c3c'\n          }\n          if (status.toLowerCase() === 'running') {\n            color = '#29b955'\n          }\n          if (status.toLowerCase() === 'stopped') {\n            color = '#e54242'\n          }\n\n          html += \"<span>Status: <span style='color: \" + color + \";'>\" + status + '</span>'\n        } else if (type.toLowerCase() === 'dailyticket') {\n          var n = $(this).attr('data-new-count')\n          var c = $(this).attr('data-closed-count')\n\n          html +=\n            \"<span><span style='color: #e74c3c'>\" +\n            n +\n            \"</span> New / <span style='color: #2fb150'>\" +\n            c +\n            '</span> Closed</span>'\n        }\n\n        html += '</div></div>'\n        var k = $('<div></div>').css({ position: 'relative' })\n        k.append(html)\n\n        $(this).append(k)\n      })\n\n      pToolTip.hover(\n        function () {\n          var id = $(this).attr('id')\n          $('div.ptooltip-box-wrap[data-ptooltip-id=\"' + id + '\"]').show()\n        },\n        function () {\n          var id = $(this).attr('id')\n          $('div.ptooltip-box-wrap[data-ptooltip-id=\"' + id + '\"]').hide()\n        }\n      )\n    })\n  }\n\n  helpers.setupDonutchart = function () {\n    $(document).ready(function () {\n      $('.donutchart').each(function () {\n        var trackColor = $(this).attr('data-trackColor')\n        if (trackColor === null || trackColor.length <= 0) {\n          trackColor = '#e74c3c'\n        }\n        var numCount = $(this).attr('data-numcount')\n        if (numCount === null || numCount.length <= 0) {\n          numCount = false\n        }\n        var $size = $(this).attr('data-size')\n        if ($size === null || $size.length <= 0) {\n          $size = 150\n        }\n\n        $(this).css({ height: $size, width: $size })\n\n        $(this).easyPieChart({\n          size: $size,\n          lineCap: 'round',\n          lineWidth: 8,\n          scaleColor: false,\n          barColor: trackColor,\n          trackColor: '#e3e5e8',\n          onStart: function (value) {\n            $(this.el)\n              .find('.chart-value')\n              .text(value)\n          },\n          onStop: function (value, to) {\n            if (numCount) {\n              var totalNum = parseInt($(this.el).attr('data-totalNumCount'))\n              if (totalNum <= 0) return false\n              $(this.el)\n                .find('.chart-value')\n                .text(totalNum)\n              return true\n            }\n\n            if (to === Infinity) to = 0\n            $(this.el)\n              .find('.chart-value')\n              .text(Math.round(to))\n          },\n          onStep: function (from, to, percent) {\n            if (numCount) {\n              var countVal = parseInt($(this.el).attr('data-totalNumCount'))\n              if (countVal <= 0) return false\n              var current = parseInt(\n                $(this.el)\n                  .find('.chart-value')\n                  .text()\n              )\n              if (countVal !== null && countVal > 0 && current !== null) {\n                var totalCount = Math.round(countVal * (100 / Math.round(to)))\n                var val = totalCount * (0.01 * Math.round(percent))\n                var final = Math.round(val)\n                if (isNaN(final)) return true\n                $(this.el)\n                  .find('.chart-value')\n                  .text(final)\n                return true\n              }\n            }\n\n            if (percent === Infinity) percent = 0\n            $(this.el)\n              .find('.chart-value')\n              .text(Math.round(percent))\n          }\n        })\n      })\n    })\n  }\n\n  helpers.setupBarChart = function () {\n    $(document).ready(function () {\n      $('.bar-chart > .bar').each(function () {\n        var $this = $(this)\n        var val = $this.attr('data-percent')\n        var i = 170 * (0.01 * val)\n        $this\n          .find('span.bar-track')\n          .height(0)\n          .animate(\n            {\n              height: i\n            },\n            1000\n          )\n      })\n    })\n  }\n\n  helpers.actionButtons = function () {\n    $(document).ready(function () {\n      $('*[data-action]').each(function () {\n        var self = $(this)\n        var action = self.attr('data-action')\n        if (action.toLowerCase() === 'submit') {\n          var formId = self.attr('data-form')\n          if (!_.isUndefined(formId)) {\n            var form = $('#' + formId)\n            if (form.length !== 0) {\n              self.click(function (e) {\n                form.submit()\n\n                var preventDefault = self.attr('data-preventDefault')\n                if (_.isUndefined(preventDefault) || preventDefault.length < 1) {\n                  e.preventDefault()\n                } else if (preventDefault.toLowerCase() === 'true') {\n                  e.preventDefault()\n                }\n              })\n            }\n          }\n        } else if (action.toLowerCase() === 'scrolltobottom') {\n          var targetScroll = self.attr('data-targetScroll')\n          if (!_.isUndefined(targetScroll)) {\n            var target = $(targetScroll)\n            if (target.length !== 0) {\n              self.click(function (e) {\n                var animation = self.attr('data-action-animation')\n                if (!_.isUndefined(animation) && animation.toLowerCase() === 'false') {\n                  target.animate({ scrollTop: target[0].scrollHeight }, 0)\n                } else {\n                  target.animate({ scrollTop: target[0].scrollHeight }, 1000)\n                }\n\n                var preventDefault = self.attr('data-preventDefault')\n                if (_.isUndefined(preventDefault) || preventDefault.length < 1) {\n                  e.preventDefault()\n                } else if (preventDefault.toLowerCase() === 'true') {\n                  e.preventDefault()\n                }\n              })\n            }\n          }\n        }\n      })\n    })\n  }\n\n  helpers.fadeOutLoader = function (time) {\n    if (_.isUndefined(time)) {\n      time = 100\n    }\n\n    $(document).ready(function () {\n      $('#loader').fadeOut(time)\n    })\n  }\n\n  helpers.hideLoader = function (time) {\n    if (_.isUndefined(time) || _.isNull(time)) {\n      time = 280\n    }\n\n    $(document).ready(function () {\n      $('#loader-wrapper').fadeOut(time)\n    })\n  }\n\n  helpers.showLoader = function (opacity) {\n    if (_.isUndefined(opacity) || _.isNull(opacity)) {\n      opacity = 1\n    }\n\n    var $loader = $('#loader-wrapper')\n    $loader.css({ opacity: 0, display: 'block' })\n    $loader.animate({ opacity: opacity }, 500)\n  }\n\n  helpers.ajaxFormSubmit = function () {\n    // Bind to forms\n    $('form.ajaxSubmit').each(function () {\n      var self = $(this)\n      self.submit(function (e) {\n        $.ajax({\n          type: self.attr('method'),\n          url: self.attr('action'),\n          data: self.serialize(),\n          success: function () {\n            // send socket to add reply.\n            self.find('*[data-clearOnSubmit=\"true\"]').each(function () {\n              $(this).val('')\n            })\n          }\n        })\n\n        e.preventDefault()\n        return false\n      })\n    })\n  }\n\n  helpers.getTimezone = function () {\n    const sessionUser = window.trudeskSessionService.getUser()\n    if (sessionUser && sessionUser.preferences && sessionUser.preferences.timezone) {\n      return sessionUser.preferences.timezone\n    }\n\n    // Lets get the server Timezone as the default\n    const settings = window.trudeskSettingsService.getSettings()\n    return settings.timezone.value || 'America/New_York' // Return America/New_York as the fallback\n  }\n\n  helpers.getTimeFormat = function () {\n    if (window.trudeskSettingsService) {\n      return window.trudeskSettingsService.getSettings().timeFormat.value\n    }\n\n    return 'hh:mma'\n  }\n\n  helpers.getCalendarDate = function (date) {\n    moment.updateLocale('en', {\n      calendar: {\n        sameDay: '[Today at] LT',\n        lastDay: '[Yesterday at] LT',\n        nextDay: '[Tomorrow at] LT',\n        lastWeek: '[Last] ddd [at] LT',\n        nextWeek: 'ddd [at] LT',\n        sameElse: helpers.getShortDateFormat()\n      }\n    })\n    return moment\n      .utc(date)\n      .tz(this.getTimezone())\n      .calendar()\n  }\n\n  helpers.calendarDate = helpers.getCalendarDate\n\n  helpers.getShortDateFormat = function () {\n    if (window.trudeskSettingsService) {\n      return window.trudeskSettingsService.getSettings().shortDateFormat.value\n    }\n\n    return 'MM/DD/YYYY'\n  }\n\n  helpers.getLongDateFormat = function () {\n    if (window.trudeskSettingsService) {\n      return window.trudeskSettingsService.getSettings().longDateFormat.value\n    }\n\n    return 'MMM DD, YYYY'\n  }\n\n  helpers.getTimeFormat = function () {\n    if (window.trudeskSettingsService) {\n      return window.trudeskSettingsService.getSettings().timeFormat.value\n    }\n\n    return 'hh:mma'\n  }\n\n  helpers.getShortDateWithTimeFormat = function () {\n    return `${helpers.getShortDateFormat()} ${helpers.getTimeFormat()}`\n  }\n  \n  helpers.getLongDateWithTimeFormat = function () {\n    return `${helpers.getLongDateFormat()} ${helpers.getTimeFormat()}`\n  }\n\n  helpers.formatDate = function (date, format, isUTC) {\n    const timezone = this.getTimezone()\n\n    if (isUTC)\n      return moment(date)\n        .utc(true)\n        .tz(timezone)\n        .format(format)\n\n    return moment(date)\n      .tz(timezone)\n      .format(format)\n  }\n\n  helpers.setupChosen = function () {\n    $('.chosen-select').each(function () {\n      var self = $(this)\n      var nosearch = $(this).attr('data-nosearch')\n      var placeholder = ''\n      var elePlaceHolder = $(this).attr('data-placeholder')\n      var noResults = 'No Results Found For '\n      var eleNoResults = $(this).attr('data-noresults')\n      var searchNum = 10\n      if (nosearch) searchNum = 90000\n      if (!_.isUndefined(elePlaceHolder) && elePlaceHolder.length > 0) {\n        placeholder = elePlaceHolder\n      }\n\n      if (!_.isUndefined(eleNoResults) && eleNoResults.length > 0) {\n        noResults = eleNoResults\n      }\n\n      self.chosen({\n        disable_search_threshold: searchNum,\n        placeholder_text_single: placeholder,\n        placeholder_text_multiple: placeholder,\n        no_results_text: noResults\n      })\n    })\n  }\n\n  helpers.clearMessageContent = function () {\n    var contentDiv = $('#message-content')\n    if (contentDiv.length > 0) {\n      contentDiv.html('')\n    }\n  }\n\n  helpers.closeMessageWindow = function () {\n    // Close reveal and refresh page.\n    UIkit.modal('#newMessageModal').hide()\n    // Clear Fields\n    var $newMessageTo = $('#newMessageTo')\n    $newMessageTo.find('option').prop('selected', false)\n    $newMessageTo.trigger('chosen:updated')\n    $('#newMessageSubject').val('')\n    $('#newMessageText').val('')\n  }\n\n  helpers.bindNewMessageSubmit = function () {\n    var messageForm = $('#newMessageForm')\n    if (messageForm.length < 1) return\n\n    messageForm.unbind('submit', newMessageSubmit)\n    messageForm.bind('submit', newMessageSubmit)\n  }\n\n  function newMessageSubmit (e) {\n    e.preventDefault()\n    var form = $('#newMessageForm')\n    var formData = form.serializeObject()\n\n    if (!form.isValid(null, null, false)) {\n      return true\n    }\n\n    var data = {\n      to: formData.newMessageTo,\n      from: formData.from,\n      subject: formData.newMessageSubject,\n      message: formData.newMessageText\n    }\n\n    $.ajax({\n      method: 'POST',\n      url: '/api/v1/messages/send',\n      data: JSON.stringify(data),\n      processData: false,\n      // headers: { 'Content-Type': 'application/json'}\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json'\n    })\n      .success(function () {\n        // helpers.showFlash('Message Sent');\n        helpers.UI.showSnackbar({ text: 'Message Sent' })\n\n        helpers.closeMessageWindow()\n      })\n      .error(function (err) {\n        helpers.closeMessageWindow()\n        // helpers.showFlash(err.error, true);\n        helpers.UI.showSnackbar({ text: err.error, actionTextColor: '#B92929' })\n        console.log('[trudesk:helpers:newMessageSubmit] Error - ' + err)\n      })\n  }\n\n  helpers.canUser = function (a, adminOverride) {\n    let role = window.trudeskSessionService.getUser().role\n    const roles = window.trudeskSessionService.getRoles()\n\n    if (adminOverride === true && role.isAdmin) return true\n\n    if (!role || !roles) return false\n\n    if (__.hasIn(role, '_id')) role = role._id\n    const rolePerm = _.find(roles, { _id: role })\n    if (!rolePerm) return false\n    if (_.indexOf(rolePerm.grants, '*') !== -1) return true\n    if (!a) return false\n\n    const actionType = a.split(':')[0]\n    const action = a.split(':')[1]\n\n    if (_.isUndefined(actionType) || _.isUndefined(action)) return false\n\n    const result = _.filter(rolePerm.grants, function (value) {\n      if (__.startsWith(value, actionType + ':')) return value\n    })\n\n    if (!result || _.size(result) < 1) return false\n    if (_.size(result) === 1 && result[0] === '*') return true\n\n    let typePerm = result[0].split(':')[1].split(' ')\n    typePerm = _.uniq(typePerm)\n\n    if (_.indexOf(typePerm, '*') !== -1) return true\n\n    return _.indexOf(typePerm, action) !== -1\n  }\n\n  helpers.hasHierarchyEnabled = function (roleId) {\n    const roles = window.trudeskSessionService.getRoles()\n    const role = _.find(roles, function (o) {\n      return o._id.toString() === roleId.toString()\n    })\n    if (_.isUndefined(role) || _.isUndefined(role.hierarchy)) throw new Error('Invalid Role: ' + roleId)\n    return role.hierarchy\n  }\n\n  helpers.parseRoleGrants = function (grants) {\n    // Takes an array of grants and returns object\n    if (_.isUndefined(grants) || !_.isArray(grants)) return null\n    var final = {}\n    _.each(grants, function (grant) {\n      var grantName = grant.split(':')[0]\n      var typePerm = grant.split(':')[1].split(' ')\n      typePerm = _.uniq(typePerm)\n      var obj = {}\n      obj[grantName] = {\n        all: typePerm.indexOf('*') !== -1,\n        create: typePerm.indexOf('create') !== -1,\n        view: typePerm.indexOf('view') !== -1,\n        update: typePerm.indexOf('update') !== -1,\n        delete: typePerm.indexOf('delete') !== -1,\n        special: __.without(typePerm, '*', 'create', 'view', 'update', 'delete')\n      }\n\n      final = __.merge(final, obj)\n    })\n\n    return final\n  }\n\n  helpers.parseRoleHierarchy = function (roleId) {\n    var roleOrder = window.trudeskSessionService.getRoleOrder()\n    if (_.isUndefined(roleOrder)) return []\n    roleOrder = roleOrder.order\n\n    var idx = _.findIndex(roleOrder, function (i) {\n      return i.toString() === roleId.toString()\n    })\n    if (idx === -1) return []\n\n    return _.rest(roleOrder, idx)\n  }\n\n  helpers.getLoggedInRoleHierarchy = function () {\n    var loggedInRole = window.trudeskSessionService.getUser().role\n    return helpers.parseRoleHierarchy(loggedInRole._id)\n  }\n\n  helpers.getRolesByHierarchy = function () {\n    var roleOrder = helpers.getLoggedInRoleHierarchy()\n    var roles = window.trudeskSessionService.getRoles()\n    var returnedRoles = []\n    _.each(roles, function (r) {\n      var idx = _.findIndex(roleOrder, function (i) {\n        return i.toString() === r._id.toString()\n      })\n      if (idx !== -1) returnedRoles.push(roles[idx])\n    })\n\n    return returnedRoles\n  }\n\n  helpers.hasHierarchyOverRole = function (roleToCheck) {\n    var loggedInRole = window.trudeskSessionService.getUser().role\n    var roleOrder = helpers.parseRoleHierarchy(loggedInRole._id)\n    if (roleOrder.length < 1) return false\n    var idx = _.findIndex(roleOrder, function (i) {\n      return i.toString() === roleToCheck.toString()\n    })\n\n    return idx !== -1\n  }\n\n  helpers.hasPermOverRole = function (ownerRole, extRole, action, adminOverride) {\n    if (action && !helpers.canUser(action, adminOverride)) return false\n    if (!extRole) extRole = window.trudeskSessionService.getUser().role\n\n    if (!_.isObject(ownerRole) || !_.isObject(extRole)) {\n      console.log('Invalid Role Sent to helpers.hasPermOverRole. [Must be role obj]')\n      console.log('Owner: ' + ownerRole)\n      console.log('ExtRole: ' + extRole)\n      return false\n    }\n\n    if (extRole.role) {\n      console.warn(\n        'Seems like a user object was sent to helpers.hasPermOverRole --- [extRole must be a role object or null]'\n      )\n      return false\n    }\n\n    if (ownerRole._id === extRole._id) return true\n\n    if (adminOverride === true) {\n      if (extRole && extRole.isAdmin) {\n        return true\n      } else {\n        const r = window.trudeskSessionService.getRoles()\n        const role = _.find(r, function (_role) {\n          return _role._id.toString() === extRole._id.toString()\n        })\n        if (!_.isUndefined(role) && role.isAdmin) return true\n      }\n    }\n\n    if (!helpers.hasHierarchyEnabled(extRole._id)) {\n      return ownerRole._id === extRole._id\n    }\n\n    const roles = helpers.parseRoleHierarchy(extRole._id)\n    // console.log('My Role ID: ', extRole._id)\n    // console.log('Hierarchy: ', roles)\n    const i = _.find(roles, function (o) {\n      return o.toString() === ownerRole._id.toString()\n    })\n\n    // console.log('Found in Hierarchy: ', i)\n\n    return !_.isUndefined(i)\n  }\n\n  helpers.flushRoles = function () {\n    window.trudeskSessionService.flushRoles()\n    window.react.redux.store.dispatch({ type: 'FETCH_ROLES' })\n  }\n\n  helpers.setupContextMenu = function (selector, complete) {\n    var $selector = $(selector)\n    if ($selector.length < 1) return false\n\n    $(document).off('mousedown')\n    $(document).on('mousedown', function (e) {\n      if ($(e.target).parents('.context-menu').length < 1) {\n        var cm = $('.context-menu')\n        if (cm.length > 0) {\n          cm.hide(100)\n        }\n      }\n    })\n\n    var menuOpenFor\n    $selector.off('contextmenu')\n    $selector.on('contextmenu', function (event) {\n      event.preventDefault()\n      menuOpenFor = event.target\n      $('.context-menu')\n        .finish()\n        .toggle(100)\n        .css({\n          top: event.pageY + 'px',\n          left: event.pageX + 'px'\n        })\n    })\n\n    $selector.off('mousedown')\n    $selector.on('mousedown', function (event) {\n      if ($(event.target).parents('.context-menu').length < 1) {\n        $('.context-menu').hide(100)\n      }\n    })\n\n    var $contextMenuLi = $('.context-menu li')\n    $contextMenuLi.each(function () {\n      var $item = $(this)\n      $item.off('click')\n      $item.on('click', function () {\n        $('.context-menu').hide(100)\n        if (!_.isFunction(complete)) {\n          console.log('Invalid Callback Function in Context-Menu!')\n        } else {\n          return complete($(this).attr('data-action'), menuOpenFor)\n        }\n      })\n    })\n  }\n\n  helpers.setupTruTabs = function (tabs) {\n    var toggleTab = function (element) {\n      if ($(element).hasClass('active')) {\n        $(element)\n          .parent()\n          .find('.tru-tab-highlighter')\n          .css({ width: $(element).outerWidth() })\n      }\n\n      $(element).off('click')\n      $(element).on('click', function (event) {\n        event.preventDefault()\n        if ($(this).hasClass('active')) return true\n\n        var $highlighter = $(this)\n          .parent()\n          .find('.tru-tab-highlighter')\n\n        $(this)\n          .parent()\n          .find('.tru-tab-selector')\n          .each(function () {\n            $(this).removeClass('active')\n          })\n\n        $(this).addClass('active')\n        $highlighter.css({ width: $(this).outerWidth() })\n\n        var tabId = $(this).attr('data-tabid')\n\n        $(this)\n          .parents('.tru-tabs')\n          .find('.tru-tab-section')\n          .each(function () {\n            $(this)\n              .removeClass('visible')\n              .addClass('hidden')\n          })\n\n        $(this)\n          .parents('.tru-tabs')\n          .find('.tru-tab-section[data-tabid=\"' + tabId + '\"]')\n          .addClass('visible')\n          .removeClass('hidden')\n\n        var highlighterPos = $(this).position().left + 'px'\n        $highlighter.css('transform', 'translateX(' + highlighterPos + ')')\n      })\n\n      // Move highlighter to correct starting pos\n      if ($(element).hasClass('active')) {\n        const $highlighter = $(element)\n          .parent()\n          .find('.tru-tab-highlighter')\n        const highlighterPos = $(element).position().left + 'px'\n        $highlighter.css('transform', 'translateX(' + highlighterPos + ')')\n      }\n    }\n\n    _.each(tabs, function (i) {\n      toggleTab(i)\n    })\n  }\n\n  function stringStartsWith (string, prefix) {\n    return string.slice(0, prefix.length) === prefix\n  }\n\n  helpers.prototypes = function () {\n    // eslint-disable-next-line\n    String.prototype.formatUnicorn =\n      String.prototype.formatUnicorn ||\n      function () {\n        var str = this.toString()\n        if (arguments.length) {\n          var t = typeof arguments[0]\n          var key\n          var args = t === 'string' || t === 'number' ? Array.prototype.slice.call(arguments) : arguments[0]\n\n          for (key in args) {\n            str = str.replace(new RegExp('\\\\{' + key + '\\\\}', 'gi'), args[key])\n          }\n        }\n\n        return str\n      }\n  }\n\n  helpers.arrayIsEqual = function (value, other) {\n    var isEqual = function (value, other) {\n      // Get the value type\n      var type = Object.prototype.toString.call(value)\n\n      // If the two objects are not the same type, return false\n      if (type !== Object.prototype.toString.call(other)) return false\n\n      // If items are not an object or array, return false\n      if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false\n\n      // Compare the length of the length of the two items\n      var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length\n      var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length\n      if (valueLen !== otherLen) return false\n\n      // Compare two items\n      var compare = function (item1, item2) {\n        // Get the object type\n        var itemType = Object.prototype.toString.call(item1)\n\n        // If an object or array, compare recursively\n        if (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {\n          if (!isEqual(item1, item2)) return false\n        }\n\n        // Otherwise, do a simple comparison\n        else {\n          // If the two items are not the same type, return false\n          if (itemType !== Object.prototype.toString.call(item2)) return false\n\n          // Else if it's a function, convert to a string and compare\n          // Otherwise, just compare\n          if (itemType === '[object Function]') {\n            if (item1.toString() !== item2.toString()) return false\n          } else {\n            if (item1 !== item2) return false\n          }\n        }\n      }\n\n      // Compare properties\n      if (type === '[object Array]') {\n        for (var i = 0; i < valueLen; i++) {\n          if (compare(value[i], other[i]) === false) return false\n        }\n      } else {\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            if (compare(value[key], other[key]) === false) return false\n          }\n        }\n      }\n\n      // If nothing failed, return true\n      return true\n    }\n\n    return isEqual(value, other)\n  }\n\n  helpers.UI.hierarchicalShow = function (element) {\n    var $hierarchicalShow = $('.hierarchical_show')\n\n    if ($hierarchicalShow.length) {\n      $hierarchicalShow.each(function () {\n        var timeout = $(this).attr('data-show-delay') ? parseInt($(this).attr('data-show-delay')) : 0\n        var $this = $(this)\n        var thisChildrenLength = $this.children().length\n        var baseDelay = 100\n\n        $this.children().each(function (index) {\n          $(this).css({\n            '-webkit-animation-delay': index * baseDelay + 'ms',\n            'animation-delay': index * baseDelay + 'ms'\n          })\n        })\n\n        setTimeout(function () {\n          $this.waypoint({\n            handler: function () {\n              $this.addClass('hierarchical_show_inView')\n              setTimeout(function () {\n                $this\n                  .removeClass('hierarchical_show hierarchical_show_inView fast_animation')\n                  .children()\n                  .css({\n                    '-webkit-animation-delay': '',\n                    'animation-delay': ''\n                  })\n              }, thisChildrenLength * baseDelay + 1200)\n              this.destroy()\n            },\n            context: 'window',\n            offset: '90%'\n          })\n        }, timeout)\n      })\n    }\n    if (element) {\n      var $this = $(element).addClass('hierarchical_show hierarchical_show_inView')\n      var thisChildrenLength = $this.children().length\n      var baseDelay = 100\n\n      $this.children().each(function (index) {\n        $(this).css({\n          '-webkit-animation-delay': index * baseDelay + 'ms',\n          'animation-delay': index * baseDelay + 'ms'\n        })\n      })\n\n      $this.addClass('')\n      setTimeout(function () {\n        $this\n          .removeClass('hierarchical_show hierarchical_show_inView fast_animation')\n          .children()\n          .css({\n            '-webkit-animation-delay': '',\n            'animation-delay': ''\n          })\n      }, thisChildrenLength * baseDelay + 1200)\n    }\n  }\n\n  helpers.UI.hierarchicalSlide = function (element) {\n    var $hierarchicalSlide = $('.hierarchical_slide')\n    if ($hierarchicalSlide.length) {\n      $hierarchicalSlide.each(function () {\n        var $this = $(this)\n        var $thisChildren = $this.attr('data-slide-children')\n          ? $this.children($this.attr('data-slide-children'))\n          : $this.children()\n        var thisChildrenLength = $thisChildren.length\n        var thisContext = $this.attr('data-slide-context')\n          ? $this.closest($this.attr('data-slide-context'))[0]\n          : 'window'\n        var delay = $this.attr('data-delay') ? parseInt($this.attr('data-delay')) : 0\n        var baseDelay = 100\n\n        if (thisChildrenLength >= 1) {\n          $thisChildren.each(function (index) {\n            $(this).css({\n              '-webkit-animation-delay': index * baseDelay + 'ms',\n              'animation-delay': index * baseDelay + 'ms'\n            })\n          })\n\n          setTimeout(function () {\n            $this.waypoint({\n              handler: function () {\n                $this.addClass('hierarchical_slide_inView')\n                setTimeout(function () {\n                  $this.removeClass('hierarchical_slide hierarchical_slide_inView')\n                  $thisChildren.css({\n                    '-webkit-animation-delay': '',\n                    'animation-delay': ''\n                  })\n                }, thisChildrenLength * baseDelay + 1200)\n                this.destroy()\n              },\n              context: thisContext,\n              offset: '90%'\n            })\n          }, delay)\n        }\n      })\n    }\n\n    if (element) {\n      var $this = $(element).addClass('hierarchical_slide hierarchical_slide_inView')\n      var $thisChildren = $this.attr('data-slide-children')\n        ? $this.children($this.attr('data-slide-children'))\n        : $this.children()\n      var thisChildrenLength = $thisChildren.length\n      // var thisContext = $this.attr('data-slide-context') ? $this.closest($this.attr('data-slide-context'))[0] : 'window'\n      var baseDelay = 100\n\n      if (thisChildrenLength >= 1) {\n        $thisChildren.each(function (index) {\n          $(this).css({\n            '-webkit-animation-delay': index * baseDelay + 'ms',\n            'animation-delay': index * baseDelay + 'ms'\n          })\n        })\n\n        setTimeout(function () {\n          $this.removeClass('hierarchical_slide hierarchical_slide_inView')\n          $thisChildren.css({\n            '-webkit-animation-delay': '',\n            'animation-delay': ''\n          })\n        }, thisChildrenLength * baseDelay + 1200)\n      }\n    }\n  }\n\n  helpers.setupImageLink = function (el) {\n    var $this = $(el)\n    var src = $this.attr('src')\n    $this.addClass('hasLinked')\n    var a = $('<a>')\n      .addClass('no-ajaxy')\n      .attr('href', src)\n      .attr('target', '_blank')\n    $this.wrap(a)\n  }\n\n  helpers.isExternalLink = function (url) {\n    const tmp = document.createElement('a')\n    tmp.href = url\n    return tmp.host !== window.location.host\n  }\n\n  helpers.setupLinkWarning = function (el) {\n    const $this = $(el)\n\n    $this.attr('target', '_blank').addClass('link-warning')\n    helpers.UI.showLinkWarning(el)\n  }\n\n  helpers.UI.showLinkWarning = function (el) {\n    $(el).on('auxclick', function (e) {\n      const $this = $(this)\n      const href = $this.attr('href')\n      if (e.button === 1 && helpers.isExternalLink(href)) {\n        e.preventDefault()\n        window.react.redux.store.dispatch({\n          type: 'SHOW_MODAL',\n          payload: { modalType: 'LINK_WARNING', modalProps: { href } }\n        })\n      }\n    })\n\n    $(el).on('click', function (e) {\n      e.preventDefault()\n      const $this = $(this)\n      const href = $this.attr('href')\n\n      if (!helpers.isExternalLink(href)) {\n        if (History) History.pushState(null, null, href)\n        else window.location.href = href\n        return\n      }\n\n      window.react.redux.store.dispatch({\n        type: 'SHOW_MODAL',\n        payload: { modalType: 'LINK_WARNING', modalProps: { href } }\n      })\n    })\n  }\n\n  helpers.ajaxify = function (target) {\n    const $target = $(target)\n    if ($target.length > 0) {\n      $target.ajaxify()\n    }\n  }\n\n  return helpers\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/modules/helpers.js?");

/***/ }),
/* 12 */
/*!*****************************************************!*\
  !*** ./src/public/js/vendor/selectize/selectize.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 1);\nvar __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_0__factory, __WEBPACK_LOCAL_MODULE_0__module;var __WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_1__factory, __WEBPACK_LOCAL_MODULE_1__module;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n;(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_LOCAL_MODULE_0__factory = (factory), (typeof __WEBPACK_LOCAL_MODULE_0__factory === 'function' ? ((__WEBPACK_LOCAL_MODULE_0__module = { id: \"sifter\", exports: {}, loaded: false }), (__WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__factory.call(__WEBPACK_LOCAL_MODULE_0__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_0__module.exports, __WEBPACK_LOCAL_MODULE_0__module)), (__WEBPACK_LOCAL_MODULE_0__module.loaded = true), __WEBPACK_LOCAL_MODULE_0__ === undefined && (__WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__module.exports)) : __WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__factory))\n  } else {}\n})(this, function () {\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  var Sifter = function (items, settings) {\n    this.items = items\n    this.settings = settings || { diacritics: true }\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   * @param {string} query\n   * @returns {array}\n   */\n  Sifter.prototype.tokenize = function (query) {\n    query = trim(String(query || '').toLowerCase())\n    if (!query || !query.length) return []\n\n    var i, n, regex, letter\n    var tokens = []\n    var words = query.split(/ +/)\n\n    for (i = 0, n = words.length; i < n; i++) {\n      regex = escape_regex(words[i])\n      if (this.settings.diacritics) {\n        for (letter in DIACRITICS) {\n          if (DIACRITICS.hasOwnProperty(letter)) {\n            regex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter])\n          }\n        }\n      }\n      tokens.push({\n        string: words[i],\n        regex: new RegExp(regex, 'i')\n      })\n    }\n\n    return tokens\n  }\n\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * this.iterator(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   * @param {array|object} object\n   */\n  Sifter.prototype.iterator = function (object, callback) {\n    var iterator\n    if (is_array(object)) {\n      iterator =\n        Array.prototype.forEach ||\n        function (callback) {\n          for (var i = 0, n = this.length; i < n; i++) {\n            callback(this[i], i, this)\n          }\n        }\n    } else {\n      iterator = function (callback) {\n        for (var key in this) {\n          if (this.hasOwnProperty(key)) {\n            callback(this[key], key, this)\n          }\n        }\n      }\n    }\n\n    iterator.apply(object, [callback])\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @param {object|string} search\n   * @param {object} options (optional)\n   * @returns {function}\n   */\n  Sifter.prototype.getScoreFunction = function (search, options) {\n    var self, fields, tokens, token_count\n\n    self = this\n    search = self.prepareSearch(search, options)\n    tokens = search.tokens\n    fields = search.options.fields\n    token_count = tokens.length\n\n    /**\n     * Calculates how close of a match the\n     * given value is against a search token.\n     *\n     * @param {mixed} value\n     * @param {object} token\n     * @return {number}\n     */\n    var scoreValue = function (value, token) {\n      var score, pos\n\n      if (!value) return 0\n      value = String(value || '')\n      pos = value.search(token.regex)\n      if (pos === -1) return 0\n      score = token.string.length / value.length\n      if (pos === 0) score += 0.5\n      return score\n    }\n\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {object} token\n     * @param {object} data\n     * @return {number}\n     */\n    var scoreObject = (function () {\n      var field_count = fields.length\n      if (!field_count) {\n        return function () {\n          return 0\n        }\n      }\n      if (field_count === 1) {\n        return function (token, data) {\n          return scoreValue(data[fields[0]], token)\n        }\n      }\n      return function (token, data) {\n        for (var i = 0, sum = 0; i < field_count; i++) {\n          sum += scoreValue(data[fields[i]], token)\n        }\n        return sum / field_count\n      }\n    })()\n\n    if (!token_count) {\n      return function () {\n        return 0\n      }\n    }\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data)\n      }\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score\n        for (var i = 0, sum = 0; i < token_count; i++) {\n          score = scoreObject(tokens[i], data)\n          if (score <= 0) return 0\n          sum += score\n        }\n        return sum / token_count\n      }\n    } else {\n      return function (data) {\n        for (var i = 0, sum = 0; i < token_count; i++) {\n          sum += scoreObject(tokens[i], data)\n        }\n        return sum / token_count\n      }\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @param {string|object} search\n   * @param {object} options\n   * @return function(a,b)\n   */\n  Sifter.prototype.getSortFunction = function (search, options) {\n    var i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort\n\n    self = this\n    search = self.prepareSearch(search, options)\n    sort = (!search.query && options.sort_empty) || options.sort\n\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {mixed}\n     */\n    get_field = function (name, result) {\n      if (name === '$score') return result.score\n      return self.items[result.id][name]\n    }\n\n    // parse options\n    fields = []\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          fields.push(sort[i])\n        }\n      }\n    }\n\n    // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n    if (search.query) {\n      implicit_score = true\n      for (i = 0, n = fields.length; i < n; i++) {\n        if (fields[i].field === '$score') {\n          implicit_score = false\n          break\n        }\n      }\n      if (implicit_score) {\n        fields.unshift({ field: '$score', direction: 'desc' })\n      }\n    } else {\n      for (i = 0, n = fields.length; i < n; i++) {\n        if (fields[i].field === '$score') {\n          fields.splice(i, 1)\n          break\n        }\n      }\n    }\n\n    multipliers = []\n    for (i = 0, n = fields.length; i < n; i++) {\n      multipliers.push(fields[i].direction === 'desc' ? -1 : 1)\n    }\n\n    // build function\n    fields_count = fields.length\n    if (!fields_count) {\n      return null\n    } else if (fields_count === 1) {\n      field = fields[0].field\n      multiplier = multipliers[0]\n      return function (a, b) {\n        return multiplier * cmp(get_field(field, a), get_field(field, b))\n      }\n    } else {\n      return function (a, b) {\n        var i, result, a_value, b_value, field\n        for (i = 0; i < fields_count; i++) {\n          field = fields[i].field\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b))\n          if (result) return result\n        }\n        return 0\n      }\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   * @param {string} query\n   * @param {object} options\n   * @returns {object}\n   */\n  Sifter.prototype.prepareSearch = function (query, options) {\n    if (typeof query === 'object') return query\n\n    options = extend({}, options)\n\n    var option_fields = options.fields\n    var option_sort = options.sort\n    var option_sort_empty = options.sort_empty\n\n    if (option_fields && !is_array(option_fields)) options.fields = [option_fields]\n    if (option_sort && !is_array(option_sort)) options.sort = [option_sort]\n    if (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty]\n\n    return {\n      options: options,\n      query: String(query || '').toLowerCase(),\n      tokens: this.tokenize(query),\n      total: 0,\n      items: []\n    }\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   * The `options` parameter can contain:\n   *\n   *   - fields {string|array}\n   *   - sort {array}\n   *   - score {function}\n   *   - filter {bool}\n   *   - limit {integer}\n   *\n   * Returns an object containing:\n   *\n   *   - options {object}\n   *   - query {string}\n   *   - tokens {array}\n   *   - total {int}\n   *   - items {array}\n   *\n   * @param {string} query\n   * @param {object} options\n   * @returns {object}\n   */\n  Sifter.prototype.search = function (query, options) {\n    var self = this,\n      value,\n      score,\n      search,\n      calculateScore\n    var fn_sort\n    var fn_score\n\n    search = this.prepareSearch(query, options)\n    options = search.options\n    query = search.query\n\n    // generate result scoring function\n    fn_score = options.score || self.getScoreFunction(search)\n\n    // perform search and sort\n    if (query.length) {\n      self.iterator(self.items, function (item, id) {\n        score = fn_score(item)\n        if (options.filter === false || score > 0) {\n          search.items.push({ score: score, id: id })\n        }\n      })\n    } else {\n      self.iterator(self.items, function (item, id) {\n        search.items.push({ score: 1, id: id })\n      })\n    }\n\n    fn_sort = self.getSortFunction(search, options)\n    if (fn_sort) search.items.sort(fn_sort)\n\n    // apply limits\n    search.total = search.items.length\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit)\n    }\n\n    return search\n  }\n\n  // utilities\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  var cmp = function (a, b) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a > b ? 1 : a < b ? -1 : 0\n    }\n    a = asciifold(String(a || ''))\n    b = asciifold(String(b || ''))\n    if (a > b) return 1\n    if (b > a) return -1\n    return 0\n  }\n\n  var extend = function (a, b) {\n    var i, n, k, object\n    for (i = 1, n = arguments.length; i < n; i++) {\n      object = arguments[i]\n      if (!object) continue\n      for (k in object) {\n        if (object.hasOwnProperty(k)) {\n          a[k] = object[k]\n        }\n      }\n    }\n    return a\n  }\n\n  var trim = function (str) {\n    return (str + '').replace(/^\\s+|\\s+$|/g, '')\n  }\n\n  var escape_regex = function (str) {\n    return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1')\n  }\n\n  var is_array =\n    Array.isArray ||\n    ($ && $.isArray) ||\n    function (object) {\n      return Object.prototype.toString.call(object) === '[object Array]'\n    }\n\n  var DIACRITICS = {\n    a: '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n    c: '[cÇçćĆčČ]',\n    d: '[dđĐďĎ]',\n    e: '[eÈÉÊËèéêëěĚĒēęĘ]',\n    i: '[iÌÍÎÏìíîïĪī]',\n    l: '[lłŁ]',\n    n: '[nÑñňŇńŃ]',\n    o: '[oÒÓÔÕÕÖØòóôõöøŌō]',\n    r: '[rřŘ]',\n    s: '[sŠšśŚ]',\n    t: '[tťŤ]',\n    u: '[uÙÚÛÜùúûüůŮŪū]',\n    y: '[yŸÿýÝ]',\n    z: '[zŽžżŻźŹ]'\n  }\n\n  var asciifold = (function () {\n    var i, n, k, chunk\n    var foreignletters = ''\n    var lookup = {}\n    for (k in DIACRITICS) {\n      if (DIACRITICS.hasOwnProperty(k)) {\n        chunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1)\n        foreignletters += chunk\n        for (i = 0, n = chunk.length; i < n; i++) {\n          lookup[chunk.charAt(i)] = k\n        }\n      }\n    }\n    var regexp = new RegExp('[' + foreignletters + ']', 'g')\n    return function (str) {\n      return str\n        .replace(regexp, function (foreignletter) {\n          return lookup[foreignletter]\n        })\n        .toLowerCase()\n    }\n  })()\n\n  // export\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  return Sifter\n})\n\n/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n;(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_LOCAL_MODULE_1__factory = (factory), (typeof __WEBPACK_LOCAL_MODULE_1__factory === 'function' ? ((__WEBPACK_LOCAL_MODULE_1__module = { id: \"microplugin\", exports: {}, loaded: false }), (__WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__factory.call(__WEBPACK_LOCAL_MODULE_1__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_1__module.exports, __WEBPACK_LOCAL_MODULE_1__module)), (__WEBPACK_LOCAL_MODULE_1__module.loaded = true), __WEBPACK_LOCAL_MODULE_1__ === undefined && (__WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__module.exports)) : __WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__factory))\n  } else {}\n})(this, function () {\n  var MicroPlugin = {}\n\n  MicroPlugin.mixin = function (Interface) {\n    Interface.plugins = {}\n\n    /**\n     * Initializes the listed plugins (with options).\n     * Acceptable formats:\n     *\n     * List (without options):\n     *   ['a', 'b', 'c']\n     *\n     * List (with options):\n     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n     *\n     * Hash (with options):\n     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n     *\n     * @param {mixed} plugins\n     */\n    Interface.prototype.initializePlugins = function (plugins) {\n      var i, n, key\n      var self = this\n      var queue = []\n\n      self.plugins = {\n        names: [],\n        settings: {},\n        requested: {},\n        loaded: {}\n      }\n\n      if (utils.isArray(plugins)) {\n        for (i = 0, n = plugins.length; i < n; i++) {\n          if (typeof plugins[i] === 'string') {\n            queue.push(plugins[i])\n          } else {\n            self.plugins.settings[plugins[i].name] = plugins[i].options\n            queue.push(plugins[i].name)\n          }\n        }\n      } else if (plugins) {\n        for (key in plugins) {\n          if (plugins.hasOwnProperty(key)) {\n            self.plugins.settings[key] = plugins[key]\n            queue.push(key)\n          }\n        }\n      }\n\n      while (queue.length) {\n        self.require(queue.shift())\n      }\n    }\n\n    Interface.prototype.loadPlugin = function (name) {\n      var self = this\n      var plugins = self.plugins\n      var plugin = Interface.plugins[name]\n\n      if (!Interface.plugins.hasOwnProperty(name)) {\n        throw new Error('Unable to find \"' + name + '\" plugin')\n      }\n\n      plugins.requested[name] = true\n      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}])\n      plugins.names.push(name)\n    }\n\n    /**\n     * Initializes a plugin.\n     *\n     * @param {string} name\n     */\n    Interface.prototype.require = function (name) {\n      var self = this\n      var plugins = self.plugins\n\n      if (!self.plugins.loaded.hasOwnProperty(name)) {\n        if (plugins.requested[name]) {\n          throw new Error('Plugin has circular dependency (\"' + name + '\")')\n        }\n        self.loadPlugin(name)\n      }\n\n      return plugins.loaded[name]\n    }\n\n    /**\n     * Registers a plugin.\n     *\n     * @param {string} name\n     * @param {function} fn\n     */\n    Interface.define = function (name, fn) {\n      Interface.plugins[name] = {\n        name: name,\n        fn: fn\n      }\n    }\n  }\n\n  var utils = {\n    isArray:\n      Array.isArray ||\n      function (vArg) {\n        return Object.prototype.toString.call(vArg) === '[object Array]'\n      }\n  }\n\n  return MicroPlugin\n})\n\n/**\n * selectize.js (v0.12.1)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n;(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 1), __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_1__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  } else {}\n})(this, function ($, Sifter, MicroPlugin) {\n  'use strict'\n\n  var highlight = function ($element, pattern) {\n    if (typeof pattern === 'string' && !pattern.length) return\n    var regex = typeof pattern === 'string' ? new RegExp(pattern, 'i') : pattern\n\n    var highlight = function (node) {\n      var skip = 0\n      if (node.nodeType === 3) {\n        var pos = node.data.search(regex)\n        if (pos >= 0 && node.data.length > 0) {\n          var match = node.data.match(regex)\n          var spannode = document.createElement('span')\n          spannode.className = 'highlight'\n          var middlebit = node.splitText(pos)\n          var endbit = middlebit.splitText(match[0].length)\n          var middleclone = middlebit.cloneNode(true)\n          spannode.appendChild(middleclone)\n          middlebit.parentNode.replaceChild(spannode, middlebit)\n          skip = 1\n        }\n      } else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n        for (var i = 0; i < node.childNodes.length; ++i) {\n          i += highlight(node.childNodes[i])\n        }\n      }\n      return skip\n    }\n\n    return $element.each(function () {\n      highlight(this)\n    })\n  }\n\n  var MicroEvent = function () {}\n  MicroEvent.prototype = {\n    on: function (event, fct) {\n      this._events = this._events || {}\n      this._events[event] = this._events[event] || []\n      this._events[event].push(fct)\n    },\n    off: function (event, fct) {\n      var n = arguments.length\n      if (n === 0) return delete this._events\n      if (n === 1) return delete this._events[event]\n\n      this._events = this._events || {}\n      if (event in this._events === false) return\n      this._events[event].splice(this._events[event].indexOf(fct), 1)\n    },\n    trigger: function (event /* , args... */) {\n      this._events = this._events || {}\n      if (event in this._events === false) return\n      for (var i = 0; i < this._events[event].length; i++) {\n        this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n      }\n    }\n  }\n\n  /**\n   * Mixin will delegate all MicroEvent.js function in the destination object.\n   *\n   * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n   *\n   * @param {object} the object which will support MicroEvent\n   */\n  MicroEvent.mixin = function (destObject) {\n    var props = ['on', 'off', 'trigger']\n    for (var i = 0; i < props.length; i++) {\n      destObject.prototype[props[i]] = MicroEvent.prototype[props[i]]\n    }\n  }\n\n  var IS_MAC = /Mac/.test(navigator.userAgent)\n\n  var KEY_A = 65\n  var KEY_COMMA = 188\n  var KEY_RETURN = 13\n  var KEY_ESC = 27\n  var KEY_LEFT = 37\n  var KEY_UP = 38\n  var KEY_P = 80\n  var KEY_RIGHT = 39\n  var KEY_DOWN = 40\n  var KEY_N = 78\n  var KEY_BACKSPACE = 8\n  var KEY_DELETE = 46\n  var KEY_SHIFT = 16\n  var KEY_CMD = IS_MAC ? 91 : 17\n  var KEY_CTRL = IS_MAC ? 18 : 17\n  var KEY_TAB = 9\n\n  var TAG_SELECT = 1\n  var TAG_INPUT = 2\n\n  // for now, android support in general is too spotty to support validity\n  var SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity\n\n  var isset = function (object) {\n    return typeof object !== 'undefined'\n  }\n\n  /**\n   * Converts a scalar to its best string representation\n   * for hash keys and HTML attribute values.\n   *\n   * Transformations:\n   *   'str'     -> 'str'\n   *   null      -> ''\n   *   undefined -> ''\n   *   true      -> '1'\n   *   false     -> '0'\n   *   0         -> '0'\n   *   1         -> '1'\n   *\n   * @param {string} value\n   * @returns {string|null}\n   */\n  var hash_key = function (value) {\n    if (typeof value === 'undefined' || value === null) return null\n    if (typeof value === 'boolean') return value ? '1' : '0'\n    return value + ''\n  }\n\n  /**\n   * Escapes a string for use within HTML.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  var escape_html = function (str) {\n    return (str + '')\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n  }\n\n  /**\n   * Escapes \"$\" characters in replacement strings.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  var escape_replace = function (str) {\n    return (str + '').replace(/\\$/g, '$$$$')\n  }\n\n  var hook = {}\n\n  /**\n   * Wraps `method` on `self` so that `fn`\n   * is invoked before the original method.\n   *\n   * @param {object} self\n   * @param {string} method\n   * @param {function} fn\n   */\n  hook.before = function (self, method, fn) {\n    var original = self[method]\n    self[method] = function () {\n      fn.apply(self, arguments)\n      return original.apply(self, arguments)\n    }\n  }\n\n  /**\n   * Wraps `method` on `self` so that `fn`\n   * is invoked after the original method.\n   *\n   * @param {object} self\n   * @param {string} method\n   * @param {function} fn\n   */\n  hook.after = function (self, method, fn) {\n    var original = self[method]\n    self[method] = function () {\n      var result = original.apply(self, arguments)\n      fn.apply(self, arguments)\n      return result\n    }\n  }\n\n  /**\n   * Wraps `fn` so that it can only be invoked once.\n   *\n   * @param {function} fn\n   * @returns {function}\n   */\n  var once = function (fn) {\n    var called = false\n    return function () {\n      if (called) return\n      called = true\n      fn.apply(this, arguments)\n    }\n  }\n\n  /**\n   * Wraps `fn` so that it can only be called once\n   * every `delay` milliseconds (invoked on the falling edge).\n   *\n   * @param {function} fn\n   * @param {int} delay\n   * @returns {function}\n   */\n  var debounce = function (fn, delay) {\n    var timeout\n    return function () {\n      var self = this\n      var args = arguments\n      window.clearTimeout(timeout)\n      timeout = window.setTimeout(function () {\n        fn.apply(self, args)\n      }, delay)\n    }\n  }\n\n  /**\n   * Debounce all fired events types listed in `types`\n   * while executing the provided `fn`.\n   *\n   * @param {object} self\n   * @param {array} types\n   * @param {function} fn\n   */\n  var debounce_events = function (self, types, fn) {\n    var type\n    var trigger = self.trigger\n    var event_args = {}\n\n    // override trigger method\n    self.trigger = function () {\n      var type = arguments[0]\n      if (types.indexOf(type) !== -1) {\n        event_args[type] = arguments\n      } else {\n        return trigger.apply(self, arguments)\n      }\n    }\n\n    // invoke provided function\n    fn.apply(self, [])\n    self.trigger = trigger\n\n    // trigger queued events\n    for (type in event_args) {\n      if (event_args.hasOwnProperty(type)) {\n        trigger.apply(self, event_args[type])\n      }\n    }\n  }\n\n  /**\n   * A workaround for http://bugs.jquery.com/ticket/6696\n   *\n   * @param {object} $parent - Parent element to listen on.\n   * @param {string} event - Event name.\n   * @param {string} selector - Descendant selector to filter by.\n   * @param {function} fn - Event handler.\n   */\n  var watchChildEvent = function ($parent, event, selector, fn) {\n    $parent.on(event, selector, function (e) {\n      var child = e.target\n      while (child && child.parentNode !== $parent[0]) {\n        child = child.parentNode\n      }\n      e.currentTarget = child\n      return fn.apply(this, [e])\n    })\n  }\n\n  /**\n   * Determines the current selection within a text input control.\n   * Returns an object containing:\n   *   - start\n   *   - length\n   *\n   * @param {object} input\n   * @returns {object}\n   */\n  var getSelection = function (input) {\n    var result = {}\n    if ('selectionStart' in input) {\n      result.start = input.selectionStart\n      result.length = input.selectionEnd - result.start\n    } else if (document.selection) {\n      input.focus()\n      var sel = document.selection.createRange()\n      var selLen = document.selection.createRange().text.length\n      sel.moveStart('character', -input.value.length)\n      result.start = sel.text.length - selLen\n      result.length = selLen\n    }\n    return result\n  }\n\n  /**\n   * Copies CSS properties from one element to another.\n   *\n   * @param {object} $from\n   * @param {object} $to\n   * @param {array} properties\n   */\n  var transferStyles = function ($from, $to, properties) {\n    var i,\n      n,\n      styles = {}\n    if (properties) {\n      for (i = 0, n = properties.length; i < n; i++) {\n        styles[properties[i]] = $from.css(properties[i])\n      }\n    } else {\n      styles = $from.css()\n    }\n    $to.css(styles)\n  }\n\n  /**\n   * Measures the width of a string within a\n   * parent element (in pixels).\n   *\n   * @param {string} str\n   * @param {object} $parent\n   * @returns {int}\n   */\n  var measureString = function (str, $parent) {\n    if (!str) {\n      return 0\n    }\n\n    var $test = $('<test>')\n      .css({\n        position: 'absolute',\n        top: -99999,\n        left: -99999,\n        width: 'auto',\n        padding: 0,\n        whiteSpace: 'pre'\n      })\n      .text(str)\n      .appendTo('body')\n\n    transferStyles($parent, $test, ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'])\n\n    var width = $test.width()\n    $test.remove()\n\n    return width\n  }\n\n  /**\n   * Sets up an input to grow horizontally as the user\n   * types. If the value is changed manually, you can\n   * trigger the \"update\" handler to resize:\n   *\n   * $input.trigger('update');\n   *\n   * @param {object} $input\n   */\n  var autoGrow = function ($input) {\n    var currentWidth = null\n\n    var update = function (e, options) {\n      var value, keyCode, printable, placeholder, width\n      var shift, character, selection\n      e = e || window.event || {}\n      options = options || {}\n\n      if (e.metaKey || e.altKey) return\n      if (!options.force && $input.data('grow') === false) return\n\n      value = $input.val()\n      if (e.type && e.type.toLowerCase() === 'keydown') {\n        keyCode = e.keyCode\n        printable =\n          (keyCode >= 97 && keyCode <= 122) || // a-z\n          (keyCode >= 65 && keyCode <= 90) || // A-Z\n          (keyCode >= 48 && keyCode <= 57) || // 0-9\n          keyCode === 32 // space\n\n        if (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n          selection = getSelection($input[0])\n          if (selection.length) {\n            value = value.substring(0, selection.start) + value.substring(selection.start + selection.length)\n          } else if (keyCode === KEY_BACKSPACE && selection.start) {\n            value = value.substring(0, selection.start - 1) + value.substring(selection.start + 1)\n          } else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n            value = value.substring(0, selection.start) + value.substring(selection.start + 1)\n          }\n        } else if (printable) {\n          shift = e.shiftKey\n          character = String.fromCharCode(e.keyCode)\n          if (shift) character = character.toUpperCase()\n          else character = character.toLowerCase()\n          value += character\n        }\n      }\n\n      placeholder = $input.attr('placeholder')\n      if (!value && placeholder) {\n        value = placeholder\n      }\n\n      width = measureString(value, $input) + 4\n      if (width !== currentWidth) {\n        currentWidth = width\n        $input.width(width)\n        $input.triggerHandler('resize')\n      }\n    }\n\n    $input.on('keydown keyup update blur', update)\n    update()\n  }\n\n  var Selectize = function ($input, settings) {\n    var key,\n      i,\n      n,\n      dir,\n      input,\n      self = this\n    input = $input[0]\n    input.selectize = self\n\n    // detect rtl environment\n    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null)\n    dir = computedStyle\n      ? computedStyle.getPropertyValue('direction')\n      : input.currentStyle && input.currentStyle.direction\n    dir = dir || $input.parents('[dir]:first').attr('dir') || ''\n\n    // setup default state\n    $.extend(self, {\n      order: 0,\n      settings: settings,\n      $input: $input,\n      tabIndex: $input.attr('tabindex') || '',\n      tagType: input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n      rtl: /rtl/i.test(dir),\n\n      eventNS: '.selectize' + ++Selectize.count,\n      highlightedValue: null,\n      isOpen: false,\n      isDisabled: false,\n      isRequired: $input.is('[required]'),\n      isInvalid: false,\n      isLocked: false,\n      isFocused: false,\n      isInputHidden: false,\n      isSetup: false,\n      isShiftDown: false,\n      isCmdDown: false,\n      isCtrlDown: false,\n      ignoreFocus: false,\n      ignoreBlur: false,\n      ignoreHover: false,\n      hasOptions: false,\n      currentResults: null,\n      lastValue: '',\n      caretPos: 0,\n      loading: 0,\n      loadedSearches: {},\n\n      $activeOption: null,\n      $activeItems: [],\n\n      optgroups: {},\n      options: {},\n      userOptions: {},\n      items: [],\n      renderCache: {},\n      onSearchChange:\n        settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n    })\n\n    // search system\n    self.sifter = new Sifter(this.options, { diacritics: settings.diacritics })\n\n    // build options table\n    if (self.settings.options) {\n      for (i = 0, n = self.settings.options.length; i < n; i++) {\n        self.registerOption(self.settings.options[i])\n      }\n      delete self.settings.options\n    }\n\n    // build optgroup table\n    if (self.settings.optgroups) {\n      for (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n        self.registerOptionGroup(self.settings.optgroups[i])\n      }\n      delete self.settings.optgroups\n    }\n\n    // option-dependent defaults\n    self.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi')\n    if (typeof self.settings.hideSelected !== 'boolean') {\n      self.settings.hideSelected = self.settings.mode === 'multi'\n    }\n\n    self.initializePlugins(self.settings.plugins)\n    self.setupCallbacks()\n    self.setupTemplates()\n    self.setup()\n  }\n\n  // mixins\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  MicroEvent.mixin(Selectize)\n  MicroPlugin.mixin(Selectize)\n\n  // methods\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  $.extend(Selectize.prototype, {\n    /**\n     * Creates all elements and sets up event bindings.\n     */\n    setup: function () {\n      var self = this\n      var settings = self.settings\n      var eventNS = self.eventNS\n      var $window = $(window)\n      var $document = $(document)\n      var $input = self.$input\n\n      var $wrapper\n      var $control\n      var $control_input\n      var $dropdown\n      var $dropdown_content\n      var $dropdown_parent\n      var inputMode\n      var timeout_blur\n      var timeout_focus\n      var classes\n      var classes_plugins\n\n      inputMode = self.settings.mode\n      classes = $input.attr('class') || ''\n\n      $wrapper = $('<div>')\n        .addClass(settings.wrapperClass)\n        .addClass(classes)\n        .addClass(inputMode)\n      $control = $('<div>')\n        .addClass(settings.inputClass)\n        .addClass('items')\n        .appendTo($wrapper)\n      $control_input = $('<input type=\"text\" autocomplete=\"off\" />')\n        .appendTo($control)\n        .attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex)\n      $dropdown_parent = $(settings.dropdownParent || $wrapper)\n      $dropdown = $('<div>')\n        .addClass(settings.dropdownClass)\n        .addClass(inputMode)\n        .hide()\n        .appendTo($dropdown_parent)\n      $dropdown_content = $('<div>')\n        .addClass(settings.dropdownContentClass)\n        .appendTo($dropdown)\n\n      if (self.settings.copyClassesToDropdown) {\n        $dropdown.addClass(classes)\n      }\n\n      $wrapper.css({\n        width: $input[0].style.width\n      })\n\n      if (self.plugins.names.length) {\n        classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-')\n        $wrapper.addClass(classes_plugins)\n        $dropdown.addClass(classes_plugins)\n      }\n\n      if ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n        $input.attr('multiple', 'multiple')\n      }\n\n      if (self.settings.placeholder) {\n        $control_input.attr('placeholder', settings.placeholder)\n      }\n\n      // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n      if (!self.settings.splitOn && self.settings.delimiter) {\n        var delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n        self.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*')\n      }\n\n      if ($input.attr('autocorrect')) {\n        $control_input.attr('autocorrect', $input.attr('autocorrect'))\n      }\n\n      if ($input.attr('autocapitalize')) {\n        $control_input.attr('autocapitalize', $input.attr('autocapitalize'))\n      }\n\n      self.$wrapper = $wrapper\n      self.$control = $control\n      self.$control_input = $control_input\n      self.$dropdown = $dropdown\n      self.$dropdown_content = $dropdown_content\n\n      $dropdown.on('mouseenter', '[data-selectable]', function () {\n        return self.onOptionHover.apply(self, arguments)\n      })\n      $dropdown.on('mousedown click', '[data-selectable]', function () {\n        return self.onOptionSelect.apply(self, arguments)\n      })\n      watchChildEvent($control, 'mousedown', '*:not(input)', function () {\n        return self.onItemSelect.apply(self, arguments)\n      })\n      autoGrow($control_input)\n\n      $control.on({\n        mousedown: function () {\n          return self.onMouseDown.apply(self, arguments)\n        },\n        click: function () {\n          return self.onClick.apply(self, arguments)\n        }\n      })\n\n      $control_input.on({\n        mousedown: function (e) {\n          e.stopPropagation()\n        },\n        keydown: function () {\n          return self.onKeyDown.apply(self, arguments)\n        },\n        keyup: function () {\n          return self.onKeyUp.apply(self, arguments)\n        },\n        keypress: function () {\n          return self.onKeyPress.apply(self, arguments)\n        },\n        resize: function () {\n          self.positionDropdown.apply(self, [])\n        },\n        blur: function () {\n          return self.onBlur.apply(self, arguments)\n        },\n        focus: function () {\n          self.ignoreBlur = false\n          return self.onFocus.apply(self, arguments)\n        },\n        paste: function () {\n          return self.onPaste.apply(self, arguments)\n        }\n      })\n\n      $document.on('keydown' + eventNS, function (e) {\n        self.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey']\n        self.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey']\n        self.isShiftDown = e.shiftKey\n      })\n\n      $document.on('keyup' + eventNS, function (e) {\n        if (e.keyCode === KEY_CTRL) self.isCtrlDown = false\n        if (e.keyCode === KEY_SHIFT) self.isShiftDown = false\n        if (e.keyCode === KEY_CMD) self.isCmdDown = false\n      })\n\n      $document.on('mousedown' + eventNS, function (e) {\n        if (self.isFocused) {\n          // prevent events on the dropdown scrollbar from causing the control to blur\n          if (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n            return false\n          }\n          // blur on click outside\n          if (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n            self.blur(e.target)\n          }\n        }\n      })\n\n      $window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function () {\n        if (self.isOpen) {\n          self.positionDropdown.apply(self, arguments)\n        }\n      })\n      $window.on('mousemove' + eventNS, function () {\n        self.ignoreHover = false\n      })\n\n      // store original children and tab index so that they can be\n      // restored when the destroy() method is called.\n      this.revertSettings = {\n        $children: $input.children().detach(),\n        tabindex: $input.attr('tabindex')\n      }\n\n      $input\n        .attr('tabindex', -1)\n        .hide()\n        .after(self.$wrapper)\n\n      if ($.isArray(settings.items)) {\n        self.setValue(settings.items)\n        delete settings.items\n      }\n\n      // feature detect for the validation API\n      if (SUPPORTS_VALIDITY_API) {\n        $input.on('invalid' + eventNS, function (e) {\n          e.preventDefault()\n          self.isInvalid = true\n          self.refreshState()\n        })\n      }\n\n      self.updateOriginalInput()\n      self.refreshItems()\n      self.refreshState()\n      self.updatePlaceholder()\n      self.isSetup = true\n\n      if ($input.is(':disabled')) {\n        self.disable()\n      }\n\n      self.on('change', this.onChange)\n\n      $input.data('selectize', self)\n      $input.addClass('selectized')\n      self.trigger('initialize')\n      self.positionDropdown()\n      // preload options\n      if (settings.preload === true) {\n        self.onSearchChange('')\n      }\n    },\n\n    /**\n     * Sets up default rendering functions.\n     */\n    setupTemplates: function () {\n      var self = this\n      var field_label = self.settings.labelField\n      var field_optgroup = self.settings.optgroupLabelField\n\n      var templates = {\n        optgroup: function (data) {\n          return '<div class=\"optgroup\">' + data.html + '</div>'\n        },\n        optgroup_header: function (data, escape) {\n          return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>'\n        },\n        option: function (data, escape) {\n          return '<div class=\"option\">' + escape(data[field_label]) + '</div>'\n        },\n        item: function (data, escape) {\n          return '<div class=\"item\">' + escape(data[field_label]) + '</div>'\n        },\n        option_create: function (data, escape) {\n          return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>'\n        }\n      }\n\n      self.settings.render = $.extend({}, templates, self.settings.render)\n    },\n\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n    setupCallbacks: function () {\n      var key,\n        fn,\n        callbacks = {\n          initialize: 'onInitialize',\n          change: 'onChange',\n          item_add: 'onItemAdd',\n          item_remove: 'onItemRemove',\n          clear: 'onClear',\n          option_add: 'onOptionAdd',\n          option_remove: 'onOptionRemove',\n          option_clear: 'onOptionClear',\n          optgroup_add: 'onOptionGroupAdd',\n          optgroup_remove: 'onOptionGroupRemove',\n          optgroup_clear: 'onOptionGroupClear',\n          dropdown_open: 'onDropdownOpen',\n          dropdown_close: 'onDropdownClose',\n          type: 'onType',\n          load: 'onLoad',\n          focus: 'onFocus',\n          blur: 'onBlur'\n        }\n\n      for (key in callbacks) {\n        if (callbacks.hasOwnProperty(key)) {\n          fn = this.settings[callbacks[key]]\n          if (fn) this.on(key, fn)\n        }\n      }\n    },\n\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     * @param {object} e\n     * @return {boolean}\n     */\n    onClick: function (e) {\n      var self = this\n\n      // necessary for mobile webkit devices (manual focus triggering\n      // is ignored unless invoked within a click event)\n      if (!self.isFocused) {\n        self.focus()\n        e.preventDefault()\n      }\n    },\n\n    /**\n     * Triggered when the main control element\n     * has a mouse down event.\n     *\n     * @param {object} e\n     * @return {boolean}\n     */\n    onMouseDown: function (e) {\n      var self = this\n      var defaultPrevented = e.isDefaultPrevented()\n      var $target = $(e.target)\n\n      if (self.isFocused) {\n        // retain focus by preventing native handling. if the\n        // event target is the input it should not be modified.\n        // otherwise, text selection within the input won't work.\n        if (e.target !== self.$control_input[0]) {\n          if (self.settings.mode === 'single') {\n            // toggle dropdown\n            self.isOpen ? self.close() : self.open()\n          } else if (!defaultPrevented) {\n            self.setActiveItem(null)\n          }\n          return false\n        }\n      } else {\n        // give control focus\n        if (!defaultPrevented) {\n          window.setTimeout(function () {\n            self.focus()\n          }, 0)\n        }\n      }\n    },\n\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n    onChange: function () {\n      this.$input.trigger('change')\n    },\n\n    /**\n     * Triggered on <input> paste.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onPaste: function (e) {\n      var self = this\n      if (self.isFull() || self.isInputHidden || self.isLocked) {\n        e.preventDefault()\n      } else {\n        // If a regex or string is included, this will split the pasted\n        // input and create Items for each separate value\n        if (self.settings.splitOn) {\n          setTimeout(function () {\n            var splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn)\n            for (var i = 0, n = splitInput.length; i < n; i++) {\n              self.createItem(splitInput[i])\n            }\n          }, 0)\n        }\n      }\n    },\n\n    /**\n     * Triggered on <input> keypress.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyPress: function (e) {\n      if (this.isLocked) return e && e.preventDefault()\n      var character = String.fromCharCode(e.keyCode || e.which)\n      if (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n        this.createItem()\n        e.preventDefault()\n        return false\n      }\n    },\n\n    /**\n     * Triggered on <input> keydown.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyDown: function (e) {\n      var isInput = e.target === this.$control_input[0]\n      var self = this\n\n      if (self.isLocked) {\n        if (e.keyCode !== KEY_TAB) {\n          e.preventDefault()\n        }\n        return\n      }\n\n      switch (e.keyCode) {\n        case KEY_A:\n          if (self.isCmdDown) {\n            self.selectAll()\n            return\n          }\n          break\n        case KEY_ESC:\n          if (self.isOpen) {\n            e.preventDefault()\n            e.stopPropagation()\n            self.close()\n          }\n          return\n        case KEY_N:\n          if (!e.ctrlKey || e.altKey) break\n        case KEY_DOWN:\n          if (!self.isOpen && self.hasOptions) {\n            self.open()\n          } else if (self.$activeOption) {\n            self.ignoreHover = true\n            var $next = self.getAdjacentOption(self.$activeOption, 1)\n            if ($next.length) self.setActiveOption($next, true, true)\n          }\n          e.preventDefault()\n          return\n        case KEY_P:\n          if (!e.ctrlKey || e.altKey) break\n        case KEY_UP:\n          if (self.$activeOption) {\n            self.ignoreHover = true\n            var $prev = self.getAdjacentOption(self.$activeOption, -1)\n            if ($prev.length) self.setActiveOption($prev, true, true)\n          }\n          e.preventDefault()\n          return\n        case KEY_RETURN:\n          if (self.isOpen && self.$activeOption) {\n            self.onOptionSelect({ currentTarget: self.$activeOption })\n            e.preventDefault()\n          }\n          return\n        case KEY_LEFT:\n          self.advanceSelection(-1, e)\n          return\n        case KEY_RIGHT:\n          self.advanceSelection(1, e)\n          return\n        case KEY_TAB:\n          if (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n            self.onOptionSelect({ currentTarget: self.$activeOption })\n\n            // Default behaviour is to jump to the next field, we only want this\n            // if the current field doesn't accept any more entries\n            if (!self.isFull()) {\n              e.preventDefault()\n            }\n          }\n          if (self.settings.create && self.createItem()) {\n            e.preventDefault()\n          }\n          return\n        case KEY_BACKSPACE:\n        case KEY_DELETE:\n          self.deleteSelection(e)\n          return\n      }\n\n      if ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n        e.preventDefault()\n        return\n      }\n    },\n\n    /**\n     * Triggered on <input> keyup.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyUp: function (e) {\n      var self = this\n\n      if (self.isLocked) return e && e.preventDefault()\n      var value = self.$control_input.val() || ''\n      if (self.lastValue !== value) {\n        self.lastValue = value\n        self.onSearchChange(value)\n        self.refreshOptions()\n        self.trigger('type', value)\n      }\n    },\n\n    /**\n     * Invokes the user-provide option provider / loader.\n     *\n     * Note: this function is debounced in the Selectize\n     * constructor (by `settings.loadDelay` milliseconds)\n     *\n     * @param {string} value\n     */\n    onSearchChange: function (value) {\n      var self = this\n      var fn = self.settings.load\n      if (!fn) return\n      if (self.loadedSearches.hasOwnProperty(value)) return\n      self.loadedSearches[value] = true\n      self.load(function (callback) {\n        fn.apply(self, [value, callback])\n      })\n    },\n\n    /**\n     * Triggered on <input> focus.\n     *\n     * @param {object} e (optional)\n     * @returns {boolean}\n     */\n    onFocus: function (e) {\n      var self = this\n      var wasFocused = self.isFocused\n\n      if (self.isDisabled) {\n        self.blur()\n        e && e.preventDefault()\n        return false\n      }\n\n      if (self.ignoreFocus) return\n      self.isFocused = true\n      if (self.settings.preload === 'focus') self.onSearchChange('')\n\n      if (!wasFocused) self.trigger('focus')\n\n      if (!self.$activeItems.length) {\n        self.showInput()\n        self.setActiveItem(null)\n        self.refreshOptions(!!self.settings.openOnFocus)\n      }\n\n      self.refreshState()\n    },\n\n    /**\n     * Triggered on <input> blur.\n     *\n     * @param {object} e\n     * @param {Element} dest\n     */\n    onBlur: function (e, dest) {\n      var self = this\n      if (!self.isFocused) return\n      self.isFocused = false\n\n      if (self.ignoreFocus) {\n        return\n      } else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n        // necessary to prevent IE closing the dropdown when the scrollbar is clicked\n        self.ignoreBlur = true\n        self.onFocus(e)\n        return\n      }\n\n      var deactivate = function () {\n        self.close()\n        self.setTextboxValue('')\n        self.setActiveItem(null)\n        self.setActiveOption(null)\n        self.setCaret(self.items.length)\n        self.refreshState()\n\n        // IE11 bug: element still marked as active\n        ;(dest || document.body).focus()\n\n        self.ignoreFocus = false\n        self.trigger('blur')\n      }\n\n      self.ignoreFocus = true\n      if (self.settings.create && self.settings.createOnBlur) {\n        self.createItem(null, false, deactivate)\n      } else {\n        deactivate()\n      }\n    },\n\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onOptionHover: function (e) {\n      if (this.ignoreHover) return\n      this.setActiveOption(e.currentTarget, false)\n    },\n\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onOptionSelect: function (e) {\n      var value,\n        $target,\n        $option,\n        self = this\n\n      if (e.preventDefault) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      $target = $(e.currentTarget)\n      if ($target.hasClass('create')) {\n        self.createItem(null, function () {\n          if (self.settings.closeAfterSelect) {\n            self.close()\n          }\n        })\n      } else {\n        value = $target.attr('data-value')\n        if (typeof value !== 'undefined') {\n          self.lastQuery = null\n          self.setTextboxValue('')\n          self.addItem(value)\n          if (self.settings.closeAfterSelect) {\n            self.close()\n          } else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n            self.setActiveOption(self.getOption(value))\n          }\n        }\n      }\n    },\n\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onItemSelect: function (e) {\n      var self = this\n\n      if (self.isLocked) return\n      if (self.settings.mode === 'multi') {\n        e.preventDefault()\n        self.setActiveItem(e.currentTarget, e)\n      }\n    },\n\n    /**\n     * Invokes the provided method that provides\n     * results to a callback---which are then added\n     * as options to the control.\n     *\n     * @param {function} fn\n     */\n    load: function (fn) {\n      var self = this\n      var $wrapper = self.$wrapper.addClass(self.settings.loadingClass)\n\n      self.loading++\n      fn.apply(self, [\n        function (results) {\n          self.loading = Math.max(self.loading - 1, 0)\n          if (results && results.length) {\n            self.addOption(results)\n            self.refreshOptions(self.isFocused && !self.isInputHidden)\n          }\n          if (!self.loading) {\n            $wrapper.removeClass(self.settings.loadingClass)\n          }\n          self.trigger('load', results)\n        }\n      ])\n    },\n\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     * @param {string} value\n     */\n    setTextboxValue: function (value) {\n      var $input = this.$control_input\n      var changed = $input.val() !== value\n      if (changed) {\n        $input.val(value).triggerHandler('update')\n        this.lastValue = value\n      }\n    },\n\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     * @returns {mixed}\n     */\n    getValue: function () {\n      if (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n        return this.items\n      } else {\n        return this.items.join(this.settings.delimiter)\n      }\n    },\n\n    /**\n     * Resets the selected items to the given value.\n     *\n     * @param {mixed} value\n     */\n    setValue: function (value, silent) {\n      var events = silent ? [] : ['change']\n\n      debounce_events(this, events, function () {\n        this.clear(silent)\n        this.addItems(value, silent)\n      })\n    },\n\n    /**\n     * Sets the selected item.\n     *\n     * @param {object} $item\n     * @param {object} e (optional)\n     */\n    setActiveItem: function ($item, e) {\n      var self = this\n      var eventName\n      var i, idx, begin, end, item, swap\n      var $last\n\n      if (self.settings.mode === 'single') return\n      $item = $($item)\n\n      // clear the active selection\n      if (!$item.length) {\n        $(self.$activeItems).removeClass('active')\n        self.$activeItems = []\n        if (self.isFocused) {\n          self.showInput()\n        }\n        return\n      }\n\n      // modify selection\n      eventName = e && e.type.toLowerCase()\n\n      if (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n        $last = self.$control.children('.active:last')\n        begin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]])\n        end = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]])\n        if (begin > end) {\n          swap = begin\n          begin = end\n          end = swap\n        }\n        for (i = begin; i <= end; i++) {\n          item = self.$control[0].childNodes[i]\n          if (self.$activeItems.indexOf(item) === -1) {\n            $(item).addClass('active')\n            self.$activeItems.push(item)\n          }\n        }\n        e.preventDefault()\n      } else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n        if ($item.hasClass('active')) {\n          idx = self.$activeItems.indexOf($item[0])\n          self.$activeItems.splice(idx, 1)\n          $item.removeClass('active')\n        } else {\n          self.$activeItems.push($item.addClass('active')[0])\n        }\n      } else {\n        $(self.$activeItems).removeClass('active')\n        self.$activeItems = [$item.addClass('active')[0]]\n      }\n\n      // ensure control has focus\n      self.hideInput()\n      if (!this.isFocused) {\n        self.focus()\n      }\n    },\n\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     * @param {object} $object\n     * @param {boolean} scroll\n     * @param {boolean} animate\n     */\n    setActiveOption: function ($option, scroll, animate) {\n      var height_menu, height_item, y\n      var scroll_top, scroll_bottom\n      var self = this\n\n      if (self.$activeOption) self.$activeOption.removeClass('active')\n      self.$activeOption = null\n\n      $option = $($option)\n      if (!$option.length) return\n\n      self.$activeOption = $option.addClass('active')\n\n      if (scroll || !isset(scroll)) {\n        height_menu = self.$dropdown_content.height()\n        height_item = self.$activeOption.outerHeight(true)\n        scroll = self.$dropdown_content.scrollTop() || 0\n        y = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll\n        scroll_top = y\n        scroll_bottom = y - height_menu + height_item\n\n        if (y + height_item > height_menu + scroll) {\n          self.$dropdown_content\n            .stop()\n            .animate({ scrollTop: scroll_bottom }, animate ? self.settings.scrollDuration : 0)\n        } else if (y < scroll) {\n          self.$dropdown_content.stop().animate({ scrollTop: scroll_top }, animate ? self.settings.scrollDuration : 0)\n        }\n      }\n    },\n\n    /**\n     * Selects all items (CTRL + A).\n     */\n    selectAll: function () {\n      var self = this\n      if (self.settings.mode === 'single') return\n\n      self.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'))\n      if (self.$activeItems.length) {\n        self.hideInput()\n        self.close()\n      }\n      self.focus()\n    },\n\n    /**\n     * Hides the input element out of view, while\n     * retaining its focus.\n     */\n    hideInput: function () {\n      var self = this\n\n      self.setTextboxValue('')\n      self.$control_input.css({ opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000 })\n      self.isInputHidden = true\n    },\n\n    /**\n     * Restores input visibility.\n     */\n    showInput: function () {\n      this.$control_input.css({ opacity: 1, position: 'relative', left: 0 })\n      this.isInputHidden = false\n    },\n\n    /**\n     * Gives the control focus.\n     */\n    focus: function () {\n      var self = this\n      if (self.isDisabled) return\n\n      self.ignoreFocus = true\n      self.$control_input[0].focus()\n      window.setTimeout(function () {\n        self.ignoreFocus = false\n        self.onFocus()\n      }, 0)\n    },\n\n    /**\n     * Forces the control out of focus.\n     *\n     * @param {Element} dest\n     */\n    blur: function (dest) {\n      this.$control_input[0].blur()\n      this.onBlur(null, dest)\n    },\n\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @param {string} query\n     * @param {object} options\n     * @return {function}\n     */\n    getScoreFunction: function (query) {\n      return this.sifter.getScoreFunction(query, this.getSearchOptions())\n    },\n\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/brianreavis/sifter.js\n     * @return {object}\n     */\n    getSearchOptions: function () {\n      var settings = this.settings\n      var sort = settings.sortField\n      if (typeof sort === 'string') {\n        sort = [{ field: sort }]\n      }\n\n      return {\n        fields: settings.searchField,\n        conjunction: settings.searchConjunction,\n        sort: sort\n      }\n    },\n\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     * Returns an object containing:\n     *\n     *   - query {string}\n     *   - tokens {array}\n     *   - total {int}\n     *   - items {array}\n     *\n     * @param {string} query\n     * @returns {object}\n     */\n    search: function (query) {\n      var i, value, score, result, calculateScore\n      var self = this\n      var settings = self.settings\n      var options = this.getSearchOptions()\n\n      // validate user-provided result scoring function\n      if (settings.score) {\n        calculateScore = self.settings.score.apply(this, [query])\n        if (typeof calculateScore !== 'function') {\n          throw new Error('Selectize \"score\" setting must be a function that returns a function')\n        }\n      }\n\n      // perform search\n      if (query !== self.lastQuery) {\n        self.lastQuery = query\n        result = self.sifter.search(query, $.extend(options, { score: calculateScore }))\n        self.currentResults = result\n      } else {\n        result = $.extend(true, {}, self.currentResults)\n      }\n\n      // filter out selected items\n      if (settings.hideSelected) {\n        for (i = result.items.length - 1; i >= 0; i--) {\n          if (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n            result.items.splice(i, 1)\n          }\n        }\n      }\n\n      return result\n    },\n\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     * @param {boolean} triggerDropdown\n     */\n    refreshOptions: function (triggerDropdown) {\n      var i,\n        j,\n        k,\n        n,\n        groups,\n        groups_order,\n        option,\n        option_html,\n        optgroup,\n        optgroups,\n        html,\n        html_children,\n        has_create_option\n      var $active, $active_before, $create\n\n      if (typeof triggerDropdown === 'undefined') {\n        triggerDropdown = true\n      }\n\n      var self = this\n      var query = $.trim(self.$control_input.val())\n      var results = self.search(query)\n      var $dropdown_content = self.$dropdown_content\n      var active_before = self.$activeOption && hash_key(self.$activeOption.attr('data-value'))\n\n      // build markup\n      n = results.items.length\n      if (typeof self.settings.maxOptions === 'number') {\n        n = Math.min(n, self.settings.maxOptions)\n      }\n\n      // render and group available options individually\n      groups = {}\n      groups_order = []\n\n      for (i = 0; i < n; i++) {\n        option = self.options[results.items[i].id]\n        option_html = self.render('option', option)\n        optgroup = option[self.settings.optgroupField] || ''\n        optgroups = $.isArray(optgroup) ? optgroup : [optgroup]\n\n        for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n          optgroup = optgroups[j]\n          if (!self.optgroups.hasOwnProperty(optgroup)) {\n            optgroup = ''\n          }\n          if (!groups.hasOwnProperty(optgroup)) {\n            groups[optgroup] = []\n            groups_order.push(optgroup)\n          }\n          groups[optgroup].push(option_html)\n        }\n      }\n\n      // sort optgroups\n      if (this.settings.lockOptgroupOrder) {\n        groups_order.sort(function (a, b) {\n          var a_order = self.optgroups[a].$order || 0\n          var b_order = self.optgroups[b].$order || 0\n          return a_order - b_order\n        })\n      }\n\n      // render optgroup headers & join groups\n      html = []\n      for (i = 0, n = groups_order.length; i < n; i++) {\n        optgroup = groups_order[i]\n        if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n          // render the optgroup header and options within it,\n          // then pass it to the wrapper template\n          html_children = self.render('optgroup_header', self.optgroups[optgroup]) || ''\n          html_children += groups[optgroup].join('')\n          html.push(\n            self.render(\n              'optgroup',\n              $.extend({}, self.optgroups[optgroup], {\n                html: html_children\n              })\n            )\n          )\n        } else {\n          html.push(groups[optgroup].join(''))\n        }\n      }\n\n      $dropdown_content.html(html.join(''))\n\n      // highlight matching terms inline\n      if (self.settings.highlight && results.query.length && results.tokens.length) {\n        for (i = 0, n = results.tokens.length; i < n; i++) {\n          highlight($dropdown_content, results.tokens[i].regex)\n        }\n      }\n\n      // add \"selected\" class to selected options\n      if (!self.settings.hideSelected) {\n        for (i = 0, n = self.items.length; i < n; i++) {\n          self.getOption(self.items[i]).addClass('selected')\n        }\n      }\n\n      // add create option\n      has_create_option = self.canCreate(query)\n      if (has_create_option) {\n        $dropdown_content.prepend(self.render('option_create', { input: query }))\n        $create = $($dropdown_content[0].childNodes[0])\n      }\n\n      // activate\n      self.hasOptions = results.items.length > 0 || has_create_option\n      if (self.hasOptions) {\n        if (results.items.length > 0) {\n          $active_before = active_before && self.getOption(active_before)\n          if ($active_before && $active_before.length) {\n            $active = $active_before\n          } else if (self.settings.mode === 'single' && self.items.length) {\n            $active = self.getOption(self.items[0])\n          }\n          if (!$active || !$active.length) {\n            if ($create && !self.settings.addPrecedence) {\n              $active = self.getAdjacentOption($create, 1)\n            } else {\n              $active = $dropdown_content.find('[data-selectable]:first')\n            }\n          }\n        } else {\n          $active = $create\n        }\n        self.setActiveOption($active)\n        if (triggerDropdown && !self.isOpen) {\n          self.open()\n        }\n      } else {\n        self.setActiveOption(null)\n        if (triggerDropdown && self.isOpen) {\n          self.close()\n        }\n      }\n    },\n\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     * @param {object|array} data\n     */\n    addOption: function (data) {\n      var i,\n        n,\n        value,\n        self = this\n\n      if ($.isArray(data)) {\n        for (i = 0, n = data.length; i < n; i++) {\n          self.addOption(data[i])\n        }\n        return\n      }\n\n      if ((value = self.registerOption(data))) {\n        self.userOptions[value] = true\n        self.lastQuery = null\n        self.trigger('option_add', value, data)\n      }\n    },\n\n    /**\n     * Registers an option to the pool of options.\n     *\n     * @param {object} data\n     * @return {boolean|string}\n     */\n    registerOption: function (data) {\n      var key = hash_key(data[this.settings.valueField])\n      if (!key || this.options.hasOwnProperty(key)) return false\n      data.$order = data.$order || ++this.order\n      this.options[key] = data\n      return key\n    },\n\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @param {object} data\n     * @return {boolean|string}\n     */\n    registerOptionGroup: function (data) {\n      var key = hash_key(data[this.settings.optgroupValueField])\n      if (!key) return false\n\n      data.$order = data.$order || ++this.order\n      this.optgroups[key] = data\n      return key\n    },\n\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     * @param {string} id\n     * @param {object} data\n     */\n    addOptionGroup: function (id, data) {\n      data[this.settings.optgroupValueField] = id\n      if ((id = this.registerOptionGroup(data))) {\n        this.trigger('optgroup_add', id, data)\n      }\n    },\n\n    /**\n     * Removes an existing option group.\n     *\n     * @param {string} id\n     */\n    removeOptionGroup: function (id) {\n      if (this.optgroups.hasOwnProperty(id)) {\n        delete this.optgroups[id]\n        this.renderCache = {}\n        this.trigger('optgroup_remove', id)\n      }\n    },\n\n    /**\n     * Clears all existing option groups.\n     */\n    clearOptionGroups: function () {\n      this.optgroups = {}\n      this.renderCache = {}\n      this.trigger('optgroup_clear')\n    },\n\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     * @param {string} value\n     * @param {object} data\n     */\n    updateOption: function (value, data) {\n      var self = this\n      var $item, $item_new\n      var value_new, index_item, cache_items, cache_options, order_old\n\n      value = hash_key(value)\n      value_new = hash_key(data[self.settings.valueField])\n\n      // sanity checks\n      if (value === null) return\n      if (!self.options.hasOwnProperty(value)) return\n      if (typeof value_new !== 'string') throw new Error('Value must be set in option data')\n\n      order_old = self.options[value].$order\n\n      // update references\n      if (value_new !== value) {\n        delete self.options[value]\n        index_item = self.items.indexOf(value)\n        if (index_item !== -1) {\n          self.items.splice(index_item, 1, value_new)\n        }\n      }\n      data.$order = data.$order || order_old\n      self.options[value_new] = data\n\n      // invalidate render cache\n      cache_items = self.renderCache['item']\n      cache_options = self.renderCache['option']\n\n      if (cache_items) {\n        delete cache_items[value]\n        delete cache_items[value_new]\n      }\n      if (cache_options) {\n        delete cache_options[value]\n        delete cache_options[value_new]\n      }\n\n      // update the item if it's selected\n      if (self.items.indexOf(value_new) !== -1) {\n        $item = self.getItem(value)\n        $item_new = $(self.render('item', data))\n        if ($item.hasClass('active')) $item_new.addClass('active')\n        $item.replaceWith($item_new)\n      }\n\n      // invalidate last query because we might have updated the sortField\n      self.lastQuery = null\n\n      // update dropdown contents\n      if (self.isOpen) {\n        self.refreshOptions(false)\n      }\n    },\n\n    /**\n     * Removes a single option.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    removeOption: function (value, silent) {\n      var self = this\n      value = hash_key(value)\n\n      var cache_items = self.renderCache['item']\n      var cache_options = self.renderCache['option']\n      if (cache_items) delete cache_items[value]\n      if (cache_options) delete cache_options[value]\n\n      delete self.userOptions[value]\n      delete self.options[value]\n      self.lastQuery = null\n      self.trigger('option_remove', value)\n      self.removeItem(value, silent)\n    },\n\n    /**\n     * Clears all options.\n     */\n    clearOptions: function () {\n      var self = this\n\n      self.loadedSearches = {}\n      self.userOptions = {}\n      self.renderCache = {}\n      self.options = self.sifter.items = {}\n      self.lastQuery = null\n      self.trigger('option_clear')\n      self.clear()\n    },\n\n    /**\n     * Returns the jQuery element of the option\n     * matching the given value.\n     *\n     * @param {string} value\n     * @returns {object}\n     */\n    getOption: function (value) {\n      return this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'))\n    },\n\n    /**\n     * Returns the jQuery element of the next or\n     * previous selectable option.\n     *\n     * @param {object} $option\n     * @param {int} direction  can be 1 for next or -1 for previous\n     * @return {object}\n     */\n    getAdjacentOption: function ($option, direction) {\n      var $options = this.$dropdown.find('[data-selectable]')\n      var index = $options.index($option) + direction\n\n      return index >= 0 && index < $options.length ? $options.eq(index) : $()\n    },\n\n    /**\n     * Finds the first element with a \"data-value\" attribute\n     * that matches the given value.\n     *\n     * @param {mixed} value\n     * @param {object} $els\n     * @return {object}\n     */\n    getElementWithValue: function (value, $els) {\n      value = hash_key(value)\n\n      if (typeof value !== 'undefined' && value !== null) {\n        for (var i = 0, n = $els.length; i < n; i++) {\n          if ($els[i].getAttribute('data-value') === value) {\n            return $($els[i])\n          }\n        }\n      }\n\n      return $()\n    },\n\n    /**\n     * Returns the jQuery element of the item\n     * matching the given value.\n     *\n     * @param {string} value\n     * @returns {object}\n     */\n    getItem: function (value) {\n      return this.getElementWithValue(value, this.$control.children())\n    },\n\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    addItems: function (values, silent) {\n      var items = $.isArray(values) ? values : [values]\n      for (var i = 0, n = items.length; i < n; i++) {\n        this.isPending = i < n - 1\n        this.addItem(items[i], silent)\n      }\n    },\n\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    addItem: function (value, silent) {\n      var events = silent ? [] : ['change']\n\n      debounce_events(this, events, function () {\n        var $item, $option, $options\n        var self = this\n        var inputMode = self.settings.mode\n        var i, active, value_next, wasFull\n        value = hash_key(value)\n\n        if (self.items.indexOf(value) !== -1) {\n          if (inputMode === 'single') self.close()\n          return\n        }\n\n        if (!self.options.hasOwnProperty(value)) return\n        if (inputMode === 'single') self.clear(silent)\n        if (inputMode === 'multi' && self.isFull()) return\n\n        $item = $(self.render('item', self.options[value]))\n        wasFull = self.isFull()\n        self.items.splice(self.caretPos, 0, value)\n        self.insertAtCaret($item)\n        if (!self.isPending || (!wasFull && self.isFull())) {\n          self.refreshState()\n        }\n\n        if (self.isSetup) {\n          $options = self.$dropdown_content.find('[data-selectable]')\n\n          // update menu / remove the option (if this is not one item being added as part of series)\n          if (!self.isPending) {\n            $option = self.getOption(value)\n            value_next = self.getAdjacentOption($option, 1).attr('data-value')\n            self.refreshOptions(self.isFocused && inputMode !== 'single')\n            if (value_next) {\n              self.setActiveOption(self.getOption(value_next))\n            }\n          }\n\n          // hide the menu if the maximum number of items have been selected or no options are left\n          if (!$options.length || self.isFull()) {\n            self.close()\n          } else {\n            self.positionDropdown()\n          }\n\n          self.updatePlaceholder()\n          self.trigger('item_add', value, $item)\n          self.updateOriginalInput({ silent: silent })\n        }\n      })\n    },\n\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     * @param {string} value\n     */\n    removeItem: function (value, silent) {\n      var self = this\n      var $item, i, idx\n\n      $item = typeof value === 'object' ? value : self.getItem(value)\n      value = hash_key($item.attr('data-value'))\n      i = self.items.indexOf(value)\n\n      if (i !== -1) {\n        $item.remove()\n        if ($item.hasClass('active')) {\n          idx = self.$activeItems.indexOf($item[0])\n          self.$activeItems.splice(idx, 1)\n        }\n\n        self.items.splice(i, 1)\n        self.lastQuery = null\n        if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n          self.removeOption(value, silent)\n        }\n\n        if (i < self.caretPos) {\n          self.setCaret(self.caretPos - 1)\n        }\n\n        self.refreshState()\n        self.updatePlaceholder()\n        self.updateOriginalInput({ silent: silent })\n        self.positionDropdown()\n        self.trigger('item_remove', value, $item)\n      }\n    },\n\n    /**\n     * Invokes the `create` method provided in the\n     * selectize options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     * @param {string} value\n     * @param {boolean} [triggerDropdown]\n     * @param {function} [callback]\n     * @return {boolean}\n     */\n    createItem: function (input, triggerDropdown) {\n      var self = this\n      var caret = self.caretPos\n      input = input || $.trim(self.$control_input.val() || '')\n\n      var callback = arguments[arguments.length - 1]\n      if (typeof callback !== 'function') callback = function () {}\n\n      if (typeof triggerDropdown !== 'boolean') {\n        triggerDropdown = true\n      }\n\n      if (!self.canCreate(input)) {\n        callback()\n        return false\n      }\n\n      self.lock()\n\n      var setup =\n        typeof self.settings.create === 'function'\n          ? this.settings.create\n          : function (input) {\n              var data = {}\n              data[self.settings.labelField] = input\n              data[self.settings.valueField] = input\n              return data\n            }\n\n      var create = once(function (data) {\n        self.unlock()\n\n        if (!data || typeof data !== 'object') return callback()\n        var value = hash_key(data[self.settings.valueField])\n        if (typeof value !== 'string') return callback()\n\n        self.setTextboxValue('')\n        self.addOption(data)\n        self.setCaret(caret)\n        self.addItem(value)\n        self.refreshOptions(triggerDropdown && self.settings.mode !== 'single')\n        callback(data)\n      })\n\n      var output = setup.apply(this, [input, create])\n      if (typeof output !== 'undefined') {\n        create(output)\n      }\n\n      return true\n    },\n\n    /**\n     * Re-renders the selected item lists.\n     */\n    refreshItems: function () {\n      this.lastQuery = null\n\n      if (this.isSetup) {\n        this.addItem(this.items)\n      }\n\n      this.refreshState()\n      this.updateOriginalInput()\n    },\n\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n    refreshState: function () {\n      var invalid,\n        self = this\n      if (self.isRequired) {\n        if (self.items.length) self.isInvalid = false\n        self.$control_input.prop('required', invalid)\n      }\n      self.refreshClasses()\n    },\n\n    /**\n     * Updates all state-dependent CSS classes.\n     */\n    refreshClasses: function () {\n      var self = this\n      var isFull = self.isFull()\n      var isLocked = self.isLocked\n\n      self.$wrapper.toggleClass('rtl', self.rtl)\n\n      self.$control\n        .toggleClass('focus', self.isFocused)\n        .toggleClass('disabled', self.isDisabled)\n        .toggleClass('required', self.isRequired)\n        .toggleClass('invalid', self.isInvalid)\n        .toggleClass('locked', isLocked)\n        .toggleClass('full', isFull)\n        .toggleClass('not-full', !isFull)\n        .toggleClass('input-active', self.isFocused && !self.isInputHidden)\n        .toggleClass('dropdown-active', self.isOpen)\n        .toggleClass('has-options', !$.isEmptyObject(self.options))\n        .toggleClass('has-items', self.items.length > 0)\n\n      self.$control_input.data('grow', !isFull && !isLocked)\n    },\n\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n    isFull: function () {\n      return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems\n    },\n\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     */\n    updateOriginalInput: function (opts) {\n      var i,\n        n,\n        options,\n        label,\n        self = this\n      opts = opts || {}\n\n      if (self.tagType === TAG_SELECT) {\n        options = []\n        for (i = 0, n = self.items.length; i < n; i++) {\n          label = self.options[self.items[i]][self.settings.labelField] || ''\n          options.push(\n            '<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>'\n          )\n        }\n        if (!options.length && !this.$input.attr('multiple')) {\n          options.push('<option value=\"\" selected=\"selected\"></option>')\n        }\n        self.$input.html(options.join(''))\n      } else {\n        self.$input.val(self.getValue())\n        self.$input.attr('value', self.$input.val())\n      }\n\n      if (self.isSetup) {\n        if (!opts.silent) {\n          self.trigger('change', self.$input.val())\n        }\n      }\n    },\n\n    /**\n     * Shows/hide the input placeholder depending\n     * on if there items in the list already.\n     */\n    updatePlaceholder: function () {\n      if (!this.settings.placeholder) return\n      var $input = this.$control_input\n\n      if (this.items.length) {\n        $input.removeAttr('placeholder')\n      } else {\n        $input.attr('placeholder', this.settings.placeholder)\n      }\n      $input.triggerHandler('update', { force: true })\n    },\n\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n    open: function () {\n      var self = this\n\n      if (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return\n      self.focus()\n      self.isOpen = true\n      self.refreshState()\n      self.$dropdown.css({ visibility: 'hidden', display: 'block' })\n      self.positionDropdown()\n      self.positionDropdown()\n      self.$dropdown.css({ visibility: 'visible' })\n      self.trigger('dropdown_open', self.$dropdown)\n    },\n\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n    close: function () {\n      var self = this\n      var trigger = self.isOpen\n\n      if (self.settings.mode === 'single' && self.items.length) {\n        self.hideInput()\n      }\n\n      self.isOpen = false\n      self.$dropdown.hide()\n      self.setActiveOption(null)\n      self.refreshState()\n\n      if (trigger) self.trigger('dropdown_close', self.$dropdown)\n    },\n\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown.\n     */\n    positionDropdown: function () {\n      var $control = this.$control\n      var offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position()\n      offset.top += $control.outerHeight(true)\n\n      this.$dropdown.css({\n        width: $control.outerWidth(),\n        top: offset.top,\n        left: offset.left\n      })\n    },\n\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     * @param {boolean} silent\n     */\n    clear: function (silent) {\n      var self = this\n\n      if (!self.items.length) return\n      self.$control.children(':not(input)').remove()\n      self.items = []\n      self.lastQuery = null\n      self.setCaret(0)\n      self.setActiveItem(null)\n      self.updatePlaceholder()\n      self.updateOriginalInput({ silent: silent })\n      self.refreshState()\n      self.showInput()\n      self.trigger('clear')\n    },\n\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     * @param {object} $el\n     */\n    insertAtCaret: function ($el) {\n      var caret = Math.min(this.caretPos, this.items.length)\n      if (caret === 0) {\n        this.$control.prepend($el)\n      } else {\n        $(this.$control[0].childNodes[caret]).before($el)\n      }\n      this.setCaret(caret + 1)\n    },\n\n    /**\n     * Removes the current selected item(s).\n     *\n     * @param {object} e (optional)\n     * @returns {boolean}\n     */\n    deleteSelection: function (e) {\n      var i, n, direction, selection, values, caret, option_select, $option_select, $tail\n      var self = this\n\n      direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1\n      selection = getSelection(self.$control_input[0])\n\n      if (self.$activeOption && !self.settings.hideSelected) {\n        option_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value')\n      }\n\n      // determine items that will be removed\n      values = []\n\n      if (self.$activeItems.length) {\n        $tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'))\n        caret = self.$control.children(':not(input)').index($tail)\n        if (direction > 0) {\n          caret++\n        }\n\n        for (i = 0, n = self.$activeItems.length; i < n; i++) {\n          values.push($(self.$activeItems[i]).attr('data-value'))\n        }\n        if (e) {\n          e.preventDefault()\n          e.stopPropagation()\n        }\n      } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n        if (direction < 0 && selection.start === 0 && selection.length === 0) {\n          values.push(self.items[self.caretPos - 1])\n        } else if (direction > 0 && selection.start === self.$control_input.val().length) {\n          values.push(self.items[self.caretPos])\n        }\n      }\n\n      // allow the callback to abort\n      if (\n        !values.length ||\n        (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)\n      ) {\n        return false\n      }\n\n      // perform removal\n      if (typeof caret !== 'undefined') {\n        self.setCaret(caret)\n      }\n      while (values.length) {\n        self.removeItem(values.pop())\n      }\n\n      self.showInput()\n      self.positionDropdown()\n      self.refreshOptions(true)\n\n      // select previous option\n      if (option_select) {\n        $option_select = self.getOption(option_select)\n        if ($option_select.length) {\n          self.setActiveOption($option_select)\n        }\n      }\n\n      return true\n    },\n\n    /**\n     * Selects the previous / next item (depending\n     * on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     * @param {int} direction\n     * @param {object} e (optional)\n     */\n    advanceSelection: function (direction, e) {\n      var tail, selection, idx, valueLength, cursorAtEdge, $tail\n      var self = this\n\n      if (direction === 0) return\n      if (self.rtl) direction *= -1\n\n      tail = direction > 0 ? 'last' : 'first'\n      selection = getSelection(self.$control_input[0])\n\n      if (self.isFocused && !self.isInputHidden) {\n        valueLength = self.$control_input.val().length\n        cursorAtEdge = direction < 0 ? selection.start === 0 && selection.length === 0 : selection.start === valueLength\n\n        if (cursorAtEdge && !valueLength) {\n          self.advanceCaret(direction, e)\n        }\n      } else {\n        $tail = self.$control.children('.active:' + tail)\n        if ($tail.length) {\n          idx = self.$control.children(':not(input)').index($tail)\n          self.setActiveItem(null)\n          self.setCaret(direction > 0 ? idx + 1 : idx)\n        }\n      }\n    },\n\n    /**\n     * Moves the caret left / right.\n     *\n     * @param {int} direction\n     * @param {object} e (optional)\n     */\n    advanceCaret: function (direction, e) {\n      var self = this,\n        fn,\n        $adj\n\n      if (direction === 0) return\n\n      fn = direction > 0 ? 'next' : 'prev'\n      if (self.isShiftDown) {\n        $adj = self.$control_input[fn]()\n        if ($adj.length) {\n          self.hideInput()\n          self.setActiveItem($adj)\n          e && e.preventDefault()\n        }\n      } else {\n        self.setCaret(self.caretPos + direction)\n      }\n    },\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * @param {int} i\n     */\n    setCaret: function (i) {\n      var self = this\n\n      if (self.settings.mode === 'single') {\n        i = self.items.length\n      } else {\n        i = Math.max(0, Math.min(self.items.length, i))\n      }\n\n      if (!self.isPending) {\n        // the input must be moved by leaving it in place and moving the\n        // siblings, due to the fact that focus cannot be restored once lost\n        // on mobile webkit devices\n        var j, n, fn, $children, $child\n        $children = self.$control.children(':not(input)')\n        for (j = 0, n = $children.length; j < n; j++) {\n          $child = $($children[j]).detach()\n          if (j < i) {\n            self.$control_input.before($child)\n          } else {\n            self.$control.append($child)\n          }\n        }\n      }\n\n      self.caretPos = i\n    },\n\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n    lock: function () {\n      this.close()\n      this.isLocked = true\n      this.refreshState()\n    },\n\n    /**\n     * Re-enables user input on the control.\n     */\n    unlock: function () {\n      this.isLocked = false\n      this.refreshState()\n    },\n\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n    disable: function () {\n      var self = this\n      self.$input.prop('disabled', true)\n      self.$control_input.prop('disabled', true).prop('tabindex', -1)\n      self.isDisabled = true\n      self.lock()\n    },\n\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n    enable: function () {\n      var self = this\n      self.$input.prop('disabled', false)\n      self.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex)\n      self.isDisabled = false\n      self.unlock()\n    },\n\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n    destroy: function () {\n      var self = this\n      var eventNS = self.eventNS\n      var revertSettings = self.revertSettings\n\n      self.trigger('destroy')\n      self.off()\n      self.$wrapper.remove()\n      self.$dropdown.remove()\n\n      self.$input\n        .html('')\n        .append(revertSettings.$children)\n        .removeAttr('tabindex')\n        .removeClass('selectized')\n        .attr({ tabindex: revertSettings.tabindex })\n        .show()\n\n      self.$control_input.removeData('grow')\n      self.$input.removeData('selectize')\n\n      $(window).off(eventNS)\n      $(document).off(eventNS)\n      $(document.body).off(eventNS)\n\n      delete self.$input[0].selectize\n    },\n\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     * @param {string} templateName\n     * @param {object} data\n     * @returns {string}\n     */\n    render: function (templateName, data) {\n      var value, id, label\n      var html = ''\n      var cache = false\n      var self = this\n      var regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i\n\n      if (templateName === 'option' || templateName === 'item') {\n        value = hash_key(data[self.settings.valueField])\n        cache = !!value\n      }\n\n      // pull markup from cache if it exists\n      if (cache) {\n        if (!isset(self.renderCache[templateName])) {\n          self.renderCache[templateName] = {}\n        }\n        if (self.renderCache[templateName].hasOwnProperty(value)) {\n          return self.renderCache[templateName][value]\n        }\n      }\n\n      // render markup\n      html = self.settings.render[templateName].apply(this, [data, escape_html])\n\n      // add mandatory attributes\n      if (templateName === 'option' || templateName === 'option_create') {\n        html = html.replace(regex_tag, '<$1 data-selectable')\n      }\n      if (templateName === 'optgroup') {\n        id = data[self.settings.optgroupValueField] || ''\n        html = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"')\n      }\n      if (templateName === 'option' || templateName === 'item') {\n        html = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"')\n      }\n\n      // update cache\n      if (cache) {\n        self.renderCache[templateName][value] = html\n      }\n\n      return html\n    },\n\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     * @param {string} templateName\n     */\n    clearCache: function (templateName) {\n      var self = this\n      if (typeof templateName === 'undefined') {\n        self.renderCache = {}\n      } else {\n        delete self.renderCache[templateName]\n      }\n    },\n\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     * @param {string} input\n     * @return {boolean}\n     */\n    canCreate: function (input) {\n      var self = this\n      if (!self.settings.create) return false\n      var filter = self.settings.createFilter\n      return (\n        input.length &&\n        (typeof filter !== 'function' || filter.apply(self, [input])) &&\n        (typeof filter !== 'string' || new RegExp(filter).test(input)) &&\n        (!(filter instanceof RegExp) || filter.test(input))\n      )\n    }\n  })\n\n  Selectize.count = 0\n  Selectize.defaults = {\n    options: [],\n    optgroups: [],\n\n    plugins: [],\n    delimiter: ',',\n    splitOn: null, // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: false,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    maxOptions: 1000,\n    maxItems: null,\n    hideSelected: null,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: false,\n    allowEmptyOption: false,\n    closeAfterSelect: false,\n\n    scrollDuration: 60,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n\n    dataAttr: 'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n\n    mode: null,\n    wrapperClass: 'selectize-control',\n    inputClass: 'selectize-input',\n    dropdownClass: 'selectize-dropdown',\n    dropdownContentClass: 'selectize-dropdown-content',\n\n    dropdownParent: null,\n\n    copyClassesToDropdown: true,\n\n    /*\n         load                 : null, // function(query, callback) { ... }\n         score                : null, // function(search) { ... }\n         onInitialize         : null, // function() { ... }\n         onChange             : null, // function(value) { ... }\n         onItemAdd            : null, // function(value, $item) { ... }\n         onItemRemove         : null, // function(value) { ... }\n         onClear              : null, // function() { ... }\n         onOptionAdd          : null, // function(value, data) { ... }\n         onOptionRemove       : null, // function(value) { ... }\n         onOptionClear        : null, // function() { ... }\n         onOptionGroupAdd     : null, // function(id, data) { ... }\n         onOptionGroupRemove  : null, // function(id) { ... }\n         onOptionGroupClear   : null, // function() { ... }\n         onDropdownOpen       : null, // function($dropdown) { ... }\n         onDropdownClose      : null, // function($dropdown) { ... }\n         onType               : null, // function(str) { ... }\n         onDelete             : null, // function(values) { ... }\n         */\n\n    render: {\n      /*\n             item: null,\n             optgroup: null,\n             optgroup_header: null,\n             option: null,\n             option_create: null\n             */\n    }\n  }\n\n  $.fn.selectize = function (settings_user) {\n    var defaults = $.fn.selectize.defaults\n    var settings = $.extend({}, defaults, settings_user)\n    var attr_data = settings.dataAttr\n    var field_label = settings.labelField\n    var field_value = settings.valueField\n    var field_optgroup = settings.optgroupField\n    var field_optgroup_label = settings.optgroupLabelField\n    var field_optgroup_value = settings.optgroupValueField\n\n    /**\n     * Initializes selectize from a <input type=\"text\"> element.\n     *\n     * @param {object} $input\n     * @param {object} settings_element\n     */\n    var init_textbox = function ($input, settings_element) {\n      var i, n, values, option\n\n      var data_raw = $input.attr(attr_data)\n\n      if (!data_raw) {\n        var value = $.trim($input.val() || '')\n        if (!settings.allowEmptyOption && !value.length) return\n        values = value.split(settings.delimiter)\n        for (i = 0, n = values.length; i < n; i++) {\n          option = {}\n          option[field_label] = values[i]\n          option[field_value] = values[i]\n          settings_element.options.push(option)\n        }\n        settings_element.items = values\n      } else {\n        settings_element.options = JSON.parse(data_raw)\n        for (i = 0, n = settings_element.options.length; i < n; i++) {\n          settings_element.items.push(settings_element.options[i][field_value])\n        }\n      }\n    }\n\n    /**\n     * Initializes selectize from a <select> element.\n     *\n     * @param {object} $input\n     * @param {object} settings_element\n     */\n    var init_select = function ($input, settings_element) {\n      var i,\n        n,\n        tagName,\n        $children,\n        order = 0\n      var options = settings_element.options\n      var optionsMap = {}\n\n      var readData = function ($el) {\n        var data = attr_data && $el.attr(attr_data)\n        if (typeof data === 'string' && data.length) {\n          return JSON.parse(data)\n        }\n        return null\n      }\n\n      var addOption = function ($option, group) {\n        $option = $($option)\n\n        var value = hash_key($option.attr('value'))\n        if (!value && !settings.allowEmptyOption) return\n\n        // if the option already exists, it's probably been\n        // duplicated in another optgroup. in this case, push\n        // the current group to the \"optgroup\" property on the\n        // existing option so that it's rendered in both places.\n        if (optionsMap.hasOwnProperty(value)) {\n          if (group) {\n            var arr = optionsMap[value][field_optgroup]\n            if (!arr) {\n              optionsMap[value][field_optgroup] = group\n            } else if (!$.isArray(arr)) {\n              optionsMap[value][field_optgroup] = [arr, group]\n            } else {\n              arr.push(group)\n            }\n          }\n          return\n        }\n\n        var option = readData($option) || {}\n        option[field_label] = option[field_label] || $option.text()\n        option[field_value] = option[field_value] || value\n        option[field_optgroup] = option[field_optgroup] || group\n\n        optionsMap[value] = option\n        options.push(option)\n\n        if ($option.is(':selected')) {\n          settings_element.items.push(value)\n        }\n      }\n\n      var addGroup = function ($optgroup) {\n        var i, n, id, optgroup, $options\n\n        $optgroup = $($optgroup)\n        id = $optgroup.attr('label')\n\n        if (id) {\n          optgroup = readData($optgroup) || {}\n          optgroup[field_optgroup_label] = id\n          optgroup[field_optgroup_value] = id\n          settings_element.optgroups.push(optgroup)\n        }\n\n        $options = $('option', $optgroup)\n        for (i = 0, n = $options.length; i < n; i++) {\n          addOption($options[i], id)\n        }\n      }\n\n      settings_element.maxItems = $input.attr('multiple') ? null : 1\n\n      $children = $input.children()\n      for (i = 0, n = $children.length; i < n; i++) {\n        tagName = $children[i].tagName.toLowerCase()\n        if (tagName === 'optgroup') {\n          addGroup($children[i])\n        } else if (tagName === 'option') {\n          addOption($children[i])\n        }\n      }\n    }\n\n    return this.each(function () {\n      if (this.selectize) return\n\n      var instance\n      var $input = $(this)\n      var tag_name = this.tagName.toLowerCase()\n      var placeholder = $input.attr('placeholder') || $input.attr('data-placeholder')\n      if (!placeholder && !settings.allowEmptyOption) {\n        placeholder = $input.children('option[value=\"\"]').text()\n      }\n\n      var settings_element = {\n        placeholder: placeholder,\n        options: [],\n        optgroups: [],\n        items: []\n      }\n\n      if (tag_name === 'select') {\n        init_select($input, settings_element)\n      } else {\n        init_textbox($input, settings_element)\n      }\n\n      instance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user))\n    })\n  }\n\n  $.fn.selectize.defaults = Selectize.defaults\n  $.fn.selectize.support = {\n    validity: SUPPORTS_VALIDITY_API\n  }\n\n  Selectize.define('drag_drop', function (options) {\n    if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".')\n    if (this.settings.mode !== 'multi') return\n    var self = this\n\n    self.lock = (function () {\n      var original = self.lock\n      return function () {\n        var sortable = self.$control.data('sortable')\n        if (sortable) sortable.disable()\n        return original.apply(self, arguments)\n      }\n    })()\n\n    self.unlock = (function () {\n      var original = self.unlock\n      return function () {\n        var sortable = self.$control.data('sortable')\n        if (sortable) sortable.enable()\n        return original.apply(self, arguments)\n      }\n    })()\n\n    self.setup = (function () {\n      var original = self.setup\n      return function () {\n        original.apply(this, arguments)\n\n        var $control = self.$control.sortable({\n          items: '[data-value]',\n          forcePlaceholderSize: true,\n          disabled: self.isLocked,\n          start: function (e, ui) {\n            ui.placeholder.css('width', ui.helper.css('width'))\n            $control.css({ overflow: 'visible' })\n          },\n          stop: function () {\n            $control.css({ overflow: 'hidden' })\n            var active = self.$activeItems ? self.$activeItems.slice() : null\n            var values = []\n            $control.children('[data-value]').each(function () {\n              values.push($(this).attr('data-value'))\n            })\n            self.setValue(values)\n            self.setActiveItem(active)\n          }\n        })\n      }\n    })()\n  })\n\n  Selectize.define('dropdown_header', function (options) {\n    var self = this\n\n    options = $.extend(\n      {\n        title: 'Untitled',\n        headerClass: 'selectize-dropdown-header',\n        titleRowClass: 'selectize-dropdown-header-title',\n        labelClass: 'selectize-dropdown-header-label',\n        closeClass: 'selectize-dropdown-header-close',\n\n        html: function (data) {\n          return (\n            '<div class=\"' +\n            data.headerClass +\n            '\">' +\n            '<div class=\"' +\n            data.titleRowClass +\n            '\">' +\n            '<span class=\"' +\n            data.labelClass +\n            '\">' +\n            data.title +\n            '</span>' +\n            '<a href=\"javascript:void(0)\" class=\"' +\n            data.closeClass +\n            '\">&times;</a>' +\n            '</div>' +\n            '</div>'\n          )\n        }\n      },\n      options\n    )\n\n    self.setup = (function () {\n      var original = self.setup\n      return function () {\n        original.apply(self, arguments)\n        self.$dropdown_header = $(options.html(options))\n        self.$dropdown.prepend(self.$dropdown_header)\n      }\n    })()\n  })\n\n  Selectize.define('optgroup_columns', function (options) {\n    var self = this\n\n    options = $.extend(\n      {\n        equalizeWidth: true,\n        equalizeHeight: true\n      },\n      options\n    )\n\n    this.getAdjacentOption = function ($option, direction) {\n      var $options = $option.closest('[data-group]').find('[data-selectable]')\n      var index = $options.index($option) + direction\n\n      return index >= 0 && index < $options.length ? $options.eq(index) : $()\n    }\n\n    this.onKeyDown = (function () {\n      var original = self.onKeyDown\n      return function (e) {\n        var index, $option, $options, $optgroup\n\n        if (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n          self.ignoreHover = true\n          $optgroup = this.$activeOption.closest('[data-group]')\n          index = $optgroup.find('[data-selectable]').index(this.$activeOption)\n\n          if (e.keyCode === KEY_LEFT) {\n            $optgroup = $optgroup.prev('[data-group]')\n          } else {\n            $optgroup = $optgroup.next('[data-group]')\n          }\n\n          $options = $optgroup.find('[data-selectable]')\n          $option = $options.eq(Math.min($options.length - 1, index))\n          if ($option.length) {\n            this.setActiveOption($option)\n          }\n          return\n        }\n\n        return original.apply(this, arguments)\n      }\n    })()\n\n    var getScrollbarWidth = function () {\n      var div\n      var width = getScrollbarWidth.width\n      var doc = document\n\n      if (typeof width === 'undefined') {\n        div = doc.createElement('div')\n        div.innerHTML =\n          '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>'\n        div = div.firstChild\n        doc.body.appendChild(div)\n        width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth\n        doc.body.removeChild(div)\n      }\n      return width\n    }\n\n    var equalizeSizes = function () {\n      var i, n, height_max, width, width_last, width_parent, $optgroups\n\n      $optgroups = $('[data-group]', self.$dropdown_content)\n      n = $optgroups.length\n      if (!n || !self.$dropdown_content.width()) return\n\n      if (options.equalizeHeight) {\n        height_max = 0\n        for (i = 0; i < n; i++) {\n          height_max = Math.max(height_max, $optgroups.eq(i).height())\n        }\n        $optgroups.css({ height: height_max })\n      }\n\n      if (options.equalizeWidth) {\n        width_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth()\n        width = Math.round(width_parent / n)\n        $optgroups.css({ width: width })\n        if (n > 1) {\n          width_last = width_parent - width * (n - 1)\n          $optgroups.eq(n - 1).css({ width: width_last })\n        }\n      }\n    }\n\n    if (options.equalizeHeight || options.equalizeWidth) {\n      hook.after(this, 'positionDropdown', equalizeSizes)\n      hook.after(this, 'refreshOptions', equalizeSizes)\n    }\n  })\n\n  Selectize.define('remove_button', function (options) {\n    if (this.settings.mode === 'single') return\n\n    options = $.extend(\n      {\n        label: '&times;',\n        title: 'Remove',\n        className: 'remove',\n        append: true\n      },\n      options\n    )\n\n    var self = this\n    var html =\n      '<a href=\"javascript:void(0)\" class=\"' +\n      options.className +\n      '\" tabindex=\"-1\" title=\"' +\n      escape_html(options.title) +\n      '\"></a>'\n\n    /**\n     * Appends an element as a child (with raw HTML).\n     *\n     * @param {string} html_container\n     * @param {string} html_element\n     * @return {string}\n     */\n    var append = function (html_container, html_element) {\n      var pos = html_container.search(/(<\\/[^>]+>\\s*)$/)\n      return html_container.substring(0, pos) + html_element + html_container.substring(pos)\n    }\n\n    this.setup = (function () {\n      var original = self.setup\n      return function () {\n        // override the item rendering method to add the button to each\n        if (options.append) {\n          var render_item = self.settings.render.item\n          self.settings.render.item = function (data) {\n            return append(render_item.apply(this, arguments), html)\n          }\n        }\n\n        original.apply(this, arguments)\n\n        // add event listener\n        this.$control.on('click', '.' + options.className, function (e) {\n          e.preventDefault()\n          if (self.isLocked) return\n\n          var $item = $(e.currentTarget).parent()\n          self.setActiveItem($item)\n          if (self.deleteSelection()) {\n            self.setCaret(self.items.length)\n          }\n        })\n      }\n    })()\n  })\n\n  Selectize.define('restore_on_backspace', function (options) {\n    var self = this\n\n    options.text =\n      options.text ||\n      function (option) {\n        return option[this.settings.labelField]\n      }\n\n    this.onKeyDown = (function () {\n      var original = self.onKeyDown\n      return function (e) {\n        var index, option\n        if (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n          index = this.caretPos - 1\n          if (index >= 0 && index < this.items.length) {\n            option = this.options[this.items[index]]\n            if (this.deleteSelection(e)) {\n              this.setTextboxValue(options.text.apply(this, [option]))\n              this.refreshOptions(true)\n            }\n            e.preventDefault()\n            return\n          }\n        }\n        return original.apply(this, arguments)\n      }\n    })()\n  })\n\n  return Selectize\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/selectize/selectize.js?");

/***/ }),
/* 13 */
/*!*******************************************************!*\
  !*** ./src/public/js/vendor/velocity/velocity.min.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ 1);\n/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! VelocityJS.org (1.2.3). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n!(function (a) {\n  function b (a) {\n    var b = a.length,\n      d = c.type(a)\n    return 'function' === d || c.isWindow(a)\n      ? !1\n      : 1 === a.nodeType && b\n      ? !0\n      : 'array' === d || 0 === b || ('number' == typeof b && b > 0 && b - 1 in a)\n  }\n  if (!__webpack_provided_window_dot_jQuery) {\n    var c = function (a, b) {\n      return new c.fn.init(a, b)\n    }\n    ;(c.isWindow = function (a) {\n      return null != a && a == a.window\n    }),\n      (c.type = function (a) {\n        return null == a ? a + '' : 'object' == typeof a || 'function' == typeof a ? e[g.call(a)] || 'object' : typeof a\n      }),\n      (c.isArray =\n        Array.isArray ||\n        function (a) {\n          return 'array' === c.type(a)\n        }),\n      (c.isPlainObject = function (a) {\n        var b\n        if (!a || 'object' !== c.type(a) || a.nodeType || c.isWindow(a)) return !1\n        try {\n          if (a.constructor && !f.call(a, 'constructor') && !f.call(a.constructor.prototype, 'isPrototypeOf')) return !1\n        } catch (d) {\n          return !1\n        }\n        for (b in a);\n        return void 0 === b || f.call(a, b)\n      }),\n      (c.each = function (a, c, d) {\n        var e,\n          f = 0,\n          g = a.length,\n          h = b(a)\n        if (d) {\n          if (h) for (; g > f && ((e = c.apply(a[f], d)), e !== !1); f++);\n          else for (f in a) if (((e = c.apply(a[f], d)), e === !1)) break\n        } else if (h) for (; g > f && ((e = c.call(a[f], f, a[f])), e !== !1); f++);\n        else for (f in a) if (((e = c.call(a[f], f, a[f])), e === !1)) break\n        return a\n      }),\n      (c.data = function (a, b, e) {\n        if (void 0 === e) {\n          var f = a[c.expando],\n            g = f && d[f]\n          if (void 0 === b) return g\n          if (g && b in g) return g[b]\n        } else if (void 0 !== b) {\n          var f = a[c.expando] || (a[c.expando] = ++c.uuid)\n          return (d[f] = d[f] || {}), (d[f][b] = e), e\n        }\n      }),\n      (c.removeData = function (a, b) {\n        var e = a[c.expando],\n          f = e && d[e]\n        f &&\n          c.each(b, function (a, b) {\n            delete f[b]\n          })\n      }),\n      (c.extend = function () {\n        var a,\n          b,\n          d,\n          e,\n          f,\n          g,\n          h = arguments[0] || {},\n          i = 1,\n          j = arguments.length,\n          k = !1\n        for (\n          'boolean' == typeof h && ((k = h), (h = arguments[i] || {}), i++),\n            'object' != typeof h && 'function' !== c.type(h) && (h = {}),\n            i === j && ((h = this), i--);\n          j > i;\n          i++\n        )\n          if (null != (f = arguments[i]))\n            for (e in f)\n              (a = h[e]),\n                (d = f[e]),\n                h !== d &&\n                  (k && d && (c.isPlainObject(d) || (b = c.isArray(d)))\n                    ? (b ? ((b = !1), (g = a && c.isArray(a) ? a : [])) : (g = a && c.isPlainObject(a) ? a : {}),\n                      (h[e] = c.extend(k, g, d)))\n                    : void 0 !== d && (h[e] = d))\n        return h\n      }),\n      (c.queue = function (a, d, e) {\n        function f (a, c) {\n          var d = c || []\n          return (\n            null != a &&\n              (b(Object(a))\n                ? !(function (a, b) {\n                    for (var c = +b.length, d = 0, e = a.length; c > d; ) a[e++] = b[d++]\n                    if (c !== c) for (; void 0 !== b[d]; ) a[e++] = b[d++]\n                    return (a.length = e), a\n                  })(d, 'string' == typeof a ? [a] : a)\n                : [].push.call(d, a)),\n            d\n          )\n        }\n        if (a) {\n          d = (d || 'fx') + 'queue'\n          var g = c.data(a, d)\n          return e ? (!g || c.isArray(e) ? (g = c.data(a, d, f(e))) : g.push(e), g) : g || []\n        }\n      }),\n      (c.dequeue = function (a, b) {\n        c.each(a.nodeType ? [a] : a, function (a, d) {\n          b = b || 'fx'\n          var e = c.queue(d, b),\n            f = e.shift()\n          'inprogress' === f && (f = e.shift()),\n            f &&\n              ('fx' === b && e.unshift('inprogress'),\n              f.call(d, function () {\n                c.dequeue(d, b)\n              }))\n        })\n      }),\n      (c.fn = c.prototype = {\n        init: function (a) {\n          if (a.nodeType) return (this[0] = a), this\n          throw new Error('Not a DOM node.')\n        },\n        offset: function () {\n          var b = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : { top: 0, left: 0 }\n          return {\n            top: b.top + (a.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),\n            left: b.left + (a.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)\n          }\n        },\n        position: function () {\n          function a () {\n            for (\n              var a = this.offsetParent || document;\n              a && 'html' === !a.nodeType.toLowerCase && 'static' === a.style.position;\n\n            )\n              a = a.offsetParent\n            return a || document\n          }\n          var b = this[0],\n            a = a.apply(b),\n            d = this.offset(),\n            e = /^(?:body|html)$/i.test(a.nodeName) ? { top: 0, left: 0 } : c(a).offset()\n          return (\n            (d.top -= parseFloat(b.style.marginTop) || 0),\n            (d.left -= parseFloat(b.style.marginLeft) || 0),\n            a.style &&\n              ((e.top += parseFloat(a.style.borderTopWidth) || 0),\n              (e.left += parseFloat(a.style.borderLeftWidth) || 0)),\n            { top: d.top - e.top, left: d.left - e.left }\n          )\n        }\n      })\n    var d = {}\n    ;(c.expando = 'velocity' + new Date().getTime()), (c.uuid = 0)\n    for (\n      var e = {},\n        f = e.hasOwnProperty,\n        g = e.toString,\n        h = 'Boolean Number String Function Array Date RegExp Object Error'.split(' '),\n        i = 0;\n      i < h.length;\n      i++\n    )\n      e['[object ' + h[i] + ']'] = h[i].toLowerCase()\n    ;(c.fn.init.prototype = c.fn), (a.Velocity = { Utilities: c })\n  }\n})(window),\n  (function (a) {\n     true && 'object' == typeof module.exports\n      ? (module.exports = a())\n      :  true\n      ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n      : 0\n  })(function () {\n    return (function (a, b, c, d) {\n      function e (a) {\n        for (var b = -1, c = a ? a.length : 0, d = []; ++b < c; ) {\n          var e = a[b]\n          e && d.push(e)\n        }\n        return d\n      }\n      function f (a) {\n        return p.isWrapped(a) ? (a = [].slice.call(a)) : p.isNode(a) && (a = [a]), a\n      }\n      function g (a) {\n        var b = m.data(a, 'velocity')\n        return null === b ? d : b\n      }\n      function h (a) {\n        return function (b) {\n          return Math.round(b * a) * (1 / a)\n        }\n      }\n      function i (a, c, d, e) {\n        function f (a, b) {\n          return 1 - 3 * b + 3 * a\n        }\n        function g (a, b) {\n          return 3 * b - 6 * a\n        }\n        function h (a) {\n          return 3 * a\n        }\n        function i (a, b, c) {\n          return ((f(b, c) * a + g(b, c)) * a + h(b)) * a\n        }\n        function j (a, b, c) {\n          return 3 * f(b, c) * a * a + 2 * g(b, c) * a + h(b)\n        }\n        function k (b, c) {\n          for (var e = 0; p > e; ++e) {\n            var f = j(c, a, d)\n            if (0 === f) return c\n            var g = i(c, a, d) - b\n            c -= g / f\n          }\n          return c\n        }\n        function l () {\n          for (var b = 0; t > b; ++b) x[b] = i(b * u, a, d)\n        }\n        function m (b, c, e) {\n          var f,\n            g,\n            h = 0\n          do (g = c + (e - c) / 2), (f = i(g, a, d) - b), f > 0 ? (e = g) : (c = g)\n          while (Math.abs(f) > r && ++h < s)\n          return g\n        }\n        function n (b) {\n          for (var c = 0, e = 1, f = t - 1; e != f && x[e] <= b; ++e) c += u\n          --e\n          var g = (b - x[e]) / (x[e + 1] - x[e]),\n            h = c + g * u,\n            i = j(h, a, d)\n          return i >= q ? k(b, h) : 0 == i ? h : m(b, c, c + u)\n        }\n        function o () {\n          ;(y = !0), (a != c || d != e) && l()\n        }\n        var p = 4,\n          q = 0.001,\n          r = 1e-7,\n          s = 10,\n          t = 11,\n          u = 1 / (t - 1),\n          v = 'Float32Array' in b\n        if (4 !== arguments.length) return !1\n        for (var w = 0; 4 > w; ++w)\n          if ('number' != typeof arguments[w] || isNaN(arguments[w]) || !isFinite(arguments[w])) return !1\n        ;(a = Math.min(a, 1)), (d = Math.min(d, 1)), (a = Math.max(a, 0)), (d = Math.max(d, 0))\n        var x = v ? new Float32Array(t) : new Array(t),\n          y = !1,\n          z = function (b) {\n            return y || o(), a === c && d === e ? b : 0 === b ? 0 : 1 === b ? 1 : i(n(b), c, e)\n          }\n        z.getControlPoints = function () {\n          return [{ x: a, y: c }, { x: d, y: e }]\n        }\n        var A = 'generateBezier(' + [a, c, d, e] + ')'\n        return (\n          (z.toString = function () {\n            return A\n          }),\n          z\n        )\n      }\n      function j (a, b) {\n        var c = a\n        return (\n          p.isString(a)\n            ? t.Easings[a] || (c = !1)\n            : (c =\n                p.isArray(a) && 1 === a.length\n                  ? h.apply(null, a)\n                  : p.isArray(a) && 2 === a.length\n                  ? u.apply(null, a.concat([b]))\n                  : p.isArray(a) && 4 === a.length\n                  ? i.apply(null, a)\n                  : !1),\n          c === !1 && (c = t.Easings[t.defaults.easing] ? t.defaults.easing : s),\n          c\n        )\n      }\n      function k (a) {\n        if (a) {\n          var b = new Date().getTime(),\n            c = t.State.calls.length\n          c > 1e4 && (t.State.calls = e(t.State.calls))\n          for (var f = 0; c > f; f++)\n            if (t.State.calls[f]) {\n              var h = t.State.calls[f],\n                i = h[0],\n                j = h[2],\n                n = h[3],\n                o = !!n,\n                q = null\n              n || (n = t.State.calls[f][3] = b - 16)\n              for (var r = Math.min((b - n) / j.duration, 1), s = 0, u = i.length; u > s; s++) {\n                var w = i[s],\n                  y = w.element\n                if (g(y)) {\n                  var z = !1\n                  if (j.display !== d && null !== j.display && 'none' !== j.display) {\n                    if ('flex' === j.display) {\n                      var A = ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex']\n                      m.each(A, function (a, b) {\n                        v.setPropertyValue(y, 'display', b)\n                      })\n                    }\n                    v.setPropertyValue(y, 'display', j.display)\n                  }\n                  j.visibility !== d && 'hidden' !== j.visibility && v.setPropertyValue(y, 'visibility', j.visibility)\n                  for (var B in w)\n                    if ('element' !== B) {\n                      var C,\n                        D = w[B],\n                        E = p.isString(D.easing) ? t.Easings[D.easing] : D.easing\n                      if (1 === r) C = D.endValue\n                      else {\n                        var F = D.endValue - D.startValue\n                        if (((C = D.startValue + F * E(r, j, F)), !o && C === D.currentValue)) continue\n                      }\n                      if (((D.currentValue = C), 'tween' === B)) q = C\n                      else {\n                        if (v.Hooks.registered[B]) {\n                          var G = v.Hooks.getRoot(B),\n                            H = g(y).rootPropertyValueCache[G]\n                          H && (D.rootPropertyValue = H)\n                        }\n                        var I = v.setPropertyValue(\n                          y,\n                          B,\n                          D.currentValue + (0 === parseFloat(C) ? '' : D.unitType),\n                          D.rootPropertyValue,\n                          D.scrollData\n                        )\n                        v.Hooks.registered[B] &&\n                          (g(y).rootPropertyValueCache[G] = v.Normalizations.registered[G]\n                            ? v.Normalizations.registered[G]('extract', null, I[1])\n                            : I[1]),\n                          'transform' === I[0] && (z = !0)\n                      }\n                    }\n                  j.mobileHA &&\n                    g(y).transformCache.translate3d === d &&\n                    ((g(y).transformCache.translate3d = '(0px, 0px, 0px)'), (z = !0)),\n                    z && v.flushTransformCache(y)\n                }\n              }\n              j.display !== d && 'none' !== j.display && (t.State.calls[f][2].display = !1),\n                j.visibility !== d && 'hidden' !== j.visibility && (t.State.calls[f][2].visibility = !1),\n                j.progress && j.progress.call(h[1], h[1], r, Math.max(0, n + j.duration - b), n, q),\n                1 === r && l(f)\n            }\n        }\n        t.State.isTicking && x(k)\n      }\n      function l (a, b) {\n        if (!t.State.calls[a]) return !1\n        for (\n          var c = t.State.calls[a][0],\n            e = t.State.calls[a][1],\n            f = t.State.calls[a][2],\n            h = t.State.calls[a][4],\n            i = !1,\n            j = 0,\n            k = c.length;\n          k > j;\n          j++\n        ) {\n          var l = c[j].element\n          if (\n            (b ||\n              f.loop ||\n              ('none' === f.display && v.setPropertyValue(l, 'display', f.display),\n              'hidden' === f.visibility && v.setPropertyValue(l, 'visibility', f.visibility)),\n            f.loop !== !0 && (m.queue(l)[1] === d || !/\\.velocityQueueEntryFlag/i.test(m.queue(l)[1])) && g(l))\n          ) {\n            ;(g(l).isAnimating = !1), (g(l).rootPropertyValueCache = {})\n            var n = !1\n            m.each(v.Lists.transforms3D, function (a, b) {\n              var c = /^scale/.test(b) ? 1 : 0,\n                e = g(l).transformCache[b]\n              g(l).transformCache[b] !== d &&\n                new RegExp('^\\\\(' + c + '[^.]').test(e) &&\n                ((n = !0), delete g(l).transformCache[b])\n            }),\n              f.mobileHA && ((n = !0), delete g(l).transformCache.translate3d),\n              n && v.flushTransformCache(l),\n              v.Values.removeClass(l, 'velocity-animating')\n          }\n          if (!b && f.complete && !f.loop && j === k - 1)\n            try {\n              f.complete.call(e, e)\n            } catch (o) {\n              setTimeout(function () {\n                throw o\n              }, 1)\n            }\n          h && f.loop !== !0 && h(e),\n            g(l) &&\n              f.loop === !0 &&\n              !b &&\n              (m.each(g(l).tweensContainer, function (a, b) {\n                ;/^rotate/.test(a) && 360 === parseFloat(b.endValue) && ((b.endValue = 0), (b.startValue = 360)),\n                  /^backgroundPosition/.test(a) &&\n                    100 === parseFloat(b.endValue) &&\n                    '%' === b.unitType &&\n                    ((b.endValue = 0), (b.startValue = 100))\n              }),\n              t(l, 'reverse', { loop: !0, delay: f.delay })),\n            f.queue !== !1 && m.dequeue(l, f.queue)\n        }\n        t.State.calls[a] = !1\n        for (var p = 0, q = t.State.calls.length; q > p; p++)\n          if (t.State.calls[p] !== !1) {\n            i = !0\n            break\n          }\n        i === !1 && ((t.State.isTicking = !1), delete t.State.calls, (t.State.calls = []))\n      }\n      var m,\n        n = (function () {\n          if (c.documentMode) return c.documentMode\n          for (var a = 7; a > 4; a--) {\n            var b = c.createElement('div')\n            if (\n              ((b.innerHTML = '<!--[if IE ' + a + ']><span></span><![endif]-->'), b.getElementsByTagName('span').length)\n            )\n              return (b = null), a\n          }\n          return d\n        })(),\n        o = (function () {\n          var a = 0\n          return (\n            b.webkitRequestAnimationFrame ||\n            b.mozRequestAnimationFrame ||\n            function (b) {\n              var c,\n                d = new Date().getTime()\n              return (\n                (c = Math.max(0, 16 - (d - a))),\n                (a = d + c),\n                setTimeout(function () {\n                  b(d + c)\n                }, c)\n              )\n            }\n          )\n        })(),\n        p = {\n          isString: function (a) {\n            return 'string' == typeof a\n          },\n          isArray:\n            Array.isArray ||\n            function (a) {\n              return '[object Array]' === Object.prototype.toString.call(a)\n            },\n          isFunction: function (a) {\n            return '[object Function]' === Object.prototype.toString.call(a)\n          },\n          isNode: function (a) {\n            return a && a.nodeType\n          },\n          isNodeList: function (a) {\n            return (\n              'object' == typeof a &&\n              /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(a)) &&\n              a.length !== d &&\n              (0 === a.length || ('object' == typeof a[0] && a[0].nodeType > 0))\n            )\n          },\n          isWrapped: function (a) {\n            return a && (a.jquery || (b.Zepto && b.Zepto.zepto.isZ(a)))\n          },\n          isSVG: function (a) {\n            return b.SVGElement && a instanceof b.SVGElement\n          },\n          isEmptyObject: function (a) {\n            for (var b in a) return !1\n            return !0\n          }\n        },\n        q = !1\n      if ((a.fn && a.fn.jquery ? ((m = a), (q = !0)) : (m = b.Velocity.Utilities), 8 >= n && !q))\n        throw new Error('Velocity: IE8 and below require jQuery to be loaded before Velocity.')\n      if (7 >= n) return void (jQuery.fn.velocity = jQuery.fn.animate)\n      var r = 400,\n        s = 'swing',\n        t = {\n          State: {\n            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n            isAndroid: /Android/i.test(navigator.userAgent),\n            isGingerbread: /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n            isChrome: b.chrome,\n            isFirefox: /Firefox/i.test(navigator.userAgent),\n            prefixElement: c.createElement('div'),\n            prefixMatches: {},\n            scrollAnchor: null,\n            scrollPropertyLeft: null,\n            scrollPropertyTop: null,\n            isTicking: !1,\n            calls: []\n          },\n          CSS: {},\n          Utilities: m,\n          Redirects: {},\n          Easings: {},\n          Promise: b.Promise,\n          defaults: {\n            queue: '',\n            duration: r,\n            easing: s,\n            begin: d,\n            complete: d,\n            progress: d,\n            display: d,\n            visibility: d,\n            loop: !1,\n            delay: !1,\n            mobileHA: !0,\n            _cacheValues: !0\n          },\n          init: function (a) {\n            m.data(a, 'velocity', {\n              isSVG: p.isSVG(a),\n              isAnimating: !1,\n              computedStyle: null,\n              tweensContainer: null,\n              rootPropertyValueCache: {},\n              transformCache: {}\n            })\n          },\n          hook: null,\n          mock: !1,\n          version: { major: 1, minor: 2, patch: 2 },\n          debug: !1\n        }\n      b.pageYOffset !== d\n        ? ((t.State.scrollAnchor = b),\n          (t.State.scrollPropertyLeft = 'pageXOffset'),\n          (t.State.scrollPropertyTop = 'pageYOffset'))\n        : ((t.State.scrollAnchor = c.documentElement || c.body.parentNode || c.body),\n          (t.State.scrollPropertyLeft = 'scrollLeft'),\n          (t.State.scrollPropertyTop = 'scrollTop'))\n      var u = (function () {\n        function a (a) {\n          return -a.tension * a.x - a.friction * a.v\n        }\n        function b (b, c, d) {\n          var e = { x: b.x + d.dx * c, v: b.v + d.dv * c, tension: b.tension, friction: b.friction }\n          return { dx: e.v, dv: a(e) }\n        }\n        function c (c, d) {\n          var e = { dx: c.v, dv: a(c) },\n            f = b(c, 0.5 * d, e),\n            g = b(c, 0.5 * d, f),\n            h = b(c, d, g),\n            i = (1 / 6) * (e.dx + 2 * (f.dx + g.dx) + h.dx),\n            j = (1 / 6) * (e.dv + 2 * (f.dv + g.dv) + h.dv)\n          return (c.x = c.x + i * d), (c.v = c.v + j * d), c\n        }\n        return function d (a, b, e) {\n          var f,\n            g,\n            h,\n            i = { x: -1, v: 0, tension: null, friction: null },\n            j = [0],\n            k = 0,\n            l = 1e-4,\n            m = 0.016\n          for (\n            a = parseFloat(a) || 500,\n              b = parseFloat(b) || 20,\n              e = e || null,\n              i.tension = a,\n              i.friction = b,\n              f = null !== e,\n              f ? ((k = d(a, b)), (g = (k / e) * m)) : (g = m);\n            ;\n\n          )\n            if (((h = c(h || i, g)), j.push(1 + h.x), (k += 16), !(Math.abs(h.x) > l && Math.abs(h.v) > l))) break\n          return f\n            ? function (a) {\n                return j[(a * (j.length - 1)) | 0]\n              }\n            : k\n        }\n      })()\n      ;(t.Easings = {\n        linear: function (a) {\n          return a\n        },\n        swing: function (a) {\n          return 0.5 - Math.cos(a * Math.PI) / 2\n        },\n        spring: function (a) {\n          return 1 - Math.cos(4.5 * a * Math.PI) * Math.exp(6 * -a)\n        }\n      }),\n        m.each(\n          [\n            ['ease', [0.25, 0.1, 0.25, 1]],\n            ['ease-in', [0.42, 0, 1, 1]],\n            ['ease-out', [0, 0, 0.58, 1]],\n            ['ease-in-out', [0.42, 0, 0.58, 1]],\n            ['easeInSine', [0.47, 0, 0.745, 0.715]],\n            ['easeOutSine', [0.39, 0.575, 0.565, 1]],\n            ['easeInOutSine', [0.445, 0.05, 0.55, 0.95]],\n            ['easeInQuad', [0.55, 0.085, 0.68, 0.53]],\n            ['easeOutQuad', [0.25, 0.46, 0.45, 0.94]],\n            ['easeInOutQuad', [0.455, 0.03, 0.515, 0.955]],\n            ['easeInCubic', [0.55, 0.055, 0.675, 0.19]],\n            ['easeOutCubic', [0.215, 0.61, 0.355, 1]],\n            ['easeInOutCubic', [0.645, 0.045, 0.355, 1]],\n            ['easeInQuart', [0.895, 0.03, 0.685, 0.22]],\n            ['easeOutQuart', [0.165, 0.84, 0.44, 1]],\n            ['easeInOutQuart', [0.77, 0, 0.175, 1]],\n            ['easeInQuint', [0.755, 0.05, 0.855, 0.06]],\n            ['easeOutQuint', [0.23, 1, 0.32, 1]],\n            ['easeInOutQuint', [0.86, 0, 0.07, 1]],\n            ['easeInExpo', [0.95, 0.05, 0.795, 0.035]],\n            ['easeOutExpo', [0.19, 1, 0.22, 1]],\n            ['easeInOutExpo', [1, 0, 0, 1]],\n            ['easeInCirc', [0.6, 0.04, 0.98, 0.335]],\n            ['easeOutCirc', [0.075, 0.82, 0.165, 1]],\n            ['easeInOutCirc', [0.785, 0.135, 0.15, 0.86]]\n          ],\n          function (a, b) {\n            t.Easings[b[0]] = i.apply(null, b[1])\n          }\n        )\n      var v = (t.CSS = {\n        RegEx: {\n          isHex: /^#([A-f\\d]{3}){1,2}$/i,\n          valueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n          wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n          valueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/gi\n        },\n        Lists: {\n          colors: [\n            'fill',\n            'stroke',\n            'stopColor',\n            'color',\n            'backgroundColor',\n            'borderColor',\n            'borderTopColor',\n            'borderRightColor',\n            'borderBottomColor',\n            'borderLeftColor',\n            'outlineColor'\n          ],\n          transformsBase: ['translateX', 'translateY', 'scale', 'scaleX', 'scaleY', 'skewX', 'skewY', 'rotateZ'],\n          transforms3D: ['transformPerspective', 'translateZ', 'scaleZ', 'rotateX', 'rotateY']\n        },\n        Hooks: {\n          templates: {\n            textShadow: ['Color X Y Blur', 'black 0px 0px 0px'],\n            boxShadow: ['Color X Y Blur Spread', 'black 0px 0px 0px 0px'],\n            clip: ['Top Right Bottom Left', '0px 0px 0px 0px'],\n            backgroundPosition: ['X Y', '0% 0%'],\n            transformOrigin: ['X Y Z', '50% 50% 0px'],\n            perspectiveOrigin: ['X Y', '50% 50%']\n          },\n          registered: {},\n          register: function () {\n            for (var a = 0; a < v.Lists.colors.length; a++) {\n              var b = 'color' === v.Lists.colors[a] ? '0 0 0 1' : '255 255 255 1'\n              v.Hooks.templates[v.Lists.colors[a]] = ['Red Green Blue Alpha', b]\n            }\n            var c, d, e\n            if (n)\n              for (c in v.Hooks.templates) {\n                ;(d = v.Hooks.templates[c]), (e = d[0].split(' '))\n                var f = d[1].match(v.RegEx.valueSplit)\n                'Color' === e[0] &&\n                  (e.push(e.shift()), f.push(f.shift()), (v.Hooks.templates[c] = [e.join(' '), f.join(' ')]))\n              }\n            for (c in v.Hooks.templates) {\n              ;(d = v.Hooks.templates[c]), (e = d[0].split(' '))\n              for (var a in e) {\n                var g = c + e[a],\n                  h = a\n                v.Hooks.registered[g] = [c, h]\n              }\n            }\n          },\n          getRoot: function (a) {\n            var b = v.Hooks.registered[a]\n            return b ? b[0] : a\n          },\n          cleanRootPropertyValue: function (a, b) {\n            return (\n              v.RegEx.valueUnwrap.test(b) && (b = b.match(v.RegEx.valueUnwrap)[1]),\n              v.Values.isCSSNullValue(b) && (b = v.Hooks.templates[a][1]),\n              b\n            )\n          },\n          extractValue: function (a, b) {\n            var c = v.Hooks.registered[a]\n            if (c) {\n              var d = c[0],\n                e = c[1]\n              return (b = v.Hooks.cleanRootPropertyValue(d, b)), b.toString().match(v.RegEx.valueSplit)[e]\n            }\n            return b\n          },\n          injectValue: function (a, b, c) {\n            var d = v.Hooks.registered[a]\n            if (d) {\n              var e,\n                f,\n                g = d[0],\n                h = d[1]\n              return (\n                (c = v.Hooks.cleanRootPropertyValue(g, c)),\n                (e = c.toString().match(v.RegEx.valueSplit)),\n                (e[h] = b),\n                (f = e.join(' '))\n              )\n            }\n            return c\n          }\n        },\n        Normalizations: {\n          registered: {\n            clip: function (a, b, c) {\n              switch (a) {\n                case 'name':\n                  return 'clip'\n                case 'extract':\n                  var d\n                  return (\n                    v.RegEx.wrappedValueAlreadyExtracted.test(c)\n                      ? (d = c)\n                      : ((d = c.toString().match(v.RegEx.valueUnwrap)), (d = d ? d[1].replace(/,(\\s+)?/g, ' ') : c)),\n                    d\n                  )\n                case 'inject':\n                  return 'rect(' + c + ')'\n              }\n            },\n            blur: function (a, b, c) {\n              switch (a) {\n                case 'name':\n                  return t.State.isFirefox ? 'filter' : '-webkit-filter'\n                case 'extract':\n                  var d = parseFloat(c)\n                  if (!d && 0 !== d) {\n                    var e = c.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i)\n                    d = e ? e[1] : 0\n                  }\n                  return d\n                case 'inject':\n                  return parseFloat(c) ? 'blur(' + c + ')' : 'none'\n              }\n            },\n            opacity: function (a, b, c) {\n              if (8 >= n)\n                switch (a) {\n                  case 'name':\n                    return 'filter'\n                  case 'extract':\n                    var d = c.toString().match(/alpha\\(opacity=(.*)\\)/i)\n                    return (c = d ? d[1] / 100 : 1)\n                  case 'inject':\n                    return (\n                      (b.style.zoom = 1),\n                      parseFloat(c) >= 1 ? '' : 'alpha(opacity=' + parseInt(100 * parseFloat(c), 10) + ')'\n                    )\n                }\n              else\n                switch (a) {\n                  case 'name':\n                    return 'opacity'\n                  case 'extract':\n                    return c\n                  case 'inject':\n                    return c\n                }\n            }\n          },\n          register: function () {\n            9 >= n ||\n              t.State.isGingerbread ||\n              (v.Lists.transformsBase = v.Lists.transformsBase.concat(v.Lists.transforms3D))\n            for (var a = 0; a < v.Lists.transformsBase.length; a++)\n              !(function () {\n                var b = v.Lists.transformsBase[a]\n                v.Normalizations.registered[b] = function (a, c, e) {\n                  switch (a) {\n                    case 'name':\n                      return 'transform'\n                    case 'extract':\n                      return g(c) === d || g(c).transformCache[b] === d\n                        ? /^scale/i.test(b)\n                          ? 1\n                          : 0\n                        : g(c).transformCache[b].replace(/[()]/g, '')\n                    case 'inject':\n                      var f = !1\n                      switch (b.substr(0, b.length - 1)) {\n                        case 'translate':\n                          f = !/(%|px|em|rem|vw|vh|\\d)$/i.test(e)\n                          break\n                        case 'scal':\n                        case 'scale':\n                          t.State.isAndroid && g(c).transformCache[b] === d && 1 > e && (e = 1), (f = !/(\\d)$/i.test(e))\n                          break\n                        case 'skew':\n                          f = !/(deg|\\d)$/i.test(e)\n                          break\n                        case 'rotate':\n                          f = !/(deg|\\d)$/i.test(e)\n                      }\n                      return f || (g(c).transformCache[b] = '(' + e + ')'), g(c).transformCache[b]\n                  }\n                }\n              })()\n            for (var a = 0; a < v.Lists.colors.length; a++)\n              !(function () {\n                var b = v.Lists.colors[a]\n                v.Normalizations.registered[b] = function (a, c, e) {\n                  switch (a) {\n                    case 'name':\n                      return b\n                    case 'extract':\n                      var f\n                      if (v.RegEx.wrappedValueAlreadyExtracted.test(e)) f = e\n                      else {\n                        var g,\n                          h = {\n                            black: 'rgb(0, 0, 0)',\n                            blue: 'rgb(0, 0, 255)',\n                            gray: 'rgb(128, 128, 128)',\n                            green: 'rgb(0, 128, 0)',\n                            red: 'rgb(255, 0, 0)',\n                            white: 'rgb(255, 255, 255)'\n                          }\n                        ;/^[A-z]+$/i.test(e)\n                          ? (g = h[e] !== d ? h[e] : h.black)\n                          : v.RegEx.isHex.test(e)\n                          ? (g = 'rgb(' + v.Values.hexToRgb(e).join(' ') + ')')\n                          : /^rgba?\\(/i.test(e) || (g = h.black),\n                          (f = (g || e)\n                            .toString()\n                            .match(v.RegEx.valueUnwrap)[1]\n                            .replace(/,(\\s+)?/g, ' '))\n                      }\n                      return 8 >= n || 3 !== f.split(' ').length || (f += ' 1'), f\n                    case 'inject':\n                      return (\n                        8 >= n\n                          ? 4 === e.split(' ').length &&\n                            (e = e\n                              .split(/\\s+/)\n                              .slice(0, 3)\n                              .join(' '))\n                          : 3 === e.split(' ').length && (e += ' 1'),\n                        (8 >= n ? 'rgb' : 'rgba') + '(' + e.replace(/\\s+/g, ',').replace(/\\.(\\d)+(?=,)/g, '') + ')'\n                      )\n                  }\n                }\n              })()\n          }\n        },\n        Names: {\n          camelCase: function (a) {\n            return a.replace(/-(\\w)/g, function (a, b) {\n              return b.toUpperCase()\n            })\n          },\n          SVGAttribute: function (a) {\n            var b = 'width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2'\n            return (\n              (n || (t.State.isAndroid && !t.State.isChrome)) && (b += '|transform'),\n              new RegExp('^(' + b + ')$', 'i').test(a)\n            )\n          },\n          prefixCheck: function (a) {\n            if (t.State.prefixMatches[a]) return [t.State.prefixMatches[a], !0]\n            for (var b = ['', 'Webkit', 'Moz', 'ms', 'O'], c = 0, d = b.length; d > c; c++) {\n              var e\n              if (\n                ((e =\n                  0 === c\n                    ? a\n                    : b[c] +\n                      a.replace(/^\\w/, function (a) {\n                        return a.toUpperCase()\n                      })),\n                p.isString(t.State.prefixElement.style[e]))\n              )\n                return (t.State.prefixMatches[a] = e), [e, !0]\n            }\n            return [a, !1]\n          }\n        },\n        Values: {\n          hexToRgb: function (a) {\n            var b,\n              c = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n              d = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n            return (\n              (a = a.replace(c, function (a, b, c, d) {\n                return b + b + c + c + d + d\n              })),\n              (b = d.exec(a)),\n              b ? [parseInt(b[1], 16), parseInt(b[2], 16), parseInt(b[3], 16)] : [0, 0, 0]\n            )\n          },\n          isCSSNullValue: function (a) {\n            return 0 == a || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(a)\n          },\n          getUnitType: function (a) {\n            return /^(rotate|skew)/i.test(a)\n              ? 'deg'\n              : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(\n                  a\n                )\n              ? ''\n              : 'px'\n          },\n          getDisplayType: function (a) {\n            var b = a && a.tagName.toString().toLowerCase()\n            return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(\n              b\n            )\n              ? 'inline'\n              : /^(li)$/i.test(b)\n              ? 'list-item'\n              : /^(tr)$/i.test(b)\n              ? 'table-row'\n              : /^(table)$/i.test(b)\n              ? 'table'\n              : /^(tbody)$/i.test(b)\n              ? 'table-row-group'\n              : 'block'\n          },\n          addClass: function (a, b) {\n            a.classList ? a.classList.add(b) : (a.className += (a.className.length ? ' ' : '') + b)\n          },\n          removeClass: function (a, b) {\n            a.classList\n              ? a.classList.remove(b)\n              : (a.className = a.className\n                  .toString()\n                  .replace(new RegExp('(^|\\\\s)' + b.split(' ').join('|') + '(\\\\s|$)', 'gi'), ' '))\n          }\n        },\n        getPropertyValue: function (a, c, e, f) {\n          function h (a, c) {\n            function e () {\n              j && v.setPropertyValue(a, 'display', 'none')\n            }\n            var i = 0\n            if (8 >= n) i = m.css(a, c)\n            else {\n              var j = !1\n              if (\n                (/^(width|height)$/.test(c) &&\n                  0 === v.getPropertyValue(a, 'display') &&\n                  ((j = !0), v.setPropertyValue(a, 'display', v.Values.getDisplayType(a))),\n                !f)\n              ) {\n                if (\n                  'height' === c &&\n                  'border-box' !==\n                    v\n                      .getPropertyValue(a, 'boxSizing')\n                      .toString()\n                      .toLowerCase()\n                ) {\n                  var k =\n                    a.offsetHeight -\n                    (parseFloat(v.getPropertyValue(a, 'borderTopWidth')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'borderBottomWidth')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'paddingTop')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'paddingBottom')) || 0)\n                  return e(), k\n                }\n                if (\n                  'width' === c &&\n                  'border-box' !==\n                    v\n                      .getPropertyValue(a, 'boxSizing')\n                      .toString()\n                      .toLowerCase()\n                ) {\n                  var l =\n                    a.offsetWidth -\n                    (parseFloat(v.getPropertyValue(a, 'borderLeftWidth')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'borderRightWidth')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'paddingLeft')) || 0) -\n                    (parseFloat(v.getPropertyValue(a, 'paddingRight')) || 0)\n                  return e(), l\n                }\n              }\n              var o\n              ;(o =\n                g(a) === d\n                  ? b.getComputedStyle(a, null)\n                  : g(a).computedStyle\n                  ? g(a).computedStyle\n                  : (g(a).computedStyle = b.getComputedStyle(a, null))),\n                'borderColor' === c && (c = 'borderTopColor'),\n                (i = 9 === n && 'filter' === c ? o.getPropertyValue(c) : o[c]),\n                ('' === i || null === i) && (i = a.style[c]),\n                e()\n            }\n            if ('auto' === i && /^(top|right|bottom|left)$/i.test(c)) {\n              var p = h(a, 'position')\n              ;('fixed' === p || ('absolute' === p && /top|left/i.test(c))) && (i = m(a).position()[c] + 'px')\n            }\n            return i\n          }\n          var i\n          if (v.Hooks.registered[c]) {\n            var j = c,\n              k = v.Hooks.getRoot(j)\n            e === d && (e = v.getPropertyValue(a, v.Names.prefixCheck(k)[0])),\n              v.Normalizations.registered[k] && (e = v.Normalizations.registered[k]('extract', a, e)),\n              (i = v.Hooks.extractValue(j, e))\n          } else if (v.Normalizations.registered[c]) {\n            var l, o\n            ;(l = v.Normalizations.registered[c]('name', a)),\n              'transform' !== l &&\n                ((o = h(a, v.Names.prefixCheck(l)[0])),\n                v.Values.isCSSNullValue(o) && v.Hooks.templates[c] && (o = v.Hooks.templates[c][1])),\n              (i = v.Normalizations.registered[c]('extract', a, o))\n          }\n          if (!/^[\\d-]/.test(i))\n            if (g(a) && g(a).isSVG && v.Names.SVGAttribute(c))\n              if (/^(height|width)$/i.test(c))\n                try {\n                  i = a.getBBox()[c]\n                } catch (p) {\n                  i = 0\n                }\n              else i = a.getAttribute(c)\n            else i = h(a, v.Names.prefixCheck(c)[0])\n          return v.Values.isCSSNullValue(i) && (i = 0), t.debug >= 2 && console.log('Get ' + c + ': ' + i), i\n        },\n        setPropertyValue: function (a, c, d, e, f) {\n          var h = c\n          if ('scroll' === c)\n            f.container\n              ? (f.container['scroll' + f.direction] = d)\n              : 'Left' === f.direction\n              ? b.scrollTo(d, f.alternateValue)\n              : b.scrollTo(f.alternateValue, d)\n          else if (v.Normalizations.registered[c] && 'transform' === v.Normalizations.registered[c]('name', a))\n            v.Normalizations.registered[c]('inject', a, d), (h = 'transform'), (d = g(a).transformCache[c])\n          else {\n            if (v.Hooks.registered[c]) {\n              var i = c,\n                j = v.Hooks.getRoot(c)\n              ;(e = e || v.getPropertyValue(a, j)), (d = v.Hooks.injectValue(i, d, e)), (c = j)\n            }\n            if (\n              (v.Normalizations.registered[c] &&\n                ((d = v.Normalizations.registered[c]('inject', a, d)), (c = v.Normalizations.registered[c]('name', a))),\n              (h = v.Names.prefixCheck(c)[0]),\n              8 >= n)\n            )\n              try {\n                a.style[h] = d\n              } catch (k) {\n                t.debug && console.log('Browser does not support [' + d + '] for [' + h + ']')\n              }\n            else g(a) && g(a).isSVG && v.Names.SVGAttribute(c) ? a.setAttribute(c, d) : (a.style[h] = d)\n            t.debug >= 2 && console.log('Set ' + c + ' (' + h + '): ' + d)\n          }\n          return [h, d]\n        },\n        flushTransformCache: function (a) {\n          function b (b) {\n            return parseFloat(v.getPropertyValue(a, b))\n          }\n          var c = ''\n          if ((n || (t.State.isAndroid && !t.State.isChrome)) && g(a).isSVG) {\n            var d = {\n              translate: [b('translateX'), b('translateY')],\n              skewX: [b('skewX')],\n              skewY: [b('skewY')],\n              scale: 1 !== b('scale') ? [b('scale'), b('scale')] : [b('scaleX'), b('scaleY')],\n              rotate: [b('rotateZ'), 0, 0]\n            }\n            m.each(g(a).transformCache, function (a) {\n              ;/^translate/i.test(a)\n                ? (a = 'translate')\n                : /^scale/i.test(a)\n                ? (a = 'scale')\n                : /^rotate/i.test(a) && (a = 'rotate'),\n                d[a] && ((c += a + '(' + d[a].join(' ') + ') '), delete d[a])\n            })\n          } else {\n            var e, f\n            m.each(g(a).transformCache, function (b) {\n              return (\n                (e = g(a).transformCache[b]),\n                'transformPerspective' === b\n                  ? ((f = e), !0)\n                  : (9 === n && 'rotateZ' === b && (b = 'rotate'), void (c += b + e + ' '))\n              )\n            }),\n              f && (c = 'perspective' + f + ' ' + c)\n          }\n          v.setPropertyValue(a, 'transform', c)\n        }\n      })\n      v.Hooks.register(),\n        v.Normalizations.register(),\n        (t.hook = function (a, b, c) {\n          var e = d\n          return (\n            (a = f(a)),\n            m.each(a, function (a, f) {\n              if ((g(f) === d && t.init(f), c === d)) e === d && (e = t.CSS.getPropertyValue(f, b))\n              else {\n                var h = t.CSS.setPropertyValue(f, b, c)\n                'transform' === h[0] && t.CSS.flushTransformCache(f), (e = h)\n              }\n            }),\n            e\n          )\n        })\n      var w = function () {\n        function a () {\n          return h ? B.promise || null : i\n        }\n        function e () {\n          function a () {\n            function a (a, b) {\n              var c = d,\n                e = d,\n                g = d\n              return (\n                p.isArray(a)\n                  ? ((c = a[0]),\n                    (!p.isArray(a[1]) && /^[\\d-]/.test(a[1])) || p.isFunction(a[1]) || v.RegEx.isHex.test(a[1])\n                      ? (g = a[1])\n                      : ((p.isString(a[1]) && !v.RegEx.isHex.test(a[1])) || p.isArray(a[1])) &&\n                        ((e = b ? a[1] : j(a[1], h.duration)), a[2] !== d && (g = a[2])))\n                  : (c = a),\n                b || (e = e || h.easing),\n                p.isFunction(c) && (c = c.call(f, y, x)),\n                p.isFunction(g) && (g = g.call(f, y, x)),\n                [c || 0, e, g]\n              )\n            }\n            function l (a, b) {\n              var c, d\n              return (\n                (d = (b || '0')\n                  .toString()\n                  .toLowerCase()\n                  .replace(/[%A-z]+$/, function (a) {\n                    return (c = a), ''\n                  })),\n                c || (c = v.Values.getUnitType(a)),\n                [d, c]\n              )\n            }\n            function n () {\n              var a = {\n                  myParent: f.parentNode || c.body,\n                  position: v.getPropertyValue(f, 'position'),\n                  fontSize: v.getPropertyValue(f, 'fontSize')\n                },\n                d = a.position === I.lastPosition && a.myParent === I.lastParent,\n                e = a.fontSize === I.lastFontSize\n              ;(I.lastParent = a.myParent), (I.lastPosition = a.position), (I.lastFontSize = a.fontSize)\n              var h = 100,\n                i = {}\n              if (e && d)\n                (i.emToPx = I.lastEmToPx),\n                  (i.percentToPxWidth = I.lastPercentToPxWidth),\n                  (i.percentToPxHeight = I.lastPercentToPxHeight)\n              else {\n                var j = g(f).isSVG ? c.createElementNS('http://www.w3.org/2000/svg', 'rect') : c.createElement('div')\n                t.init(j),\n                  a.myParent.appendChild(j),\n                  m.each(['overflow', 'overflowX', 'overflowY'], function (a, b) {\n                    t.CSS.setPropertyValue(j, b, 'hidden')\n                  }),\n                  t.CSS.setPropertyValue(j, 'position', a.position),\n                  t.CSS.setPropertyValue(j, 'fontSize', a.fontSize),\n                  t.CSS.setPropertyValue(j, 'boxSizing', 'content-box'),\n                  m.each(['minWidth', 'maxWidth', 'width', 'minHeight', 'maxHeight', 'height'], function (a, b) {\n                    t.CSS.setPropertyValue(j, b, h + '%')\n                  }),\n                  t.CSS.setPropertyValue(j, 'paddingLeft', h + 'em'),\n                  (i.percentToPxWidth = I.lastPercentToPxWidth =\n                    (parseFloat(v.getPropertyValue(j, 'width', null, !0)) || 1) / h),\n                  (i.percentToPxHeight = I.lastPercentToPxHeight =\n                    (parseFloat(v.getPropertyValue(j, 'height', null, !0)) || 1) / h),\n                  (i.emToPx = I.lastEmToPx = (parseFloat(v.getPropertyValue(j, 'paddingLeft')) || 1) / h),\n                  a.myParent.removeChild(j)\n              }\n              return (\n                null === I.remToPx && (I.remToPx = parseFloat(v.getPropertyValue(c.body, 'fontSize')) || 16),\n                null === I.vwToPx &&\n                  ((I.vwToPx = parseFloat(b.innerWidth) / 100), (I.vhToPx = parseFloat(b.innerHeight) / 100)),\n                (i.remToPx = I.remToPx),\n                (i.vwToPx = I.vwToPx),\n                (i.vhToPx = I.vhToPx),\n                t.debug >= 1 && console.log('Unit ratios: ' + JSON.stringify(i), f),\n                i\n              )\n            }\n            if (h.begin && 0 === y)\n              try {\n                h.begin.call(o, o)\n              } catch (r) {\n                setTimeout(function () {\n                  throw r\n                }, 1)\n              }\n            if ('scroll' === C) {\n              var u,\n                w,\n                z,\n                A = /^x$/i.test(h.axis) ? 'Left' : 'Top',\n                D = parseFloat(h.offset) || 0\n              h.container\n                ? p.isWrapped(h.container) || p.isNode(h.container)\n                  ? ((h.container = h.container[0] || h.container),\n                    (u = h.container['scroll' + A]),\n                    (z = u + m(f).position()[A.toLowerCase()] + D))\n                  : (h.container = null)\n                : ((u = t.State.scrollAnchor[t.State['scrollProperty' + A]]),\n                  (w = t.State.scrollAnchor[t.State['scrollProperty' + ('Left' === A ? 'Top' : 'Left')]]),\n                  (z = m(f).offset()[A.toLowerCase()] + D)),\n                (i = {\n                  scroll: {\n                    rootPropertyValue: !1,\n                    startValue: u,\n                    currentValue: u,\n                    endValue: z,\n                    unitType: '',\n                    easing: h.easing,\n                    scrollData: { container: h.container, direction: A, alternateValue: w }\n                  },\n                  element: f\n                }),\n                t.debug && console.log('tweensContainer (scroll): ', i.scroll, f)\n            } else if ('reverse' === C) {\n              if (!g(f).tweensContainer) return void m.dequeue(f, h.queue)\n              'none' === g(f).opts.display && (g(f).opts.display = 'auto'),\n                'hidden' === g(f).opts.visibility && (g(f).opts.visibility = 'visible'),\n                (g(f).opts.loop = !1),\n                (g(f).opts.begin = null),\n                (g(f).opts.complete = null),\n                s.easing || delete h.easing,\n                s.duration || delete h.duration,\n                (h = m.extend({}, g(f).opts, h))\n              var E = m.extend(!0, {}, g(f).tweensContainer)\n              for (var F in E)\n                if ('element' !== F) {\n                  var G = E[F].startValue\n                  ;(E[F].startValue = E[F].currentValue = E[F].endValue),\n                    (E[F].endValue = G),\n                    p.isEmptyObject(s) || (E[F].easing = h.easing),\n                    t.debug && console.log('reverse tweensContainer (' + F + '): ' + JSON.stringify(E[F]), f)\n                }\n              i = E\n            } else if ('start' === C) {\n              var E\n              g(f).tweensContainer && g(f).isAnimating === !0 && (E = g(f).tweensContainer),\n                m.each(q, function (b, c) {\n                  if (RegExp('^' + v.Lists.colors.join('$|^') + '$').test(b)) {\n                    var e = a(c, !0),\n                      f = e[0],\n                      g = e[1],\n                      h = e[2]\n                    if (v.RegEx.isHex.test(f)) {\n                      for (\n                        var i = ['Red', 'Green', 'Blue'],\n                          j = v.Values.hexToRgb(f),\n                          k = h ? v.Values.hexToRgb(h) : d,\n                          l = 0;\n                        l < i.length;\n                        l++\n                      ) {\n                        var m = [j[l]]\n                        g && m.push(g), k !== d && m.push(k[l]), (q[b + i[l]] = m)\n                      }\n                      delete q[b]\n                    }\n                  }\n                })\n              for (var H in q) {\n                var K = a(q[H]),\n                  L = K[0],\n                  M = K[1],\n                  N = K[2]\n                H = v.Names.camelCase(H)\n                var O = v.Hooks.getRoot(H),\n                  P = !1\n                if (\n                  g(f).isSVG ||\n                  'tween' === O ||\n                  v.Names.prefixCheck(O)[1] !== !1 ||\n                  v.Normalizations.registered[O] !== d\n                ) {\n                  ;((h.display !== d && null !== h.display && 'none' !== h.display) ||\n                    (h.visibility !== d && 'hidden' !== h.visibility)) &&\n                    /opacity|filter/.test(H) &&\n                    !N &&\n                    0 !== L &&\n                    (N = 0),\n                    h._cacheValues && E && E[H]\n                      ? (N === d && (N = E[H].endValue + E[H].unitType), (P = g(f).rootPropertyValueCache[O]))\n                      : v.Hooks.registered[H]\n                      ? N === d\n                        ? ((P = v.getPropertyValue(f, O)), (N = v.getPropertyValue(f, H, P)))\n                        : (P = v.Hooks.templates[O][1])\n                      : N === d && (N = v.getPropertyValue(f, H))\n                  var Q,\n                    R,\n                    S,\n                    T = !1\n                  if (\n                    ((Q = l(H, N)),\n                    (N = Q[0]),\n                    (S = Q[1]),\n                    (Q = l(H, L)),\n                    (L = Q[0].replace(/^([+-\\/*])=/, function (a, b) {\n                      return (T = b), ''\n                    })),\n                    (R = Q[1]),\n                    (N = parseFloat(N) || 0),\n                    (L = parseFloat(L) || 0),\n                    '%' === R &&\n                      (/^(fontSize|lineHeight)$/.test(H)\n                        ? ((L /= 100), (R = 'em'))\n                        : /^scale/.test(H)\n                        ? ((L /= 100), (R = ''))\n                        : /(Red|Green|Blue)$/i.test(H) && ((L = (L / 100) * 255), (R = ''))),\n                    /[\\/*]/.test(T))\n                  )\n                    R = S\n                  else if (S !== R && 0 !== N)\n                    if (0 === L) R = S\n                    else {\n                      e = e || n()\n                      var U =\n                        /margin|padding|left|right|width|text|word|letter/i.test(H) || /X$/.test(H) || 'x' === H\n                          ? 'x'\n                          : 'y'\n                      switch (S) {\n                        case '%':\n                          N *= 'x' === U ? e.percentToPxWidth : e.percentToPxHeight\n                          break\n                        case 'px':\n                          break\n                        default:\n                          N *= e[S + 'ToPx']\n                      }\n                      switch (R) {\n                        case '%':\n                          N *= 1 / ('x' === U ? e.percentToPxWidth : e.percentToPxHeight)\n                          break\n                        case 'px':\n                          break\n                        default:\n                          N *= 1 / e[R + 'ToPx']\n                      }\n                    }\n                  switch (T) {\n                    case '+':\n                      L = N + L\n                      break\n                    case '-':\n                      L = N - L\n                      break\n                    case '*':\n                      L = N * L\n                      break\n                    case '/':\n                      L = N / L\n                  }\n                  ;(i[H] = {\n                    rootPropertyValue: P,\n                    startValue: N,\n                    currentValue: N,\n                    endValue: L,\n                    unitType: R,\n                    easing: M\n                  }),\n                    t.debug && console.log('tweensContainer (' + H + '): ' + JSON.stringify(i[H]), f)\n                } else t.debug && console.log('Skipping [' + O + '] due to a lack of browser support.')\n              }\n              i.element = f\n            }\n            i.element &&\n              (v.Values.addClass(f, 'velocity-animating'),\n              J.push(i),\n              '' === h.queue && ((g(f).tweensContainer = i), (g(f).opts = h)),\n              (g(f).isAnimating = !0),\n              y === x - 1\n                ? (t.State.calls.push([J, o, h, null, B.resolver]),\n                  t.State.isTicking === !1 && ((t.State.isTicking = !0), k()))\n                : y++)\n          }\n          var e,\n            f = this,\n            h = m.extend({}, t.defaults, s),\n            i = {}\n          switch (\n            (g(f) === d && t.init(f),\n            parseFloat(h.delay) &&\n              h.queue !== !1 &&\n              m.queue(f, h.queue, function (a) {\n                ;(t.velocityQueueEntryFlag = !0),\n                  (g(f).delayTimer = { setTimeout: setTimeout(a, parseFloat(h.delay)), next: a })\n              }),\n            h.duration.toString().toLowerCase())\n          ) {\n            case 'fast':\n              h.duration = 200\n              break\n            case 'normal':\n              h.duration = r\n              break\n            case 'slow':\n              h.duration = 600\n              break\n            default:\n              h.duration = parseFloat(h.duration) || 1\n          }\n          t.mock !== !1 &&\n            (t.mock === !0\n              ? (h.duration = h.delay = 1)\n              : ((h.duration *= parseFloat(t.mock) || 1), (h.delay *= parseFloat(t.mock) || 1))),\n            (h.easing = j(h.easing, h.duration)),\n            h.begin && !p.isFunction(h.begin) && (h.begin = null),\n            h.progress && !p.isFunction(h.progress) && (h.progress = null),\n            h.complete && !p.isFunction(h.complete) && (h.complete = null),\n            h.display !== d &&\n              null !== h.display &&\n              ((h.display = h.display.toString().toLowerCase()),\n              'auto' === h.display && (h.display = t.CSS.Values.getDisplayType(f))),\n            h.visibility !== d && null !== h.visibility && (h.visibility = h.visibility.toString().toLowerCase()),\n            (h.mobileHA = h.mobileHA && t.State.isMobile && !t.State.isGingerbread),\n            h.queue === !1\n              ? h.delay\n                ? setTimeout(a, h.delay)\n                : a()\n              : m.queue(f, h.queue, function (b, c) {\n                  return c === !0 ? (B.promise && B.resolver(o), !0) : ((t.velocityQueueEntryFlag = !0), void a(b))\n                }),\n            ('' !== h.queue && 'fx' !== h.queue) || 'inprogress' === m.queue(f)[0] || m.dequeue(f)\n        }\n        var h,\n          i,\n          n,\n          o,\n          q,\n          s,\n          u =\n            arguments[0] &&\n            (arguments[0].p ||\n              (m.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) ||\n              p.isString(arguments[0].properties))\n        if (\n          (p.isWrapped(this)\n            ? ((h = !1), (n = 0), (o = this), (i = this))\n            : ((h = !0), (n = 1), (o = u ? arguments[0].elements || arguments[0].e : arguments[0])),\n          (o = f(o)))\n        ) {\n          u\n            ? ((q = arguments[0].properties || arguments[0].p), (s = arguments[0].options || arguments[0].o))\n            : ((q = arguments[n]), (s = arguments[n + 1]))\n          var x = o.length,\n            y = 0\n          if (!/^(stop|finish|finishAll)$/i.test(q) && !m.isPlainObject(s)) {\n            var z = n + 1\n            s = {}\n            for (var A = z; A < arguments.length; A++)\n              p.isArray(arguments[A]) || (!/^(fast|normal|slow)$/i.test(arguments[A]) && !/^\\d/.test(arguments[A]))\n                ? p.isString(arguments[A]) || p.isArray(arguments[A])\n                  ? (s.easing = arguments[A])\n                  : p.isFunction(arguments[A]) && (s.complete = arguments[A])\n                : (s.duration = arguments[A])\n          }\n          var B = { promise: null, resolver: null, rejecter: null }\n          h &&\n            t.Promise &&\n            (B.promise = new t.Promise(function (a, b) {\n              ;(B.resolver = a), (B.rejecter = b)\n            }))\n          var C\n          switch (q) {\n            case 'scroll':\n              C = 'scroll'\n              break\n            case 'reverse':\n              C = 'reverse'\n              break\n            case 'finish':\n            case 'finishAll':\n            case 'stop':\n              m.each(o, function (a, b) {\n                g(b) &&\n                  g(b).delayTimer &&\n                  (clearTimeout(g(b).delayTimer.setTimeout),\n                  g(b).delayTimer.next && g(b).delayTimer.next(),\n                  delete g(b).delayTimer),\n                  'finishAll' !== q ||\n                    (s !== !0 && !p.isString(s)) ||\n                    (m.each(m.queue(b, p.isString(s) ? s : ''), function (a, b) {\n                      p.isFunction(b) && b()\n                    }),\n                    m.queue(b, p.isString(s) ? s : '', []))\n              })\n              var D = []\n              return (\n                m.each(t.State.calls, function (a, b) {\n                  b &&\n                    m.each(b[1], function (c, e) {\n                      var f = s === d ? '' : s\n                      return f === !0 || b[2].queue === f || (s === d && b[2].queue === !1)\n                        ? void m.each(o, function (c, d) {\n                            d === e &&\n                              ((s === !0 || p.isString(s)) &&\n                                (m.each(m.queue(d, p.isString(s) ? s : ''), function (a, b) {\n                                  p.isFunction(b) && b(null, !0)\n                                }),\n                                m.queue(d, p.isString(s) ? s : '', [])),\n                              'stop' === q\n                                ? (g(d) &&\n                                    g(d).tweensContainer &&\n                                    f !== !1 &&\n                                    m.each(g(d).tweensContainer, function (a, b) {\n                                      b.endValue = b.currentValue\n                                    }),\n                                  D.push(a))\n                                : ('finish' === q || 'finishAll' === q) && (b[2].duration = 1))\n                          })\n                        : !0\n                    })\n                }),\n                'stop' === q &&\n                  (m.each(D, function (a, b) {\n                    l(b, !0)\n                  }),\n                  B.promise && B.resolver(o)),\n                a()\n              )\n            default:\n              if (!m.isPlainObject(q) || p.isEmptyObject(q)) {\n                if (p.isString(q) && t.Redirects[q]) {\n                  var E = m.extend({}, s),\n                    F = E.duration,\n                    G = E.delay || 0\n                  return (\n                    E.backwards === !0 && (o = m.extend(!0, [], o).reverse()),\n                    m.each(o, function (a, b) {\n                      parseFloat(E.stagger)\n                        ? (E.delay = G + parseFloat(E.stagger) * a)\n                        : p.isFunction(E.stagger) && (E.delay = G + E.stagger.call(b, a, x)),\n                        E.drag &&\n                          ((E.duration = parseFloat(F) || (/^(callout|transition)/.test(q) ? 1e3 : r)),\n                          (E.duration = Math.max(\n                            E.duration * (E.backwards ? 1 - a / x : (a + 1) / x),\n                            0.75 * E.duration,\n                            200\n                          ))),\n                        t.Redirects[q].call(b, b, E || {}, a, x, o, B.promise ? B : d)\n                    }),\n                    a()\n                  )\n                }\n                var H =\n                  'Velocity: First argument (' +\n                  q +\n                  ') was not a property map, a known action, or a registered redirect. Aborting.'\n                return B.promise ? B.rejecter(new Error(H)) : console.log(H), a()\n              }\n              C = 'start'\n          }\n          var I = {\n              lastParent: null,\n              lastPosition: null,\n              lastFontSize: null,\n              lastPercentToPxWidth: null,\n              lastPercentToPxHeight: null,\n              lastEmToPx: null,\n              remToPx: null,\n              vwToPx: null,\n              vhToPx: null\n            },\n            J = []\n          m.each(o, function (a, b) {\n            p.isNode(b) && e.call(b)\n          })\n          var K,\n            E = m.extend({}, t.defaults, s)\n          if (((E.loop = parseInt(E.loop)), (K = 2 * E.loop - 1), E.loop))\n            for (var L = 0; K > L; L++) {\n              var M = { delay: E.delay, progress: E.progress }\n              L === K - 1 && ((M.display = E.display), (M.visibility = E.visibility), (M.complete = E.complete)),\n                w(o, 'reverse', M)\n            }\n          return a()\n        }\n      }\n      ;(t = m.extend(w, t)), (t.animate = w)\n      var x = b.requestAnimationFrame || o\n      return (\n        t.State.isMobile ||\n          c.hidden === d ||\n          c.addEventListener('visibilitychange', function () {\n            c.hidden\n              ? ((x = function (a) {\n                  return setTimeout(function () {\n                    a(!0)\n                  }, 16)\n                }),\n                k())\n              : (x = b.requestAnimationFrame || o)\n          }),\n        (a.Velocity = t),\n        a !== b && ((a.fn.velocity = w), (a.fn.velocity.defaults = t.defaults)),\n        m.each(['Down', 'Up'], function (a, b) {\n          t.Redirects['slide' + b] = function (a, c, e, f, g, h) {\n            var i = m.extend({}, c),\n              j = i.begin,\n              k = i.complete,\n              l = { height: '', marginTop: '', marginBottom: '', paddingTop: '', paddingBottom: '' },\n              n = {}\n            i.display === d &&\n              (i.display =\n                'Down' === b ? ('inline' === t.CSS.Values.getDisplayType(a) ? 'inline-block' : 'block') : 'none'),\n              (i.begin = function () {\n                j && j.call(g, g)\n                for (var c in l) {\n                  n[c] = a.style[c]\n                  var d = t.CSS.getPropertyValue(a, c)\n                  l[c] = 'Down' === b ? [d, 0] : [0, d]\n                }\n                ;(n.overflow = a.style.overflow), (a.style.overflow = 'hidden')\n              }),\n              (i.complete = function () {\n                for (var b in n) a.style[b] = n[b]\n                k && k.call(g, g), h && h.resolver(g)\n              }),\n              t(a, l, i)\n          }\n        }),\n        m.each(['In', 'Out'], function (a, b) {\n          t.Redirects['fade' + b] = function (a, c, e, f, g, h) {\n            var i = m.extend({}, c),\n              j = { opacity: 'In' === b ? 1 : 0 },\n              k = i.complete\n            ;(i.complete =\n              e !== f - 1\n                ? (i.begin = null)\n                : function () {\n                    k && k.call(g, g), h && h.resolver(g)\n                  }),\n              i.display === d && (i.display = 'In' === b ? 'auto' : 'none'),\n              t(this, j, i)\n          }\n        }),\n        t\n      )\n    })(__webpack_provided_window_dot_jQuery || window.Zepto || window, window, document)\n  })\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/velocity/velocity.min.js?");

/***/ }),
/* 14 */
/*!****************************************************!*\
  !*** ./src/public/js/vendor/jscookie/js.cookie.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * JavaScript Cookie v2.1.4\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n  var registeredInModuleLoader = false\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    registeredInModuleLoader = true\n  }\n  if (true) {\n    module.exports = factory()\n    registeredInModuleLoader = true\n  }\n  if (!registeredInModuleLoader) {\n    var OldCookies = window.Cookies\n    var api = (window.Cookies = factory())\n    api.noConflict = function () {\n      window.Cookies = OldCookies\n      return api\n    }\n  }\n})(function () {\n  function extend () {\n    var i = 0\n    var result = {}\n    for (; i < arguments.length; i++) {\n      var attributes = arguments[i]\n      for (var key in attributes) {\n        result[key] = attributes[key]\n      }\n    }\n    return result\n  }\n\n  function init (converter) {\n    function api (key, value, attributes) {\n      var result\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      // Write\n\n      if (arguments.length > 1) {\n        attributes = extend(\n          {\n            path: '/'\n          },\n          api.defaults,\n          attributes\n        )\n\n        if (typeof attributes.expires === 'number') {\n          var expires = new Date()\n          expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e5)\n          attributes.expires = expires\n        }\n\n        // We're using \"expires\" because \"max-age\" is not supported by IE\n        attributes.expires = attributes.expires ? attributes.expires.toUTCString() : ''\n\n        try {\n          result = JSON.stringify(value)\n          if (/^[\\{\\[]/.test(result)) {\n            value = result\n          }\n        } catch (e) {}\n\n        if (!converter.write) {\n          value = encodeURIComponent(String(value)).replace(\n            /%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,\n            decodeURIComponent\n          )\n        } else {\n          value = converter.write(value, key)\n        }\n\n        key = encodeURIComponent(String(key))\n        key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n        key = key.replace(/[\\(\\)]/g, escape)\n\n        var stringifiedAttributes = ''\n\n        for (var attributeName in attributes) {\n          if (!attributes[attributeName]) {\n            continue\n          }\n          stringifiedAttributes += '; ' + attributeName\n          if (attributes[attributeName] === true) {\n            continue\n          }\n          stringifiedAttributes += '=' + attributes[attributeName]\n        }\n        return (document.cookie = key + '=' + value + stringifiedAttributes)\n      }\n\n      // Read\n\n      if (!key) {\n        result = {}\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all. Also prevents odd result when\n      // calling \"get()\"\n      var cookies = document.cookie ? document.cookie.split('; ') : []\n      var rdecode = /(%[0-9A-Z]{2})+/g\n      var i = 0\n\n      for (; i < cookies.length; i++) {\n        var parts = cookies[i].split('=')\n        var cookie = parts.slice(1).join('=')\n\n        if (cookie.charAt(0) === '\"') {\n          cookie = cookie.slice(1, -1)\n        }\n\n        try {\n          var name = parts[0].replace(rdecode, decodeURIComponent)\n          cookie = converter.read\n            ? converter.read(cookie, name)\n            : converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent)\n\n          if (this.json) {\n            try {\n              cookie = JSON.parse(cookie)\n            } catch (e) {}\n          }\n\n          if (key === name) {\n            result = cookie\n            break\n          }\n\n          if (!key) {\n            result[name] = cookie\n          }\n        } catch (e) {}\n      }\n\n      return result\n    }\n\n    api.set = api\n    api.get = function (key) {\n      return api.call(api, key)\n    }\n    api.getJSON = function () {\n      return api.apply(\n        {\n          json: true\n        },\n        [].slice.call(arguments)\n      )\n    }\n    api.defaults = {}\n\n    api.remove = function (key, attributes) {\n      api(\n        key,\n        '',\n        extend(attributes, {\n          expires: -1\n        })\n      )\n    }\n\n    api.withConverter = init\n\n    return api\n  }\n\n  return init(function () {})\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/jscookie/js.cookie.js?");

/***/ }),
/* 15 */
/*!***********************************************************!*\
  !*** ./src/public/js/vendor/easypiechart/easypiechart.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\n/**!\n * easyPieChart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license\n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.5\n **/\n!(function (a, b) {\n   true\n    ? (module.exports = b(__webpack_require__(/*! jquery */ 1)))\n    : 0\n})(this, function (a) {\n  var b = function (a, b) {\n      var c,\n        d = document.createElement('canvas')\n      a.appendChild(d), 'undefined' != typeof G_vmlCanvasManager && G_vmlCanvasManager.initElement(d)\n      var e = d.getContext('2d')\n      d.width = d.height = b.size\n      var f = 1\n      window.devicePixelRatio > 1 &&\n        ((f = window.devicePixelRatio),\n        (d.style.width = d.style.height = [b.size, 'px'].join('')),\n        (d.width = d.height = b.size * f),\n        e.scale(f, f)),\n        e.translate(b.size / 2, b.size / 2),\n        e.rotate((-0.5 + b.rotate / 180) * Math.PI)\n      var g = (b.size - b.lineWidth) / 2\n      b.scaleColor && b.scaleLength && (g -= b.scaleLength + 2),\n        (Date.now =\n          Date.now ||\n          function () {\n            return +new Date()\n          })\n      var h = function (a, b, c) {\n          c = Math.min(Math.max(-1, c || 0), 1)\n          var d = 0 >= c ? !0 : !1\n          e.beginPath(), e.arc(0, 0, g, 0, 2 * Math.PI * c, d), (e.strokeStyle = a), (e.lineWidth = b), e.stroke()\n        },\n        i = function () {\n          var a, c\n          ;(e.lineWidth = 1), (e.fillStyle = b.scaleColor), e.save()\n          for (var d = 24; d > 0; --d)\n            d % 6 === 0 ? ((c = b.scaleLength), (a = 0)) : ((c = 0.6 * b.scaleLength), (a = b.scaleLength - c)),\n              e.fillRect(-b.size / 2 + a, 0, c, 1),\n              e.rotate(Math.PI / 12)\n          e.restore()\n        },\n        j = (function () {\n          return (\n            window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame ||\n            function (a) {\n              window.setTimeout(a, 1e3 / 60)\n            }\n          )\n        })(),\n        k = function () {\n          b.scaleColor && i(), b.trackColor && h(b.trackColor, b.lineWidth, 1)\n        }\n      ;(this.getCanvas = function () {\n        return d\n      }),\n        (this.getCtx = function () {\n          return e\n        }),\n        (this.clear = function () {\n          e.clearRect(b.size / -2, b.size / -2, b.size, b.size)\n        }),\n        (this.draw = function (a) {\n          b.scaleColor || b.trackColor\n            ? e.getImageData && e.putImageData\n              ? c\n                ? e.putImageData(c, 0, 0)\n                : (k(), (c = e.getImageData(0, 0, b.size * f, b.size * f)))\n              : (this.clear(), k())\n            : this.clear(),\n            (e.lineCap = b.lineCap)\n          var d\n          ;(d = 'function' == typeof b.barColor ? b.barColor(a) : b.barColor), h(d, b.lineWidth, a / 100)\n        }.bind(this)),\n        (this.animate = function (a, c) {\n          var d = Date.now()\n          b.onStart(a, c)\n          var e = function () {\n            var f = Math.min(Date.now() - d, b.animate.duration),\n              g = b.easing(this, f, a, c - a, b.animate.duration)\n            this.draw(g), b.onStep(a, c, g), f >= b.animate.duration ? b.onStop(a, c) : j(e)\n          }.bind(this)\n          j(e)\n        }.bind(this))\n    },\n    c = function (a, c) {\n      var d = {\n        barColor: '#ef1e25',\n        trackColor: '#f9f9f9',\n        scaleColor: '#dfe0e0',\n        scaleLength: 5,\n        lineCap: 'round',\n        lineWidth: 3,\n        size: 110,\n        rotate: 0,\n        animate: { duration: 1e3, enabled: !0 },\n        easing: function (a, b, c, d, e) {\n          return (b /= e / 2), 1 > b ? (d / 2) * b * b + c : (-d / 2) * (--b * (b - 2) - 1) + c\n        },\n        onStart: function () {},\n        onStep: function () {},\n        onStop: function () {}\n      }\n      if ('undefined' != typeof b) d.renderer = b\n      else {\n        if ('undefined' == typeof SVGRenderer) throw new Error('Please load either the SVG- or the CanvasRenderer')\n        d.renderer = SVGRenderer\n      }\n      var e = {},\n        f = 0,\n        g = function () {\n          ;(this.el = a), (this.options = e)\n          for (var b in d)\n            d.hasOwnProperty(b) &&\n              ((e[b] = c && 'undefined' != typeof c[b] ? c[b] : d[b]),\n              'function' == typeof e[b] && (e[b] = e[b].bind(this)))\n          ;(e.easing =\n            'string' == typeof e.easing && 'undefined' != typeof jQuery && jQuery.isFunction(jQuery.easing[e.easing])\n              ? jQuery.easing[e.easing]\n              : d.easing),\n            'number' == typeof e.animate && (e.animate = { duration: e.animate, enabled: !0 }),\n            'boolean' != typeof e.animate || e.animate || (e.animate = { duration: 1e3, enabled: e.animate }),\n            (this.renderer = new e.renderer(a, e)),\n            this.renderer.draw(f),\n            a.dataset && a.dataset.percent\n              ? this.update(parseFloat(a.dataset.percent))\n              : a.getAttribute &&\n                a.getAttribute('data-percent') &&\n                this.update(parseFloat(a.getAttribute('data-percent')))\n        }.bind(this)\n      ;(this.update = function (a) {\n        return (\n          (a = parseFloat(a)), e.animate.enabled ? this.renderer.animate(f, a) : this.renderer.draw(a), (f = a), this\n        )\n      }.bind(this)),\n        (this.disableAnimation = function () {\n          return (e.animate.enabled = !1), this\n        }),\n        (this.enableAnimation = function () {\n          return (e.animate.enabled = !0), this\n        }),\n        g()\n    }\n  a.fn.easyPieChart = function (b) {\n    return this.each(function () {\n      var d\n      a.data(this, 'easyPieChart') ||\n        ((d = a.extend({}, b, a(this).data())), a.data(this, 'easyPieChart', new c(this, d)))\n    })\n  }\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/easypiechart/easypiechart.js?");

/***/ }),
/* 16 */
/*!*****************************************************!*\
  !*** ./src/public/js/vendor/countup/countUp.min.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!(function (t, a) {\n   true\n    ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    : 0\n})(this, function (t, a, e) {\n  /*\n\n countUp.js\n (c) 2014-2015 @inorganik\n Licensed under the MIT license.\n\n */\n  var n = function (t, a, e, n, i, r) {\n    for (var o = 0, s = ['webkit', 'moz', 'ms', 'o'], m = 0; m < s.length && !window.requestAnimationFrame; ++m)\n      (window.requestAnimationFrame = window[s[m] + 'RequestAnimationFrame']),\n        (window.cancelAnimationFrame =\n          window[s[m] + 'CancelAnimationFrame'] || window[s[m] + 'CancelRequestAnimationFrame'])\n    window.requestAnimationFrame ||\n      (window.requestAnimationFrame = function (t, a) {\n        var e = new Date().getTime(),\n          n = Math.max(0, 16 - (e - o)),\n          i = window.setTimeout(function () {\n            t(e + n)\n          }, n)\n        return (o = e + n), i\n      }),\n      window.cancelAnimationFrame ||\n        (window.cancelAnimationFrame = function (t) {\n          clearTimeout(t)\n        }),\n      (this.options = { useEasing: !0, useGrouping: !0, separator: ',', decimal: '.', postFormatter: null })\n    for (var u in r) r.hasOwnProperty(u) && (this.options[u] = r[u])\n    '' === this.options.separator && (this.options.useGrouping = !1),\n      this.options.prefix || (this.options.prefix = ''),\n      this.options.suffix || (this.options.suffix = ''),\n      (this.d = 'string' == typeof t ? document.getElementById(t) : t),\n      (this.startVal = Number(a)),\n      (this.endVal = Number(e)),\n      (this.countDown = this.startVal > this.endVal),\n      (this.frameVal = this.startVal),\n      (this.decimals = Math.max(0, n || 0)),\n      (this.dec = Math.pow(10, this.decimals)),\n      (this.duration = 1e3 * Number(i) || 2e3)\n    var l = this\n    ;(this.version = function () {\n      return '1.6.1'\n    }),\n      (this.printValue = function (t) {\n        var a = isNaN(t) ? '--' : l.formatNumber(t)\n        'INPUT' == l.d.tagName\n          ? (this.d.value = a)\n          : 'text' == l.d.tagName || 'tspan' == l.d.tagName\n          ? (this.d.textContent = a)\n          : (this.d.innerHTML = a)\n      }),\n      (this.easeOutExpo = function (t, a, e, n) {\n        return (e * (-Math.pow(2, (-10 * t) / n) + 1) * 1024) / 1023 + a\n      }),\n      (this.count = function (t) {\n        l.startTime || (l.startTime = t), (l.timestamp = t)\n        var a = t - l.startTime\n        ;(l.remaining = l.duration - a),\n          l.options.useEasing\n            ? l.countDown\n              ? (l.frameVal = l.startVal - l.easeOutExpo(a, 0, l.startVal - l.endVal, l.duration))\n              : (l.frameVal = l.easeOutExpo(a, l.startVal, l.endVal - l.startVal, l.duration))\n            : l.countDown\n            ? (l.frameVal = l.startVal - (l.startVal - l.endVal) * (a / l.duration))\n            : (l.frameVal = l.startVal + (l.endVal - l.startVal) * (a / l.duration)),\n          l.countDown\n            ? (l.frameVal = l.frameVal < l.endVal ? l.endVal : l.frameVal)\n            : (l.frameVal = l.frameVal > l.endVal ? l.endVal : l.frameVal),\n          (l.frameVal = Math.floor(l.frameVal * l.dec) / l.dec),\n          l.printValue(l.frameVal),\n          a < l.duration ? (l.rAF = requestAnimationFrame(l.count)) : l.callback && l.callback()\n      }),\n      (this.start = function (t) {\n        return (l.callback = t), (l.rAF = requestAnimationFrame(l.count)), !1\n      }),\n      (this.pauseResume = function () {\n        l.paused\n          ? ((l.paused = !1),\n            delete l.startTime,\n            (l.duration = l.remaining),\n            (l.startVal = l.frameVal),\n            requestAnimationFrame(l.count))\n          : ((l.paused = !0), cancelAnimationFrame(l.rAF))\n      }),\n      (this.reset = function () {\n        ;(l.paused = !1), delete l.startTime, (l.startVal = a), cancelAnimationFrame(l.rAF), l.printValue(l.startVal)\n      }),\n      (this.update = function (t) {\n        cancelAnimationFrame(l.rAF),\n          (l.paused = !1),\n          delete l.startTime,\n          (l.startVal = l.frameVal),\n          (l.endVal = Number(t)),\n          (l.countDown = l.startVal > l.endVal),\n          (l.rAF = requestAnimationFrame(l.count))\n      }),\n      (this.formatNumber = function (t) {\n        ;(t = t.toFixed(l.decimals)), (t += '')\n        var a, e, n, i\n        if (\n          ((a = t.split('.')),\n          (e = a[0]),\n          (n = a.length > 1 ? l.options.decimal + a[1] : ''),\n          (i = /(\\d+)(\\d{3})/),\n          l.options.useGrouping)\n        )\n          for (; i.test(e); ) e = e.replace(i, '$1' + l.options.separator + '$2')\n        var r = l.options.prefix + e + n + l.options.suffix\n        return null != l.options.postFormatter && (r = l.options.postFormatter(r)), r\n      }),\n      l.printValue(l.startVal)\n  }\n  return n\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/countup/countUp.min.js?");

/***/ }),
/* 17 */
/*!*********************************************!*\
  !*** ./src/public/js/vendor/waves/waves.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Waves v0.7.4\n * http://fian.my.id/Waves\n *\n * Copyright 2014 Alfiana E. Sibuea and other contributors\n * Released under the MIT license\n * https://github.com/fians/Waves/blob/master/LICENSE\n */\n\n;(function (window, factory) {\n  'use strict'\n\n  // AMD. Register as an anonymous module.  Wrap in function so we have access\n  // to root via `this`.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return factory.apply(window)\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  }\n\n  // Node. Does not work with strict CommonJS, but only CommonJS-like\n  // environments that support module.exports, like Node.\n  else {}\n})(typeof __webpack_require__.g === 'object' ? __webpack_require__.g : this, function () {\n  'use strict'\n\n  var Waves = Waves || {}\n  var $$ = document.querySelectorAll.bind(document)\n  var toString = Object.prototype.toString\n  var isTouchAvailable = 'ontouchstart' in window\n\n  // Find exact position of element\n  function isWindow (obj) {\n    return obj !== null && obj === obj.window\n  }\n\n  function getWindow (elem) {\n    return isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView\n  }\n\n  function isObject (value) {\n    var type = typeof value\n    return type === 'function' || (type === 'object' && !!value)\n  }\n\n  function isDOMNode (obj) {\n    return isObject(obj) && obj.nodeType > 0\n  }\n\n  function getWavesElements (nodes) {\n    var stringRepr = toString.call(nodes)\n\n    if (stringRepr === '[object String]') {\n      return $$(nodes)\n    } else if (\n      isObject(nodes) &&\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(stringRepr) &&\n      nodes.hasOwnProperty('length')\n    ) {\n      return nodes\n    } else if (isDOMNode(nodes)) {\n      return [nodes]\n    }\n\n    return []\n  }\n\n  function offset (elem) {\n    var docElem,\n      win,\n      box = { top: 0, left: 0 },\n      doc = elem && elem.ownerDocument\n\n    docElem = doc.documentElement\n\n    if (typeof elem.getBoundingClientRect !== typeof undefined) {\n      box = elem.getBoundingClientRect()\n    }\n    win = getWindow(doc)\n    return {\n      top: box.top + win.pageYOffset - docElem.clientTop,\n      left: box.left + win.pageXOffset - docElem.clientLeft\n    }\n  }\n\n  function convertStyle (styleObj) {\n    var style = ''\n\n    for (var prop in styleObj) {\n      if (styleObj.hasOwnProperty(prop)) {\n        style += prop + ':' + styleObj[prop] + ';'\n      }\n    }\n\n    return style\n  }\n\n  var Effect = {\n    // Effect duration\n    duration: 750,\n\n    // Effect delay (check for scroll before showing effect)\n    delay: 200,\n\n    show: function (e, element, velocity) {\n      // Disable right click\n      if (e.button === 2) {\n        return false\n      }\n\n      element = element || this\n\n      // Create ripple\n      var ripple = document.createElement('div')\n      ripple.className = 'waves-ripple waves-rippling'\n      element.appendChild(ripple)\n\n      // Get click coordinate and element width\n      var pos = offset(element)\n      var relativeY = 0\n      var relativeX = 0\n      // Support for touch devices\n      if ('touches' in e && e.touches.length) {\n        relativeY = e.touches[0].pageY - pos.top\n        relativeX = e.touches[0].pageX - pos.left\n      }\n      //Normal case\n      else {\n        relativeY = e.pageY - pos.top\n        relativeX = e.pageX - pos.left\n      }\n      // Support for synthetic events\n      relativeX = relativeX >= 0 ? relativeX : 0\n      relativeY = relativeY >= 0 ? relativeY : 0\n\n      var scale = 'scale(' + (element.clientWidth / 100) * 3 + ')'\n      var translate = 'translate(0,0)'\n\n      if (velocity) {\n        translate = 'translate(' + velocity.x + 'px, ' + velocity.y + 'px)'\n      }\n\n      // Attach data to element\n      ripple.setAttribute('data-hold', Date.now())\n      ripple.setAttribute('data-x', relativeX)\n      ripple.setAttribute('data-y', relativeY)\n      ripple.setAttribute('data-scale', scale)\n      ripple.setAttribute('data-translate', translate)\n\n      // Set ripple position\n      var rippleStyle = {\n        top: relativeY + 'px',\n        left: relativeX + 'px'\n      }\n\n      ripple.classList.add('waves-notransition')\n      ripple.setAttribute('style', convertStyle(rippleStyle))\n      ripple.classList.remove('waves-notransition')\n\n      // Scale the ripple\n      rippleStyle['-webkit-transform'] = scale + ' ' + translate\n      rippleStyle['-moz-transform'] = scale + ' ' + translate\n      rippleStyle['-ms-transform'] = scale + ' ' + translate\n      rippleStyle['-o-transform'] = scale + ' ' + translate\n      rippleStyle.transform = scale + ' ' + translate\n      rippleStyle.opacity = '1'\n\n      var duration = e.type === 'mousemove' ? 2500 : Effect.duration\n      rippleStyle['-webkit-transition-duration'] = duration + 'ms'\n      rippleStyle['-moz-transition-duration'] = duration + 'ms'\n      rippleStyle['-o-transition-duration'] = duration + 'ms'\n      rippleStyle['transition-duration'] = duration + 'ms'\n\n      ripple.setAttribute('style', convertStyle(rippleStyle))\n    },\n\n    hide: function (e, element) {\n      element = element || this\n\n      var ripples = element.getElementsByClassName('waves-rippling')\n\n      for (var i = 0, len = ripples.length; i < len; i++) {\n        removeRipple(e, element, ripples[i])\n      }\n    }\n  }\n\n  /**\n   * Collection of wrapper for HTML element that only have single tag\n   * like <input> and <img>\n   */\n  var TagWrapper = {\n    // Wrap <input> tag so it can perform the effect\n    input: function (element) {\n      var parent = element.parentNode\n\n      // If input already have parent just pass through\n      if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\n        return\n      }\n\n      // Put element class and style to the specified parent\n      var wrapper = document.createElement('i')\n      wrapper.className = element.className + ' waves-input-wrapper'\n      element.className = 'waves-button-input'\n\n      // Put element as child\n      parent.replaceChild(wrapper, element)\n      wrapper.appendChild(element)\n\n      // Apply element color and background color to wrapper\n      var elementStyle = window.getComputedStyle(element, null)\n      var color = elementStyle.color\n      var backgroundColor = elementStyle.backgroundColor\n\n      wrapper.setAttribute('style', 'color:' + color + ';background:' + backgroundColor)\n      element.setAttribute('style', 'background-color:rgba(0,0,0,0);')\n    },\n\n    // Wrap <img> tag so it can perform the effect\n    img: function (element) {\n      var parent = element.parentNode\n\n      // If input already have parent just pass through\n      if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\n        return\n      }\n\n      // Put element as child\n      var wrapper = document.createElement('i')\n      parent.replaceChild(wrapper, element)\n      wrapper.appendChild(element)\n    }\n  }\n\n  /**\n   * Hide the effect and remove the ripple. Must be\n   * a separate function to pass the JSLint...\n   */\n  function removeRipple (e, el, ripple) {\n    // Check if the ripple still exist\n    if (!ripple) {\n      return\n    }\n\n    ripple.classList.remove('waves-rippling')\n\n    var relativeX = ripple.getAttribute('data-x')\n    var relativeY = ripple.getAttribute('data-y')\n    var scale = ripple.getAttribute('data-scale')\n    var translate = ripple.getAttribute('data-translate')\n\n    // Get delay beetween mousedown and mouse leave\n    var diff = Date.now() - Number(ripple.getAttribute('data-hold'))\n    var delay = 350 - diff\n\n    if (delay < 0) {\n      delay = 0\n    }\n\n    if (e.type === 'mousemove') {\n      delay = 150\n    }\n\n    // Fade out ripple after delay\n    var duration = e.type === 'mousemove' ? 2500 : Effect.duration\n\n    setTimeout(function () {\n      var style = {\n        top: relativeY + 'px',\n        left: relativeX + 'px',\n        opacity: '0',\n\n        // Duration\n        '-webkit-transition-duration': duration + 'ms',\n        '-moz-transition-duration': duration + 'ms',\n        '-o-transition-duration': duration + 'ms',\n        'transition-duration': duration + 'ms',\n        '-webkit-transform': scale + ' ' + translate,\n        '-moz-transform': scale + ' ' + translate,\n        '-ms-transform': scale + ' ' + translate,\n        '-o-transform': scale + ' ' + translate,\n        transform: scale + ' ' + translate\n      }\n\n      ripple.setAttribute('style', convertStyle(style))\n\n      setTimeout(function () {\n        try {\n          el.removeChild(ripple)\n        } catch (e) {\n          return false\n        }\n      }, duration)\n    }, delay)\n  }\n\n  /**\n   * Disable mousedown event for 500ms during and after touch\n   */\n  var TouchHandler = {\n    /* uses an integer rather than bool so there's no issues with\n     * needing to clear timeouts if another touch event occurred\n     * within the 500ms. Cannot mouseup between touchstart and\n     * touchend, nor in the 500ms after touchend. */\n    touches: 0,\n\n    allowEvent: function (e) {\n      var allow = true\n\n      if (/^(mousedown|mousemove)$/.test(e.type) && TouchHandler.touches) {\n        allow = false\n      }\n\n      return allow\n    },\n    registerEvent: function (e) {\n      var eType = e.type\n\n      if (eType === 'touchstart') {\n        TouchHandler.touches += 1 // push\n      } else if (/^(touchend|touchcancel)$/.test(eType)) {\n        setTimeout(function () {\n          if (TouchHandler.touches) {\n            TouchHandler.touches -= 1 // pop after 500ms\n          }\n        }, 500)\n      }\n    }\n  }\n\n  /**\n   * Delegated click handler for .waves-effect element.\n   * returns null when .waves-effect element not in \"click tree\"\n   */\n  function getWavesEffectElement (e) {\n    if (TouchHandler.allowEvent(e) === false) {\n      return null\n    }\n\n    var element = null\n    var target = e.target || e.srcElement\n\n    while (target.parentElement !== null) {\n      if (target.classList.contains('waves-effect') && !(target instanceof SVGElement)) {\n        element = target\n        break\n      }\n      target = target.parentElement\n    }\n\n    return element\n  }\n\n  /**\n   * Bubble the click and show effect if .waves-effect elem was found\n   */\n  function showEffect (e) {\n    // Disable effect if element has \"disabled\" property on it\n    // In some cases, the event is not triggered by the current element\n    // if (e.target.getAttribute('disabled') !== null) {\n    //     return;\n    // }\n\n    var element = getWavesEffectElement(e)\n\n    if (element !== null) {\n      // Make it sure the element has either disabled property, disabled attribute or 'disabled' class\n      if (element.disabled || element.getAttribute('disabled') || element.classList.contains('disabled')) {\n        return\n      }\n\n      TouchHandler.registerEvent(e)\n\n      if (e.type === 'touchstart' && Effect.delay) {\n        var hidden = false\n\n        var timer = setTimeout(function () {\n          timer = null\n          Effect.show(e, element)\n        }, Effect.delay)\n\n        var hideEffect = function (hideEvent) {\n          // if touch hasn't moved, and effect not yet started: start effect now\n          if (timer) {\n            clearTimeout(timer)\n            timer = null\n            Effect.show(e, element)\n          }\n          if (!hidden) {\n            hidden = true\n            Effect.hide(hideEvent, element)\n          }\n        }\n\n        var touchMove = function (moveEvent) {\n          if (timer) {\n            clearTimeout(timer)\n            timer = null\n          }\n          hideEffect(moveEvent)\n        }\n\n        element.addEventListener('touchmove', touchMove, false)\n        element.addEventListener('touchend', hideEffect, false)\n        element.addEventListener('touchcancel', hideEffect, false)\n      } else {\n        Effect.show(e, element)\n\n        if (isTouchAvailable) {\n          element.addEventListener('touchend', Effect.hide, false)\n          element.addEventListener('touchcancel', Effect.hide, false)\n        }\n\n        element.addEventListener('mouseup', Effect.hide, false)\n        element.addEventListener('mouseleave', Effect.hide, false)\n      }\n    }\n  }\n\n  Waves.init = function (options) {\n    var body = document.body\n\n    options = options || {}\n\n    if ('duration' in options) {\n      Effect.duration = options.duration\n    }\n\n    if ('delay' in options) {\n      Effect.delay = options.delay\n    }\n\n    if (isTouchAvailable) {\n      body.addEventListener('touchstart', showEffect, false)\n      body.addEventListener('touchcancel', TouchHandler.registerEvent, false)\n      body.addEventListener('touchend', TouchHandler.registerEvent, false)\n    }\n\n    body.addEventListener('mousedown', showEffect, false)\n  }\n\n  /**\n   * Attach Waves to dynamically loaded inputs, or add .waves-effect and other\n   * waves classes to a set of elements. Set drag to true if the ripple mouseover\n   * or skimming effect should be applied to the elements.\n   */\n  Waves.attach = function (elements, classes) {\n    elements = getWavesElements(elements)\n\n    if (toString.call(classes) === '[object Array]') {\n      classes = classes.join(' ')\n    }\n\n    classes = classes ? ' ' + classes : ''\n\n    var element, tagName\n\n    for (var i = 0, len = elements.length; i < len; i++) {\n      element = elements[i]\n      tagName = element.tagName.toLowerCase()\n\n      if (['input', 'img'].indexOf(tagName) !== -1) {\n        TagWrapper[tagName](element)\n        element = element.parentElement\n      }\n\n      if (element.className.indexOf('waves-effect') === -1) {\n        element.className += ' waves-effect' + classes\n      }\n    }\n  }\n\n  /**\n   * Cause a ripple to appear in an element via code.\n   */\n  Waves.ripple = function (elements, options) {\n    elements = getWavesElements(elements)\n    var elementsLen = elements.length\n\n    options = options || {}\n    options.wait = options.wait || 0\n    options.position = options.position || null // default = centre of element\n\n    if (elementsLen) {\n      var element,\n        pos,\n        off,\n        centre = {},\n        i = 0\n      var mousedown = {\n        type: 'mousedown',\n        button: 1\n      }\n      var hideRipple = function (mouseup, element) {\n        return function () {\n          Effect.hide(mouseup, element)\n        }\n      }\n\n      for (; i < elementsLen; i++) {\n        element = elements[i]\n        pos = options.position || {\n          x: element.clientWidth / 2,\n          y: element.clientHeight / 2\n        }\n\n        off = offset(element)\n        centre.x = off.left + pos.x\n        centre.y = off.top + pos.y\n\n        mousedown.pageX = centre.x\n        mousedown.pageY = centre.y\n\n        Effect.show(mousedown, element)\n\n        if (options.wait >= 0 && options.wait !== null) {\n          var mouseup = {\n            type: 'mouseup',\n            button: 1\n          }\n\n          setTimeout(hideRipple(mouseup, element), options.wait)\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove all ripples from an element.\n   */\n  Waves.calm = function (elements) {\n    elements = getWavesElements(elements)\n    var mouseup = {\n      type: 'mouseup',\n      button: 1\n    }\n\n    for (var i = 0, len = elements.length; i < len; i++) {\n      Effect.hide(mouseup, elements[i])\n    }\n  }\n\n  /**\n   * Deprecated API fallback\n   */\n  Waves.displayEffect = function (options) {\n    console.error(\n      'Waves.displayEffect() has been deprecated and will be removed in future version. Please use Waves.init() to initialize Waves effect'\n    )\n    Waves.init(options)\n  }\n\n  return Waves\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/waves/waves.js?");

/***/ }),
/* 18 */
/*!***************************************************!*\
  !*** ./src/public/js/vendor/tether/tether.min.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(t,e){ true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this,function(t,e,o){\"use strict\";function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function n(t){var e=t.getBoundingClientRect(),o={};for(var i in e)o[i]=e[i];if(t.ownerDocument!==document){var r=t.ownerDocument.defaultView.frameElement;if(r){var s=n(r);o.top+=s.top,o.bottom+=s.top,o.left+=s.left,o.right+=s.left}}return o}function r(t){var e=getComputedStyle(t)||{},o=e.position,i=[];if(\"fixed\"===o)return[t];for(var n=t;(n=n.parentNode)&&n&&1===n.nodeType;){var r=void 0;try{r=getComputedStyle(n)}catch(s){}if(\"undefined\"==typeof r||null===r)return i.push(n),i;var a=r,f=a.overflow,l=a.overflowX,h=a.overflowY;/(auto|scroll)/.test(f+h+l)&&(\"absolute\"!==o||[\"relative\",\"absolute\",\"fixed\"].indexOf(r.position)>=0)&&i.push(n)}return i.push(t.ownerDocument.body),t.ownerDocument!==document&&i.push(t.ownerDocument.defaultView),i}function s(){A&&document.body.removeChild(A),A=null}function a(t){var e=void 0;t===document?(e=document,t=document.documentElement):e=t.ownerDocument;var o=e.documentElement,i=n(t),r=P();return i.top-=r.top,i.left-=r.left,\"undefined\"==typeof i.width&&(i.width=document.body.scrollWidth-i.left-i.right),\"undefined\"==typeof i.height&&(i.height=document.body.scrollHeight-i.top-i.bottom),i.top=i.top-o.clientTop,i.left=i.left-o.clientLeft,i.right=e.body.clientWidth-i.width-i.left,i.bottom=e.body.clientHeight-i.height-i.top,i}function f(t){return t.offsetParent||document.documentElement}function l(){if(M)return M;var t=document.createElement(\"div\");t.style.width=\"100%\",t.style.height=\"200px\";var e=document.createElement(\"div\");h(e.style,{position:\"absolute\",top:0,left:0,pointerEvents:\"none\",visibility:\"hidden\",width:\"200px\",height:\"150px\",overflow:\"hidden\"}),e.appendChild(t),document.body.appendChild(e);var o=t.offsetWidth;e.style.overflow=\"scroll\";var i=t.offsetWidth;o===i&&(i=e.clientWidth),document.body.removeChild(e);var n=o-i;return M={width:n,height:n}}function h(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e=[];return Array.prototype.push.apply(e,arguments),e.slice(1).forEach(function(e){if(e)for(var o in e)({}).hasOwnProperty.call(e,o)&&(t[o]=e[o])}),t}function d(t,e){if(\"undefined\"!=typeof t.classList)e.split(\" \").forEach(function(e){e.trim()&&t.classList.remove(e)});else{var o=new RegExp(\"(^| )\"+e.split(\" \").join(\"|\")+\"( |$)\",\"gi\"),i=c(t).replace(o,\" \");g(t,i)}}function p(t,e){if(\"undefined\"!=typeof t.classList)e.split(\" \").forEach(function(e){e.trim()&&t.classList.add(e)});else{d(t,e);var o=c(t)+(\" \"+e);g(t,o)}}function u(t,e){if(\"undefined\"!=typeof t.classList)return t.classList.contains(e);var o=c(t);return new RegExp(\"(^| )\"+e+\"( |$)\",\"gi\").test(o)}function c(t){return t.className instanceof t.ownerDocument.defaultView.SVGAnimatedString?t.className.baseVal:t.className}function g(t,e){t.setAttribute(\"class\",e)}function m(t,e,o){o.forEach(function(o){e.indexOf(o)===-1&&u(t,o)&&d(t,o)}),e.forEach(function(e){u(t,e)||p(t,e)})}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function v(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function y(t,e){var o=arguments.length<=2||void 0===arguments[2]?1:arguments[2];return t+o>=e&&e>=t-o}function b(){return\"undefined\"!=typeof performance&&\"undefined\"!=typeof performance.now?performance.now():+new Date}function w(){for(var t={top:0,left:0},e=arguments.length,o=Array(e),i=0;i<e;i++)o[i]=arguments[i];return o.forEach(function(e){var o=e.top,i=e.left;\"string\"==typeof o&&(o=parseFloat(o,10)),\"string\"==typeof i&&(i=parseFloat(i,10)),t.top+=o,t.left+=i}),t}function C(t,e){return\"string\"==typeof t.left&&t.left.indexOf(\"%\")!==-1&&(t.left=parseFloat(t.left,10)/100*e.width),\"string\"==typeof t.top&&t.top.indexOf(\"%\")!==-1&&(t.top=parseFloat(t.top,10)/100*e.height),t}function O(t,e){return\"scrollParent\"===e?e=t.scrollParents[0]:\"window\"===e&&(e=[pageXOffset,pageYOffset,innerWidth+pageXOffset,innerHeight+pageYOffset]),e===document&&(e=e.documentElement),\"undefined\"!=typeof e.nodeType&&!function(){var t=e,o=a(e),i=o,n=getComputedStyle(e);if(e=[i.left,i.top,o.width+i.left,o.height+i.top],t.ownerDocument!==document){var r=t.ownerDocument.defaultView;e[0]+=r.pageXOffset,e[1]+=r.pageYOffset,e[2]+=r.pageXOffset,e[3]+=r.pageYOffset}G.forEach(function(t,o){t=t[0].toUpperCase()+t.substr(1),\"Top\"===t||\"Left\"===t?e[o]+=parseFloat(n[\"border\"+t+\"Width\"]):e[o]-=parseFloat(n[\"border\"+t+\"Width\"])})}(),e}var E=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}(),x=void 0;\"undefined\"==typeof x&&(x={modules:[]});var A=null,T=function(){var t=0;return function(){return++t}}(),S={},P=function(){var t=A;t&&document.body.contains(t)||(t=document.createElement(\"div\"),t.setAttribute(\"data-tether-id\",T()),h(t.style,{top:0,left:0,position:\"absolute\"}),document.body.appendChild(t),A=t);var e=t.getAttribute(\"data-tether-id\");return\"undefined\"==typeof S[e]&&(S[e]=n(t),k(function(){delete S[e]})),S[e]},M=null,W=[],k=function(t){W.push(t)},_=function(){for(var t=void 0;t=W.pop();)t()},B=function(){function t(){i(this,t)}return E(t,[{key:\"on\",value:function(t,e,o){var i=!(arguments.length<=3||void 0===arguments[3])&&arguments[3];\"undefined\"==typeof this.bindings&&(this.bindings={}),\"undefined\"==typeof this.bindings[t]&&(this.bindings[t]=[]),this.bindings[t].push({handler:e,ctx:o,once:i})}},{key:\"once\",value:function(t,e,o){this.on(t,e,o,!0)}},{key:\"off\",value:function(t,e){if(\"undefined\"!=typeof this.bindings&&\"undefined\"!=typeof this.bindings[t])if(\"undefined\"==typeof e)delete this.bindings[t];else for(var o=0;o<this.bindings[t].length;)this.bindings[t][o].handler===e?this.bindings[t].splice(o,1):++o}},{key:\"trigger\",value:function(t){if(\"undefined\"!=typeof this.bindings&&this.bindings[t]){for(var e=0,o=arguments.length,i=Array(o>1?o-1:0),n=1;n<o;n++)i[n-1]=arguments[n];for(;e<this.bindings[t].length;){var r=this.bindings[t][e],s=r.handler,a=r.ctx,f=r.once,l=a;\"undefined\"==typeof l&&(l=this),s.apply(l,i),f?this.bindings[t].splice(e,1):++e}}}}]),t}();x.Utils={getActualBoundingClientRect:n,getScrollParents:r,getBounds:a,getOffsetParent:f,extend:h,addClass:p,removeClass:d,hasClass:u,updateClasses:m,defer:k,flush:_,uniqueId:T,Evented:B,getScrollBarSize:l,removeUtilElements:s};var z=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\"return\"]&&a[\"return\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),E=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}(),j=function(t,e,o){for(var i=!0;i;){var n=t,r=e,s=o;i=!1,null===n&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,r);if(void 0!==a){if(\"value\"in a)return a.value;var f=a.get;if(void 0===f)return;return f.call(s)}var l=Object.getPrototypeOf(n);if(null===l)return;t=l,e=r,o=s,i=!0,a=l=void 0}};if(\"undefined\"==typeof x)throw new Error(\"You must include the utils.js file before tether.js\");var Y=x.Utils,r=Y.getScrollParents,a=Y.getBounds,f=Y.getOffsetParent,h=Y.extend,p=Y.addClass,d=Y.removeClass,m=Y.updateClasses,k=Y.defer,_=Y.flush,l=Y.getScrollBarSize,s=Y.removeUtilElements,L=function(){if(\"undefined\"==typeof document)return\"\";for(var t=document.createElement(\"div\"),e=[\"transform\",\"WebkitTransform\",\"OTransform\",\"MozTransform\",\"msTransform\"],o=0;o<e.length;++o){var i=e[o];if(void 0!==t.style[i])return i}}(),D=[],X=function(){D.forEach(function(t){t.position(!1)}),_()};!function(){var t=null,e=null,o=null,i=function n(){return\"undefined\"!=typeof e&&e>16?(e=Math.min(e-16,250),void(o=setTimeout(n,250))):void(\"undefined\"!=typeof t&&b()-t<10||(null!=o&&(clearTimeout(o),o=null),t=b(),X(),e=b()-t))};\"undefined\"!=typeof window&&\"undefined\"!=typeof window.addEventListener&&[\"resize\",\"scroll\",\"touchmove\"].forEach(function(t){window.addEventListener(t,i)})}();var F={center:\"center\",left:\"right\",right:\"left\"},H={middle:\"middle\",top:\"bottom\",bottom:\"top\"},N={top:0,left:0,middle:\"50%\",center:\"50%\",bottom:\"100%\",right:\"100%\"},U=function(t,e){var o=t.left,i=t.top;return\"auto\"===o&&(o=F[e.left]),\"auto\"===i&&(i=H[e.top]),{left:o,top:i}},V=function(t){var e=t.left,o=t.top;return\"undefined\"!=typeof N[t.left]&&(e=N[t.left]),\"undefined\"!=typeof N[t.top]&&(o=N[t.top]),{left:e,top:o}},R=function(t){var e=t.split(\" \"),o=z(e,2),i=o[0],n=o[1];return{top:i,left:n}},q=R,I=function(t){function e(t){var o=this;i(this,e),j(Object.getPrototypeOf(e.prototype),\"constructor\",this).call(this),this.position=this.position.bind(this),D.push(this),this.history=[],this.setOptions(t,!1),x.modules.forEach(function(t){\"undefined\"!=typeof t.initialize&&t.initialize.call(o)}),this.position()}return v(e,t),E(e,[{key:\"getClass\",value:function(){var t=arguments.length<=0||void 0===arguments[0]?\"\":arguments[0],e=this.options.classes;return\"undefined\"!=typeof e&&e[t]?this.options.classes[t]:this.options.classPrefix?this.options.classPrefix+\"-\"+t:t}},{key:\"setOptions\",value:function(t){var e=this,o=arguments.length<=1||void 0===arguments[1]||arguments[1],i={offset:\"0 0\",targetOffset:\"0 0\",targetAttachment:\"auto auto\",classPrefix:\"tether\"};this.options=h(i,t);var n=this.options,s=n.element,a=n.target,f=n.targetModifier;if(this.element=s,this.target=a,this.targetModifier=f,\"viewport\"===this.target?(this.target=document.body,this.targetModifier=\"visible\"):\"scroll-handle\"===this.target&&(this.target=document.body,this.targetModifier=\"scroll-handle\"),[\"element\",\"target\"].forEach(function(t){if(\"undefined\"==typeof e[t])throw new Error(\"Tether Error: Both element and target must be defined\");\"undefined\"!=typeof e[t].jquery?e[t]=e[t][0]:\"string\"==typeof e[t]&&(e[t]=document.querySelector(e[t]))}),p(this.element,this.getClass(\"element\")),this.options.addTargetClasses!==!1&&p(this.target,this.getClass(\"target\")),!this.options.attachment)throw new Error(\"Tether Error: You must provide an attachment\");this.targetAttachment=q(this.options.targetAttachment),this.attachment=q(this.options.attachment),this.offset=R(this.options.offset),this.targetOffset=R(this.options.targetOffset),\"undefined\"!=typeof this.scrollParents&&this.disable(),\"scroll-handle\"===this.targetModifier?this.scrollParents=[this.target]:this.scrollParents=r(this.target),this.options.enabled!==!1&&this.enable(o)}},{key:\"getTargetBounds\",value:function(){if(\"undefined\"==typeof this.targetModifier)return a(this.target);if(\"visible\"===this.targetModifier){if(this.target===document.body)return{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth};var t=a(this.target),e={height:t.height,width:t.width,top:t.top,left:t.left};return e.height=Math.min(e.height,t.height-(pageYOffset-t.top)),e.height=Math.min(e.height,t.height-(t.top+t.height-(pageYOffset+innerHeight))),e.height=Math.min(innerHeight,e.height),e.height-=2,e.width=Math.min(e.width,t.width-(pageXOffset-t.left)),e.width=Math.min(e.width,t.width-(t.left+t.width-(pageXOffset+innerWidth))),e.width=Math.min(innerWidth,e.width),e.width-=2,e.top<pageYOffset&&(e.top=pageYOffset),e.left<pageXOffset&&(e.left=pageXOffset),e}if(\"scroll-handle\"===this.targetModifier){var t=void 0,o=this.target;o===document.body?(o=document.documentElement,t={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):t=a(o);var i=getComputedStyle(o),n=o.scrollWidth>o.clientWidth||[i.overflow,i.overflowX].indexOf(\"scroll\")>=0||this.target!==document.body,r=0;n&&(r=15);var s=t.height-parseFloat(i.borderTopWidth)-parseFloat(i.borderBottomWidth)-r,e={width:15,height:.975*s*(s/o.scrollHeight),left:t.left+t.width-parseFloat(i.borderLeftWidth)-15},f=0;s<408&&this.target===document.body&&(f=-11e-5*Math.pow(s,2)-.00727*s+22.58),this.target!==document.body&&(e.height=Math.max(e.height,24));var l=this.target.scrollTop/(o.scrollHeight-s);return e.top=l*(s-e.height-f)+t.top+parseFloat(i.borderTopWidth),this.target===document.body&&(e.height=Math.max(e.height,24)),e}}},{key:\"clearCache\",value:function(){this._cache={}}},{key:\"cache\",value:function(t,e){return\"undefined\"==typeof this._cache&&(this._cache={}),\"undefined\"==typeof this._cache[t]&&(this._cache[t]=e.call(this)),this._cache[t]}},{key:\"enable\",value:function(){var t=this,e=arguments.length<=0||void 0===arguments[0]||arguments[0];this.options.addTargetClasses!==!1&&p(this.target,this.getClass(\"enabled\")),p(this.element,this.getClass(\"enabled\")),this.enabled=!0,this.scrollParents.forEach(function(e){e!==t.target.ownerDocument&&e.addEventListener(\"scroll\",t.position)}),e&&this.position()}},{key:\"disable\",value:function(){var t=this;d(this.target,this.getClass(\"enabled\")),d(this.element,this.getClass(\"enabled\")),this.enabled=!1,\"undefined\"!=typeof this.scrollParents&&this.scrollParents.forEach(function(e){e.removeEventListener(\"scroll\",t.position)})}},{key:\"destroy\",value:function(){var t=this;this.disable(),D.forEach(function(e,o){e===t&&D.splice(o,1)}),0===D.length&&s()}},{key:\"updateAttachClasses\",value:function(t,e){var o=this;t=t||this.attachment,e=e||this.targetAttachment;var i=[\"left\",\"top\",\"bottom\",\"right\",\"middle\",\"center\"];\"undefined\"!=typeof this._addAttachClasses&&this._addAttachClasses.length&&this._addAttachClasses.splice(0,this._addAttachClasses.length),\"undefined\"==typeof this._addAttachClasses&&(this._addAttachClasses=[]);var n=this._addAttachClasses;t.top&&n.push(this.getClass(\"element-attached\")+\"-\"+t.top),t.left&&n.push(this.getClass(\"element-attached\")+\"-\"+t.left),e.top&&n.push(this.getClass(\"target-attached\")+\"-\"+e.top),e.left&&n.push(this.getClass(\"target-attached\")+\"-\"+e.left);var r=[];i.forEach(function(t){r.push(o.getClass(\"element-attached\")+\"-\"+t),r.push(o.getClass(\"target-attached\")+\"-\"+t)}),k(function(){\"undefined\"!=typeof o._addAttachClasses&&(m(o.element,o._addAttachClasses,r),o.options.addTargetClasses!==!1&&m(o.target,o._addAttachClasses,r),delete o._addAttachClasses)})}},{key:\"position\",value:function(){var t=this,e=arguments.length<=0||void 0===arguments[0]||arguments[0];if(this.enabled){this.clearCache();var o=U(this.targetAttachment,this.attachment);this.updateAttachClasses(this.attachment,o);var i=this.cache(\"element-bounds\",function(){return a(t.element)}),n=i.width,r=i.height;if(0===n&&0===r&&\"undefined\"!=typeof this.lastSize){var s=this.lastSize;n=s.width,r=s.height}else this.lastSize={width:n,height:r};var h=this.cache(\"target-bounds\",function(){return t.getTargetBounds()}),d=h,p=C(V(this.attachment),{width:n,height:r}),u=C(V(o),d),c=C(this.offset,{width:n,height:r}),g=C(this.targetOffset,d);p=w(p,c),u=w(u,g);for(var m=h.left+u.left-p.left,v=h.top+u.top-p.top,y=0;y<x.modules.length;++y){var b=x.modules[y],O=b.position.call(this,{left:m,top:v,targetAttachment:o,targetPos:h,elementPos:i,offset:p,targetOffset:u,manualOffset:c,manualTargetOffset:g,scrollbarSize:S,attachment:this.attachment});if(O===!1)return!1;\"undefined\"!=typeof O&&\"object\"==typeof O&&(v=O.top,m=O.left)}var E={page:{top:v,left:m},viewport:{top:v-pageYOffset,bottom:pageYOffset-v-r+innerHeight,left:m-pageXOffset,right:pageXOffset-m-n+innerWidth}},A=this.target.ownerDocument,T=A.defaultView,S=void 0;return T.innerHeight>A.documentElement.clientHeight&&(S=this.cache(\"scrollbar-size\",l),E.viewport.bottom-=S.height),T.innerWidth>A.documentElement.clientWidth&&(S=this.cache(\"scrollbar-size\",l),E.viewport.right-=S.width),[\"\",\"static\"].indexOf(A.body.style.position)!==-1&&[\"\",\"static\"].indexOf(A.body.parentElement.style.position)!==-1||(E.page.bottom=A.body.scrollHeight-v-r,E.page.right=A.body.scrollWidth-m-n),\"undefined\"!=typeof this.options.optimizations&&this.options.optimizations.moveElement!==!1&&\"undefined\"==typeof this.targetModifier&&!function(){var e=t.cache(\"target-offsetparent\",function(){return f(t.target)}),o=t.cache(\"target-offsetparent-bounds\",function(){return a(e)}),i=getComputedStyle(e),n=o,r={};if([\"Top\",\"Left\",\"Bottom\",\"Right\"].forEach(function(t){r[t.toLowerCase()]=parseFloat(i[\"border\"+t+\"Width\"])}),o.right=A.body.scrollWidth-o.left-n.width+r.right,o.bottom=A.body.scrollHeight-o.top-n.height+r.bottom,E.page.top>=o.top+r.top&&E.page.bottom>=o.bottom&&E.page.left>=o.left+r.left&&E.page.right>=o.right){var s=e.scrollTop,l=e.scrollLeft;E.offset={top:E.page.top-o.top+s-r.top,left:E.page.left-o.left+l-r.left}}}(),this.move(E),this.history.unshift(E),this.history.length>3&&this.history.pop(),e&&_(),!0}}},{key:\"move\",value:function(t){var e=this;if(\"undefined\"!=typeof this.element.parentNode){var o={};for(var i in t){o[i]={};for(var n in t[i]){for(var r=!1,s=0;s<this.history.length;++s){var a=this.history[s];if(\"undefined\"!=typeof a[i]&&!y(a[i][n],t[i][n])){r=!0;break}}r||(o[i][n]=!0)}}var l={top:\"\",left:\"\",right:\"\",bottom:\"\"},d=function(t,o){var i=\"undefined\"!=typeof e.options.optimizations,n=i?e.options.optimizations.gpu:null;if(n!==!1){var r=void 0,s=void 0;if(t.top?(l.top=0,r=o.top):(l.bottom=0,r=-o.bottom),t.left?(l.left=0,s=o.left):(l.right=0,s=-o.right),window.matchMedia){var a=window.matchMedia(\"only screen and (min-resolution: 1.3dppx)\").matches||window.matchMedia(\"only screen and (-webkit-min-device-pixel-ratio: 1.3)\").matches;a||(s=Math.round(s),r=Math.round(r))}l[L]=\"translateX(\"+s+\"px) translateY(\"+r+\"px)\",\"msTransform\"!==L&&(l[L]+=\" translateZ(0)\")}else t.top?l.top=o.top+\"px\":l.bottom=o.bottom+\"px\",t.left?l.left=o.left+\"px\":l.right=o.right+\"px\"},p=!1;if((o.page.top||o.page.bottom)&&(o.page.left||o.page.right)?(l.position=\"absolute\",d(o.page,t.page)):(o.viewport.top||o.viewport.bottom)&&(o.viewport.left||o.viewport.right)?(l.position=\"fixed\",d(o.viewport,t.viewport)):\"undefined\"!=typeof o.offset&&o.offset.top&&o.offset.left?!function(){l.position=\"absolute\";var i=e.cache(\"target-offsetparent\",function(){return f(e.target)});f(e.element)!==i&&k(function(){e.element.parentNode.removeChild(e.element),i.appendChild(e.element)}),d(o.offset,t.offset),p=!0}():(l.position=\"absolute\",d({top:!0,left:!0},t.page)),!p)if(this.options.bodyElement)this.options.bodyElement.appendChild(this.element);else{for(var u=!0,c=this.element.parentNode;c&&1===c.nodeType&&\"BODY\"!==c.tagName;){if(\"static\"!==getComputedStyle(c).position){u=!1;break}c=c.parentNode}u||(this.element.parentNode.removeChild(this.element),this.element.ownerDocument.body.appendChild(this.element))}var g={},m=!1;for(var n in l){var v=l[n],b=this.element.style[n];b!==v&&(m=!0,g[n]=v)}m&&k(function(){h(e.element.style,g),e.trigger(\"repositioned\")})}}}]),e}(B);I.modules=[],x.position=X;var $=h(I,x),z=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\"return\"]&&a[\"return\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),Y=x.Utils,a=Y.getBounds,h=Y.extend,m=Y.updateClasses,k=Y.defer,G=[\"left\",\"top\",\"right\",\"bottom\"];x.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=t.targetAttachment;if(!this.options.constraints)return!0;var r=this.cache(\"element-bounds\",function(){return a(e.element)}),s=r.height,f=r.width;if(0===f&&0===s&&\"undefined\"!=typeof this.lastSize){var l=this.lastSize;f=l.width,s=l.height}var d=this.cache(\"target-bounds\",function(){return e.getTargetBounds()}),p=d.height,u=d.width,c=[this.getClass(\"pinned\"),this.getClass(\"out-of-bounds\")];this.options.constraints.forEach(function(t){var e=t.outOfBoundsClass,o=t.pinnedClass;e&&c.push(e),o&&c.push(o)}),c.forEach(function(t){[\"left\",\"top\",\"right\",\"bottom\"].forEach(function(e){c.push(t+\"-\"+e)})});var g=[],v=h({},n),y=h({},this.attachment);return this.options.constraints.forEach(function(t){var r=t.to,a=t.attachment,l=t.pin;\"undefined\"==typeof a&&(a=\"\");var h=void 0,d=void 0;if(a.indexOf(\" \")>=0){var c=a.split(\" \"),m=z(c,2);d=m[0],h=m[1]}else h=d=a;var b=O(e,r);\"target\"!==d&&\"both\"!==d||(o<b[1]&&\"top\"===v.top&&(o+=p,v.top=\"bottom\"),o+s>b[3]&&\"bottom\"===v.top&&(o-=p,v.top=\"top\")),\"together\"===d&&(\"top\"===v.top&&(\"bottom\"===y.top&&o<b[1]?(o+=p,v.top=\"bottom\",o+=s,y.top=\"top\"):\"top\"===y.top&&o+s>b[3]&&o-(s-p)>=b[1]&&(o-=s-p,v.top=\"bottom\",y.top=\"bottom\")),\"bottom\"===v.top&&(\"top\"===y.top&&o+s>b[3]?(o-=p,v.top=\"top\",o-=s,y.top=\"bottom\"):\"bottom\"===y.top&&o<b[1]&&o+(2*s-p)<=b[3]&&(o+=s-p,v.top=\"top\",y.top=\"top\")),\"middle\"===v.top&&(o+s>b[3]&&\"top\"===y.top?(o-=s,y.top=\"bottom\"):o<b[1]&&\"bottom\"===y.top&&(o+=s,y.top=\"top\"))),\"target\"!==h&&\"both\"!==h||(i<b[0]&&\"left\"===v.left&&(i+=u,v.left=\"right\"),i+f>b[2]&&\"right\"===v.left&&(i-=u,v.left=\"left\")),\"together\"===h&&(i<b[0]&&\"left\"===v.left?\"right\"===y.left?(i+=u,v.left=\"right\",i+=f,y.left=\"left\"):\"left\"===y.left&&(i+=u,v.left=\"right\",i-=f,y.left=\"right\"):i+f>b[2]&&\"right\"===v.left?\"left\"===y.left?(i-=u,v.left=\"left\",i-=f,y.left=\"right\"):\"right\"===y.left&&(i-=u,v.left=\"left\",i+=f,y.left=\"left\"):\"center\"===v.left&&(i+f>b[2]&&\"left\"===y.left?(i-=f,y.left=\"right\"):i<b[0]&&\"right\"===y.left&&(i+=f,y.left=\"left\"))),\"element\"!==d&&\"both\"!==d||(o<b[1]&&\"bottom\"===y.top&&(o+=s,y.top=\"top\"),o+s>b[3]&&\"top\"===y.top&&(o-=s,y.top=\"bottom\")),\"element\"!==h&&\"both\"!==h||(i<b[0]&&(\"right\"===y.left?(i+=f,y.left=\"left\"):\"center\"===y.left&&(i+=f/2,y.left=\"left\")),i+f>b[2]&&(\"left\"===y.left?(i-=f,y.left=\"right\"):\"center\"===y.left&&(i-=f/2,y.left=\"right\"))),\"string\"==typeof l?l=l.split(\",\").map(function(t){return t.trim()}):l===!0&&(l=[\"top\",\"left\",\"right\",\"bottom\"]),l=l||[];var w=[],C=[];o<b[1]&&(l.indexOf(\"top\")>=0?(o=b[1],w.push(\"top\")):C.push(\"top\")),o+s>b[3]&&(l.indexOf(\"bottom\")>=0?(o=b[3]-s,w.push(\"bottom\")):C.push(\"bottom\")),i<b[0]&&(l.indexOf(\"left\")>=0?(i=b[0],w.push(\"left\")):C.push(\"left\")),i+f>b[2]&&(l.indexOf(\"right\")>=0?(i=b[2]-f,w.push(\"right\")):C.push(\"right\")),w.length&&!function(){var t=void 0;t=\"undefined\"!=typeof e.options.pinnedClass?e.options.pinnedClass:e.getClass(\"pinned\"),g.push(t),w.forEach(function(e){g.push(t+\"-\"+e)})}(),C.length&&!function(){var t=void 0;t=\"undefined\"!=typeof e.options.outOfBoundsClass?e.options.outOfBoundsClass:e.getClass(\"out-of-bounds\"),g.push(t),C.forEach(function(e){g.push(t+\"-\"+e)})}(),(w.indexOf(\"left\")>=0||w.indexOf(\"right\")>=0)&&(y.left=v.left=!1),(w.indexOf(\"top\")>=0||w.indexOf(\"bottom\")>=0)&&(y.top=v.top=!1),v.top===n.top&&v.left===n.left&&y.top===e.attachment.top&&y.left===e.attachment.left||(e.updateAttachClasses(y,v),e.trigger(\"update\",{attachment:y,targetAttachment:v}))}),k(function(){e.options.addTargetClasses!==!1&&m(e.target,g,c),m(e.element,g,c)}),{top:o,left:i}}});var Y=x.Utils,a=Y.getBounds,m=Y.updateClasses,k=Y.defer;x.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=this.cache(\"element-bounds\",function(){return a(e.element)}),r=n.height,s=n.width,f=this.getTargetBounds(),l=o+r,h=i+s,d=[];o<=f.bottom&&l>=f.top&&[\"left\",\"right\"].forEach(function(t){var e=f[t];e!==i&&e!==h||d.push(t)}),i<=f.right&&h>=f.left&&[\"top\",\"bottom\"].forEach(function(t){var e=f[t];e!==o&&e!==l||d.push(t)});var p=[],u=[],c=[\"left\",\"top\",\"right\",\"bottom\"];return p.push(this.getClass(\"abutted\")),c.forEach(function(t){p.push(e.getClass(\"abutted\")+\"-\"+t)}),d.length&&u.push(this.getClass(\"abutted\")),d.forEach(function(t){u.push(e.getClass(\"abutted\")+\"-\"+t)}),k(function(){e.options.addTargetClasses!==!1&&m(e.target,u,p),m(e.element,u,p)}),!0}});var z=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(f){n=!0,r=f}finally{try{!i&&a[\"return\"]&&a[\"return\"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}();return x.modules.push({position:function(t){var e=t.top,o=t.left;if(this.options.shift){var i=this.options.shift;\"function\"==typeof this.options.shift&&(i=this.options.shift.call(this,{top:e,left:o}));var n=void 0,r=void 0;if(\"string\"==typeof i){i=i.split(\" \"),i[1]=i[1]||i[0];var s=i,a=z(s,2);n=a[0],r=a[1],n=parseFloat(n,10),r=parseFloat(r,10)}else n=i.top,r=i.left;return e+=n,o+=r,{top:e,left:o}}}}),$});\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/tether/tether.min.js?");

/***/ }),
/* 19 */
/*!*********************************************************************!*\
  !*** ./src/public/js/vendor/formvalidator/jquery.form-validator.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;;(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 1)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (a0) {\n      return factory(a0)\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  } else {}\n})(this, function (jQuery) {\n  /** File generated by Grunt -- do not modify\n   *  JQUERY-FORM-VALIDATOR\n   *\n   *  @version 2.3.26\n   *  @website http://formvalidator.net/\n   *  @author Victor Jonsson, http://victorjonsson.se\n   *  @license MIT\n   */\n  /**\n   * Deprecated functions and attributes\n   * @todo: Remove in release of 3.0\n   */\n  ;(function ($, undefined) {\n    'use strict'\n\n    /**\n     * @deprecated\n     * @param language\n     * @param conf\n     */\n    $.fn.validateForm = function (language, conf) {\n      $.formUtils.warn('Use of deprecated function $.validateForm, use $.isValid instead')\n      return this.isValid(language, conf, true)\n    }\n\n    $(window).on('validatorsLoaded formValidationSetup', function (evt, $form, config) {\n      if (!$form) {\n        $form = $('form')\n      }\n\n      addSupportForCustomErrorMessageCallback(config)\n      addSupportForElementReferenceInPositionParam(config)\n      addSupportForValidationDependingOnCheckedInput($form)\n    })\n\n    function addSupportForCustomErrorMessageCallback (config) {\n      if (config && config.errorMessagePosition === 'custom' && typeof config.errorMessageCustom === 'function') {\n        $.formUtils.warn('Use of deprecated function errorMessageCustom, use config.submitErrorMessageCallback instead')\n\n        config.submitErrorMessageCallback = function ($form, errorMessages) {\n          config.errorMessageCustom($form, config.language.errorTitle, errorMessages, config)\n        }\n      }\n    }\n\n    function addSupportForElementReferenceInPositionParam (config) {\n      if (config.errorMessagePosition && typeof config.errorMessagePosition === 'object') {\n        $.formUtils.warn(\n          'Deprecated use of config parameter errorMessagePosition, use config.submitErrorMessageCallback instead'\n        )\n        var $errorMessageContainer = config.errorMessagePosition\n        config.errorMessagePosition = 'top'\n        config.submitErrorMessageCallback = function () {\n          return $errorMessageContainer\n        }\n      }\n    }\n\n    function addSupportForValidationDependingOnCheckedInput ($form) {\n      var $inputsDependingOnCheckedInputs = $form.find('[data-validation-if-checked]')\n      if ($inputsDependingOnCheckedInputs.length) {\n        $.formUtils.warn(\n          'Detected use of attribute \"data-validation-if-checked\" which is ' +\n            'deprecated. Use \"data-validation-depends-on\" provided by module \"logic\"'\n        )\n      }\n\n      $inputsDependingOnCheckedInputs.on('beforeValidation', function () {\n        var $elem = $(this),\n          nameOfDependingInput = $elem.valAttr('if-checked')\n\n        // Set the boolean telling us that the validation depends\n        // on another input being checked\n        var $dependingInput = $('input[name=\"' + nameOfDependingInput + '\"]', $form),\n          dependingInputIsChecked = $dependingInput.is(':checked'),\n          valueOfDependingInput = ($.formUtils.getValue($dependingInput) || '').toString(),\n          requiredValueOfDependingInput = $elem.valAttr('if-checked-value')\n\n        if (\n          !dependingInputIsChecked ||\n          !(!requiredValueOfDependingInput || requiredValueOfDependingInput === valueOfDependingInput)\n        ) {\n          $elem.valAttr('skipped', true)\n        }\n      })\n    }\n  })(jQuery)\n\n  /**\n   * Utility methods used for displaying error messages (attached to $.formUtils)\n   */\n  ;(function ($) {\n    'use strict'\n\n    var dialogs = {\n      resolveErrorMessage: function ($elem, validator, validatorName, conf, language) {\n        var errorMsgAttr = conf.validationErrorMsgAttribute + '-' + validatorName.replace('validate_', ''),\n          validationErrorMsg = $elem.attr(errorMsgAttr)\n\n        if (!validationErrorMsg) {\n          validationErrorMsg = $elem.attr(conf.validationErrorMsgAttribute)\n          if (!validationErrorMsg) {\n            if (typeof validator.errorMessageKey !== 'function') {\n              validationErrorMsg = language[validator.errorMessageKey]\n            } else {\n              validationErrorMsg = language[validator.errorMessageKey(conf)]\n            }\n            if (!validationErrorMsg) {\n              validationErrorMsg = validator.errorMessage\n            }\n          }\n        }\n        return validationErrorMsg\n      },\n      getParentContainer: function ($elem) {\n        if ($elem.valAttr('error-msg-container')) {\n          return $($elem.valAttr('error-msg-container'))\n        } else {\n          var $parent = $elem.parent()\n          if (!$parent.hasClass('form-group') && !$parent.closest('form').hasClass('form-horizontal')) {\n            var $formGroup = $parent.closest('.form-group')\n            if ($formGroup.length) {\n              return $formGroup.eq(0)\n            }\n          }\n          return $parent\n        }\n      },\n      applyInputErrorStyling: function ($input, conf) {\n        $input.addClass(conf.errorElementClass).removeClass('valid')\n\n        this.getParentContainer($input)\n          .addClass(conf.inputParentClassOnError)\n          .removeClass(conf.inputParentClassOnSuccess)\n\n        if (conf.borderColorOnError !== '') {\n          $input.css('border-color', conf.borderColorOnError)\n        }\n      },\n      applyInputSuccessStyling: function ($input, conf) {\n        $input.addClass('valid')\n        this.getParentContainer($input).addClass(conf.inputParentClassOnSuccess)\n      },\n      removeInputStylingAndMessage: function ($input, conf) {\n        // Reset input css\n        $input\n          .removeClass('valid')\n          .removeClass(conf.errorElementClass)\n          .css('border-color', '')\n\n        var $parentContainer = dialogs.getParentContainer($input)\n\n        // Reset parent css\n        $parentContainer.removeClass(conf.inputParentClassOnError).removeClass(conf.inputParentClassOnSuccess)\n\n        // Remove possible error message\n        if (typeof conf.inlineErrorMessageCallback === 'function') {\n          var $errorMessage = conf.inlineErrorMessageCallback($input, false, conf)\n          if ($errorMessage) {\n            $errorMessage.html('')\n          }\n        } else {\n          $parentContainer.find('.' + conf.errorMessageClass).remove()\n        }\n      },\n      removeAllMessagesAndStyling: function ($form, conf) {\n        // Remove error messages in top of form\n        if (typeof conf.submitErrorMessageCallback === 'function') {\n          var $errorMessagesInTopOfForm = conf.submitErrorMessageCallback($form, conf)\n          if ($errorMessagesInTopOfForm) {\n            $errorMessagesInTopOfForm.html('')\n          }\n        } else {\n          $form.find('.' + conf.errorMessageClass + '.alert').remove()\n        }\n\n        // Remove input css/messages\n        $form.find('.' + conf.errorElementClass + ',.valid').each(function () {\n          dialogs.removeInputStylingAndMessage($(this), conf)\n        })\n      },\n      setInlineMessage: function ($input, errorMsg, conf) {\n        this.applyInputErrorStyling($input, conf)\n\n        var custom = document.getElementById($input.attr('name') + '_err_msg'),\n          $messageContainer = false,\n          setErrorMessage = function ($elem) {\n            $.formUtils.$win.trigger('validationErrorDisplay', [$input, $elem])\n            $elem.html(errorMsg)\n          },\n          addErrorToMessageContainer = function () {\n            var $found = false\n            $messageContainer.find('.' + conf.errorMessageClass).each(function () {\n              if (this.inputReferer === $input[0]) {\n                $found = $(this)\n                return false\n              }\n            })\n            if ($found) {\n              if (!errorMsg) {\n                $found.remove()\n              } else {\n                setErrorMessage($found)\n              }\n            } else if (errorMsg !== '') {\n              $message = $('<div class=\"' + conf.errorMessageClass + ' alert\"></div>')\n              setErrorMessage($message)\n              $message[0].inputReferer = $input[0]\n              $messageContainer.prepend($message)\n            }\n          },\n          $message\n\n        if (custom) {\n          // Todo: remove in 3.0\n          $.formUtils.warn('Using deprecated element reference ' + custom.id)\n          $messageContainer = $(custom)\n          addErrorToMessageContainer()\n        } else if (typeof conf.inlineErrorMessageCallback === 'function') {\n          $messageContainer = conf.inlineErrorMessageCallback($input, errorMsg, conf)\n          if (!$messageContainer) {\n            // Error display taken care of by inlineErrorMessageCallback\n            return\n          }\n          addErrorToMessageContainer()\n        } else {\n          var $parent = this.getParentContainer($input)\n          $message = $parent.find('.' + conf.errorMessageClass + '.help-block')\n          if ($message.length === 0) {\n            $message = $('<span></span>')\n              .addClass('help-block')\n              .addClass(conf.errorMessageClass)\n            $message.appendTo($parent)\n          }\n          setErrorMessage($message)\n        }\n      },\n      setMessageInTopOfForm: function ($form, errorMessages, conf, lang) {\n        var view =\n            '<div class=\"{errorMessageClass} alert alert-danger\">' +\n            '<strong>{errorTitle}</strong>' +\n            '<ul>{fields}</ul>' +\n            '</div>',\n          $container = false\n\n        if (typeof conf.submitErrorMessageCallback === 'function') {\n          $container = conf.submitErrorMessageCallback($form, errorMessages, conf)\n          if (!$container) {\n            // message display taken care of by callback\n            return\n          }\n        }\n\n        var viewParams = {\n          errorTitle: lang.errorTitle,\n          fields: '',\n          errorMessageClass: conf.errorMessageClass\n        }\n\n        $.each(errorMessages, function (i, msg) {\n          viewParams.fields += '<li>' + msg + '</li>'\n        })\n\n        $.each(viewParams, function (param, value) {\n          view = view.replace('{' + param + '}', value)\n        })\n\n        if ($container) {\n          $container.html(view)\n        } else {\n          $form\n            .children()\n            .eq(0)\n            .before($(view))\n        }\n      }\n    }\n\n    $.formUtils = $.extend($.formUtils || {}, {\n      dialogs: dialogs\n    })\n  })(jQuery)\n\n  /**\n   * File declaring all methods if this plugin which is applied to $.fn.\n   */\n  ;(function ($, window, undefined) {\n    'use strict'\n\n    var _helpers = 0\n\n    /**\n     * Assigns validateInputOnBlur function to elements blur event\n     *\n     * @param {Object} language Optional, will override $.formUtils.LANG\n     * @param {Object} conf Optional, will override the default settings\n     * @return {jQuery}\n     */\n    $.fn.validateOnBlur = function (language, conf) {\n      var $form = this,\n        $elems = this.find('*[data-validation]')\n\n      $elems.each(function () {\n        var $this = $(this)\n        if ($this.is('[type=radio]')) {\n          var $additionals = $form.find('[type=radio][name=\"' + $this.attr('name') + '\"]')\n          $additionals.bind('blur.validation', function () {\n            $this.validateInputOnBlur(language, conf, true, 'blur')\n          })\n          if (conf.validateCheckboxRadioOnClick) {\n            $additionals.bind('click.validation', function () {\n              $this.validateInputOnBlur(language, conf, true, 'click')\n            })\n          }\n        }\n      })\n\n      $elems.bind('blur.validation', function () {\n        $(this).validateInputOnBlur(language, conf, true, 'blur')\n      })\n\n      if (conf.validateCheckboxRadioOnClick) {\n        // bind click event to validate on click for radio & checkboxes for nice UX\n        this.find('input[type=checkbox][data-validation],input[type=radio][data-validation]').bind(\n          'click.validation',\n          function () {\n            $(this).validateInputOnBlur(language, conf, true, 'click')\n          }\n        )\n      }\n\n      return this\n    }\n\n    /*\n     * Assigns validateInputOnBlur function to elements custom event\n     * @param {Object} language Optional, will override $.formUtils.LANG\n     * @param {Object} settings Optional, will override the default settings\n     * * @return {jQuery}\n     */\n    $.fn.validateOnEvent = function (language, config) {\n      var $elements = this[0].nodeName === 'FORM' ? this.find('*[data-validation-event]') : this\n      $elements.each(function () {\n        var $el = $(this),\n          etype = $el.valAttr('event')\n        if (etype) {\n          $el.unbind(etype + '.validation').bind(etype + '.validation', function (evt) {\n            if ((evt || {}).keyCode !== 9) {\n              $(this).validateInputOnBlur(language, config, true, etype)\n            }\n          })\n        }\n      })\n      return this\n    }\n\n    /**\n     * fade in help message when input gains focus\n     * fade out when input loses focus\n     * <input data-help=\"The info that I want to display for the user when input is focused\" ... />\n     *\n     * @param {String} attrName - Optional, default is data-help\n     * @return {jQuery}\n     */\n    $.fn.showHelpOnFocus = function (attrName) {\n      if (!attrName) {\n        attrName = 'data-validation-help'\n      }\n\n      // Remove previously added event listeners\n      this.find('.has-help-txt')\n        .valAttr('has-keyup-event', false)\n        .removeClass('has-help-txt')\n\n      // Add help text listeners\n      this.find('textarea,input').each(function () {\n        var $elem = $(this),\n          className = 'jquery_form_help_' + ++_helpers,\n          help = $elem.attr(attrName)\n\n        if (help) {\n          $elem\n            .addClass('has-help-txt')\n            .unbind('focus.help')\n            .bind('focus.help', function () {\n              var $help = $elem.parent().find('.' + className)\n              if ($help.length === 0) {\n                $help = $('<span />')\n                  .addClass(className)\n                  .addClass('help')\n                  .addClass('help-block') // twitter bs\n                  .text(help)\n                  .hide()\n\n                $elem.after($help)\n              }\n              $help.fadeIn()\n            })\n            .unbind('blur.help')\n            .bind('blur.help', function () {\n              $(this)\n                .parent()\n                .find('.' + className)\n                .fadeOut('slow')\n            })\n        }\n      })\n\n      return this\n    }\n\n    /**\n     * @param {Function} cb\n     * @param {Object} [conf]\n     * @param {Object} [lang]\n     */\n    $.fn.validate = function (cb, conf, lang) {\n      var language = $.extend({}, $.formUtils.LANG, lang || {})\n      this.each(function () {\n        var $elem = $(this),\n          formDefaultConfig = $elem.closest('form').get(0).validationConfig || {}\n\n        $elem.one('validation', function (evt, isValid) {\n          if (typeof cb === 'function') {\n            cb(isValid, this, evt)\n          }\n        })\n\n        $elem.validateInputOnBlur(language, $.extend({}, formDefaultConfig, conf || {}), true)\n      })\n    }\n\n    /**\n     * Tells whether or not validation of this input will have to postpone the form submit ()\n     * @returns {Boolean}\n     */\n    $.fn.willPostponeValidation = function () {\n      return (\n        (this.valAttr('suggestion-nr') || this.valAttr('postpone') || this.hasClass('hasDatepicker')) &&\n        !window.postponedValidation\n      )\n    }\n\n    /**\n     * Validate single input when it loses focus\n     * shows error message in a span element\n     * that is appended to the parent element\n     *\n     * @param {Object} [language] Optional, will override $.formUtils.LANG\n     * @param {Object} [conf] Optional, will override the default settings\n     * @param {Boolean} attachKeyupEvent Optional\n     * @param {String} eventType\n     * @return {jQuery}\n     */\n    $.fn.validateInputOnBlur = function (language, conf, attachKeyupEvent, eventType) {\n      $.formUtils.eventType = eventType\n\n      if (this.willPostponeValidation()) {\n        // This validation has to be postponed\n        var _self = this,\n          postponeTime = this.valAttr('postpone') || 200\n\n        window.postponedValidation = function () {\n          _self.validateInputOnBlur(language, conf, attachKeyupEvent, eventType)\n          window.postponedValidation = false\n        }\n\n        setTimeout(function () {\n          if (window.postponedValidation) {\n            window.postponedValidation()\n          }\n        }, postponeTime)\n\n        return this\n      }\n\n      language = $.extend({}, $.formUtils.LANG, language || {})\n      $.formUtils.dialogs.removeInputStylingAndMessage(this, conf)\n\n      var $elem = this,\n        $form = $elem.closest('form'),\n        result = $.formUtils.validateInput($elem, language, conf, $form, eventType)\n\n      if (attachKeyupEvent) {\n        $elem.unbind('keyup.validation')\n      }\n\n      if (result.shouldChangeDisplay) {\n        if (result.isValid) {\n          $.formUtils.dialogs.applyInputSuccessStyling($elem, conf)\n        } else {\n          $.formUtils.dialogs.setInlineMessage($elem, result.errorMsg, conf)\n        }\n      }\n\n      if (!result.isValid && attachKeyupEvent) {\n        $elem.bind('keyup.validation', function (evt) {\n          if (evt.keyCode !== 9) {\n            $(this).validateInputOnBlur(language, conf, false, 'keyup')\n          }\n        })\n      }\n\n      return this\n    }\n\n    /**\n     * Short hand for fetching/adding/removing element attributes\n     * prefixed with 'data-validation-'\n     *\n     * @param {String} name\n     * @param {String|Boolean} [val]\n     * @return {String|undefined|jQuery}\n     * @protected\n     */\n    $.fn.valAttr = function (name, val) {\n      if (val === undefined) {\n        return this.attr('data-validation-' + name)\n      } else if (val === false || val === null) {\n        return this.removeAttr('data-validation-' + name)\n      } else {\n        name = name.length > 0 ? '-' + name : ''\n        return this.attr('data-validation' + name, val)\n      }\n    }\n\n    /**\n     * Function that validates all inputs in active form\n     *\n     * @param {Object} [language]\n     * @param {Object} [conf]\n     * @param {Boolean} [displayError] Defaults to true\n     */\n    $.fn.isValid = function (language, conf, displayError) {\n      if ($.formUtils.isLoadingModules) {\n        var $self = this\n        setTimeout(function () {\n          $self.isValid(language, conf, displayError)\n        }, 200)\n        return null\n      }\n\n      conf = $.extend({}, $.formUtils.defaultConfig(), conf || {})\n      language = $.extend({}, $.formUtils.LANG, language || {})\n      displayError = displayError !== false\n\n      if ($.formUtils.errorDisplayPreventedWhenHalted) {\n        // isValid() was called programmatically with argument displayError set\n        // to false when the validation was halted by any of the validators\n        delete $.formUtils.errorDisplayPreventedWhenHalted\n        displayError = false\n      }\n\n      $.formUtils.isValidatingEntireForm = true\n      $.formUtils.haltValidation = false\n\n      /**\n       * Adds message to error message stack if not already in the message stack\n       *\n       * @param {String} mess\n       * @para {jQuery} $elem\n       */\n      var addErrorMessage = function (mess, $elem) {\n          if ($.inArray(mess, errorMessages) < 0) {\n            errorMessages.push(mess)\n          }\n          errorInputs.push($elem)\n          $elem.attr('current-error', mess)\n          if (displayError) {\n            $.formUtils.dialogs.applyInputErrorStyling($elem, conf)\n          }\n        },\n        /** Holds inputs (of type checkox or radio) already validated, to prevent recheck of mulitple checkboxes & radios */\n        checkedInputs = [],\n        /** Error messages for this validation */\n        errorMessages = [],\n        /** Input elements which value was not valid */\n        errorInputs = [],\n        /** Form instance */\n        $form = this,\n        /**\n         * Tells whether or not to validate element with this name and of this type\n         *\n         * @param {String} name\n         * @param {String} type\n         * @return {Boolean}\n         */\n        ignoreInput = function (name, type) {\n          if (type === 'submit' || type === 'button' || type === 'reset') {\n            return true\n          }\n          return $.inArray(name, conf.ignore || []) > -1\n        }\n\n      // Reset style and remove error class\n      if (displayError) {\n        $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf)\n      }\n\n      // Validate element values\n      $form\n        .find('input,textarea,select')\n        .filter(':not([type=\"submit\"],[type=\"button\"])')\n        .each(function () {\n          var $elem = $(this),\n            elementType = $elem.attr('type'),\n            isCheckboxOrRadioBtn = elementType === 'radio' || elementType === 'checkbox',\n            elementName = $elem.attr('name')\n\n          if (\n            !ignoreInput(elementName, elementType) &&\n            (!isCheckboxOrRadioBtn || $.inArray(elementName, checkedInputs) < 0)\n          ) {\n            if (isCheckboxOrRadioBtn) {\n              checkedInputs.push(elementName)\n            }\n\n            var result = $.formUtils.validateInput($elem, language, conf, $form, 'submit')\n\n            if (!result.isValid) {\n              addErrorMessage(result.errorMsg, $elem)\n            } else if (result.isValid && result.shouldChangeDisplay) {\n              $elem.valAttr('current-error', false)\n              $.formUtils.dialogs.applyInputSuccessStyling($elem, conf)\n            }\n          }\n        })\n\n      // Run validation callback\n      if (typeof conf.onValidate === 'function') {\n        var errors = conf.onValidate($form)\n        if ($.isArray(errors)) {\n          $.each(errors, function (i, err) {\n            addErrorMessage(err.message, err.element)\n          })\n        } else if (errors && errors.element && errors.message) {\n          addErrorMessage(errors.message, errors.element)\n        }\n      }\n\n      // Reset form validation flag\n      $.formUtils.isValidatingEntireForm = false\n\n      // Validation failed\n      if (!$.formUtils.haltValidation && errorInputs.length > 0) {\n        if (displayError) {\n          if (conf.errorMessagePosition === 'top') {\n            $.formUtils.dialogs.setMessageInTopOfForm($form, errorMessages, conf, language)\n          } else {\n            $.each(errorInputs, function (i, $input) {\n              $.formUtils.dialogs.setInlineMessage($input, $input.attr('current-error'), conf)\n            })\n          }\n          if (conf.scrollToTopOnError) {\n            $.formUtils.$win.scrollTop($form.offset().top - 20)\n          }\n        }\n\n        return false\n      }\n\n      if (!displayError && $.formUtils.haltValidation) {\n        $.formUtils.errorDisplayPreventedWhenHalted = true\n      }\n\n      return !$.formUtils.haltValidation\n    }\n\n    /**\n     * Plugin for displaying input length restriction\n     */\n    $.fn.restrictLength = function (maxLengthElement) {\n      new $.formUtils.lengthRestriction(this, maxLengthElement)\n      return this\n    }\n\n    /**\n     * Add suggestion dropdown to inputs having data-suggestions with a comma\n     * separated string with suggestions\n     * @param {Array} [settings]\n     * @returns {jQuery}\n     */\n    $.fn.addSuggestions = function (settings) {\n      var sugs = false\n      this.find('input').each(function () {\n        var $field = $(this)\n\n        sugs = $.split($field.attr('data-suggestions'))\n\n        if (sugs.length > 0 && !$field.hasClass('has-suggestions')) {\n          $.formUtils.suggest($field, sugs, settings)\n          $field.addClass('has-suggestions')\n        }\n      })\n      return this\n    }\n  })(jQuery, window)\n\n  /**\n   * Utility methods used for handling loading of modules (attached to $.formUtils)\n   */\n  ;(function ($) {\n    'use strict'\n\n    $.formUtils = $.extend($.formUtils || {}, {\n      /**\n       * @var {Boolean}\n       */\n      isLoadingModules: false,\n\n      /**\n       * @var {Object}\n       */\n      loadedModules: {},\n\n      /**\n       * @example\n       *  $.formUtils.loadModules('date, security.dev');\n       *\n       * Will load the scripts date.js and security.dev.js from the\n       * directory where this script resides. If you want to load\n       * the modules from another directory you can use the\n       * path argument.\n       *\n       * The script will be cached by the browser unless the module\n       * name ends with .dev\n       *\n       * @param {String} modules - Comma separated string with module file names (no directory nor file extension)\n       * @param {String} [path] - Optional, path where the module files is located if their not in the same directory as the core modules\n       * @param {function} [callback] - Optional, whether or not to fire event 'load' when modules finished loading\n       */\n      loadModules: function (modules, path, callback) {\n        if ($.formUtils.isLoadingModules) {\n          setTimeout(function () {\n            $.formUtils.loadModules(modules, path, callback)\n          }, 10)\n          return\n        }\n\n        var hasLoadedAnyModule = false,\n          loadModuleScripts = function (modules, path) {\n            var moduleList = $.split(modules),\n              numModules = moduleList.length,\n              moduleLoadedCallback = function () {\n                numModules--\n                if (numModules === 0) {\n                  $.formUtils.isLoadingModules = false\n                  if (callback && hasLoadedAnyModule) {\n                    if (typeof callback === 'function') {\n                      callback()\n                    }\n                  }\n                }\n              }\n\n            if (numModules > 0) {\n              $.formUtils.isLoadingModules = true\n            }\n\n            var cacheSuffix = '?_=' + new Date().getTime(),\n              appendToElement = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]\n\n            $.each(moduleList, function (i, modName) {\n              modName = $.trim(modName)\n              if (modName.length === 0) {\n                moduleLoadedCallback()\n              } else {\n                var scriptUrl = path + modName + (modName.slice(-3) === '.js' ? '' : '.js'),\n                  script = document.createElement('SCRIPT')\n\n                if (scriptUrl in $.formUtils.loadedModules) {\n                  // already loaded\n                  moduleLoadedCallback()\n                } else {\n                  // Remember that this script is loaded\n                  $.formUtils.loadedModules[scriptUrl] = 1\n                  hasLoadedAnyModule = true\n\n                  // Load the script\n                  script.type = 'text/javascript'\n                  script.onload = moduleLoadedCallback\n                  script.src = scriptUrl + (scriptUrl.slice(-7) === '.dev.js' ? cacheSuffix : '')\n                  script.onerror = function () {\n                    $.formUtils.warn('Unable to load form validation module ' + scriptUrl)\n                  }\n                  script.onreadystatechange = function () {\n                    // IE 7 fix\n                    if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                      moduleLoadedCallback()\n                      // Handle memory leak in IE\n                      this.onload = null\n                      this.onreadystatechange = null\n                    }\n                  }\n                  appendToElement.appendChild(script)\n                }\n              }\n            })\n          }\n\n        if (path) {\n          loadModuleScripts(modules, path)\n        } else {\n          var findScriptPathAndLoadModules = function () {\n            var foundPath = false\n            $('script[src*=\"form-validator\"]').each(function () {\n              foundPath = this.src.substr(0, this.src.lastIndexOf('/')) + '/'\n              if (foundPath === '/') {\n                foundPath = ''\n              }\n              return false\n            })\n\n            if (foundPath !== false) {\n              loadModuleScripts(modules, foundPath)\n              return true\n            }\n            return false\n          }\n\n          if (!findScriptPathAndLoadModules()) {\n            $(findScriptPathAndLoadModules)\n          }\n        }\n      }\n    })\n  })(jQuery)\n\n  /**\n   * Setup function for the plugin\n   */\n  ;(function ($) {\n    'use strict'\n\n    /**\n     * A bit smarter split function\n     * delimiter can be space, comma, dash or pipe\n     * @param {String} val\n     * @param {Function|String} [callback]\n     * @returns {Array|void}\n     */\n    $.split = function (val, callback) {\n      if (typeof callback !== 'function') {\n        // return array\n        if (!val) {\n          return []\n        }\n        var values = []\n        $.each(val.split(callback ? callback : /[,|\\-\\s]\\s*/g), function (i, str) {\n          str = $.trim(str)\n          if (str.length) {\n            values.push(str)\n          }\n        })\n        return values\n      } else if (val) {\n        // exec callback func on each\n        $.each(val.split(/[,|\\-\\s]\\s*/g), function (i, str) {\n          str = $.trim(str)\n          if (str.length) {\n            return callback(str, i)\n          }\n        })\n      }\n    }\n\n    /**\n     * Short hand function that makes the validation setup require less code\n     * @param conf\n     */\n    $.validate = function (conf) {\n      var defaultConf = $.extend($.formUtils.defaultConfig(), {\n        form: 'form',\n        validateOnEvent: false,\n        validateOnBlur: true,\n        validateCheckboxRadioOnClick: true,\n        showHelpOnFocus: true,\n        addSuggestions: true,\n        modules: '',\n        onModulesLoaded: null,\n        language: false,\n        onSuccess: false,\n        onError: false,\n        onElementValidate: false\n      })\n\n      conf = $.extend(defaultConf, conf || {})\n\n      if (conf.lang && conf.lang !== 'en') {\n        var langModule = 'lang/' + conf.lang + '.js'\n        conf.modules += conf.modules.length ? ',' + langModule : langModule\n      }\n\n      // Add validation to forms\n      $(conf.form).each(function (i, form) {\n        // Make a reference to the config for this form\n        form.validationConfig = conf\n\n        // Trigger jQuery event that we're about to setup validation\n        var $form = $(form)\n        // $.formUtils.$win.trigger('formValidationSetup', [$form, conf]);\n        $form.trigger('formValidationSetup', [$form, conf])\n\n        // Remove classes and event handlers that might have been\n        // added by a previous call to $.validate\n        $form\n          .find('.has-help-txt')\n          .unbind('focus.validation')\n          .unbind('blur.validation')\n\n        $form\n          .removeClass('has-validation-callback')\n          .unbind('submit.validation')\n          .unbind('reset.validation')\n          .find('input[data-validation],textarea[data-validation]')\n          .unbind('blur.validation')\n\n        // Validate when submitted\n        $form\n          .bind('submit.validation', function (evt) {\n            var $form = $(this),\n              stop = function () {\n                evt.stopImmediatePropagation()\n                return false\n              }\n\n            if ($.formUtils.haltValidation) {\n              // pressing several times on submit button while validation is halted\n              return stop()\n            }\n\n            if ($.formUtils.isLoadingModules) {\n              setTimeout(function () {\n                $form.trigger('submit.validation')\n              }, 200)\n              return stop()\n            }\n\n            var valid = $form.isValid(conf.language, conf)\n\n            if ($.formUtils.haltValidation) {\n              // Validation got halted by one of the validators\n              return stop()\n            } else {\n              if (valid && typeof conf.onSuccess === 'function') {\n                var callbackResponse = conf.onSuccess($form)\n                if (callbackResponse === false) {\n                  return stop()\n                }\n              } else if (!valid && typeof conf.onError === 'function') {\n                conf.onError($form)\n                return stop()\n              } else {\n                return valid ? true : stop()\n              }\n            }\n          })\n          .bind('reset.validation', function () {\n            $.formUtils.dialogs.removeAllMessagesAndStyling($form, conf)\n          })\n          .addClass('has-validation-callback')\n\n        if (conf.showHelpOnFocus) {\n          $form.showHelpOnFocus()\n        }\n        if (conf.addSuggestions) {\n          $form.addSuggestions()\n        }\n        if (conf.validateOnBlur) {\n          $form.validateOnBlur(conf.language, conf)\n          $form.bind('html5ValidationAttrsFound', function () {\n            $form.validateOnBlur(conf.language, conf)\n          })\n        }\n        if (conf.validateOnEvent) {\n          $form.validateOnEvent(conf.language, conf)\n        }\n      })\n\n      if (conf.modules !== '') {\n        $.formUtils.loadModules(conf.modules, false, function () {\n          if (typeof conf.onModulesLoaded === 'function') {\n            conf.onModulesLoaded()\n          }\n          var $form = typeof conf.form === 'string' ? $(conf.form) : conf.form\n          $.formUtils.$win.trigger('validatorsLoaded', [$form, conf])\n        })\n      }\n    }\n  })(jQuery)\n\n  /**\n   * Utility methods and properties attached to $.formUtils\n   */\n  ;(function ($, window) {\n    'use strict'\n\n    var $win = $(window)\n\n    $.formUtils = $.extend($.formUtils || {}, {\n      $win: $win,\n\n      /**\n       * Default config for $(...).isValid();\n       */\n      defaultConfig: function () {\n        return {\n          ignore: [], // Names of inputs not to be validated even though `validationRuleAttribute` containing the validation rules tells us to\n          errorElementClass: 'error', // Class that will be put on elements which value is invalid\n          borderColorOnError: '#b94a48', // Border color of elements which value is invalid, empty string to not change border color\n          errorMessageClass: 'form-error', // class name of div containing error messages when validation fails\n          validationRuleAttribute: 'data-validation', // name of the attribute holding the validation rules\n          validationErrorMsgAttribute: 'data-validation-error-msg', // define custom err msg inline with element\n          errorMessagePosition: 'inline', // Can be either \"top\" or \"inline\"\n          errorMessageTemplate: {\n            container: '<div class=\"{errorMessageClass} alert alert-danger\">{messages}</div>',\n            messages: '<strong>{errorTitle}</strong><ul>{fields}</ul>',\n            field: '<li>{msg}</li>'\n          },\n          scrollToTopOnError: true,\n          dateFormat: 'yyyy-mm-dd',\n          addValidClassOnAll: false, // whether or not to apply class=\"valid\" even if the input wasn't validated\n          decimalSeparator: '.',\n          inputParentClassOnError: 'has-error', // twitter-bootstrap default class name\n          inputParentClassOnSuccess: 'has-success', // twitter-bootstrap default class name\n          validateHiddenInputs: false, // whether or not hidden inputs should be validated\n          inlineErrorMessageCallback: false,\n          submitErrorMessageCallback: false\n        }\n      },\n\n      /**\n       * Available validators\n       */\n      validators: {},\n\n      /**\n       * Events triggered by form validator\n       */\n      _events: { load: [], valid: [], invalid: [] },\n\n      /**\n       * Setting this property to true during validation will\n       * stop further validation from taking place and form will\n       * not be sent\n       */\n      haltValidation: false,\n\n      /**\n       * This variable will be true $.fn.isValid() is called\n       * and false when $.fn.validateOnBlur is called\n       */\n      isValidatingEntireForm: false,\n\n      /**\n       * Function for adding a validator\n       * @param {Object} validator\n       */\n      addValidator: function (validator) {\n        // prefix with \"validate_\" for backward compatibility reasons\n        var name = validator.name.indexOf('validate_') === 0 ? validator.name : 'validate_' + validator.name\n        if (validator.validateOnKeyUp === undefined) {\n          validator.validateOnKeyUp = true\n        }\n        this.validators[name] = validator\n      },\n\n      /**\n       * Warn user via the console if available\n       */\n      warn: function (msg) {\n        if ('console' in window) {\n          if (typeof window.console.warn === 'function') {\n            window.console.warn(msg)\n          } else if (typeof window.console.log === 'function') {\n            window.console.log(msg)\n          }\n        } else {\n          alert(msg)\n        }\n      },\n\n      /**\n       * Same as input $.fn.val() but also supporting input of typ radio or checkbox\n       * @example\n       *\n       *  $.formUtils.getValue('.myRadioButtons', $('#some-form'));\n       *  $.formUtils.getValue($('#some-form').find('.check-boxes'));\n       *\n       * @param query\n       * @param $parent\n       * @returns {String|Boolean}\n       */\n      getValue: function (query, $parent) {\n        var $inputs = $parent ? $parent.find(query) : query\n        if ($inputs.length > 0) {\n          var type = $inputs.eq(0).attr('type')\n          if (type === 'radio' || type === 'checkbox') {\n            return $inputs.filter(':checked').val()\n          } else {\n            return $inputs.val()\n          }\n        }\n        return false\n      },\n\n      /**\n       * Validate the value of given element according to the validation rules\n       * found in the attribute data-validation. Will return an object representing\n       * a validation result, having the props shouldChangeDisplay, isValid and errorMsg\n       * @param {jQuery} $elem\n       * @param {Object} language ($.formUtils.LANG)\n       * @param {Object} conf\n       * @param {jQuery} $form\n       * @param {String} [eventContext]\n       * @return {Object}\n       */\n      validateInput: function ($elem, language, conf, $form, eventContext) {\n        conf = conf || $.formUtils.defaultConfig()\n        language = language || $.formUtils.LANG\n\n        var value = this.getValue($elem)\n\n        $elem\n          .valAttr('skipped', false)\n          .one('beforeValidation', function () {\n            // Skip input because its hidden or disabled\n            // Doing this in a callback makes it possible for others to prevent the default\n            // behaviour by binding to the same event and call evt.stopImmediatePropagation()\n            if ($elem.attr('disabled') || (!$elem.is(':visible') && !conf.validateHiddenInputs)) {\n              $elem.valAttr('skipped', 1)\n            }\n          })\n          .trigger('beforeValidation', [value, conf, language])\n\n        var inputIsOptional = $elem.valAttr('optional') === 'true',\n          skipBecauseItsEmpty = !value && inputIsOptional,\n          validationRules = $elem.attr(conf.validationRuleAttribute),\n          isValid = true,\n          errorMsg = '',\n          result = { isValid: true, shouldChangeDisplay: true, errorMsg: '' }\n\n        // For input type=\"number\", browsers attempt to parse the entered value into a number.\n        // If the input is not numeric, browsers handle the situation differently:\n        // Chrome 48 simply disallows non-numeric input; FF 44 clears out the input box on blur;\n        // Safari 5 parses the entered string to find a leading number.\n        // If the input fails browser validation, the browser sets the input value equal to an empty string.\n        // Therefore, we cannot distinguish (apart from hacks) between an empty input type=\"text\" and one with a\n        // value that can't be parsed by the browser.\n\n        if (!validationRules || skipBecauseItsEmpty || $elem.valAttr('skipped')) {\n          result.shouldChangeDisplay = conf.addValidClassOnAll\n          return result\n        }\n\n        // Filter out specified characters\n        var ignore = $elem.valAttr('ignore')\n        if (ignore) {\n          $.each(ignore.split(''), function (i, char) {\n            value = value.replace(new RegExp('\\\\' + char), '')\n          })\n        }\n\n        $.split(\n          validationRules,\n          function (rule) {\n            if (rule.indexOf('validate_') !== 0) {\n              rule = 'validate_' + rule\n            }\n\n            var validator = $.formUtils.validators[rule]\n\n            if (validator) {\n              // special change of element for checkbox_group rule\n              if (rule === 'validate_checkbox_group') {\n                // set element to first in group, so error msg attr doesn't need to be set on all elements in group\n                $elem = $form.find('[name=\"' + $elem.attr('name') + '\"]:eq(0)')\n              }\n\n              if (eventContext !== 'keyup' || validator.validateOnKeyUp) {\n                // A validator can prevent itself from getting triggered on keyup\n                isValid = validator.validatorFunction(value, $elem, conf, language, $form)\n              }\n\n              if (!isValid) {\n                errorMsg = $.formUtils.dialogs.resolveErrorMessage($elem, validator, rule, conf, language)\n                return false // break iteration\n              }\n            } else {\n              // todo: Add some validator lookup function and tell immediately which module is missing\n              throw new Error(\n                'Using undefined validator \"' +\n                  rule +\n                  '\". Maybe you have forgotten to load the module that \"' +\n                  rule +\n                  '\" belongs to?'\n              )\n            }\n          },\n          ' '\n        )\n\n        if (isValid === false) {\n          $elem.trigger('validation', false)\n          result.errorMsg = errorMsg\n          result.isValid = false\n          result.shouldChangeDisplay = true\n        } else if (isValid === null) {\n          // A validatorFunction returning null means that it's not able to validate\n          // the input at this time. Most probably some async stuff need to gets finished\n          // first and then the validator will re-trigger the validation.\n          result.shouldChangeDisplay = false\n        } else {\n          $elem.trigger('validation', true)\n          result.shouldChangeDisplay = true\n        }\n\n        // Run element validation callback\n        if (typeof conf.onElementValidate === 'function' && errorMsg !== null) {\n          conf.onElementValidate(result.isValid, $elem, $form, errorMsg)\n        }\n\n        $elem.trigger('afterValidation', [result, eventContext])\n\n        return result\n      },\n\n      /**\n       * Is it a correct date according to given dateFormat. Will return false if not, otherwise\n       * an array 0=>year 1=>month 2=>day\n       *\n       * @param {String} val\n       * @param {String} dateFormat\n       * @param {Boolean} [addMissingLeadingZeros]\n       * @return {Array}|{Boolean}\n       */\n      parseDate: function (val, dateFormat, addMissingLeadingZeros) {\n        var divider = dateFormat.replace(/[a-zA-Z]/gi, '').substring(0, 1),\n          regexp = '^',\n          formatParts = dateFormat.split(divider || null),\n          matches,\n          day,\n          month,\n          year\n\n        $.each(formatParts, function (i, part) {\n          regexp += (i > 0 ? '\\\\' + divider : '') + '(\\\\d{' + part.length + '})'\n        })\n\n        regexp += '$'\n\n        if (addMissingLeadingZeros) {\n          var newValueParts = []\n          $.each(val.split(divider), function (i, part) {\n            if (part.length === 1) {\n              part = '0' + part\n            }\n            newValueParts.push(part)\n          })\n          val = newValueParts.join(divider)\n        }\n\n        matches = val.match(new RegExp(regexp))\n        if (matches === null) {\n          return false\n        }\n\n        var findDateUnit = function (unit, formatParts, matches) {\n          for (var i = 0; i < formatParts.length; i++) {\n            if (formatParts[i].substring(0, 1) === unit) {\n              return $.formUtils.parseDateInt(matches[i + 1])\n            }\n          }\n          return -1\n        }\n\n        month = findDateUnit('m', formatParts, matches)\n        day = findDateUnit('d', formatParts, matches)\n        year = findDateUnit('y', formatParts, matches)\n\n        if (\n          (month === 2 && day > 28 && (year % 4 !== 0 || (year % 100 === 0 && year % 400 !== 0))) ||\n          (month === 2 && day > 29 && (year % 4 === 0 || (year % 100 !== 0 && year % 400 === 0))) ||\n          month > 12 ||\n          month === 0\n        ) {\n          return false\n        }\n        if ((this.isShortMonth(month) && day > 30) || (!this.isShortMonth(month) && day > 31) || day === 0) {\n          return false\n        }\n\n        return [year, month, day]\n      },\n\n      /**\n       * skum fix. är talet 05 eller lägre ger parseInt rätt int annars får man 0 när man kör parseInt?\n       *\n       * @param {String} val\n       * @return {Number}\n       */\n      parseDateInt: function (val) {\n        if (val.indexOf('0') === 0) {\n          val = val.replace('0', '')\n        }\n        return parseInt(val, 10)\n      },\n\n      /**\n       * Has month only 30 days?\n       *\n       * @param {Number} m\n       * @return {Boolean}\n       */\n      isShortMonth: function (m) {\n        return (m % 2 === 0 && m < 7) || (m % 2 !== 0 && m > 7)\n      },\n\n      /**\n       * Restrict input length\n       *\n       * @param {jQuery} $inputElement Jquery Html object\n       * @param {jQuery} $maxLengthElement jQuery Html Object\n       * @return void\n       */\n      lengthRestriction: function ($inputElement, $maxLengthElement) {\n        // read maxChars from counter display initial text value\n        var maxChars = parseInt($maxLengthElement.text(), 10),\n          charsLeft = 0,\n          // internal function does the counting and sets display value\n          countCharacters = function () {\n            var numChars = $inputElement.val().length\n            if (numChars > maxChars) {\n              // get current scroll bar position\n              var currScrollTopPos = $inputElement.scrollTop()\n              // trim value to max length\n              $inputElement.val($inputElement.val().substring(0, maxChars))\n              $inputElement.scrollTop(currScrollTopPos)\n            }\n            charsLeft = maxChars - numChars\n            if (charsLeft < 0) {\n              charsLeft = 0\n            }\n\n            // set counter text\n            $maxLengthElement.text(charsLeft)\n          }\n\n        // bind events to this element\n        // setTimeout is needed, cut or paste fires before val is available\n        $($inputElement)\n          .bind('keydown keyup keypress focus blur', countCharacters)\n          .bind('cut paste', function () {\n            setTimeout(countCharacters, 100)\n          })\n\n        // count chars on pageload, if there are prefilled input-values\n        $(document).bind('ready', countCharacters)\n      },\n\n      /**\n       * Test numeric against allowed range\n       *\n       * @param $value int\n       * @param $rangeAllowed str; (1-2, min1, max2, 10)\n       * @return array\n       */\n      numericRangeCheck: function (value, rangeAllowed) {\n        // split by dash\n        var range = $.split(rangeAllowed),\n          // min or max\n          minmax = parseInt(rangeAllowed.substr(3), 10)\n\n        if (range.length === 1 && rangeAllowed.indexOf('min') === -1 && rangeAllowed.indexOf('max') === -1) {\n          range = [rangeAllowed, rangeAllowed] // only a number, checking agains an exact number of characters\n        }\n\n        // range ?\n        if (range.length === 2 && (value < parseInt(range[0], 10) || value > parseInt(range[1], 10))) {\n          return ['out', range[0], range[1]]\n        } // value is out of range\n        else if (rangeAllowed.indexOf('min') === 0 && value < minmax) {\n          // min\n          return ['min', minmax]\n        } // value is below min\n        else if (rangeAllowed.indexOf('max') === 0 && value > minmax) {\n          // max\n          return ['max', minmax]\n        } // value is above max\n        // since no other returns executed, value is in allowed range\n        return ['ok']\n      },\n\n      _numSuggestionElements: 0,\n      _selectedSuggestion: null,\n      _previousTypedVal: null,\n\n      /**\n       * Utility function that can be used to create plugins that gives\n       * suggestions when inputs is typed into\n       * @param {jQuery} $elem\n       * @param {Array} suggestions\n       * @param {Object} settings - Optional\n       * @return {jQuery}\n       */\n      suggest: function ($elem, suggestions, settings) {\n        var conf = {\n            css: {\n              maxHeight: '150px',\n              background: '#FFF',\n              lineHeight: '150%',\n              textDecoration: 'underline',\n              overflowX: 'hidden',\n              overflowY: 'auto',\n              border: '#CCC solid 1px',\n              borderTop: 'none',\n              cursor: 'pointer'\n            },\n            activeSuggestionCSS: {\n              background: '#E9E9E9'\n            }\n          },\n          setSuggsetionPosition = function ($suggestionContainer, $input) {\n            var offset = $input.offset()\n            $suggestionContainer.css({\n              width: $input.outerWidth(),\n              left: offset.left + 'px',\n              top: offset.top + $input.outerHeight() + 'px'\n            })\n          }\n\n        if (settings) {\n          $.extend(conf, settings)\n        }\n\n        conf.css.position = 'absolute'\n        conf.css['z-index'] = 9999\n        $elem.attr('autocomplete', 'off')\n\n        if (this._numSuggestionElements === 0) {\n          // Re-position suggestion container if window size changes\n          $win.bind('resize', function () {\n            $('.jquery-form-suggestions').each(function () {\n              var $container = $(this),\n                suggestID = $container.attr('data-suggest-container')\n              setSuggsetionPosition($container, $('.suggestions-' + suggestID).eq(0))\n            })\n          })\n        }\n\n        this._numSuggestionElements++\n\n        var onSelectSuggestion = function ($el) {\n          var suggestionId = $el.valAttr('suggestion-nr')\n          $.formUtils._selectedSuggestion = null\n          $.formUtils._previousTypedVal = null\n          $('.jquery-form-suggestion-' + suggestionId).fadeOut('fast')\n        }\n\n        $elem\n          .data('suggestions', suggestions)\n          .valAttr('suggestion-nr', this._numSuggestionElements)\n          .unbind('focus.suggest')\n          .bind('focus.suggest', function () {\n            $(this).trigger('keyup')\n            $.formUtils._selectedSuggestion = null\n          })\n          .unbind('keyup.suggest')\n          .bind('keyup.suggest', function () {\n            var $input = $(this),\n              foundSuggestions = [],\n              val = $.trim($input.val()).toLocaleLowerCase()\n\n            if (val === $.formUtils._previousTypedVal) {\n              return\n            } else {\n              $.formUtils._previousTypedVal = val\n            }\n\n            var hasTypedSuggestion = false,\n              suggestionId = $input.valAttr('suggestion-nr'),\n              $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId)\n\n            $suggestionContainer.scrollTop(0)\n\n            // Find the right suggestions\n            if (val !== '') {\n              var findPartial = val.length > 2\n              $.each($input.data('suggestions'), function (i, suggestion) {\n                var lowerCaseVal = suggestion.toLocaleLowerCase()\n                if (lowerCaseVal === val) {\n                  foundSuggestions.push('<strong>' + suggestion + '</strong>')\n                  hasTypedSuggestion = true\n                  return false\n                } else if (lowerCaseVal.indexOf(val) === 0 || (findPartial && lowerCaseVal.indexOf(val) > -1)) {\n                  foundSuggestions.push(suggestion.replace(new RegExp(val, 'gi'), '<strong>$&</strong>'))\n                }\n              })\n            }\n\n            // Hide suggestion container\n            if (hasTypedSuggestion || (foundSuggestions.length === 0 && $suggestionContainer.length > 0)) {\n              $suggestionContainer.hide()\n            }\n\n            // Create suggestion container if not already exists\n            else if (foundSuggestions.length > 0 && $suggestionContainer.length === 0) {\n              $suggestionContainer = $('<div></div>')\n                .css(conf.css)\n                .appendTo('body')\n              $elem.addClass('suggestions-' + suggestionId)\n              $suggestionContainer\n                .attr('data-suggest-container', suggestionId)\n                .addClass('jquery-form-suggestions')\n                .addClass('jquery-form-suggestion-' + suggestionId)\n            }\n\n            // Show hidden container\n            else if (foundSuggestions.length > 0 && !$suggestionContainer.is(':visible')) {\n              $suggestionContainer.show()\n            }\n\n            // add suggestions\n            if (foundSuggestions.length > 0 && val.length !== foundSuggestions[0].length) {\n              // put container in place every time, just in case\n              setSuggsetionPosition($suggestionContainer, $input)\n\n              // Add suggestions HTML to container\n              $suggestionContainer.html('')\n              $.each(foundSuggestions, function (i, text) {\n                $('<div></div>')\n                  .append(text)\n                  .css({\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    padding: '5px'\n                  })\n                  .addClass('form-suggest-element')\n                  .appendTo($suggestionContainer)\n                  .click(function () {\n                    $input.focus()\n                    $input.val($(this).text())\n                    $input.trigger('change')\n                    onSelectSuggestion($input)\n                  })\n              })\n            }\n          })\n          .unbind('keydown.validation')\n          .bind('keydown.validation', function (e) {\n            var code = e.keyCode ? e.keyCode : e.which,\n              suggestionId,\n              $suggestionContainer,\n              $input = $(this)\n\n            if (code === 13 && $.formUtils._selectedSuggestion !== null) {\n              suggestionId = $input.valAttr('suggestion-nr')\n              $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId)\n              if ($suggestionContainer.length > 0) {\n                var newText = $suggestionContainer\n                  .find('div')\n                  .eq($.formUtils._selectedSuggestion)\n                  .text()\n                $input.val(newText)\n                $input.trigger('change')\n                onSelectSuggestion($input)\n                e.preventDefault()\n              }\n            } else {\n              suggestionId = $input.valAttr('suggestion-nr')\n              $suggestionContainer = $('.jquery-form-suggestion-' + suggestionId)\n              var $suggestions = $suggestionContainer.children()\n              if ($suggestions.length > 0 && $.inArray(code, [38, 40]) > -1) {\n                if (code === 38) {\n                  // key up\n                  if ($.formUtils._selectedSuggestion === null) {\n                    $.formUtils._selectedSuggestion = $suggestions.length - 1\n                  } else {\n                    $.formUtils._selectedSuggestion--\n                  }\n                  if ($.formUtils._selectedSuggestion < 0) {\n                    $.formUtils._selectedSuggestion = $suggestions.length - 1\n                  }\n                } else if (code === 40) {\n                  // key down\n                  if ($.formUtils._selectedSuggestion === null) {\n                    $.formUtils._selectedSuggestion = 0\n                  } else {\n                    $.formUtils._selectedSuggestion++\n                  }\n                  if ($.formUtils._selectedSuggestion > $suggestions.length - 1) {\n                    $.formUtils._selectedSuggestion = 0\n                  }\n                }\n\n                // Scroll in suggestion window\n                var containerInnerHeight = $suggestionContainer.innerHeight(),\n                  containerScrollTop = $suggestionContainer.scrollTop(),\n                  suggestionHeight = $suggestionContainer\n                    .children()\n                    .eq(0)\n                    .outerHeight(),\n                  activeSuggestionPosY = suggestionHeight * $.formUtils._selectedSuggestion\n\n                if (\n                  activeSuggestionPosY < containerScrollTop ||\n                  activeSuggestionPosY > containerScrollTop + containerInnerHeight\n                ) {\n                  $suggestionContainer.scrollTop(activeSuggestionPosY)\n                }\n\n                $suggestions\n                  .removeClass('active-suggestion')\n                  .css('background', 'none')\n                  .eq($.formUtils._selectedSuggestion)\n                  .addClass('active-suggestion')\n                  .css(conf.activeSuggestionCSS)\n\n                e.preventDefault()\n                return false\n              }\n            }\n          })\n          .unbind('blur.suggest')\n          .bind('blur.suggest', function () {\n            onSelectSuggestion($(this))\n          })\n\n        return $elem\n      },\n\n      /**\n       * Error dialogs\n       *\n       * @var {Object}\n       */\n      LANG: {\n        errorTitle: 'Form submission failed!',\n        requiredField: 'This is a required field',\n        requiredFields: 'You have not answered all required fields',\n        badTime: 'You have not given a correct time',\n        badEmail: 'You have not given a correct e-mail address',\n        badTelephone: 'You have not given a correct phone number',\n        badSecurityAnswer: 'You have not given a correct answer to the security question',\n        badDate: 'You have not given a correct date',\n        lengthBadStart: 'The input value must be between ',\n        lengthBadEnd: ' characters',\n        lengthTooLongStart: 'The input value is longer than ',\n        lengthTooShortStart: 'The input value is shorter than ',\n        notConfirmed: 'Input values could not be confirmed',\n        badDomain: 'Incorrect domain value',\n        badUrl: 'The input value is not a correct URL',\n        badCustomVal: 'The input value is incorrect',\n        andSpaces: ' and spaces ',\n        badInt: 'The input value was not a correct number',\n        badSecurityNumber: 'Your social security number was incorrect',\n        badUKVatAnswer: 'Incorrect UK VAT Number',\n        badUKNin: 'Incorrect UK NIN',\n        badUKUtr: 'Incorrect UK UTR Number',\n        badStrength: \"The password isn't strong enough\",\n        badNumberOfSelectedOptionsStart: 'You have to choose at least ',\n        badNumberOfSelectedOptionsEnd: ' answers',\n        badAlphaNumeric: 'The input value can only contain alphanumeric characters ',\n        badAlphaNumericExtra: ' and ',\n        wrongFileSize: 'The file you are trying to upload is too large (max %s)',\n        wrongFileType: 'Only files of type %s is allowed',\n        groupCheckedRangeStart: 'Please choose between ',\n        groupCheckedTooFewStart: 'Please choose at least ',\n        groupCheckedTooManyStart: 'Please choose a maximum of ',\n        groupCheckedEnd: ' item(s)',\n        badCreditCard: 'The credit card number is not correct',\n        badCVV: 'The CVV number was not correct',\n        wrongFileDim: 'Incorrect image dimensions,',\n        imageTooTall: 'the image can not be taller than',\n        imageTooWide: 'the image can not be wider than',\n        imageTooSmall: 'the image was too small',\n        min: 'min',\n        max: 'max',\n        imageRatioNotAccepted: 'Image ratio is not be accepted',\n        badBrazilTelephoneAnswer: 'The phone number entered is invalid',\n        badBrazilCEPAnswer: 'The CEP entered is invalid',\n        badBrazilCPFAnswer: 'The CPF entered is invalid',\n        badPlPesel: 'The PESEL entered is invalid',\n        badPlNip: 'The NIP entered is invalid',\n        badPlRegon: 'The REGON entered is invalid',\n        badreCaptcha: 'Please confirm that you are not a bot'\n      }\n    })\n  })(jQuery, window)\n\n  /**\n   * File declaring all default validators.\n   */\n  ;(function ($) {\n    /*\n     * Validate email\n     */\n    $.formUtils.addValidator({\n      name: 'email',\n      validatorFunction: function (email) {\n        var emailParts = email.toLowerCase().split('@'),\n          localPart = emailParts[0],\n          domain = emailParts[1]\n\n        if (localPart && domain) {\n          if (localPart.indexOf('\"') === 0) {\n            var len = localPart.length\n            localPart = localPart.replace(/\\\"/g, '')\n            if (localPart.length !== len - 2) {\n              return false // It was not allowed to have more than two apostrophes\n            }\n          }\n\n          return (\n            $.formUtils.validators.validate_domain.validatorFunction(emailParts[1]) &&\n            localPart.indexOf('.') !== 0 &&\n            localPart.substring(localPart.length - 1, localPart.length) !== '.' &&\n            localPart.indexOf('..') === -1 &&\n            !/[^\\w\\+\\.\\-\\#\\-\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:]/.test(localPart)\n          )\n        }\n\n        return false\n      },\n      errorMessage: '',\n      errorMessageKey: 'badEmail'\n    })\n\n    /*\n     * Validate domain name\n     */\n    $.formUtils.addValidator({\n      name: 'domain',\n      validatorFunction: function (val) {\n        return (\n          val.length > 0 &&\n          val.length <= 253 && // Including sub domains\n          !/[^a-zA-Z0-9]/.test(val.slice(-2)) &&\n          !/[^a-zA-Z0-9]/.test(val.substr(0, 1)) &&\n          !/[^a-zA-Z0-9\\.\\-]/.test(val) &&\n          val.split('..').length === 1 &&\n          val.split('.').length > 1\n        )\n      },\n      errorMessage: '',\n      errorMessageKey: 'badDomain'\n    })\n\n    /*\n     * Validate required\n     */\n    $.formUtils.addValidator({\n      name: 'required',\n      validatorFunction: function (val, $el, config, language, $form) {\n        switch ($el.attr('type')) {\n          case 'checkbox':\n            return $el.is(':checked')\n          case 'radio':\n            return $form.find('input[name=\"' + $el.attr('name') + '\"]').filter(':checked').length > 0\n          default:\n            return $.trim(val) !== ''\n        }\n      },\n      errorMessage: '',\n      errorMessageKey: function (config) {\n        if (config.errorMessagePosition === 'top' || typeof config.errorMessagePosition === 'function') {\n          return 'requiredFields'\n        } else {\n          return 'requiredField'\n        }\n      }\n    })\n\n    /*\n     * Validate length range\n     */\n    $.formUtils.addValidator({\n      name: 'length',\n      validatorFunction: function (val, $el, conf, lang) {\n        var lengthAllowed = $el.valAttr('length'),\n          type = $el.attr('type')\n\n        if (lengthAllowed === undefined) {\n          alert('Please add attribute \"data-validation-length\" to ' + $el[0].nodeName + ' named ' + $el.attr('name'))\n          return true\n        }\n\n        // check if length is above min, below max or within range.\n        var len = type === 'file' && $el.get(0).files !== undefined ? $el.get(0).files.length : val.length,\n          lengthCheckResults = $.formUtils.numericRangeCheck(len, lengthAllowed),\n          checkResult\n\n        switch (\n          lengthCheckResults[0] // outside of allowed range\n        ) {\n          case 'out':\n            this.errorMessage = lang.lengthBadStart + lengthAllowed + lang.lengthBadEnd\n            checkResult = false\n            break\n          // too short\n          case 'min':\n            this.errorMessage = lang.lengthTooShortStart + lengthCheckResults[1] + lang.lengthBadEnd\n            checkResult = false\n            break\n          // too long\n          case 'max':\n            this.errorMessage = lang.lengthTooLongStart + lengthCheckResults[1] + lang.lengthBadEnd\n            checkResult = false\n            break\n          // ok\n          default:\n            checkResult = true\n        }\n\n        return checkResult\n      },\n      errorMessage: '',\n      errorMessageKey: ''\n    })\n\n    /*\n     * Validate url\n     */\n    $.formUtils.addValidator({\n      name: 'url',\n      validatorFunction: function (url) {\n        // written by Scott Gonzalez: http://projects.scottsplayground.com/iri/\n        // - Victor Jonsson added support for arrays in the url ?arg[]=sdfsdf\n        // - General improvements made by Stéphane Moureau <https://github.com/TraderStf>\n\n        var urlFilter = /^(https?|ftp):\\/\\/((((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])(\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|\\[|\\]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#(((\\w|-|\\.|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n        if (urlFilter.test(url)) {\n          var domain = url.split('://')[1],\n            domainSlashPos = domain.indexOf('/')\n\n          if (domainSlashPos > -1) {\n            domain = domain.substr(0, domainSlashPos)\n          }\n\n          return $.formUtils.validators.validate_domain.validatorFunction(domain) // todo: add support for IP-addresses\n        }\n        return false\n      },\n      errorMessage: '',\n      errorMessageKey: 'badUrl'\n    })\n\n    /*\n     * Validate number (floating or integer)\n     */\n    $.formUtils.addValidator({\n      name: 'number',\n      validatorFunction: function (val, $el, conf) {\n        if (val !== '') {\n          var allowing = $el.valAttr('allowing') || '',\n            decimalSeparator = $el.valAttr('decimal-separator') || conf.decimalSeparator,\n            allowsRange = false,\n            begin,\n            end,\n            steps = $el.valAttr('step') || '',\n            allowsSteps = false,\n            sanitize = $el.attr('data-sanitize') || '',\n            isFormattedWithNumeral = sanitize.match(/(^|[\\s])numberFormat([\\s]|$)/i)\n\n          if (isFormattedWithNumeral) {\n            if (!window.numeral) {\n              throw new ReferenceError(\n                'The data-sanitize value numberFormat cannot be used without the numeral' +\n                  ' library. Please see Data Validation in http://www.formvalidator.net for more information.'\n              )\n            }\n            //Unformat input first, then convert back to String\n            if (val.length) {\n              val = String(numeral().unformat(val))\n            }\n          }\n\n          if (allowing.indexOf('number') === -1) {\n            allowing += ',number'\n          }\n\n          if (allowing.indexOf('negative') === -1 && val.indexOf('-') === 0) {\n            return false\n          }\n\n          if (allowing.indexOf('range') > -1) {\n            begin = parseFloat(allowing.substring(allowing.indexOf('[') + 1, allowing.indexOf(';')))\n            end = parseFloat(allowing.substring(allowing.indexOf(';') + 1, allowing.indexOf(']')))\n            allowsRange = true\n          }\n\n          if (steps !== '') {\n            allowsSteps = true\n          }\n\n          if (decimalSeparator === ',') {\n            if (val.indexOf('.') > -1) {\n              return false\n            }\n            // Fix for checking range with floats using ,\n            val = val.replace(',', '.')\n          }\n          if (\n            val.replace(/[0-9-]/g, '') === '' &&\n            (!allowsRange || (val >= begin && val <= end)) &&\n            (!allowsSteps || val % steps === 0)\n          ) {\n            return true\n          }\n\n          if (\n            allowing.indexOf('float') > -1 &&\n            val.match(new RegExp('^([0-9-]+)\\\\.([0-9]+)$')) !== null &&\n            (!allowsRange || (val >= begin && val <= end)) &&\n            (!allowsSteps || val % steps === 0)\n          ) {\n            return true\n          }\n        }\n        return false\n      },\n      errorMessage: '',\n      errorMessageKey: 'badInt'\n    })\n\n    /*\n     * Validate alpha numeric\n     */\n    $.formUtils.addValidator({\n      name: 'alphanumeric',\n      validatorFunction: function (val, $el, conf, language) {\n        var patternStart = '^([a-zA-Z0-9',\n          patternEnd = ']+)$',\n          additionalChars = $el.valAttr('allowing'),\n          pattern = ''\n\n        if (additionalChars) {\n          pattern = patternStart + additionalChars + patternEnd\n          var extra = additionalChars.replace(/\\\\/g, '')\n          if (extra.indexOf(' ') > -1) {\n            extra = extra.replace(' ', '')\n            extra += language.andSpaces || $.formUtils.LANG.andSpaces\n          }\n          this.errorMessage = language.badAlphaNumeric + language.badAlphaNumericExtra + extra\n        } else {\n          pattern = patternStart + patternEnd\n          this.errorMessage = language.badAlphaNumeric\n        }\n\n        return new RegExp(pattern).test(val)\n      },\n      errorMessage: '',\n      errorMessageKey: ''\n    })\n\n    /*\n     * Validate against regexp\n     */\n    $.formUtils.addValidator({\n      name: 'custom',\n      validatorFunction: function (val, $el) {\n        var regexp = new RegExp($el.valAttr('regexp'))\n        return regexp.test(val)\n      },\n      errorMessage: '',\n      errorMessageKey: 'badCustomVal'\n    })\n\n    /*\n     * Validate date\n     */\n    $.formUtils.addValidator({\n      name: 'date',\n      validatorFunction: function (date, $el, conf) {\n        var dateFormat = $el.valAttr('format') || conf.dateFormat || 'yyyy-mm-dd',\n          addMissingLeadingZeros = $el.valAttr('require-leading-zero') === 'false'\n        return $.formUtils.parseDate(date, dateFormat, addMissingLeadingZeros) !== false\n      },\n      errorMessage: '',\n      errorMessageKey: 'badDate'\n    })\n\n    /*\n     * Validate group of checkboxes, validate qty required is checked\n     * written by Steve Wasiura : http://stevewasiura.waztech.com\n     * element attrs\n     *    data-validation=\"checkbox_group\"\n     *    data-validation-qty=\"1-2\"  // min 1 max 2\n     *    data-validation-error-msg=\"chose min 1, max of 2 checkboxes\"\n     */\n    $.formUtils.addValidator({\n      name: 'checkbox_group',\n      validatorFunction: function (val, $el, conf, lang, $form) {\n        // preset return var\n        var isValid = true,\n          // get name of element. since it is a checkbox group, all checkboxes will have same name\n          elname = $el.attr('name'),\n          // get checkboxes and count the checked ones\n          $checkBoxes = $('input[type=checkbox][name^=\"' + elname + '\"]', $form),\n          checkedCount = $checkBoxes.filter(':checked').length,\n          // get el attr that specs qty required / allowed\n          qtyAllowed = $el.valAttr('qty')\n\n        if (qtyAllowed === undefined) {\n          var elementType = $el.get(0).nodeName\n          alert('Attribute \"data-validation-qty\" is missing from ' + elementType + ' named ' + $el.attr('name'))\n        }\n\n        // call Utility function to check if count is above min, below max, within range etc.\n        var qtyCheckResults = $.formUtils.numericRangeCheck(checkedCount, qtyAllowed)\n\n        // results will be array, [0]=result str, [1]=qty int\n        switch (qtyCheckResults[0]) {\n          // outside allowed range\n          case 'out':\n            this.errorMessage = lang.groupCheckedRangeStart + qtyAllowed + lang.groupCheckedEnd\n            isValid = false\n            break\n          // below min qty\n          case 'min':\n            this.errorMessage = lang.groupCheckedTooFewStart + qtyCheckResults[1] + lang.groupCheckedEnd\n            isValid = false\n            break\n          // above max qty\n          case 'max':\n            this.errorMessage = lang.groupCheckedTooManyStart + qtyCheckResults[1] + lang.groupCheckedEnd\n            isValid = false\n            break\n          // ok\n          default:\n            isValid = true\n        }\n\n        if (!isValid) {\n          var _triggerOnBlur = function () {\n            $checkBoxes.unbind('click', _triggerOnBlur)\n            $checkBoxes.filter('*[data-validation]').validateInputOnBlur(lang, conf, false, 'blur')\n          }\n          $checkBoxes.bind('click', _triggerOnBlur)\n        }\n\n        return isValid\n      }\n      //   errorMessage : '', // set above in switch statement\n      //   errorMessageKey: '' // not used\n    })\n\n    $.formUtils.addValidator({\n      name: 'none',\n      validatorFunction: function(value, $el, config, language, $form) {\n        return true\n      }\n    })\n\n    $.formUtils.addValidator({\n      name: 'confirmation',\n      validatorFunction: function (value, $el, config, language, $form) {\n        var password,\n          passwordInputName = $el.valAttr('confirm') || $el.attr('name') + '_confirmation',\n          $passwordInput = $form.find('[name=\"' + passwordInputName + '\"]')\n        if (!$passwordInput.length) {\n          $.formUtils.warn(\n            'Password confirmation validator: could not find an input ' + 'with name \"' + passwordInputName + '\"',\n            true\n          )\n          return false\n        }\n\n        password = $passwordInput.val()\n        if (config.validateOnBlur && !$passwordInput[0].hasValidationCallback) {\n          $passwordInput[0].hasValidationCallback = true\n          var keyUpCallback = function () {\n            $el.validate()\n          }\n          $passwordInput.on('keyup', keyUpCallback)\n          $form.one('formValidationSetup', function () {\n            $passwordInput[0].hasValidationCallback = false\n            $passwordInput.off('keyup', keyUpCallback)\n          })\n        }\n\n        return value === password\n      },\n      errorMessage: '',\n      errorMessageKey: 'notConfirmed'\n    })\n  })(jQuery)\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/formvalidator/jquery.form-validator.js?");

/***/ }),
/* 20 */
/*!**********************************************************!*\
  !*** ./src/public/js/vendor/chosen/chosen.jquery.min.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\n/* Chosen v1.3.0 | (c) 2011-2014 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */\n!function () {\n  var a,\n    AbstractChosen,\n    Chosen,\n    SelectParser,\n    b,\n    c = {}.hasOwnProperty,\n    d = function (a, b) {\n      function d () {\n        this.constructor = a\n      }\n      for (var e in b) c.call(b, e) && (a[e] = b[e])\n      return (d.prototype = b.prototype), (a.prototype = new d()), (a.__super__ = b.prototype), a\n    }\n  ;(SelectParser = (function () {\n    function SelectParser () {\n      ;(this.options_index = 0), (this.parsed = [])\n    }\n    return (\n      (SelectParser.prototype.add_node = function (a) {\n        return 'OPTGROUP' === a.nodeName.toUpperCase() ? this.add_group(a) : this.add_option(a)\n      }),\n      (SelectParser.prototype.add_group = function (a) {\n        var b, c, d, e, f, g\n        for (\n          b = this.parsed.length,\n            this.parsed.push({\n              array_index: b,\n              group: !0,\n              label: this.escapeExpression(a.label),\n              children: 0,\n              disabled: a.disabled,\n              classes: a.className\n            }),\n            f = a.childNodes,\n            g = [],\n            d = 0,\n            e = f.length;\n          e > d;\n          d++\n        )\n          (c = f[d]), g.push(this.add_option(c, b, a.disabled))\n        return g\n      }),\n      (SelectParser.prototype.add_option = function (a, b, c) {\n        return 'OPTION' === a.nodeName.toUpperCase()\n          ? ('' !== a.text\n              ? (null != b && (this.parsed[b].children += 1),\n                this.parsed.push({\n                  array_index: this.parsed.length,\n                  options_index: this.options_index,\n                  value: a.value,\n                  text: a.text,\n                  html: a.innerHTML,\n                  selected: a.selected,\n                  disabled: c === !0 ? c : a.disabled,\n                  group_array_index: b,\n                  classes: a.className,\n                  style: a.style.cssText\n                }))\n              : this.parsed.push({ array_index: this.parsed.length, options_index: this.options_index, empty: !0 }),\n            (this.options_index += 1))\n          : void 0\n      }),\n      (SelectParser.prototype.escapeExpression = function (a) {\n        var b, c\n        return null == a || a === !1\n          ? ''\n          : /[\\&\\<\\>\\\"\\'\\`]/.test(a)\n          ? ((b = { '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#x27;', '`': '&#x60;' }),\n            (c = /&(?!\\w+;)|[\\<\\>\\\"\\'\\`]/g),\n            a.replace(c, function (a) {\n              return b[a] || '&amp;'\n            }))\n          : a\n      }),\n      SelectParser\n    )\n  })()),\n    (SelectParser.select_to_array = function (a) {\n      var b, c, d, e, f\n      for (c = new SelectParser(), f = a.childNodes, d = 0, e = f.length; e > d; d++) (b = f[d]), c.add_node(b)\n      return c.parsed\n    }),\n    (AbstractChosen = (function () {\n      function AbstractChosen (a, b) {\n        ;(this.form_field = a),\n          (this.options = null != b ? b : {}),\n          AbstractChosen.browser_is_supported() &&\n            ((this.is_multiple = this.form_field.multiple),\n            this.set_default_text(),\n            this.set_default_values(),\n            this.setup(),\n            this.set_up_html(),\n            this.register_observers(),\n            this.on_ready())\n      }\n      return (\n        (AbstractChosen.prototype.set_default_values = function () {\n          var a = this\n          return (\n            (this.click_test_action = function (b) {\n              return a.test_active_click(b)\n            }),\n            (this.activate_action = function (b) {\n              return a.activate_field(b)\n            }),\n            (this.active_field = !1),\n            (this.mouse_on_container = !1),\n            (this.results_showing = !1),\n            (this.result_highlighted = null),\n            (this.allow_single_deselect =\n              null != this.options.allow_single_deselect &&\n              null != this.form_field.options[0] &&\n              '' === this.form_field.options[0].text\n                ? this.options.allow_single_deselect\n                : !1),\n            (this.disable_search_threshold = this.options.disable_search_threshold || 0),\n            (this.disable_search = this.options.disable_search || !1),\n            (this.enable_split_word_search =\n              null != this.options.enable_split_word_search ? this.options.enable_split_word_search : !0),\n            (this.group_search = null != this.options.group_search ? this.options.group_search : !0),\n            (this.search_contains = this.options.search_contains || !1),\n            (this.single_backstroke_delete =\n              null != this.options.single_backstroke_delete ? this.options.single_backstroke_delete : !0),\n            (this.max_selected_options = this.options.max_selected_options || 1 / 0),\n            (this.inherit_select_classes = this.options.inherit_select_classes || !1),\n            (this.display_selected_options =\n              null != this.options.display_selected_options ? this.options.display_selected_options : !0),\n            (this.display_disabled_options =\n              null != this.options.display_disabled_options ? this.options.display_disabled_options : !0)\n          )\n        }),\n        (AbstractChosen.prototype.set_default_text = function () {\n          return (\n            (this.default_text = this.form_field.getAttribute('data-placeholder')\n              ? this.form_field.getAttribute('data-placeholder')\n              : this.is_multiple\n              ? this.options.placeholder_text_multiple ||\n                this.options.placeholder_text ||\n                AbstractChosen.default_multiple_text\n              : this.options.placeholder_text_single ||\n                this.options.placeholder_text ||\n                AbstractChosen.default_single_text),\n            (this.results_none_found =\n              this.form_field.getAttribute('data-no_results_text') ||\n              this.options.no_results_text ||\n              AbstractChosen.default_no_result_text)\n          )\n        }),\n        (AbstractChosen.prototype.mouse_enter = function () {\n          return (this.mouse_on_container = !0)\n        }),\n        (AbstractChosen.prototype.mouse_leave = function () {\n          return (this.mouse_on_container = !1)\n        }),\n        (AbstractChosen.prototype.input_focus = function () {\n          var a = this\n          if (this.is_multiple) {\n            if (!this.active_field)\n              return setTimeout(function () {\n                return a.container_mousedown()\n              }, 50)\n          } else if (!this.active_field) return this.activate_field()\n        }),\n        (AbstractChosen.prototype.input_blur = function () {\n          var a = this\n          return this.mouse_on_container\n            ? void 0\n            : ((this.active_field = !1),\n              setTimeout(function () {\n                return a.blur_test()\n              }, 100))\n        }),\n        (AbstractChosen.prototype.results_option_build = function (a) {\n          var b, c, d, e, f\n          for (b = '', f = this.results_data, d = 0, e = f.length; e > d; d++)\n            (c = f[d]),\n              (b += c.group ? this.result_add_group(c) : this.result_add_option(c)),\n              (null != a ? a.first : void 0) &&\n                (c.selected && this.is_multiple\n                  ? this.choice_build(c)\n                  : c.selected && !this.is_multiple && this.single_set_selected_text(c.text))\n          return b\n        }),\n        (AbstractChosen.prototype.result_add_option = function (a) {\n          var b, c\n          return a.search_match\n            ? this.include_option_in_results(a)\n              ? ((b = []),\n                a.disabled || (a.selected && this.is_multiple) || b.push('active-result'),\n                !a.disabled || (a.selected && this.is_multiple) || b.push('disabled-result'),\n                a.selected && b.push('result-selected'),\n                null != a.group_array_index && b.push('group-option'),\n                '' !== a.classes && b.push(a.classes),\n                (c = document.createElement('li')),\n                (c.className = b.join(' ')),\n                (c.style.cssText = a.style),\n                c.setAttribute('data-option-array-index', a.array_index),\n                (c.innerHTML = a.search_text),\n                this.outerHTML(c))\n              : ''\n            : ''\n        }),\n        (AbstractChosen.prototype.result_add_group = function (a) {\n          var b, c\n          return a.search_match || a.group_match\n            ? a.active_options > 0\n              ? ((b = []),\n                b.push('group-result'),\n                a.classes && b.push(a.classes),\n                (c = document.createElement('li')),\n                (c.className = b.join(' ')),\n                (c.innerHTML = a.search_text),\n                this.outerHTML(c))\n              : ''\n            : ''\n        }),\n        (AbstractChosen.prototype.results_update_field = function () {\n          return (\n            this.set_default_text(),\n            this.is_multiple || this.results_reset_cleanup(),\n            this.result_clear_highlight(),\n            this.results_build(),\n            this.results_showing ? this.winnow_results() : void 0\n          )\n        }),\n        (AbstractChosen.prototype.reset_single_select_options = function () {\n          var a, b, c, d, e\n          for (d = this.results_data, e = [], b = 0, c = d.length; c > b; b++)\n            (a = d[b]), a.selected ? e.push((a.selected = !1)) : e.push(void 0)\n          return e\n        }),\n        (AbstractChosen.prototype.results_toggle = function () {\n          return this.results_showing ? this.results_hide() : this.results_show()\n        }),\n        (AbstractChosen.prototype.results_search = function () {\n          return this.results_showing ? this.winnow_results() : this.results_show()\n        }),\n        (AbstractChosen.prototype.winnow_results = function () {\n          var a, b, c, d, e, f, g, h, i, j, k, l\n          for (\n            this.no_results_clear(),\n              d = 0,\n              f = this.get_search_text(),\n              a = f.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'),\n              i = new RegExp(a, 'i'),\n              c = this.get_search_regex(a),\n              l = this.results_data,\n              j = 0,\n              k = l.length;\n            k > j;\n            j++\n          )\n            (b = l[j]),\n              (b.search_match = !1),\n              (e = null),\n              this.include_option_in_results(b) &&\n                (b.group && ((b.group_match = !1), (b.active_options = 0)),\n                null != b.group_array_index &&\n                  this.results_data[b.group_array_index] &&\n                  ((e = this.results_data[b.group_array_index]),\n                  0 === e.active_options && e.search_match && (d += 1),\n                  (e.active_options += 1)),\n                (!b.group || this.group_search) &&\n                  ((b.search_text = b.group ? b.label : b.text),\n                  (b.search_match = this.search_string_match(b.search_text, c)),\n                  b.search_match && !b.group && (d += 1),\n                  b.search_match\n                    ? (f.length &&\n                        ((g = b.search_text.search(i)),\n                        (h = b.search_text.substr(0, g + f.length) + '</em>' + b.search_text.substr(g + f.length)),\n                        (b.search_text = h.substr(0, g) + '<em>' + h.substr(g))),\n                      null != e && (e.group_match = !0))\n                    : null != b.group_array_index &&\n                      this.results_data[b.group_array_index].search_match &&\n                      (b.search_match = !0)))\n          return (\n            this.result_clear_highlight(),\n            1 > d && f.length\n              ? (this.update_results_content(''), this.no_results(f))\n              : (this.update_results_content(this.results_option_build()), this.winnow_results_set_highlight())\n          )\n        }),\n        (AbstractChosen.prototype.get_search_regex = function (a) {\n          var b\n          return (b = this.search_contains ? '' : '^'), new RegExp(b + a, 'i')\n        }),\n        (AbstractChosen.prototype.search_string_match = function (a, b) {\n          var c, d, e, f\n          if (b.test(a)) return !0\n          if (\n            this.enable_split_word_search &&\n            (a.indexOf(' ') >= 0 || 0 === a.indexOf('[')) &&\n            ((d = a.replace(/\\[|\\]/g, '').split(' ')), d.length)\n          )\n            for (e = 0, f = d.length; f > e; e++) if (((c = d[e]), b.test(c))) return !0\n        }),\n        (AbstractChosen.prototype.choices_count = function () {\n          var a, b, c, d\n          if (null != this.selected_option_count) return this.selected_option_count\n          for (this.selected_option_count = 0, d = this.form_field.options, b = 0, c = d.length; c > b; b++)\n            (a = d[b]), a.selected && (this.selected_option_count += 1)\n          return this.selected_option_count\n        }),\n        (AbstractChosen.prototype.choices_click = function (a) {\n          return a.preventDefault(), this.results_showing || this.is_disabled ? void 0 : this.results_show()\n        }),\n        (AbstractChosen.prototype.keyup_checker = function (a) {\n          var b, c\n          switch (((b = null != (c = a.which) ? c : a.keyCode), this.search_field_scale(), b)) {\n            case 8:\n              if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0)\n                return this.keydown_backstroke()\n              if (!this.pending_backstroke) return this.result_clear_highlight(), this.results_search()\n              break\n            case 13:\n              if ((a.preventDefault(), this.results_showing)) return this.result_select(a)\n              break\n            case 27:\n              return this.results_showing && this.results_hide(), !0\n            case 9:\n            case 38:\n            case 40:\n            case 16:\n            case 91:\n            case 17:\n              break\n            default:\n              return this.results_search()\n          }\n        }),\n        (AbstractChosen.prototype.clipboard_event_checker = function () {\n          var a = this\n          return setTimeout(function () {\n            return a.results_search()\n          }, 50)\n        }),\n        (AbstractChosen.prototype.container_width = function () {\n          return null != this.options.width ? this.options.width : '' + this.form_field.offsetWidth + 'px'\n        }),\n        (AbstractChosen.prototype.include_option_in_results = function (a) {\n          return this.is_multiple && !this.display_selected_options && a.selected\n            ? !1\n            : !this.display_disabled_options && a.disabled\n            ? !1\n            : a.empty\n            ? !1\n            : !0\n        }),\n        (AbstractChosen.prototype.search_results_touchstart = function (a) {\n          return (this.touch_started = !0), this.search_results_mouseover(a)\n        }),\n        (AbstractChosen.prototype.search_results_touchmove = function (a) {\n          return (this.touch_started = !1), this.search_results_mouseout(a)\n        }),\n        (AbstractChosen.prototype.search_results_touchend = function (a) {\n          return this.touch_started ? this.search_results_mouseup(a) : void 0\n        }),\n        (AbstractChosen.prototype.outerHTML = function (a) {\n          var b\n          return a.outerHTML ? a.outerHTML : ((b = document.createElement('div')), b.appendChild(a), b.innerHTML)\n        }),\n        (AbstractChosen.browser_is_supported = function () {\n          return 'Microsoft Internet Explorer' === window.navigator.appName\n            ? document.documentMode >= 8\n            : /iP(od|hone)/i.test(window.navigator.userAgent)\n            ? !1\n            : /Android/i.test(window.navigator.userAgent) && /Mobile/i.test(window.navigator.userAgent)\n            ? !1\n            : !0\n        }),\n        (AbstractChosen.default_multiple_text = 'Select Some Options'),\n        (AbstractChosen.default_single_text = 'Select an Option'),\n        (AbstractChosen.default_no_result_text = 'No results match'),\n        AbstractChosen\n      )\n    })()),\n    (a = jQuery),\n    a.fn.extend({\n      chosen: function (b) {\n        return AbstractChosen.browser_is_supported()\n          ? this.each(function () {\n              var c, d\n              ;(c = a(this)),\n                (d = c.data('chosen')),\n                'destroy' === b && d instanceof Chosen\n                  ? d.destroy()\n                  : d instanceof Chosen || c.data('chosen', new Chosen(this, b))\n            })\n          : this\n      }\n    }),\n    (Chosen = (function (c) {\n      function Chosen () {\n        return (b = Chosen.__super__.constructor.apply(this, arguments))\n      }\n      return (\n        d(Chosen, c),\n        (Chosen.prototype.setup = function () {\n          return (\n            (this.form_field_jq = a(this.form_field)),\n            (this.current_selectedIndex = this.form_field.selectedIndex),\n            (this.is_rtl = this.form_field_jq.hasClass('chosen-rtl'))\n          )\n        }),\n        (Chosen.prototype.set_up_html = function () {\n          var b, c\n          return (\n            (b = ['chosen-container']),\n            b.push('chosen-container-' + (this.is_multiple ? 'multi' : 'single')),\n            this.inherit_select_classes && this.form_field.className && b.push(this.form_field.className),\n            this.is_rtl && b.push('chosen-rtl'),\n            (c = { class: b.join(' '), style: 'width: ' + this.container_width() + ';', title: this.form_field.title }),\n            this.form_field.id.length && (c.id = this.form_field.id.replace(/[^\\w]/g, '_') + '_chosen'),\n            (this.container = a('<div />', c)),\n            this.is_multiple\n              ? this.container.html(\n                  '<ul class=\"chosen-choices\"><li class=\"search-field\"><input type=\"text\" value=\"' +\n                    this.default_text +\n                    '\" class=\"default\" autocomplete=\"off\" style=\"width:25px;\" /></li></ul><div class=\"chosen-drop\"><ul class=\"chosen-results\"></ul></div>'\n                )\n              : this.container.html(\n                  '<a class=\"chosen-single chosen-default\" tabindex=\"-1\"><span>' +\n                    this.default_text +\n                    '</span><div><b></b></div></a><div class=\"chosen-drop\"><div class=\"chosen-search\"><input type=\"text\" autocomplete=\"off\" /></div><ul class=\"chosen-results\"></ul></div>'\n                ),\n            this.form_field_jq.hide().after(this.container),\n            (this.dropdown = this.container.find('div.chosen-drop').first()),\n            (this.search_field = this.container.find('input').first()),\n            (this.search_results = this.container.find('ul.chosen-results').first()),\n            this.search_field_scale(),\n            (this.search_no_results = this.container.find('li.no-results').first()),\n            this.is_multiple\n              ? ((this.search_choices = this.container.find('ul.chosen-choices').first()),\n                (this.search_container = this.container.find('li.search-field').first()))\n              : ((this.search_container = this.container.find('div.chosen-search').first()),\n                (this.selected_item = this.container.find('.chosen-single').first())),\n            this.results_build(),\n            this.set_tab_index(),\n            this.set_label_behavior()\n          )\n        }),\n        (Chosen.prototype.on_ready = function () {\n          return this.form_field_jq.trigger('chosen:ready', { chosen: this })\n        }),\n        (Chosen.prototype.register_observers = function () {\n          var a = this\n          return (\n            this.container.bind('touchstart.chosen', function (b) {\n              a.container_mousedown(b)\n            }),\n            this.container.bind('touchend.chosen', function (b) {\n              a.container_mouseup(b)\n            }),\n            this.container.bind('mousedown.chosen', function (b) {\n              a.container_mousedown(b)\n            }),\n            this.container.bind('mouseup.chosen', function (b) {\n              a.container_mouseup(b)\n            }),\n            this.container.bind('mouseenter.chosen', function (b) {\n              a.mouse_enter(b)\n            }),\n            this.container.bind('mouseleave.chosen', function (b) {\n              a.mouse_leave(b)\n            }),\n            this.search_results.bind('mouseup.chosen', function (b) {\n              a.search_results_mouseup(b)\n            }),\n            this.search_results.bind('mouseover.chosen', function (b) {\n              a.search_results_mouseover(b)\n            }),\n            this.search_results.bind('mouseout.chosen', function (b) {\n              a.search_results_mouseout(b)\n            }),\n            this.search_results.bind('mousewheel.chosen DOMMouseScroll.chosen', function (b) {\n              a.search_results_mousewheel(b)\n            }),\n            this.search_results.bind('touchstart.chosen', function (b) {\n              a.search_results_touchstart(b)\n            }),\n            this.search_results.bind('touchmove.chosen', function (b) {\n              a.search_results_touchmove(b)\n            }),\n            this.search_results.bind('touchend.chosen', function (b) {\n              a.search_results_touchend(b)\n            }),\n            this.form_field_jq.bind('chosen:updated.chosen', function (b) {\n              a.results_update_field(b)\n            }),\n            this.form_field_jq.bind('chosen:activate.chosen', function (b) {\n              a.activate_field(b)\n            }),\n            this.form_field_jq.bind('chosen:open.chosen', function (b) {\n              a.container_mousedown(b)\n            }),\n            this.form_field_jq.bind('chosen:close.chosen', function (b) {\n              a.input_blur(b)\n            }),\n            this.search_field.bind('blur.chosen', function (b) {\n              a.input_blur(b)\n            }),\n            this.search_field.bind('keyup.chosen', function (b) {\n              a.keyup_checker(b)\n            }),\n            this.search_field.bind('keydown.chosen', function (b) {\n              a.keydown_checker(b)\n            }),\n            this.search_field.bind('focus.chosen', function (b) {\n              a.input_focus(b)\n            }),\n            this.search_field.bind('cut.chosen', function (b) {\n              a.clipboard_event_checker(b)\n            }),\n            this.search_field.bind('paste.chosen', function (b) {\n              a.clipboard_event_checker(b)\n            }),\n            this.is_multiple\n              ? this.search_choices.bind('click.chosen', function (b) {\n                  a.choices_click(b)\n                })\n              : this.container.bind('click.chosen', function (a) {\n                  a.preventDefault()\n                })\n          )\n        }),\n        (Chosen.prototype.destroy = function () {\n          return (\n            a(this.container[0].ownerDocument).unbind('click.chosen', this.click_test_action),\n            this.search_field[0].tabIndex && (this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex),\n            this.container.remove(),\n            this.form_field_jq.removeData('chosen'),\n            this.form_field_jq.show()\n          )\n        }),\n        (Chosen.prototype.search_field_disabled = function () {\n          return (\n            (this.is_disabled = this.form_field_jq[0].disabled),\n            this.is_disabled\n              ? (this.container.addClass('chosen-disabled'),\n                (this.search_field[0].disabled = !0),\n                this.is_multiple || this.selected_item.unbind('focus.chosen', this.activate_action),\n                this.close_field())\n              : (this.container.removeClass('chosen-disabled'),\n                (this.search_field[0].disabled = !1),\n                this.is_multiple ? void 0 : this.selected_item.bind('focus.chosen', this.activate_action))\n          )\n        }),\n        (Chosen.prototype.container_mousedown = function (b) {\n          return this.is_disabled ||\n            (b && 'mousedown' === b.type && !this.results_showing && b.preventDefault(),\n            null != b && a(b.target).hasClass('search-choice-close'))\n            ? void 0\n            : (this.active_field\n                ? this.is_multiple ||\n                  !b ||\n                  (a(b.target)[0] !== this.selected_item[0] && !a(b.target).parents('a.chosen-single').length) ||\n                  (b.preventDefault(), this.results_toggle())\n                : (this.is_multiple && this.search_field.val(''),\n                  a(this.container[0].ownerDocument).bind('click.chosen', this.click_test_action),\n                  this.results_show()),\n              this.activate_field())\n        }),\n        (Chosen.prototype.container_mouseup = function (a) {\n          return 'ABBR' !== a.target.nodeName || this.is_disabled ? void 0 : this.results_reset(a)\n        }),\n        (Chosen.prototype.search_results_mousewheel = function (a) {\n          var b\n          return (\n            a.originalEvent && (b = a.originalEvent.deltaY || -a.originalEvent.wheelDelta || a.originalEvent.detail),\n            null != b\n              ? (a.preventDefault(),\n                'DOMMouseScroll' === a.type && (b = 40 * b),\n                this.search_results.scrollTop(b + this.search_results.scrollTop()))\n              : void 0\n          )\n        }),\n        (Chosen.prototype.blur_test = function () {\n          return !this.active_field && this.container.hasClass('chosen-container-active') ? this.close_field() : void 0\n        }),\n        (Chosen.prototype.close_field = function () {\n          return (\n            a(this.container[0].ownerDocument).unbind('click.chosen', this.click_test_action),\n            (this.active_field = !1),\n            this.results_hide(),\n            this.container.removeClass('chosen-container-active'),\n            this.clear_backstroke(),\n            this.show_search_field_default(),\n            this.search_field_scale()\n          )\n        }),\n        (Chosen.prototype.activate_field = function () {\n          return (\n            this.container.addClass('chosen-container-active'),\n            (this.active_field = !0),\n            this.search_field.val(this.search_field.val()),\n            this.search_field.focus()\n          )\n        }),\n        (Chosen.prototype.test_active_click = function (b) {\n          var c\n          return (\n            (c = a(b.target).closest('.chosen-container')),\n            c.length && this.container[0] === c[0] ? (this.active_field = !0) : this.close_field()\n          )\n        }),\n        (Chosen.prototype.results_build = function () {\n          return (\n            (this.parsing = !0),\n            (this.selected_option_count = null),\n            (this.results_data = SelectParser.select_to_array(this.form_field)),\n            this.is_multiple\n              ? this.search_choices.find('li.search-choice').remove()\n              : this.is_multiple ||\n                (this.single_set_selected_text(),\n                this.disable_search || this.form_field.options.length <= this.disable_search_threshold\n                  ? ((this.search_field[0].readOnly = !0), this.container.addClass('chosen-container-single-nosearch'))\n                  : ((this.search_field[0].readOnly = !1),\n                    this.container.removeClass('chosen-container-single-nosearch'))),\n            this.update_results_content(this.results_option_build({ first: !0 })),\n            this.search_field_disabled(),\n            this.show_search_field_default(),\n            this.search_field_scale(),\n            (this.parsing = !1)\n          )\n        }),\n        (Chosen.prototype.result_do_highlight = function (a) {\n          var b, c, d, e, f\n          if (a.length) {\n            if (\n              (this.result_clear_highlight(),\n              (this.result_highlight = a),\n              this.result_highlight.addClass('highlighted'),\n              (d = parseInt(this.search_results.css('maxHeight'), 10)),\n              (f = this.search_results.scrollTop()),\n              (e = d + f),\n              (c = this.result_highlight.position().top + this.search_results.scrollTop()),\n              (b = c + this.result_highlight.outerHeight()),\n              b >= e)\n            )\n              return this.search_results.scrollTop(b - d > 0 ? b - d : 0)\n            if (f > c) return this.search_results.scrollTop(c)\n          }\n        }),\n        (Chosen.prototype.result_clear_highlight = function () {\n          return (\n            this.result_highlight && this.result_highlight.removeClass('highlighted'), (this.result_highlight = null)\n          )\n        }),\n        (Chosen.prototype.results_show = function () {\n          return this.is_multiple && this.max_selected_options <= this.choices_count()\n            ? (this.form_field_jq.trigger('chosen:maxselected', { chosen: this }), !1)\n            : (this.container.addClass('chosen-with-drop'),\n              (this.results_showing = !0),\n              this.search_field.focus(),\n              this.search_field.val(this.search_field.val()),\n              this.winnow_results(),\n              this.form_field_jq.trigger('chosen:showing_dropdown', { chosen: this }))\n        }),\n        (Chosen.prototype.update_results_content = function (a) {\n          return this.search_results.html(a)\n        }),\n        (Chosen.prototype.results_hide = function () {\n          return (\n            this.results_showing &&\n              (this.result_clear_highlight(),\n              this.container.removeClass('chosen-with-drop'),\n              this.form_field_jq.trigger('chosen:hiding_dropdown', { chosen: this })),\n            (this.results_showing = !1)\n          )\n        }),\n        (Chosen.prototype.set_tab_index = function () {\n          var a\n          return this.form_field.tabIndex\n            ? ((a = this.form_field.tabIndex), (this.form_field.tabIndex = -1), (this.search_field[0].tabIndex = a))\n            : void 0\n        }),\n        (Chosen.prototype.set_label_behavior = function () {\n          var b = this\n          return (\n            (this.form_field_label = this.form_field_jq.parents('label')),\n            !this.form_field_label.length &&\n              this.form_field.id.length &&\n              (this.form_field_label = a(\"label[for='\" + this.form_field.id + \"']\")),\n            this.form_field_label.length > 0\n              ? this.form_field_label.bind('click.chosen', function (a) {\n                  return b.is_multiple ? b.container_mousedown(a) : b.activate_field()\n                })\n              : void 0\n          )\n        }),\n        (Chosen.prototype.show_search_field_default = function () {\n          return this.is_multiple && this.choices_count() < 1 && !this.active_field\n            ? (this.search_field.val(this.default_text), this.search_field.addClass('default'))\n            : (this.search_field.val(''), this.search_field.removeClass('default'))\n        }),\n        (Chosen.prototype.search_results_mouseup = function (b) {\n          var c\n          return (\n            (c = a(b.target).hasClass('active-result')\n              ? a(b.target)\n              : a(b.target)\n                  .parents('.active-result')\n                  .first()),\n            c.length ? ((this.result_highlight = c), this.result_select(b), this.search_field.focus()) : void 0\n          )\n        }),\n        (Chosen.prototype.search_results_mouseover = function (b) {\n          var c\n          return (\n            (c = a(b.target).hasClass('active-result')\n              ? a(b.target)\n              : a(b.target)\n                  .parents('.active-result')\n                  .first()),\n            c ? this.result_do_highlight(c) : void 0\n          )\n        }),\n        (Chosen.prototype.search_results_mouseout = function (b) {\n          return a(b.target).hasClass('active-result') ? this.result_clear_highlight() : void 0\n        }),\n        (Chosen.prototype.choice_build = function (b) {\n          var c,\n            d,\n            e = this\n          return (\n            (c = a('<li />', { class: 'search-choice' }).html('<span>' + b.html + '</span>')),\n            b.disabled\n              ? c.addClass('search-choice-disabled')\n              : ((d = a('<a />', { class: 'search-choice-close', 'data-option-array-index': b.array_index })),\n                d.bind('click.chosen', function (a) {\n                  return e.choice_destroy_link_click(a)\n                }),\n                c.append(d)),\n            this.search_container.before(c)\n          )\n        }),\n        (Chosen.prototype.choice_destroy_link_click = function (b) {\n          return b.preventDefault(), b.stopPropagation(), this.is_disabled ? void 0 : this.choice_destroy(a(b.target))\n        }),\n        (Chosen.prototype.choice_destroy = function (a) {\n          return this.result_deselect(a[0].getAttribute('data-option-array-index'))\n            ? (this.show_search_field_default(),\n              this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1 && this.results_hide(),\n              a\n                .parents('li')\n                .first()\n                .remove(),\n              this.search_field_scale())\n            : void 0\n        }),\n        (Chosen.prototype.results_reset = function () {\n          return (\n            this.reset_single_select_options(),\n            (this.form_field.options[0].selected = !0),\n            this.single_set_selected_text(),\n            this.show_search_field_default(),\n            this.results_reset_cleanup(),\n            this.form_field_jq.trigger('change'),\n            this.active_field ? this.results_hide() : void 0\n          )\n        }),\n        (Chosen.prototype.results_reset_cleanup = function () {\n          return (this.current_selectedIndex = this.form_field.selectedIndex), this.selected_item.find('abbr').remove()\n        }),\n        (Chosen.prototype.result_select = function (a) {\n          var b, c\n          return this.result_highlight\n            ? ((b = this.result_highlight),\n              this.result_clear_highlight(),\n              this.is_multiple && this.max_selected_options <= this.choices_count()\n                ? (this.form_field_jq.trigger('chosen:maxselected', { chosen: this }), !1)\n                : (this.is_multiple ? b.removeClass('active-result') : this.reset_single_select_options(),\n                  (c = this.results_data[b[0].getAttribute('data-option-array-index')]),\n                  (c.selected = !0),\n                  (this.form_field.options[c.options_index].selected = !0),\n                  (this.selected_option_count = null),\n                  this.is_multiple ? this.choice_build(c) : this.single_set_selected_text(c.text),\n                  ((a.metaKey || a.ctrlKey) && this.is_multiple) || this.results_hide(),\n                  this.search_field.val(''),\n                  (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) &&\n                    this.form_field_jq.trigger('change', { selected: this.form_field.options[c.options_index].value }),\n                  (this.current_selectedIndex = this.form_field.selectedIndex),\n                  this.search_field_scale()))\n            : void 0\n        }),\n        (Chosen.prototype.single_set_selected_text = function (a) {\n          return (\n            null == a && (a = this.default_text),\n            a === this.default_text\n              ? this.selected_item.addClass('chosen-default')\n              : (this.single_deselect_control_build(), this.selected_item.removeClass('chosen-default')),\n            this.selected_item.find('span').text(a)\n          )\n        }),\n        (Chosen.prototype.result_deselect = function (a) {\n          var b\n          return (\n            (b = this.results_data[a]),\n            this.form_field.options[b.options_index].disabled\n              ? !1\n              : ((b.selected = !1),\n                (this.form_field.options[b.options_index].selected = !1),\n                (this.selected_option_count = null),\n                this.result_clear_highlight(),\n                this.results_showing && this.winnow_results(),\n                this.form_field_jq.trigger('change', { deselected: this.form_field.options[b.options_index].value }),\n                this.search_field_scale(),\n                !0)\n          )\n        }),\n        (Chosen.prototype.single_deselect_control_build = function () {\n          return this.allow_single_deselect\n            ? (this.selected_item.find('abbr').length ||\n                this.selected_item\n                  .find('span')\n                  .first()\n                  .after('<abbr class=\"search-choice-close\"></abbr>'),\n              this.selected_item.addClass('chosen-single-with-deselect'))\n            : void 0\n        }),\n        (Chosen.prototype.get_search_text = function () {\n          return this.search_field.val() === this.default_text\n            ? ''\n            : a('<div/>')\n                .text(a.trim(this.search_field.val()))\n                .html()\n        }),\n        (Chosen.prototype.winnow_results_set_highlight = function () {\n          var a, b\n          return (\n            (b = this.is_multiple ? [] : this.search_results.find('.result-selected.active-result')),\n            (a = b.length ? b.first() : this.search_results.find('.active-result').first()),\n            null != a ? this.result_do_highlight(a) : void 0\n          )\n        }),\n        (Chosen.prototype.no_results = function (b) {\n          var c\n          return (\n            (c = a('<li class=\"no-results\">' + this.results_none_found + ' \"<span></span>\"</li>')),\n            c\n              .find('span')\n              .first()\n              .html(b),\n            this.search_results.append(c),\n            this.form_field_jq.trigger('chosen:no_results', { chosen: this })\n          )\n        }),\n        (Chosen.prototype.no_results_clear = function () {\n          return this.search_results.find('.no-results').remove()\n        }),\n        (Chosen.prototype.keydown_arrow = function () {\n          var a\n          return this.results_showing && this.result_highlight\n            ? (a = this.result_highlight.nextAll('li.active-result').first())\n              ? this.result_do_highlight(a)\n              : void 0\n            : this.results_show()\n        }),\n        (Chosen.prototype.keyup_arrow = function () {\n          var a\n          return this.results_showing || this.is_multiple\n            ? this.result_highlight\n              ? ((a = this.result_highlight.prevAll('li.active-result')),\n                a.length\n                  ? this.result_do_highlight(a.first())\n                  : (this.choices_count() > 0 && this.results_hide(), this.result_clear_highlight()))\n              : void 0\n            : this.results_show()\n        }),\n        (Chosen.prototype.keydown_backstroke = function () {\n          var a\n          return this.pending_backstroke\n            ? (this.choice_destroy(this.pending_backstroke.find('a').first()), this.clear_backstroke())\n            : ((a = this.search_container.siblings('li.search-choice').last()),\n              a.length && !a.hasClass('search-choice-disabled')\n                ? ((this.pending_backstroke = a),\n                  this.single_backstroke_delete\n                    ? this.keydown_backstroke()\n                    : this.pending_backstroke.addClass('search-choice-focus'))\n                : void 0)\n        }),\n        (Chosen.prototype.clear_backstroke = function () {\n          return (\n            this.pending_backstroke && this.pending_backstroke.removeClass('search-choice-focus'),\n            (this.pending_backstroke = null)\n          )\n        }),\n        (Chosen.prototype.keydown_checker = function (a) {\n          var b, c\n          switch (\n            ((b = null != (c = a.which) ? c : a.keyCode),\n            this.search_field_scale(),\n            8 !== b && this.pending_backstroke && this.clear_backstroke(),\n            b)\n          ) {\n            case 8:\n              this.backstroke_length = this.search_field.val().length\n              break\n            case 9:\n              this.results_showing && !this.is_multiple && this.result_select(a), (this.mouse_on_container = !1)\n              break\n            case 13:\n              this.results_showing && a.preventDefault()\n              break\n            case 32:\n              this.disable_search && a.preventDefault()\n              break\n            case 38:\n              a.preventDefault(), this.keyup_arrow()\n              break\n            case 40:\n              a.preventDefault(), this.keydown_arrow()\n          }\n        }),\n        (Chosen.prototype.search_field_scale = function () {\n          var b, c, d, e, f, g, h, i, j\n          if (this.is_multiple) {\n            for (\n              d = 0,\n                h = 0,\n                f = 'position:absolute; left: -1000px; top: -1000px; display:none;',\n                g = [\n                  'font-size',\n                  'font-style',\n                  'font-weight',\n                  'font-family',\n                  'line-height',\n                  'text-transform',\n                  'letter-spacing'\n                ],\n                i = 0,\n                j = g.length;\n              j > i;\n              i++\n            )\n              (e = g[i]), (f += e + ':' + this.search_field.css(e) + ';')\n            return (\n              (b = a('<div />', { style: f })),\n              b.text(this.search_field.val()),\n              a('body').append(b),\n              (h = b.width() + 25),\n              b.remove(),\n              (c = this.container.outerWidth()),\n              h > c - 10 && (h = c - 10),\n              this.search_field.css({ width: h + 'px' })\n            )\n          }\n        }),\n        Chosen\n      )\n    })(AbstractChosen))\n}.call(this)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/chosen/chosen.jquery.min.js?");

/***/ }),
/* 21 */
/*!******************************************************************!*\
  !*** ./src/public/js/vendor/moment/moment-timezone-with-data.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//! moment-timezone.js\n//! version : 0.5.17\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n;(function (root, factory) {\n  'use strict'\n\n  /*global define*/\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! moment */ 6)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) // AMD\n  } else {}\n})(this, function (moment) {\n  'use strict'\n\n  // Do not load moment-timezone a second time.\n  // if (moment.tz !== undefined) {\n  // \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n  // \treturn moment;\n  // }\n\n  var VERSION = '0.5.17',\n    zones = {},\n    links = {},\n    names = {},\n    guesses = {},\n    cachedGuess,\n    momentVersion = moment.version.split('.'),\n    major = +momentVersion[0],\n    minor = +momentVersion[1]\n\n  // Moment.js version check\n  if (major < 2 || (major === 2 && minor < 6)) {\n    logError(\n      'Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com'\n    )\n  }\n\n  /************************************\n     Unpacking\n     ************************************/\n\n  function charCodeToInt (charCode) {\n    if (charCode > 96) {\n      return charCode - 87\n    } else if (charCode > 64) {\n      return charCode - 29\n    }\n    return charCode - 48\n  }\n\n  function unpackBase60 (string) {\n    var i = 0,\n      parts = string.split('.'),\n      whole = parts[0],\n      fractional = parts[1] || '',\n      multiplier = 1,\n      num,\n      out = 0,\n      sign = 1\n\n    // handle negative numbers\n    if (string.charCodeAt(0) === 45) {\n      i = 1\n      sign = -1\n    }\n\n    // handle digits before the decimal\n    for (i; i < whole.length; i++) {\n      num = charCodeToInt(whole.charCodeAt(i))\n      out = 60 * out + num\n    }\n\n    // handle digits after the decimal\n    for (i = 0; i < fractional.length; i++) {\n      multiplier = multiplier / 60\n      num = charCodeToInt(fractional.charCodeAt(i))\n      out += num * multiplier\n    }\n\n    return out * sign\n  }\n\n  function arrayToInt (array) {\n    for (var i = 0; i < array.length; i++) {\n      array[i] = unpackBase60(array[i])\n    }\n  }\n\n  function intToUntil (array, length) {\n    for (var i = 0; i < length; i++) {\n      array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000) // minutes to milliseconds\n    }\n\n    array[length - 1] = Infinity\n  }\n\n  function mapIndices (source, indices) {\n    var out = [],\n      i\n\n    for (i = 0; i < indices.length; i++) {\n      out[i] = source[indices[i]]\n    }\n\n    return out\n  }\n\n  function unpack (string) {\n    var data = string.split('|'),\n      offsets = data[2].split(' '),\n      indices = data[3].split(''),\n      untils = data[4].split(' ')\n\n    arrayToInt(offsets)\n    arrayToInt(indices)\n    arrayToInt(untils)\n\n    intToUntil(untils, indices.length)\n\n    return {\n      name: data[0],\n      abbrs: mapIndices(data[1].split(' '), indices),\n      offsets: mapIndices(offsets, indices),\n      untils: untils,\n      population: data[5] | 0\n    }\n  }\n\n  /************************************\n     Zone object\n     ************************************/\n\n  function Zone (packedString) {\n    if (packedString) {\n      this._set(unpack(packedString))\n    }\n  }\n\n  Zone.prototype = {\n    _set: function (unpacked) {\n      this.name = unpacked.name\n      this.abbrs = unpacked.abbrs\n      this.untils = unpacked.untils\n      this.offsets = unpacked.offsets\n      this.population = unpacked.population\n    },\n\n    _index: function (timestamp) {\n      var target = +timestamp,\n        untils = this.untils,\n        i\n\n      for (i = 0; i < untils.length; i++) {\n        if (target < untils[i]) {\n          return i\n        }\n      }\n    },\n\n    parse: function (timestamp) {\n      var target = +timestamp,\n        offsets = this.offsets,\n        untils = this.untils,\n        max = untils.length - 1,\n        offset,\n        offsetNext,\n        offsetPrev,\n        i\n\n      for (i = 0; i < max; i++) {\n        offset = offsets[i]\n        offsetNext = offsets[i + 1]\n        offsetPrev = offsets[i ? i - 1 : i]\n\n        if (offset < offsetNext && tz.moveAmbiguousForward) {\n          offset = offsetNext\n        } else if (offset > offsetPrev && tz.moveInvalidForward) {\n          offset = offsetPrev\n        }\n\n        if (target < untils[i] - offset * 60000) {\n          return offsets[i]\n        }\n      }\n\n      return offsets[max]\n    },\n\n    abbr: function (mom) {\n      return this.abbrs[this._index(mom)]\n    },\n\n    offset: function (mom) {\n      logError('zone.offset has been deprecated in favor of zone.utcOffset')\n      return this.offsets[this._index(mom)]\n    },\n\n    utcOffset: function (mom) {\n      return this.offsets[this._index(mom)]\n    }\n  }\n\n  /************************************\n     Current Timezone\n     ************************************/\n\n  function OffsetAt (at) {\n    var timeString = at.toTimeString()\n    var abbr = timeString.match(/\\([a-z ]+\\)/i)\n    if (abbr && abbr[0]) {\n      // 17:56:31 GMT-0600 (CST)\n      // 17:56:31 GMT-0600 (Central Standard Time)\n      abbr = abbr[0].match(/[A-Z]/g)\n      abbr = abbr ? abbr.join('') : undefined\n    } else {\n      // 17:56:31 CST\n      // 17:56:31 GMT+0800 (台北標準時間)\n      abbr = timeString.match(/[A-Z]{3,5}/g)\n      abbr = abbr ? abbr[0] : undefined\n    }\n\n    if (abbr === 'GMT') {\n      abbr = undefined\n    }\n\n    this.at = +at\n    this.abbr = abbr\n    this.offset = at.getTimezoneOffset()\n  }\n\n  function ZoneScore (zone) {\n    this.zone = zone\n    this.offsetScore = 0\n    this.abbrScore = 0\n  }\n\n  ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n    this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset)\n    if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n      this.abbrScore++\n    }\n  }\n\n  function findChange (low, high) {\n    var mid, diff\n\n    while ((diff = (((high.at - low.at) / 12e4) | 0) * 6e4)) {\n      mid = new OffsetAt(new Date(low.at + diff))\n      if (mid.offset === low.offset) {\n        low = mid\n      } else {\n        high = mid\n      }\n    }\n\n    return low\n  }\n\n  function userOffsets () {\n    var startYear = new Date().getFullYear() - 2,\n      last = new OffsetAt(new Date(startYear, 0, 1)),\n      offsets = [last],\n      change,\n      next,\n      i\n\n    for (i = 1; i < 48; i++) {\n      next = new OffsetAt(new Date(startYear, i, 1))\n      if (next.offset !== last.offset) {\n        change = findChange(last, next)\n        offsets.push(change)\n        offsets.push(new OffsetAt(new Date(change.at + 6e4)))\n      }\n      last = next\n    }\n\n    for (i = 0; i < 4; i++) {\n      offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)))\n      offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)))\n    }\n\n    return offsets\n  }\n\n  function sortZoneScores (a, b) {\n    if (a.offsetScore !== b.offsetScore) {\n      return a.offsetScore - b.offsetScore\n    }\n    if (a.abbrScore !== b.abbrScore) {\n      return a.abbrScore - b.abbrScore\n    }\n    return b.zone.population - a.zone.population\n  }\n\n  function addToGuesses (name, offsets) {\n    var i, offset\n    arrayToInt(offsets)\n    for (i = 0; i < offsets.length; i++) {\n      offset = offsets[i]\n      guesses[offset] = guesses[offset] || {}\n      guesses[offset][name] = true\n    }\n  }\n\n  function guessesForUserOffsets (offsets) {\n    var offsetsLength = offsets.length,\n      filteredGuesses = {},\n      out = [],\n      i,\n      j,\n      guessesOffset\n\n    for (i = 0; i < offsetsLength; i++) {\n      guessesOffset = guesses[offsets[i].offset] || {}\n      for (j in guessesOffset) {\n        if (guessesOffset.hasOwnProperty(j)) {\n          filteredGuesses[j] = true\n        }\n      }\n    }\n\n    for (i in filteredGuesses) {\n      if (filteredGuesses.hasOwnProperty(i)) {\n        out.push(names[i])\n      }\n    }\n\n    return out\n  }\n\n  function rebuildGuess () {\n    // use Intl API when available and returning valid time zone\n    try {\n      var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone\n      if (intlName && intlName.length > 3) {\n        var name = names[normalizeName(intlName)]\n        if (name) {\n          return name\n        }\n        logError('Moment Timezone found ' + intlName + ' from the Intl api, but did not have that data loaded.')\n      }\n    } catch (e) {\n      // Intl unavailable, fall back to manual guessing.\n    }\n\n    var offsets = userOffsets(),\n      offsetsLength = offsets.length,\n      guesses = guessesForUserOffsets(offsets),\n      zoneScores = [],\n      zoneScore,\n      i,\n      j\n\n    for (i = 0; i < guesses.length; i++) {\n      zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength)\n      for (j = 0; j < offsetsLength; j++) {\n        zoneScore.scoreOffsetAt(offsets[j])\n      }\n      zoneScores.push(zoneScore)\n    }\n\n    zoneScores.sort(sortZoneScores)\n\n    return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined\n  }\n\n  function guess (ignoreCache) {\n    if (!cachedGuess || ignoreCache) {\n      cachedGuess = rebuildGuess()\n    }\n    return cachedGuess\n  }\n\n  /************************************\n     Global Methods\n     ************************************/\n\n  function normalizeName (name) {\n    return (name || '').toLowerCase().replace(/\\//g, '_')\n  }\n\n  function addZone (packed) {\n    var i, name, split, normalized\n\n    if (typeof packed === 'string') {\n      packed = [packed]\n    }\n\n    for (i = 0; i < packed.length; i++) {\n      split = packed[i].split('|')\n      name = split[0]\n      normalized = normalizeName(name)\n      zones[normalized] = packed[i]\n      names[normalized] = name\n      addToGuesses(normalized, split[2].split(' '))\n    }\n  }\n\n  function getZone (name, caller) {\n    name = normalizeName(name)\n\n    var zone = zones[name]\n    var link\n\n    if (zone instanceof Zone) {\n      return zone\n    }\n\n    if (typeof zone === 'string') {\n      zone = new Zone(zone)\n      zones[name] = zone\n      return zone\n    }\n\n    // Pass getZone to prevent recursion more than 1 level deep\n    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n      zone = zones[name] = new Zone()\n      zone._set(link)\n      zone.name = names[name]\n      return zone\n    }\n\n    return null\n  }\n\n  function getNames () {\n    var i,\n      out = []\n\n    for (i in names) {\n      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n        out.push(names[i])\n      }\n    }\n\n    return out.sort()\n  }\n\n  function addLink (aliases) {\n    var i, alias, normal0, normal1\n\n    if (typeof aliases === 'string') {\n      aliases = [aliases]\n    }\n\n    for (i = 0; i < aliases.length; i++) {\n      alias = aliases[i].split('|')\n\n      normal0 = normalizeName(alias[0])\n      normal1 = normalizeName(alias[1])\n\n      links[normal0] = normal1\n      names[normal0] = alias[0]\n\n      links[normal1] = normal0\n      names[normal1] = alias[1]\n    }\n  }\n\n  function loadData (data) {\n    addZone(data.zones)\n    addLink(data.links)\n    tz.dataVersion = data.version\n  }\n\n  function zoneExists (name) {\n    if (!zoneExists.didShowError) {\n      zoneExists.didShowError = true\n      logError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\")\n    }\n    return !!getZone(name)\n  }\n\n  function needsOffset (m) {\n    var isUnixTimestamp = m._f === 'X' || m._f === 'x'\n    return !!(m._a && m._tzm === undefined && !isUnixTimestamp)\n  }\n\n  function logError (message) {\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message)\n    }\n  }\n\n  /************************************\n     moment.tz namespace\n     ************************************/\n\n  function tz (input) {\n    var args = Array.prototype.slice.call(arguments, 0, -1),\n      name = arguments[arguments.length - 1],\n      zone = getZone(name),\n      out = moment.utc.apply(null, args)\n\n    if (zone && !moment.isMoment(input) && needsOffset(out)) {\n      out.add(zone.parse(out), 'minutes')\n    }\n\n    out.tz(name)\n\n    return out\n  }\n\n  tz.version = VERSION\n  tz.dataVersion = ''\n  tz._zones = zones\n  tz._links = links\n  tz._names = names\n  tz.add = addZone\n  tz.link = addLink\n  tz.load = loadData\n  tz.zone = getZone\n  tz.zoneExists = zoneExists // deprecated in 0.1.0\n  tz.guess = guess\n  tz.names = getNames\n  tz.Zone = Zone\n  tz.unpack = unpack\n  tz.unpackBase60 = unpackBase60\n  tz.needsOffset = needsOffset\n  tz.moveInvalidForward = true\n  tz.moveAmbiguousForward = false\n\n  /************************************\n     Interface with Moment.js\n     ************************************/\n\n  var fn = moment.fn\n\n  moment.tz = tz\n\n  moment.defaultZone = null\n\n  moment.updateOffset = function (mom, keepTime) {\n    var zone = moment.defaultZone,\n      offset\n\n    if (mom._z === undefined) {\n      if (zone && needsOffset(mom) && !mom._isUTC) {\n        mom._d = moment.utc(mom._a)._d\n        mom.utc().add(zone.parse(mom), 'minutes')\n      }\n      mom._z = zone\n    }\n    if (mom._z) {\n      offset = mom._z.utcOffset(mom)\n      if (Math.abs(offset) < 16) {\n        offset = offset / 60\n      }\n      if (mom.utcOffset !== undefined) {\n        mom.utcOffset(-offset, keepTime)\n      } else {\n        mom.zone(offset, keepTime)\n      }\n    }\n  }\n\n  fn.tz = function (name, keepTime) {\n    if (name) {\n      this._z = getZone(name)\n      if (this._z) {\n        moment.updateOffset(this, keepTime)\n      } else {\n        logError('Moment Timezone has no data for ' + name + '. See http://momentjs.com/timezone/docs/#/data-loading/.')\n      }\n      return this\n    }\n    if (this._z) {\n      return this._z.name\n    }\n  }\n\n  function abbrWrap (old) {\n    return function () {\n      if (this._z) {\n        return this._z.abbr(this)\n      }\n      return old.call(this)\n    }\n  }\n\n  function resetZoneWrap (old) {\n    return function () {\n      this._z = null\n      return old.apply(this, arguments)\n    }\n  }\n\n  fn.zoneName = abbrWrap(fn.zoneName)\n  fn.zoneAbbr = abbrWrap(fn.zoneAbbr)\n  fn.utc = resetZoneWrap(fn.utc)\n\n  moment.tz.setDefault = function (name) {\n    if (major < 2 || (major === 2 && minor < 9)) {\n      logError(\n        'Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.'\n      )\n    }\n    moment.defaultZone = name ? getZone(name) : null\n    return moment\n  }\n\n  // Cloning a moment should include the _z property.\n  var momentProperties = moment.momentProperties\n  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n    // moment 2.8.1+\n    momentProperties.push('_z')\n    momentProperties.push('_a')\n  } else if (momentProperties) {\n    // moment 2.7.0\n    momentProperties._z = null\n  }\n\n  loadData({\n    version: '2018e',\n    zones: [\n      'Africa/Abidjan|GMT|0|0||48e5',\n      'Africa/Nairobi|EAT|-30|0||47e5',\n      'Africa/Algiers|CET|-10|0||26e5',\n      'Africa/Lagos|WAT|-10|0||17e6',\n      'Africa/Maputo|CAT|-20|0||26e5',\n      'Africa/Cairo|EET EEST|-20 -30|01010|1M2m0 gL0 e10 mn0|15e6',\n      'Africa/Casablanca|WET WEST|0 -10|0101010101010101010101010101010101010101010|1H3C0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 Rc0 11A0 e00 e00 U00 11A0 8o0 e00 11A0 11A0 5A0 e00 17c0 1fA0 1a00|32e5',\n      'Europe/Paris|CET CEST|-10 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|11e6',\n      'Africa/Johannesburg|SAST|-20|0||84e5',\n      'Africa/Khartoum|EAT CAT|-30 -20|01|1Usl0|51e5',\n      'Africa/Sao_Tome|GMT WAT|0 -10|01|1UQN0',\n      'Africa/Tripoli|EET CET CEST|-20 -10 -20|0120|1IlA0 TA0 1o00|11e5',\n      'Africa/Windhoek|CAT WAT|-20 -10|0101010101010|1GQo0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4',\n      'America/Adak|HST HDT|a0 90|01010101010101010101010|1GIc0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|326',\n      'America/Anchorage|AKST AKDT|90 80|01010101010101010101010|1GIb0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|30e4',\n      'America/Santo_Domingo|AST|40|0||29e5',\n      'America/Araguaina|-03 -02|30 20|010|1IdD0 Lz0|14e4',\n      'America/Fortaleza|-03|30|0||34e5',\n      'America/Asuncion|-03 -04|30 40|01010101010101010101010|1GTf0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0|28e5',\n      'America/Panama|EST|50|0||15e5',\n      'America/Mexico_City|CST CDT|60 50|01010101010101010101010|1GQw0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|20e6',\n      'America/Bahia|-02 -03|20 30|01|1GCq0|27e5',\n      'America/Managua|CST|60|0||22e5',\n      'America/La_Paz|-04|40|0||19e5',\n      'America/Lima|-05|50|0||11e6',\n      'America/Denver|MST MDT|70 60|01010101010101010101010|1GI90 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|26e5',\n      'America/Campo_Grande|-03 -04|30 40|01010101010101010101010|1GCr0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0|77e4',\n      'America/Cancun|CST CDT EST|60 50 50|01010102|1GQw0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4',\n      'America/Caracas|-0430 -04|4u 40|01|1QMT0|29e5',\n      'America/Chicago|CST CDT|60 50|01010101010101010101010|1GI80 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|92e5',\n      'America/Chihuahua|MST MDT|70 60|01010101010101010101010|1GQx0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|81e4',\n      'America/Phoenix|MST|70|0||42e5',\n      'America/Los_Angeles|PST PDT|80 70|01010101010101010101010|1GIa0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|15e6',\n      'America/New_York|EST EDT|50 40|01010101010101010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|21e6',\n      'America/Rio_Branco|-04 -05|40 50|01|1KLE0|31e4',\n      'America/Fort_Nelson|PST PDT MST|80 70 70|01010102|1GIa0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2',\n      'America/Halifax|AST ADT|40 30|01010101010101010101010|1GI60 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|39e4',\n      'America/Godthab|-03 -02|30 20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|17e3',\n      'America/Grand_Turk|EST EDT AST|50 40 40|0101010121010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|37e2',\n      'America/Havana|CST CDT|50 40|01010101010101010101010|1GQt0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0|21e5',\n      'America/Metlakatla|PST AKST AKDT|80 90 80|0121212121212121|1PAa0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|14e2',\n      'America/Miquelon|-03 -02|30 20|01010101010101010101010|1GI50 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|61e2',\n      'America/Montevideo|-02 -03|20 30|01010101|1GI40 1o10 11z0 1o10 11z0 1o10 11z0|17e5',\n      'America/Noronha|-02|20|0||30e2',\n      'America/Port-au-Prince|EST EDT|50 40|010101010101010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|23e5',\n      'Antarctica/Palmer|-03 -04|30 40|010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40',\n      'America/Santiago|-03 -04|30 40|010101010101010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Dd0 1Nb0 Ap0|62e5',\n      'America/Sao_Paulo|-02 -03|20 30|01010101010101010101010|1GCq0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0|20e6',\n      'Atlantic/Azores|-01 +00|10 0|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e4',\n      'America/St_Johns|NST NDT|3u 2u|01010101010101010101010|1GI5u 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|11e4',\n      'Antarctica/Casey|+11 +08|-b0 -80|0101|1GAF0 blz0 3m10|10',\n      'Antarctica/Davis|+05 +07|-50 -70|01|1GAI0|70',\n      'Pacific/Port_Moresby|+10|-a0|0||25e4',\n      'Pacific/Guadalcanal|+11|-b0|0||11e4',\n      'Asia/Tashkent|+05|-50|0||23e5',\n      'Pacific/Auckland|NZDT NZST|-d0 -c0|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|14e5',\n      'Asia/Baghdad|+03|-30|0||66e5',\n      'Antarctica/Troll|+00 +02|0 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|40',\n      'Asia/Dhaka|+06|-60|0||16e6',\n      'Asia/Amman|EET EEST|-20 -30|010101010101010101010|1GPy0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00|25e5',\n      'Asia/Kamchatka|+12|-c0|0||18e4',\n      'Asia/Baku|+04 +05|-40 -50|010101010|1GNA0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5',\n      'Asia/Bangkok|+07|-70|0||15e6',\n      'Asia/Barnaul|+07 +06|-70 -60|010|1N7v0 3rd0',\n      'Asia/Beirut|EET EEST|-20 -30|01010101010101010101010|1GNy0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|22e5',\n      'Asia/Manila|+08|-80|0||24e6',\n      'Asia/Kolkata|IST|-5u|0||15e6',\n      'Asia/Chita|+10 +08 +09|-a0 -80 -90|012|1N7s0 3re0|33e4',\n      'Asia/Ulaanbaatar|+08 +09|-80 -90|01010|1O8G0 1cJ0 1cP0 1cJ0|12e5',\n      'Asia/Shanghai|CST|-80|0||23e6',\n      'Asia/Colombo|+0530|-5u|0||22e5',\n      'Asia/Damascus|EET EEST|-20 -30|01010101010101010101010|1GPy0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0|26e5',\n      'Asia/Dili|+09|-90|0||19e4',\n      'Asia/Dubai|+04|-40|0||39e5',\n      'Asia/Famagusta|EET EEST +03|-20 -30 -30|0101010101201010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0',\n      'Asia/Gaza|EET EEST|-20 -30|01010101010101010101010|1GPy0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1qL0 WN0 1qL0 WN0 1qL0|18e5',\n      'Asia/Hong_Kong|HKT|-80|0||73e5',\n      'Asia/Hovd|+07 +08|-70 -80|01010|1O8H0 1cJ0 1cP0 1cJ0|81e3',\n      'Asia/Irkutsk|+09 +08|-90 -80|01|1N7t0|60e4',\n      'Europe/Istanbul|EET EEST +03|-20 -30 -30|01010101012|1GNB0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6',\n      'Asia/Jakarta|WIB|-70|0||31e6',\n      'Asia/Jayapura|WIT|-90|0||26e4',\n      'Asia/Jerusalem|IST IDT|-20 -30|01010101010101010101010|1GPA0 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0|81e4',\n      'Asia/Kabul|+0430|-4u|0||46e5',\n      'Asia/Karachi|PKT|-50|0||24e6',\n      'Asia/Kathmandu|+0545|-5J|0||12e5',\n      'Asia/Yakutsk|+10 +09|-a0 -90|01|1N7s0|28e4',\n      'Asia/Krasnoyarsk|+08 +07|-80 -70|01|1N7u0|10e5',\n      'Asia/Magadan|+12 +10 +11|-c0 -a0 -b0|012|1N7q0 3Cq0|95e3',\n      'Asia/Makassar|WITA|-80|0||15e5',\n      'Europe/Athens|EET EEST|-20 -30|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|35e5',\n      'Asia/Novosibirsk|+07 +06|-70 -60|010|1N7v0 4eN0|15e5',\n      'Asia/Omsk|+07 +06|-70 -60|01|1N7v0|12e5',\n      'Asia/Pyongyang|KST KST|-90 -8u|010|1P4D0 6BAu|29e5',\n      'Asia/Rangoon|+0630|-6u|0||48e5',\n      'Asia/Sakhalin|+11 +10|-b0 -a0|010|1N7r0 3rd0|58e4',\n      'Asia/Seoul|KST|-90|0||23e6',\n      'Asia/Srednekolymsk|+12 +11|-c0 -b0|01|1N7q0|35e2',\n      'Asia/Tehran|+0330 +0430|-3u -4u|01010101010101010101010|1GLUu 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0|14e6',\n      'Asia/Tokyo|JST|-90|0||38e6',\n      'Asia/Tomsk|+07 +06|-70 -60|010|1N7v0 3Qp0|10e5',\n      'Asia/Vladivostok|+11 +10|-b0 -a0|01|1N7r0|60e4',\n      'Asia/Yekaterinburg|+06 +05|-60 -50|01|1N7w0|14e5',\n      'Europe/Lisbon|WET WEST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|27e5',\n      'Atlantic/Cape_Verde|-01|10|0||50e4',\n      'Australia/Sydney|AEDT AEST|-b0 -a0|01010101010101010101010|1GQg0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|40e5',\n      'Australia/Adelaide|ACDT ACST|-au -9u|01010101010101010101010|1GQgu 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|11e5',\n      'Australia/Brisbane|AEST|-a0|0||20e5',\n      'Australia/Darwin|ACST|-9u|0||12e4',\n      'Australia/Eucla|+0845|-8J|0||368',\n      'Australia/Lord_Howe|+11 +1030|-b0 -au|01010101010101010101010|1GQf0 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu|347',\n      'Australia/Perth|AWST|-80|0||18e5',\n      'Pacific/Easter|-05 -06|50 60|010101010101010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1Nb0 Dd0 1Nb0 Ap0|30e2',\n      'Europe/Dublin|GMT IST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|12e5',\n      'Etc/GMT-1|+01|-10|0|',\n      'Pacific/Fakaofo|+13|-d0|0||483',\n      'Pacific/Kiritimati|+14|-e0|0||51e2',\n      'Etc/GMT-2|+02|-20|0|',\n      'Pacific/Tahiti|-10|a0|0||18e4',\n      'Pacific/Niue|-11|b0|0||12e2',\n      'Etc/GMT+12|-12|c0|0|',\n      'Pacific/Galapagos|-06|60|0||25e3',\n      'Etc/GMT+7|-07|70|0|',\n      'Pacific/Pitcairn|-08|80|0||56',\n      'Pacific/Gambier|-09|90|0||125',\n      'Etc/UCT|UCT|0|0|',\n      'Etc/UTC|UTC|0|0|',\n      'Europe/Astrakhan|+04 +03|-40 -30|010|1N7y0 3rd0',\n      'Europe/London|GMT BST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|10e6',\n      'Europe/Chisinau|EET EEST|-20 -30|01010101010101010101010|1GNA0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|67e4',\n      'Europe/Kaliningrad|+03 EET|-30 -20|01|1N7z0|44e4',\n      'Europe/Volgograd|+04 +03|-40 -30|01|1N7y0|10e5',\n      'Europe/Moscow|MSK MSK|-40 -30|01|1N7y0|16e6',\n      'Europe/Saratov|+04 +03|-40 -30|010|1N7y0 5810',\n      'Europe/Simferopol|EET EEST MSK MSK|-20 -30 -40 -30|0101023|1GNB0 1qM0 11A0 1o00 11z0 1nW0|33e4',\n      'Pacific/Honolulu|HST|a0|0||37e4',\n      'MET|MET MEST|-10 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0',\n      'Pacific/Chatham|+1345 +1245|-dJ -cJ|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|600',\n      'Pacific/Apia|+14 +13|-e0 -d0|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|37e3',\n      'Pacific/Bougainville|+10 +11|-a0 -b0|01|1NwE0|18e4',\n      'Pacific/Fiji|+13 +12|-d0 -c0|01010101010101010101010|1Goe0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0|88e4',\n      'Pacific/Guam|ChST|-a0|0||17e4',\n      'Pacific/Marquesas|-0930|9u|0||86e2',\n      'Pacific/Pago_Pago|SST|b0|0||37e2',\n      'Pacific/Norfolk|+1130 +11|-bu -b0|01|1PoCu|25e4',\n      'Pacific/Tongatapu|+13 +14|-d0 -e0|010|1S4d0 s00|75e3'\n    ],\n    links: [\n      'Africa/Abidjan|Africa/Accra',\n      'Africa/Abidjan|Africa/Bamako',\n      'Africa/Abidjan|Africa/Banjul',\n      'Africa/Abidjan|Africa/Bissau',\n      'Africa/Abidjan|Africa/Conakry',\n      'Africa/Abidjan|Africa/Dakar',\n      'Africa/Abidjan|Africa/Freetown',\n      'Africa/Abidjan|Africa/Lome',\n      'Africa/Abidjan|Africa/Monrovia',\n      'Africa/Abidjan|Africa/Nouakchott',\n      'Africa/Abidjan|Africa/Ouagadougou',\n      'Africa/Abidjan|Africa/Timbuktu',\n      'Africa/Abidjan|America/Danmarkshavn',\n      'Africa/Abidjan|Atlantic/Reykjavik',\n      'Africa/Abidjan|Atlantic/St_Helena',\n      'Africa/Abidjan|Etc/GMT',\n      'Africa/Abidjan|Etc/GMT+0',\n      'Africa/Abidjan|Etc/GMT-0',\n      'Africa/Abidjan|Etc/GMT0',\n      'Africa/Abidjan|Etc/Greenwich',\n      'Africa/Abidjan|GMT',\n      'Africa/Abidjan|GMT+0',\n      'Africa/Abidjan|GMT-0',\n      'Africa/Abidjan|GMT0',\n      'Africa/Abidjan|Greenwich',\n      'Africa/Abidjan|Iceland',\n      'Africa/Algiers|Africa/Tunis',\n      'Africa/Cairo|Egypt',\n      'Africa/Casablanca|Africa/El_Aaiun',\n      'Africa/Johannesburg|Africa/Maseru',\n      'Africa/Johannesburg|Africa/Mbabane',\n      'Africa/Lagos|Africa/Bangui',\n      'Africa/Lagos|Africa/Brazzaville',\n      'Africa/Lagos|Africa/Douala',\n      'Africa/Lagos|Africa/Kinshasa',\n      'Africa/Lagos|Africa/Libreville',\n      'Africa/Lagos|Africa/Luanda',\n      'Africa/Lagos|Africa/Malabo',\n      'Africa/Lagos|Africa/Ndjamena',\n      'Africa/Lagos|Africa/Niamey',\n      'Africa/Lagos|Africa/Porto-Novo',\n      'Africa/Maputo|Africa/Blantyre',\n      'Africa/Maputo|Africa/Bujumbura',\n      'Africa/Maputo|Africa/Gaborone',\n      'Africa/Maputo|Africa/Harare',\n      'Africa/Maputo|Africa/Kigali',\n      'Africa/Maputo|Africa/Lubumbashi',\n      'Africa/Maputo|Africa/Lusaka',\n      'Africa/Nairobi|Africa/Addis_Ababa',\n      'Africa/Nairobi|Africa/Asmara',\n      'Africa/Nairobi|Africa/Asmera',\n      'Africa/Nairobi|Africa/Dar_es_Salaam',\n      'Africa/Nairobi|Africa/Djibouti',\n      'Africa/Nairobi|Africa/Juba',\n      'Africa/Nairobi|Africa/Kampala',\n      'Africa/Nairobi|Africa/Mogadishu',\n      'Africa/Nairobi|Indian/Antananarivo',\n      'Africa/Nairobi|Indian/Comoro',\n      'Africa/Nairobi|Indian/Mayotte',\n      'Africa/Tripoli|Libya',\n      'America/Adak|America/Atka',\n      'America/Adak|US/Aleutian',\n      'America/Anchorage|America/Juneau',\n      'America/Anchorage|America/Nome',\n      'America/Anchorage|America/Sitka',\n      'America/Anchorage|America/Yakutat',\n      'America/Anchorage|US/Alaska',\n      'America/Campo_Grande|America/Cuiaba',\n      'America/Chicago|America/Indiana/Knox',\n      'America/Chicago|America/Indiana/Tell_City',\n      'America/Chicago|America/Knox_IN',\n      'America/Chicago|America/Matamoros',\n      'America/Chicago|America/Menominee',\n      'America/Chicago|America/North_Dakota/Beulah',\n      'America/Chicago|America/North_Dakota/Center',\n      'America/Chicago|America/North_Dakota/New_Salem',\n      'America/Chicago|America/Rainy_River',\n      'America/Chicago|America/Rankin_Inlet',\n      'America/Chicago|America/Resolute',\n      'America/Chicago|America/Winnipeg',\n      'America/Chicago|CST6CDT',\n      'America/Chicago|Canada/Central',\n      'America/Chicago|US/Central',\n      'America/Chicago|US/Indiana-Starke',\n      'America/Chihuahua|America/Mazatlan',\n      'America/Chihuahua|Mexico/BajaSur',\n      'America/Denver|America/Boise',\n      'America/Denver|America/Cambridge_Bay',\n      'America/Denver|America/Edmonton',\n      'America/Denver|America/Inuvik',\n      'America/Denver|America/Ojinaga',\n      'America/Denver|America/Shiprock',\n      'America/Denver|America/Yellowknife',\n      'America/Denver|Canada/Mountain',\n      'America/Denver|MST7MDT',\n      'America/Denver|Navajo',\n      'America/Denver|US/Mountain',\n      'America/Fortaleza|America/Argentina/Buenos_Aires',\n      'America/Fortaleza|America/Argentina/Catamarca',\n      'America/Fortaleza|America/Argentina/ComodRivadavia',\n      'America/Fortaleza|America/Argentina/Cordoba',\n      'America/Fortaleza|America/Argentina/Jujuy',\n      'America/Fortaleza|America/Argentina/La_Rioja',\n      'America/Fortaleza|America/Argentina/Mendoza',\n      'America/Fortaleza|America/Argentina/Rio_Gallegos',\n      'America/Fortaleza|America/Argentina/Salta',\n      'America/Fortaleza|America/Argentina/San_Juan',\n      'America/Fortaleza|America/Argentina/San_Luis',\n      'America/Fortaleza|America/Argentina/Tucuman',\n      'America/Fortaleza|America/Argentina/Ushuaia',\n      'America/Fortaleza|America/Belem',\n      'America/Fortaleza|America/Buenos_Aires',\n      'America/Fortaleza|America/Catamarca',\n      'America/Fortaleza|America/Cayenne',\n      'America/Fortaleza|America/Cordoba',\n      'America/Fortaleza|America/Jujuy',\n      'America/Fortaleza|America/Maceio',\n      'America/Fortaleza|America/Mendoza',\n      'America/Fortaleza|America/Paramaribo',\n      'America/Fortaleza|America/Recife',\n      'America/Fortaleza|America/Rosario',\n      'America/Fortaleza|America/Santarem',\n      'America/Fortaleza|Antarctica/Rothera',\n      'America/Fortaleza|Atlantic/Stanley',\n      'America/Fortaleza|Etc/GMT+3',\n      'America/Halifax|America/Glace_Bay',\n      'America/Halifax|America/Goose_Bay',\n      'America/Halifax|America/Moncton',\n      'America/Halifax|America/Thule',\n      'America/Halifax|Atlantic/Bermuda',\n      'America/Halifax|Canada/Atlantic',\n      'America/Havana|Cuba',\n      'America/La_Paz|America/Boa_Vista',\n      'America/La_Paz|America/Guyana',\n      'America/La_Paz|America/Manaus',\n      'America/La_Paz|America/Porto_Velho',\n      'America/La_Paz|Brazil/West',\n      'America/La_Paz|Etc/GMT+4',\n      'America/Lima|America/Bogota',\n      'America/Lima|America/Guayaquil',\n      'America/Lima|Etc/GMT+5',\n      'America/Los_Angeles|America/Dawson',\n      'America/Los_Angeles|America/Ensenada',\n      'America/Los_Angeles|America/Santa_Isabel',\n      'America/Los_Angeles|America/Tijuana',\n      'America/Los_Angeles|America/Vancouver',\n      'America/Los_Angeles|America/Whitehorse',\n      'America/Los_Angeles|Canada/Pacific',\n      'America/Los_Angeles|Canada/Yukon',\n      'America/Los_Angeles|Mexico/BajaNorte',\n      'America/Los_Angeles|PST8PDT',\n      'America/Los_Angeles|US/Pacific',\n      'America/Los_Angeles|US/Pacific-New',\n      'America/Managua|America/Belize',\n      'America/Managua|America/Costa_Rica',\n      'America/Managua|America/El_Salvador',\n      'America/Managua|America/Guatemala',\n      'America/Managua|America/Regina',\n      'America/Managua|America/Swift_Current',\n      'America/Managua|America/Tegucigalpa',\n      'America/Managua|Canada/Saskatchewan',\n      'America/Mexico_City|America/Bahia_Banderas',\n      'America/Mexico_City|America/Merida',\n      'America/Mexico_City|America/Monterrey',\n      'America/Mexico_City|Mexico/General',\n      'America/New_York|America/Detroit',\n      'America/New_York|America/Fort_Wayne',\n      'America/New_York|America/Indiana/Indianapolis',\n      'America/New_York|America/Indiana/Marengo',\n      'America/New_York|America/Indiana/Petersburg',\n      'America/New_York|America/Indiana/Vevay',\n      'America/New_York|America/Indiana/Vincennes',\n      'America/New_York|America/Indiana/Winamac',\n      'America/New_York|America/Indianapolis',\n      'America/New_York|America/Iqaluit',\n      'America/New_York|America/Kentucky/Louisville',\n      'America/New_York|America/Kentucky/Monticello',\n      'America/New_York|America/Louisville',\n      'America/New_York|America/Montreal',\n      'America/New_York|America/Nassau',\n      'America/New_York|America/Nipigon',\n      'America/New_York|America/Pangnirtung',\n      'America/New_York|America/Thunder_Bay',\n      'America/New_York|America/Toronto',\n      'America/New_York|Canada/Eastern',\n      'America/New_York|EST5EDT',\n      'America/New_York|US/East-Indiana',\n      'America/New_York|US/Eastern',\n      'America/New_York|US/Michigan',\n      'America/Noronha|Atlantic/South_Georgia',\n      'America/Noronha|Brazil/DeNoronha',\n      'America/Noronha|Etc/GMT+2',\n      'America/Panama|America/Atikokan',\n      'America/Panama|America/Cayman',\n      'America/Panama|America/Coral_Harbour',\n      'America/Panama|America/Jamaica',\n      'America/Panama|EST',\n      'America/Panama|Jamaica',\n      'America/Phoenix|America/Creston',\n      'America/Phoenix|America/Dawson_Creek',\n      'America/Phoenix|America/Hermosillo',\n      'America/Phoenix|MST',\n      'America/Phoenix|US/Arizona',\n      'America/Rio_Branco|America/Eirunepe',\n      'America/Rio_Branco|America/Porto_Acre',\n      'America/Rio_Branco|Brazil/Acre',\n      'America/Santiago|Chile/Continental',\n      'America/Santo_Domingo|America/Anguilla',\n      'America/Santo_Domingo|America/Antigua',\n      'America/Santo_Domingo|America/Aruba',\n      'America/Santo_Domingo|America/Barbados',\n      'America/Santo_Domingo|America/Blanc-Sablon',\n      'America/Santo_Domingo|America/Curacao',\n      'America/Santo_Domingo|America/Dominica',\n      'America/Santo_Domingo|America/Grenada',\n      'America/Santo_Domingo|America/Guadeloupe',\n      'America/Santo_Domingo|America/Kralendijk',\n      'America/Santo_Domingo|America/Lower_Princes',\n      'America/Santo_Domingo|America/Marigot',\n      'America/Santo_Domingo|America/Martinique',\n      'America/Santo_Domingo|America/Montserrat',\n      'America/Santo_Domingo|America/Port_of_Spain',\n      'America/Santo_Domingo|America/Puerto_Rico',\n      'America/Santo_Domingo|America/St_Barthelemy',\n      'America/Santo_Domingo|America/St_Kitts',\n      'America/Santo_Domingo|America/St_Lucia',\n      'America/Santo_Domingo|America/St_Thomas',\n      'America/Santo_Domingo|America/St_Vincent',\n      'America/Santo_Domingo|America/Tortola',\n      'America/Santo_Domingo|America/Virgin',\n      'America/Sao_Paulo|Brazil/East',\n      'America/St_Johns|Canada/Newfoundland',\n      'Antarctica/Palmer|America/Punta_Arenas',\n      'Asia/Baghdad|Antarctica/Syowa',\n      'Asia/Baghdad|Asia/Aden',\n      'Asia/Baghdad|Asia/Bahrain',\n      'Asia/Baghdad|Asia/Kuwait',\n      'Asia/Baghdad|Asia/Qatar',\n      'Asia/Baghdad|Asia/Riyadh',\n      'Asia/Baghdad|Etc/GMT-3',\n      'Asia/Baghdad|Europe/Minsk',\n      'Asia/Bangkok|Asia/Ho_Chi_Minh',\n      'Asia/Bangkok|Asia/Novokuznetsk',\n      'Asia/Bangkok|Asia/Phnom_Penh',\n      'Asia/Bangkok|Asia/Saigon',\n      'Asia/Bangkok|Asia/Vientiane',\n      'Asia/Bangkok|Etc/GMT-7',\n      'Asia/Bangkok|Indian/Christmas',\n      'Asia/Dhaka|Antarctica/Vostok',\n      'Asia/Dhaka|Asia/Almaty',\n      'Asia/Dhaka|Asia/Bishkek',\n      'Asia/Dhaka|Asia/Dacca',\n      'Asia/Dhaka|Asia/Kashgar',\n      'Asia/Dhaka|Asia/Qyzylorda',\n      'Asia/Dhaka|Asia/Thimbu',\n      'Asia/Dhaka|Asia/Thimphu',\n      'Asia/Dhaka|Asia/Urumqi',\n      'Asia/Dhaka|Etc/GMT-6',\n      'Asia/Dhaka|Indian/Chagos',\n      'Asia/Dili|Etc/GMT-9',\n      'Asia/Dili|Pacific/Palau',\n      'Asia/Dubai|Asia/Muscat',\n      'Asia/Dubai|Asia/Tbilisi',\n      'Asia/Dubai|Asia/Yerevan',\n      'Asia/Dubai|Etc/GMT-4',\n      'Asia/Dubai|Europe/Samara',\n      'Asia/Dubai|Indian/Mahe',\n      'Asia/Dubai|Indian/Mauritius',\n      'Asia/Dubai|Indian/Reunion',\n      'Asia/Gaza|Asia/Hebron',\n      'Asia/Hong_Kong|Hongkong',\n      'Asia/Jakarta|Asia/Pontianak',\n      'Asia/Jerusalem|Asia/Tel_Aviv',\n      'Asia/Jerusalem|Israel',\n      'Asia/Kamchatka|Asia/Anadyr',\n      'Asia/Kamchatka|Etc/GMT-12',\n      'Asia/Kamchatka|Kwajalein',\n      'Asia/Kamchatka|Pacific/Funafuti',\n      'Asia/Kamchatka|Pacific/Kwajalein',\n      'Asia/Kamchatka|Pacific/Majuro',\n      'Asia/Kamchatka|Pacific/Nauru',\n      'Asia/Kamchatka|Pacific/Tarawa',\n      'Asia/Kamchatka|Pacific/Wake',\n      'Asia/Kamchatka|Pacific/Wallis',\n      'Asia/Kathmandu|Asia/Katmandu',\n      'Asia/Kolkata|Asia/Calcutta',\n      'Asia/Makassar|Asia/Ujung_Pandang',\n      'Asia/Manila|Asia/Brunei',\n      'Asia/Manila|Asia/Kuala_Lumpur',\n      'Asia/Manila|Asia/Kuching',\n      'Asia/Manila|Asia/Singapore',\n      'Asia/Manila|Etc/GMT-8',\n      'Asia/Manila|Singapore',\n      'Asia/Rangoon|Asia/Yangon',\n      'Asia/Rangoon|Indian/Cocos',\n      'Asia/Seoul|ROK',\n      'Asia/Shanghai|Asia/Chongqing',\n      'Asia/Shanghai|Asia/Chungking',\n      'Asia/Shanghai|Asia/Harbin',\n      'Asia/Shanghai|Asia/Macao',\n      'Asia/Shanghai|Asia/Macau',\n      'Asia/Shanghai|Asia/Taipei',\n      'Asia/Shanghai|PRC',\n      'Asia/Shanghai|ROC',\n      'Asia/Tashkent|Antarctica/Mawson',\n      'Asia/Tashkent|Asia/Aqtau',\n      'Asia/Tashkent|Asia/Aqtobe',\n      'Asia/Tashkent|Asia/Ashgabat',\n      'Asia/Tashkent|Asia/Ashkhabad',\n      'Asia/Tashkent|Asia/Atyrau',\n      'Asia/Tashkent|Asia/Dushanbe',\n      'Asia/Tashkent|Asia/Oral',\n      'Asia/Tashkent|Asia/Samarkand',\n      'Asia/Tashkent|Etc/GMT-5',\n      'Asia/Tashkent|Indian/Kerguelen',\n      'Asia/Tashkent|Indian/Maldives',\n      'Asia/Tehran|Iran',\n      'Asia/Tokyo|Japan',\n      'Asia/Ulaanbaatar|Asia/Choibalsan',\n      'Asia/Ulaanbaatar|Asia/Ulan_Bator',\n      'Asia/Vladivostok|Asia/Ust-Nera',\n      'Asia/Yakutsk|Asia/Khandyga',\n      'Atlantic/Azores|America/Scoresbysund',\n      'Atlantic/Cape_Verde|Etc/GMT+1',\n      'Australia/Adelaide|Australia/Broken_Hill',\n      'Australia/Adelaide|Australia/South',\n      'Australia/Adelaide|Australia/Yancowinna',\n      'Australia/Brisbane|Australia/Lindeman',\n      'Australia/Brisbane|Australia/Queensland',\n      'Australia/Darwin|Australia/North',\n      'Australia/Lord_Howe|Australia/LHI',\n      'Australia/Perth|Australia/West',\n      'Australia/Sydney|Australia/ACT',\n      'Australia/Sydney|Australia/Canberra',\n      'Australia/Sydney|Australia/Currie',\n      'Australia/Sydney|Australia/Hobart',\n      'Australia/Sydney|Australia/Melbourne',\n      'Australia/Sydney|Australia/NSW',\n      'Australia/Sydney|Australia/Tasmania',\n      'Australia/Sydney|Australia/Victoria',\n      'Etc/UCT|UCT',\n      'Etc/UTC|Etc/Universal',\n      'Etc/UTC|Etc/Zulu',\n      'Etc/UTC|UTC',\n      'Etc/UTC|Universal',\n      'Etc/UTC|Zulu',\n      'Europe/Astrakhan|Europe/Ulyanovsk',\n      'Europe/Athens|Asia/Nicosia',\n      'Europe/Athens|EET',\n      'Europe/Athens|Europe/Bucharest',\n      'Europe/Athens|Europe/Helsinki',\n      'Europe/Athens|Europe/Kiev',\n      'Europe/Athens|Europe/Mariehamn',\n      'Europe/Athens|Europe/Nicosia',\n      'Europe/Athens|Europe/Riga',\n      'Europe/Athens|Europe/Sofia',\n      'Europe/Athens|Europe/Tallinn',\n      'Europe/Athens|Europe/Uzhgorod',\n      'Europe/Athens|Europe/Vilnius',\n      'Europe/Athens|Europe/Zaporozhye',\n      'Europe/Chisinau|Europe/Tiraspol',\n      'Europe/Dublin|Eire',\n      'Europe/Istanbul|Asia/Istanbul',\n      'Europe/Istanbul|Turkey',\n      'Europe/Lisbon|Atlantic/Canary',\n      'Europe/Lisbon|Atlantic/Faeroe',\n      'Europe/Lisbon|Atlantic/Faroe',\n      'Europe/Lisbon|Atlantic/Madeira',\n      'Europe/Lisbon|Portugal',\n      'Europe/Lisbon|WET',\n      'Europe/London|Europe/Belfast',\n      'Europe/London|Europe/Guernsey',\n      'Europe/London|Europe/Isle_of_Man',\n      'Europe/London|Europe/Jersey',\n      'Europe/London|GB',\n      'Europe/London|GB-Eire',\n      'Europe/Moscow|W-SU',\n      'Europe/Paris|Africa/Ceuta',\n      'Europe/Paris|Arctic/Longyearbyen',\n      'Europe/Paris|Atlantic/Jan_Mayen',\n      'Europe/Paris|CET',\n      'Europe/Paris|Europe/Amsterdam',\n      'Europe/Paris|Europe/Andorra',\n      'Europe/Paris|Europe/Belgrade',\n      'Europe/Paris|Europe/Berlin',\n      'Europe/Paris|Europe/Bratislava',\n      'Europe/Paris|Europe/Brussels',\n      'Europe/Paris|Europe/Budapest',\n      'Europe/Paris|Europe/Busingen',\n      'Europe/Paris|Europe/Copenhagen',\n      'Europe/Paris|Europe/Gibraltar',\n      'Europe/Paris|Europe/Ljubljana',\n      'Europe/Paris|Europe/Luxembourg',\n      'Europe/Paris|Europe/Madrid',\n      'Europe/Paris|Europe/Malta',\n      'Europe/Paris|Europe/Monaco',\n      'Europe/Paris|Europe/Oslo',\n      'Europe/Paris|Europe/Podgorica',\n      'Europe/Paris|Europe/Prague',\n      'Europe/Paris|Europe/Rome',\n      'Europe/Paris|Europe/San_Marino',\n      'Europe/Paris|Europe/Sarajevo',\n      'Europe/Paris|Europe/Skopje',\n      'Europe/Paris|Europe/Stockholm',\n      'Europe/Paris|Europe/Tirane',\n      'Europe/Paris|Europe/Vaduz',\n      'Europe/Paris|Europe/Vatican',\n      'Europe/Paris|Europe/Vienna',\n      'Europe/Paris|Europe/Warsaw',\n      'Europe/Paris|Europe/Zagreb',\n      'Europe/Paris|Europe/Zurich',\n      'Europe/Paris|Poland',\n      'Europe/Volgograd|Europe/Kirov',\n      'Pacific/Auckland|Antarctica/McMurdo',\n      'Pacific/Auckland|Antarctica/South_Pole',\n      'Pacific/Auckland|NZ',\n      'Pacific/Chatham|NZ-CHAT',\n      'Pacific/Easter|Chile/EasterIsland',\n      'Pacific/Fakaofo|Etc/GMT-13',\n      'Pacific/Fakaofo|Pacific/Enderbury',\n      'Pacific/Galapagos|Etc/GMT+6',\n      'Pacific/Gambier|Etc/GMT+9',\n      'Pacific/Guadalcanal|Antarctica/Macquarie',\n      'Pacific/Guadalcanal|Etc/GMT-11',\n      'Pacific/Guadalcanal|Pacific/Efate',\n      'Pacific/Guadalcanal|Pacific/Kosrae',\n      'Pacific/Guadalcanal|Pacific/Noumea',\n      'Pacific/Guadalcanal|Pacific/Pohnpei',\n      'Pacific/Guadalcanal|Pacific/Ponape',\n      'Pacific/Guam|Pacific/Saipan',\n      'Pacific/Honolulu|HST',\n      'Pacific/Honolulu|Pacific/Johnston',\n      'Pacific/Honolulu|US/Hawaii',\n      'Pacific/Kiritimati|Etc/GMT-14',\n      'Pacific/Niue|Etc/GMT+11',\n      'Pacific/Pago_Pago|Pacific/Midway',\n      'Pacific/Pago_Pago|Pacific/Samoa',\n      'Pacific/Pago_Pago|US/Samoa',\n      'Pacific/Pitcairn|Etc/GMT+8',\n      'Pacific/Port_Moresby|Antarctica/DumontDUrville',\n      'Pacific/Port_Moresby|Etc/GMT-10',\n      'Pacific/Port_Moresby|Pacific/Chuuk',\n      'Pacific/Port_Moresby|Pacific/Truk',\n      'Pacific/Port_Moresby|Pacific/Yap',\n      'Pacific/Tahiti|Etc/GMT+10',\n      'Pacific/Tahiti|Pacific/Rarotonga'\n    ]\n  })\n\n  return moment\n})\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/moment/moment-timezone-with-data.js?");

/***/ }),
/* 22 */
/*!*********************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=truRequire!./src/public/js/truRequire-exposed.js ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!./truRequire.js */ 23);\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../../../node_modules/expose-loader/dist/runtime/getGlobalThis.js */ 24);\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"truRequire\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"truRequire\"] = ___EXPOSE_LOADER_IMPORT___;\nelse throw new Error('[exposes-loader] The \"truRequire\" value exists in the global scope, it may not be safe to overwrite it, use the \"override\" option')\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/truRequire-exposed.js?./node_modules/expose-loader/dist/cjs.js?exposes=truRequire");

/***/ }),
/* 23 */
/*!*************************************!*\
  !*** ./src/public/js/truRequire.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n *       .                             .o8                     oooo\n *    .o8                             \"888                     `888\n *  .o888oo oooo d8b oooo  oooo   .oooo888   .ooooo.   .oooo.o  888  oooo\n *    888   `888\"\"8P `888  `888  d88' `888  d88' `88b d88(  \"8  888 .8P'\n *    888    888      888   888  888   888  888ooo888 `\"Y88b.   888888.\n *    888 .  888      888   888  888   888  888    .o o.  )88b  888 `88b.\n *    \"888\" d888b     `V88V\"V8P' `Y8bod88P\" `Y8bod8P' 8\"\"888P' o888o o888o\n *  ========================================================================\n *  Author:     Chris Brame\n *  Updated:    1/20/19 4:43 PM\n *  Copyright (c) 2014-2019. All rights reserved.\n */\n\n/* eslint-disable node/no-missing-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require,node/no-missing-require,node/no-unpublished-require */\n// This gets loaded for accessing require from outside Webpack bundle.\nvar allMods = {\n  jquery: function () {\n    return __webpack_require__(/*! jquery */ 1)\n  },\n  snackbar: function () {\n    return __webpack_require__(/*! snackbar */ 9)\n  },\n  underscore: function () {\n    return __webpack_require__(/*! underscore */ 2)\n  },\n  helpers: function () {\n    return __webpack_require__(/*! modules/helpers */ 11)\n  },\n  datatables: function () {\n    return __webpack_require__(/*! datatables */ 4)\n  },\n  dt_ipaddress: function () {\n    return __webpack_require__(/*! dt_ipaddress */ 10)\n  },\n  dt_scroller: function () {\n    return __webpack_require__(/*! dt_scroller */ 32)\n  },\n  uikit: function () {\n    return __webpack_require__(/*! uikit */ 5)\n  }\n}\n\nmodule.exports = function (modules, cb) {\n  var loadedModules = modules.map(function (x) {\n    return allMods[x]()\n  })\n\n  cb(loadedModules)\n}\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/truRequire.js?");

/***/ }),
/* 24 */
/*!******************************************************************!*\
  !*** ./node_modules/expose-loader/dist/runtime/getGlobalThis.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n\n  var g;\n\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") {\n      return window;\n    } // This works if the self reference is available\n\n\n    if (typeof self === \"object\") {\n      return self;\n    } // This works if the global reference is available\n\n\n    if (typeof __webpack_require__.g !== \"undefined\") {\n      return __webpack_require__.g;\n    }\n  }\n\n  return g;\n}();\n\n//# sourceURL=webpack://trudesk/./node_modules/expose-loader/dist/runtime/getGlobalThis.js?");

/***/ }),
/* 25 */
/*!********************************************************!*\
  !*** ./src/public/js/vendor/peity/jquery.peity.min.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 1);\n// Peity jQuery plugin version 3.2.0\n// (c) 2015 Ben Pickles\n//\n// http://benpickles.github.io/peity\n//\n// Released under MIT license.\n;(function (k, w, h, v) {\n  var d = (k.fn.peity = function (a, b) {\n      y &&\n        this.each(function () {\n          var e = k(this),\n            c = e.data('_peity')\n          c\n            ? (a && (c.type = a), k.extend(c.opts, b))\n            : ((c = new x(e, a, k.extend({}, d.defaults[a], e.data('peity'), b))),\n              e\n                .change(function () {\n                  c.draw()\n                })\n                .data('_peity', c))\n          c.draw()\n        })\n      return this\n    }),\n    x = function (a, b, e) {\n      this.$el = a\n      this.type = b\n      this.opts = e\n    },\n    o = x.prototype,\n    q = (o.svgElement = function (a, b) {\n      return k(w.createElementNS('http://www.w3.org/2000/svg', a)).attr(b)\n    }),\n    y = 'createElementNS' in w && q('svg', {})[0].createSVGRect\n  o.draw = function () {\n    var a = this.opts\n    d.graphers[this.type].call(this, a)\n    a.after && a.after.call(this, a)\n  }\n  o.fill = function () {\n    var a = this.opts.fill\n    return k.isFunction(a)\n      ? a\n      : function (b, e) {\n          return a[e % a.length]\n        }\n  }\n  o.prepare = function (a, b) {\n    this.$svg || this.$el.hide().after((this.$svg = q('svg', { class: 'peity' })))\n    return this.$svg\n      .empty()\n      .data('peity', this)\n      .attr({ height: b, width: a })\n  }\n  o.values = function () {\n    return k.map(this.$el.text().split(this.opts.delimiter), function (a) {\n      return parseFloat(a)\n    })\n  }\n  d.defaults = {}\n  d.graphers = {}\n  d.register = function (a, b, e) {\n    this.defaults[a] = b\n    this.graphers[a] = e\n  }\n  d.register('pie', { fill: ['#ff9900', '#fff4dd', '#ffc66e'], radius: 8 }, function (a) {\n    if (!a.delimiter) {\n      var b = this.$el.text().match(/[^0-9\\.]/)\n      a.delimiter = b ? b[0] : ','\n    }\n    b = k.map(this.values(), function (a) {\n      return 0 < a ? a : 0\n    })\n    if ('/' == a.delimiter)\n      var e = b[0],\n        b = [e, h.max(0, b[1] - e)]\n    for (var c = 0, e = b.length, t = 0; c < e; c++) t += b[c]\n    t || ((e = 2), (t = 1), (b = [0, 1]))\n    var l = 2 * a.radius,\n      l = this.prepare(a.width || l, a.height || l),\n      c = l.width(),\n      f = l.height(),\n      j = c / 2,\n      d = f / 2,\n      f = h.min(j, d),\n      a = a.innerRadius\n    'donut' == this.type && !a && (a = 0.5 * f)\n    for (\n      var r = h.PI,\n        s = this.fill(),\n        g = (this.scale = function (a, b) {\n          var c = (a / t) * r * 2 - r / 2\n          return [b * h.cos(c) + j, b * h.sin(c) + d]\n        }),\n        m = 0,\n        c = 0;\n      c < e;\n      c++\n    ) {\n      var u = b[c],\n        i = u / t\n      if (0 != i) {\n        if (1 == i)\n          if (a)\n            var i = j - 0.01,\n              p = d - f,\n              n = d - a,\n              i = q('path', { d: ['M', j, p, 'A', f, f, 0, 1, 1, i, p, 'L', i, n, 'A', a, a, 0, 1, 0, j, n].join(' ') })\n          else i = q('circle', { cx: j, cy: d, r: f })\n        else\n          (p = m + u),\n            (n = ['M'].concat(g(m, f), 'A', f, f, 0, 0.5 < i ? 1 : 0, 1, g(p, f), 'L')),\n            a ? (n = n.concat(g(p, a), 'A', a, a, 0, 0.5 < i ? 1 : 0, 0, g(m, a))) : n.push(j, d),\n            (m += u),\n            (i = q('path', { d: n.join(' ') }))\n        i.attr('fill', s.call(this, u, c, b))\n        l.append(i)\n      }\n    }\n  })\n  d.register('donut', k.extend(!0, {}, d.defaults.pie), function (a) {\n    d.graphers.pie.call(this, a)\n  })\n  d.register(\n    'line',\n    { delimiter: ',', fill: '#c6d9fd', height: 16, min: 0, stroke: '#4d89f9', strokeWidth: 1, width: 32 },\n    function (a) {\n      var b = this.values()\n      1 == b.length && b.push(b[0])\n      for (\n        var e = h.max.apply(h, a.max == v ? b : b.concat(a.max)),\n          c = h.min.apply(h, a.min == v ? b : b.concat(a.min)),\n          d = this.prepare(a.width, a.height),\n          l = a.strokeWidth,\n          f = d.width(),\n          j = d.height() - l,\n          k = e - c,\n          e = (this.x = function (a) {\n            return a * (f / (b.length - 1))\n          }),\n          r = (this.y = function (a) {\n            var b = j\n            k && (b -= ((a - c) / k) * j)\n            return b + l / 2\n          }),\n          s = r(h.max(c, 0)),\n          g = [0, s],\n          m = 0;\n        m < b.length;\n        m++\n      )\n        g.push(e(m), r(b[m]))\n      g.push(f, s)\n      a.fill && d.append(q('polygon', { fill: a.fill, points: g.join(' ') }))\n      l &&\n        d.append(\n          q('polyline', {\n            fill: 'none',\n            points: g.slice(2, g.length - 2).join(' '),\n            stroke: a.stroke,\n            'stroke-width': l,\n            'stroke-linecap': 'square'\n          })\n        )\n    }\n  )\n  d.register('bar', { delimiter: ',', fill: ['#4D89F9'], height: 16, min: 0, padding: 0.1, width: 32 }, function (a) {\n    for (\n      var b = this.values(),\n        e = h.max.apply(h, a.max == v ? b : b.concat(a.max)),\n        c = h.min.apply(h, a.min == v ? b : b.concat(a.min)),\n        d = this.prepare(a.width, a.height),\n        l = d.width(),\n        f = d.height(),\n        j = e - c,\n        a = a.padding,\n        k = this.fill(),\n        r = (this.x = function (a) {\n          return (a * l) / b.length\n        }),\n        s = (this.y = function (a) {\n          return f - (j ? ((a - c) / j) * f : 1)\n        }),\n        g = 0;\n      g < b.length;\n      g++\n    ) {\n      var m = r(g + a),\n        u = r(g + 1 - a) - m,\n        i = b[g],\n        p = s(i),\n        n = p,\n        o\n      j ? (0 > i ? (n = s(h.min(e, 0))) : (p = s(h.max(c, 0)))) : (o = 1)\n      o = p - n\n      0 == o && ((o = 1), 0 < e && j && n--)\n      d.append(q('rect', { fill: k.call(this, i, g, b), x: m, y: n, width: u, height: o }))\n    }\n  })\n})(jQuery, document, Math)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/peity/jquery.peity.min.js?");

/***/ }),
/* 26 */,
/* 27 */
/*!********************************************************************!*\
  !*** ./src/public/js/vendor/multiselect/js/jquery.multi-select.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ 1);\n/*\n * MultiSelect v0.9.12\n * Copyright (c) 2012 Louis Cuny\n *\n * This program is free software. It comes without any warranty, to\n * the extent permitted by applicable law. You can redistribute it\n * and/or modify it under the terms of the Do What The Fuck You Want\n * To Public License, Version 2, as published by Sam Hocevar. See\n * http://sam.zoy.org/wtfpl/COPYING for more details.\n */\n\n!(function ($) {\n  'use strict'\n\n  /* MULTISELECT CLASS DEFINITION\n   * ====================== */\n\n  var MultiSelect = function (element, options) {\n    this.options = options\n    this.$element = $(element)\n    this.$container = $('<div/>', { class: 'ms-container' })\n    this.$selectableContainer = $('<div/>', { class: 'ms-selectable' })\n    this.$selectionContainer = $('<div/>', { class: 'ms-selection' })\n    this.$selectableUl = $('<ul/>', { class: 'ms-list', tabindex: '-1' })\n    this.$selectionUl = $('<ul/>', { class: 'ms-list', tabindex: '-1' })\n    this.scrollTo = 0\n    this.elemsSelector = 'li:visible:not(.ms-optgroup-label,.ms-optgroup-container,.' + options.disabledClass + ')'\n  }\n\n  MultiSelect.prototype = {\n    constructor: MultiSelect,\n\n    init: function () {\n      var that = this,\n        ms = this.$element\n\n      if (ms.next('.ms-container').length === 0) {\n        ms.css({ position: 'absolute', left: '-9999px' })\n        ms.attr('id', ms.attr('id') ? ms.attr('id') : Math.ceil(Math.random() * 1000) + 'multiselect')\n        this.$container.attr('id', 'ms-' + ms.attr('id'))\n        this.$container.addClass(that.options.cssClass)\n        ms.find('option').each(function () {\n          that.generateLisFromOption(this)\n        })\n\n        this.$selectionUl.find('.ms-optgroup-label').hide()\n\n        if (that.options.selectableHeader) {\n          that.$selectableContainer.append(that.options.selectableHeader)\n        }\n        that.$selectableContainer.append(that.$selectableUl)\n        if (that.options.selectableFooter) {\n          that.$selectableContainer.append(that.options.selectableFooter)\n        }\n\n        if (that.options.selectionHeader) {\n          that.$selectionContainer.append(that.options.selectionHeader)\n        }\n        that.$selectionContainer.append(that.$selectionUl)\n        if (that.options.selectionFooter) {\n          that.$selectionContainer.append(that.options.selectionFooter)\n        }\n\n        that.$container.append(that.$selectableContainer)\n        that.$container.append(that.$selectionContainer)\n        ms.after(that.$container)\n\n        that.activeMouse(that.$selectableUl)\n        that.activeKeyboard(that.$selectableUl)\n\n        var action = that.options.dblClick ? 'dblclick' : 'click'\n\n        that.$selectableUl.on(action, '.ms-elem-selectable', function () {\n          that.select($(this).data('ms-value'))\n        })\n        that.$selectionUl.on(action, '.ms-elem-selection', function () {\n          that.deselect($(this).data('ms-value'))\n        })\n\n        that.activeMouse(that.$selectionUl)\n        that.activeKeyboard(that.$selectionUl)\n\n        ms.on('focus', function () {\n          that.$selectableUl.focus()\n        })\n      }\n\n      var selectedValues = ms\n        .find('option:selected')\n        .map(function () {\n          return $(this).val()\n        })\n        .get()\n      that.select(selectedValues, 'init')\n\n      if (typeof that.options.afterInit === 'function') {\n        that.options.afterInit.call(this, this.$container)\n      }\n    },\n\n    generateLisFromOption: function (option, index, $container) {\n      var that = this,\n        ms = that.$element,\n        attributes = '',\n        $option = $(option)\n\n      for (var cpt = 0; cpt < option.attributes.length; cpt++) {\n        var attr = option.attributes[cpt]\n\n        if (attr.name !== 'value' && attr.name !== 'disabled') {\n          attributes += attr.name + '=\"' + attr.value + '\" '\n        }\n      }\n      var selectableLi = $('<li ' + attributes + '><span>' + that.escapeHTML($option.text()) + '</span></li>'),\n        selectedLi = selectableLi.clone(),\n        value = $option.val(),\n        elementId = that.sanitize(value)\n\n      selectableLi\n        .data('ms-value', value)\n        .addClass('ms-elem-selectable')\n        .attr('id', elementId + '-selectable')\n\n      selectedLi\n        .data('ms-value', value)\n        .addClass('ms-elem-selection')\n        .attr('id', elementId + '-selection')\n        .hide()\n\n      if ($option.prop('disabled') || ms.prop('disabled')) {\n        selectedLi.addClass(that.options.disabledClass)\n        selectableLi.addClass(that.options.disabledClass)\n      }\n\n      var $optgroup = $option.parent('optgroup')\n\n      if ($optgroup.length > 0) {\n        var optgroupLabel = $optgroup.attr('label'),\n          optgroupId = that.sanitize(optgroupLabel),\n          $selectableOptgroup = that.$selectableUl.find('#optgroup-selectable-' + optgroupId),\n          $selectionOptgroup = that.$selectionUl.find('#optgroup-selection-' + optgroupId)\n\n        if ($selectableOptgroup.length === 0) {\n          var optgroupContainerTpl = '<li class=\"ms-optgroup-container\"></li>',\n            optgroupTpl =\n              '<ul class=\"ms-optgroup\"><li class=\"ms-optgroup-label\"><span>' + optgroupLabel + '</span></li></ul>'\n\n          $selectableOptgroup = $(optgroupContainerTpl)\n          $selectionOptgroup = $(optgroupContainerTpl)\n          $selectableOptgroup.attr('id', 'optgroup-selectable-' + optgroupId)\n          $selectionOptgroup.attr('id', 'optgroup-selection-' + optgroupId)\n          $selectableOptgroup.append($(optgroupTpl))\n          $selectionOptgroup.append($(optgroupTpl))\n          if (that.options.selectableOptgroup) {\n            $selectableOptgroup.find('.ms-optgroup-label').on('click', function () {\n              var values = $optgroup\n                .children(':not(:selected, :disabled)')\n                .map(function () {\n                  return $(this).val()\n                })\n                .get()\n              that.select(values)\n            })\n            $selectionOptgroup.find('.ms-optgroup-label').on('click', function () {\n              var values = $optgroup\n                .children(':selected:not(:disabled)')\n                .map(function () {\n                  return $(this).val()\n                })\n                .get()\n              that.deselect(values)\n            })\n          }\n          that.$selectableUl.append($selectableOptgroup)\n          that.$selectionUl.append($selectionOptgroup)\n        }\n        index = index === undefined ? $selectableOptgroup.find('ul').children().length : index + 1\n        selectableLi.insertAt(index, $selectableOptgroup.children())\n        selectedLi.insertAt(index, $selectionOptgroup.children())\n      } else {\n        index = index === undefined ? that.$selectableUl.children().length : index\n\n        selectableLi.insertAt(index, that.$selectableUl)\n        selectedLi.insertAt(index, that.$selectionUl)\n      }\n    },\n\n    addOption: function (options) {\n      var that = this\n\n      if (options.value !== undefined && options.value !== null) {\n        options = [options]\n      }\n      $.each(options, function (index, option) {\n        if (\n          option.value !== undefined &&\n          option.value !== null &&\n          that.$element.find(\"option[value='\" + option.value + \"']\").length === 0\n        ) {\n          var $option = $('<option value=\"' + option.value + '\">' + option.text + '</option>'),\n            $container = option.nested === undefined ? that.$element : $(\"optgroup[label='\" + option.nested + \"']\"),\n            index = parseInt(typeof option.index === 'undefined' ? $container.children().length : option.index)\n\n          if (option.optionClass) {\n            $option.addClass(option.optionClass)\n          }\n\n          if (option.disabled) {\n            $option.prop('disabled', true)\n          }\n\n          $option.insertAt(index, $container)\n          that.generateLisFromOption($option.get(0), index, option.nested)\n        }\n      })\n    },\n\n    escapeHTML: function (text) {\n      return $('<div>')\n        .text(text)\n        .html()\n    },\n\n    activeKeyboard: function ($list) {\n      var that = this\n\n      $list\n        .on('focus', function () {\n          $(this).addClass('ms-focus')\n        })\n        .on('blur', function () {\n          $(this).removeClass('ms-focus')\n        })\n        .on('keydown', function (e) {\n          switch (e.which) {\n            case 40:\n            case 38:\n              e.preventDefault()\n              e.stopPropagation()\n              that.moveHighlight($(this), e.which === 38 ? -1 : 1)\n              return\n            case 37:\n            case 39:\n              e.preventDefault()\n              e.stopPropagation()\n              that.switchList($list)\n              return\n            case 9:\n              if (that.$element.is('[tabindex]')) {\n                e.preventDefault()\n                var tabindex = parseInt(that.$element.attr('tabindex'), 10)\n                tabindex = e.shiftKey ? tabindex - 1 : tabindex + 1\n                $('[tabindex=\"' + tabindex + '\"]').focus()\n                return\n              } else {\n                if (e.shiftKey) {\n                  that.$element.trigger('focus')\n                }\n              }\n          }\n          if ($.inArray(e.which, that.options.keySelect) > -1) {\n            e.preventDefault()\n            e.stopPropagation()\n            that.selectHighlighted($list)\n            return\n          }\n        })\n    },\n\n    moveHighlight: function ($list, direction) {\n      var $elems = $list.find(this.elemsSelector),\n        $currElem = $elems.filter('.ms-hover'),\n        $nextElem = null,\n        elemHeight = $elems.first().outerHeight(),\n        containerHeight = $list.height(),\n        containerSelector = '#' + this.$container.prop('id')\n\n      $elems.removeClass('ms-hover')\n      if (direction === 1) {\n        // DOWN\n\n        $nextElem = $currElem.nextAll(this.elemsSelector).first()\n        if ($nextElem.length === 0) {\n          var $optgroupUl = $currElem.parent()\n\n          if ($optgroupUl.hasClass('ms-optgroup')) {\n            var $optgroupLi = $optgroupUl.parent(),\n              $nextOptgroupLi = $optgroupLi.next(':visible')\n\n            if ($nextOptgroupLi.length > 0) {\n              $nextElem = $nextOptgroupLi.find(this.elemsSelector).first()\n            } else {\n              $nextElem = $elems.first()\n            }\n          } else {\n            $nextElem = $elems.first()\n          }\n        }\n      } else if (direction === -1) {\n        // UP\n\n        $nextElem = $currElem.prevAll(this.elemsSelector).first()\n        if ($nextElem.length === 0) {\n          var $optgroupUl = $currElem.parent()\n\n          if ($optgroupUl.hasClass('ms-optgroup')) {\n            var $optgroupLi = $optgroupUl.parent(),\n              $prevOptgroupLi = $optgroupLi.prev(':visible')\n\n            if ($prevOptgroupLi.length > 0) {\n              $nextElem = $prevOptgroupLi.find(this.elemsSelector).last()\n            } else {\n              $nextElem = $elems.last()\n            }\n          } else {\n            $nextElem = $elems.last()\n          }\n        }\n      }\n      if ($nextElem.length > 0) {\n        $nextElem.addClass('ms-hover')\n        var scrollTo = $list.scrollTop() + $nextElem.position().top - containerHeight / 2 + elemHeight / 2\n\n        $list.scrollTop(scrollTo)\n      }\n    },\n\n    selectHighlighted: function ($list) {\n      var $elems = $list.find(this.elemsSelector),\n        $highlightedElem = $elems.filter('.ms-hover').first()\n\n      if ($highlightedElem.length > 0) {\n        if ($list.parent().hasClass('ms-selectable')) {\n          this.select($highlightedElem.data('ms-value'))\n        } else {\n          this.deselect($highlightedElem.data('ms-value'))\n        }\n        $elems.removeClass('ms-hover')\n      }\n    },\n\n    switchList: function ($list) {\n      $list.blur()\n      this.$container.find(this.elemsSelector).removeClass('ms-hover')\n      if ($list.parent().hasClass('ms-selectable')) {\n        this.$selectionUl.focus()\n      } else {\n        this.$selectableUl.focus()\n      }\n    },\n\n    activeMouse: function ($list) {\n      var that = this\n\n      this.$container.on('mouseenter', that.elemsSelector, function () {\n        $(this)\n          .parents('.ms-container')\n          .find(that.elemsSelector)\n          .removeClass('ms-hover')\n        $(this).addClass('ms-hover')\n      })\n\n      this.$container.on('mouseleave', that.elemsSelector, function () {\n        $(this)\n          .parents('.ms-container')\n          .find(that.elemsSelector)\n          .removeClass('ms-hover')\n      })\n    },\n\n    refresh: function () {\n      this.destroy()\n      this.$element.multiSelect(this.options)\n    },\n\n    destroy: function () {\n      $('#ms-' + this.$element.attr('id')).remove()\n      this.$element.off('focus')\n      this.$element.css('position', '').css('left', '')\n      this.$element.removeData('multiselect')\n    },\n\n    select: function (value, method) {\n      if (typeof value === 'string') {\n        value = [value]\n      }\n\n      var that = this,\n        ms = this.$element,\n        msIds = $.map(value, function (val) {\n          return that.sanitize(val)\n        }),\n        selectables = this.$selectableUl\n          .find('#' + msIds.join('-selectable, #') + '-selectable')\n          .filter(':not(.' + that.options.disabledClass + ')'),\n        selections = this.$selectionUl\n          .find('#' + msIds.join('-selection, #') + '-selection')\n          .filter(':not(.' + that.options.disabledClass + ')'),\n        options = ms.find('option:not(:disabled)').filter(function () {\n          return $.inArray(this.value, value) > -1\n        })\n\n      if (method === 'init') {\n        ;(selectables = this.$selectableUl.find('#' + msIds.join('-selectable, #') + '-selectable')),\n          (selections = this.$selectionUl.find('#' + msIds.join('-selection, #') + '-selection'))\n      }\n\n      if (selectables.length > 0) {\n        selectables.addClass('ms-selected').hide()\n        selections.addClass('ms-selected').show()\n\n        options.prop('selected', true)\n\n        that.$container.find(that.elemsSelector).removeClass('ms-hover')\n\n        var selectableOptgroups = that.$selectableUl.children('.ms-optgroup-container')\n        if (selectableOptgroups.length > 0) {\n          selectableOptgroups.each(function () {\n            var selectablesLi = $(this).find('.ms-elem-selectable')\n            if (selectablesLi.length === selectablesLi.filter('.ms-selected').length) {\n              $(this)\n                .find('.ms-optgroup-label')\n                .hide()\n            }\n          })\n\n          var selectionOptgroups = that.$selectionUl.children('.ms-optgroup-container')\n          selectionOptgroups.each(function () {\n            var selectionsLi = $(this).find('.ms-elem-selection')\n            if (selectionsLi.filter('.ms-selected').length > 0) {\n              $(this)\n                .find('.ms-optgroup-label')\n                .show()\n            }\n          })\n        } else {\n          if (that.options.keepOrder && method !== 'init') {\n            var selectionLiLast = that.$selectionUl.find('.ms-selected')\n            if (selectionLiLast.length > 1 && selectionLiLast.last().get(0) != selections.get(0)) {\n              selections.insertAfter(selectionLiLast.last())\n            }\n          }\n        }\n        if (method !== 'init') {\n          ms.trigger('change')\n          if (typeof that.options.afterSelect === 'function') {\n            that.options.afterSelect.call(this, value)\n          }\n        }\n      }\n    },\n\n    deselect: function (value) {\n      if (typeof value === 'string') {\n        value = [value]\n      }\n\n      var that = this,\n        ms = this.$element,\n        msIds = $.map(value, function (val) {\n          return that.sanitize(val)\n        }),\n        selectables = this.$selectableUl.find('#' + msIds.join('-selectable, #') + '-selectable'),\n        selections = this.$selectionUl\n          .find('#' + msIds.join('-selection, #') + '-selection')\n          .filter('.ms-selected')\n          .filter(':not(.' + that.options.disabledClass + ')'),\n        options = ms.find('option').filter(function () {\n          return $.inArray(this.value, value) > -1\n        })\n\n      if (selections.length > 0) {\n        selectables.removeClass('ms-selected').show()\n        selections.removeClass('ms-selected').hide()\n        options.prop('selected', false)\n\n        that.$container.find(that.elemsSelector).removeClass('ms-hover')\n\n        var selectableOptgroups = that.$selectableUl.children('.ms-optgroup-container')\n        if (selectableOptgroups.length > 0) {\n          selectableOptgroups.each(function () {\n            var selectablesLi = $(this).find('.ms-elem-selectable')\n            if (selectablesLi.filter(':not(.ms-selected)').length > 0) {\n              $(this)\n                .find('.ms-optgroup-label')\n                .show()\n            }\n          })\n\n          var selectionOptgroups = that.$selectionUl.children('.ms-optgroup-container')\n          selectionOptgroups.each(function () {\n            var selectionsLi = $(this).find('.ms-elem-selection')\n            if (selectionsLi.filter('.ms-selected').length === 0) {\n              $(this)\n                .find('.ms-optgroup-label')\n                .hide()\n            }\n          })\n        }\n        ms.trigger('change')\n        if (typeof that.options.afterDeselect === 'function') {\n          that.options.afterDeselect.call(this, value)\n        }\n      }\n    },\n\n    select_all: function () {\n      var ms = this.$element,\n        values = ms.val()\n\n      ms.find('option:not(\":disabled\")').prop('selected', true)\n      this.$selectableUl\n        .find('.ms-elem-selectable')\n        .filter(':not(.' + this.options.disabledClass + ')')\n        .addClass('ms-selected')\n        .hide()\n      this.$selectionUl.find('.ms-optgroup-label').show()\n      this.$selectableUl.find('.ms-optgroup-label').hide()\n      this.$selectionUl\n        .find('.ms-elem-selection')\n        .filter(':not(.' + this.options.disabledClass + ')')\n        .addClass('ms-selected')\n        .show()\n      this.$selectionUl.focus()\n      ms.trigger('change')\n      if (typeof this.options.afterSelect === 'function') {\n        var selectedValues = $.grep(ms.val(), function (item) {\n          return $.inArray(item, values) < 0\n        })\n        this.options.afterSelect.call(this, selectedValues)\n      }\n    },\n\n    deselect_all: function () {\n      var ms = this.$element,\n        values = ms.val()\n\n      ms.find('option').prop('selected', false)\n      this.$selectableUl\n        .find('.ms-elem-selectable')\n        .removeClass('ms-selected')\n        .show()\n      this.$selectionUl.find('.ms-optgroup-label').hide()\n      this.$selectableUl.find('.ms-optgroup-label').show()\n      this.$selectionUl\n        .find('.ms-elem-selection')\n        .removeClass('ms-selected')\n        .hide()\n      this.$selectableUl.focus()\n      ms.trigger('change')\n      if (typeof this.options.afterDeselect === 'function') {\n        this.options.afterDeselect.call(this, values)\n      }\n    },\n\n    sanitize: function (value) {\n      var hash = 0,\n        i,\n        character\n      if (value.length == 0) return hash\n      var ls = 0\n      for (i = 0, ls = value.length; i < ls; i++) {\n        character = value.charCodeAt(i)\n        hash = (hash << 5) - hash + character\n        hash |= 0 // Convert to 32bit integer\n      }\n      return hash\n    }\n  }\n\n  /* MULTISELECT PLUGIN DEFINITION\n   * ======================= */\n\n  $.fn.multiSelect = function () {\n    var option = arguments[0],\n      args = arguments\n\n    return this.each(function () {\n      var $this = $(this),\n        data = $this.data('multiselect'),\n        options = $.extend({}, $.fn.multiSelect.defaults, $this.data(), typeof option === 'object' && option)\n\n      if (!data) {\n        $this.data('multiselect', (data = new MultiSelect(this, options)))\n      }\n\n      if (typeof option === 'string') {\n        data[option](args[1])\n      } else {\n        data.init()\n      }\n    })\n  }\n\n  $.fn.multiSelect.defaults = {\n    keySelect: [32],\n    selectableOptgroup: false,\n    disabledClass: 'disabled',\n    dblClick: false,\n    keepOrder: false,\n    cssClass: ''\n  }\n\n  $.fn.multiSelect.Constructor = MultiSelect\n\n  $.fn.insertAt = function (index, $parent) {\n    return this.each(function () {\n      if (index === 0) {\n        $parent.prepend(this)\n      } else {\n        $parent\n          .children()\n          .eq(index - 1)\n          .after(this)\n      }\n    })\n  }\n})(__webpack_provided_window_dot_jQuery)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/multiselect/js/jquery.multi-select.js?");

/***/ }),
/* 28 */
/*!************************************************************!*\
  !*** ./src/public/js/vendor/waypoints/jquery.waypoints.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ 1);\n/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n;(function () {\n  'use strict'\n\n  var keyCounter = 0\n  var allWaypoints = {}\n\n  /* http://imakewebthings.com/waypoints/api/waypoint */\n  function Waypoint (options) {\n    if (!options) {\n      throw new Error('No options passed to Waypoint constructor')\n    }\n    if (!options.element) {\n      throw new Error('No element option passed to Waypoint constructor')\n    }\n    if (!options.handler) {\n      throw new Error('No handler option passed to Waypoint constructor')\n    }\n\n    this.key = 'waypoint-' + keyCounter\n    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)\n    this.element = this.options.element\n    this.adapter = new Waypoint.Adapter(this.element)\n    this.callback = options.handler\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\n    this.enabled = this.options.enabled\n    this.triggerPoint = null\n    this.group = Waypoint.Group.findOrCreate({\n      name: this.options.group,\n      axis: this.axis\n    })\n    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)\n\n    if (Waypoint.offsetAliases[this.options.offset]) {\n      this.options.offset = Waypoint.offsetAliases[this.options.offset]\n    }\n    this.group.add(this)\n    this.context.add(this)\n    allWaypoints[this.key] = this\n    keyCounter += 1\n  }\n\n  /* Private */\n  Waypoint.prototype.queueTrigger = function (direction) {\n    this.group.queueTrigger(this, direction)\n  }\n\n  /* Private */\n  Waypoint.prototype.trigger = function (args) {\n    if (!this.enabled) {\n      return\n    }\n    if (this.callback) {\n      this.callback.apply(this, args)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy */\n  Waypoint.prototype.destroy = function () {\n    this.context.remove(this)\n    this.group.remove(this)\n    delete allWaypoints[this.key]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable */\n  Waypoint.prototype.disable = function () {\n    this.enabled = false\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable */\n  Waypoint.prototype.enable = function () {\n    this.context.refresh()\n    this.enabled = true\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/next */\n  Waypoint.prototype.next = function () {\n    return this.group.next(this)\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/previous */\n  Waypoint.prototype.previous = function () {\n    return this.group.previous(this)\n  }\n\n  /* Private */\n  Waypoint.invokeAll = function (method) {\n    var allWaypointsArray = []\n    for (var waypointKey in allWaypoints) {\n      allWaypointsArray.push(allWaypoints[waypointKey])\n    }\n    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {\n      allWaypointsArray[i][method]()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/destroy-all */\n  Waypoint.destroyAll = function () {\n    Waypoint.invokeAll('destroy')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/disable-all */\n  Waypoint.disableAll = function () {\n    Waypoint.invokeAll('disable')\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/enable-all */\n  Waypoint.enableAll = function () {\n    Waypoint.Context.refreshAll()\n    for (var waypointKey in allWaypoints) {\n      allWaypoints[waypointKey].enabled = true\n    }\n    return this\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/refresh-all */\n  Waypoint.refreshAll = function () {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-height */\n  Waypoint.viewportHeight = function () {\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/viewport-width */\n  Waypoint.viewportWidth = function () {\n    return document.documentElement.clientWidth\n  }\n\n  Waypoint.adapters = []\n\n  Waypoint.defaults = {\n    context: window,\n    continuous: true,\n    enabled: true,\n    group: 'default',\n    horizontal: false,\n    offset: 0\n  }\n\n  Waypoint.offsetAliases = {\n    'bottom-in-view': function () {\n      return this.context.innerHeight() - this.adapter.outerHeight()\n    },\n    'right-in-view': function () {\n      return this.context.innerWidth() - this.adapter.outerWidth()\n    }\n  }\n\n  window.Waypoint = Waypoint\n})()\n;(function () {\n  'use strict'\n\n  function requestAnimationFrameShim (callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\n  var keyCounter = 0\n  var contexts = {}\n  var Waypoint = window.Waypoint\n  var oldWindowLoad = window.onload\n\n  /* http://imakewebthings.com/waypoints/api/context */\n  function Context (element) {\n    this.element = element\n    this.Adapter = Waypoint.Adapter\n    this.adapter = new this.Adapter(element)\n    this.key = 'waypoint-context-' + keyCounter\n    this.didScroll = false\n    this.didResize = false\n    this.oldScroll = {\n      x: this.adapter.scrollLeft(),\n      y: this.adapter.scrollTop()\n    }\n    this.waypoints = {\n      vertical: {},\n      horizontal: {}\n    }\n\n    element.waypointContextKey = this.key\n    contexts[element.waypointContextKey] = this\n    keyCounter += 1\n    if (!Waypoint.windowContext) {\n      Waypoint.windowContext = true\n      Waypoint.windowContext = new Context(window)\n    }\n\n    this.createThrottledScrollHandler()\n    this.createThrottledResizeHandler()\n  }\n\n  /* Private */\n  Context.prototype.add = function (waypoint) {\n    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'\n    this.waypoints[axis][waypoint.key] = waypoint\n    this.refresh()\n  }\n\n  /* Private */\n  Context.prototype.checkEmpty = function () {\n    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)\n    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)\n    var isWindow = this.element == this.element.window\n    if (horizontalEmpty && verticalEmpty && !isWindow) {\n      this.adapter.off('.waypoints')\n      delete contexts[this.key]\n    }\n  }\n\n  /* Private */\n  Context.prototype.createThrottledResizeHandler = function () {\n    var self = this\n\n    function resizeHandler () {\n      self.handleResize()\n      self.didResize = false\n    }\n\n    this.adapter.on('resize.waypoints', function () {\n      if (!self.didResize) {\n        self.didResize = true\n        Waypoint.requestAnimationFrame(resizeHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.createThrottledScrollHandler = function () {\n    var self = this\n    function scrollHandler () {\n      self.handleScroll()\n      self.didScroll = false\n    }\n\n    this.adapter.on('scroll.waypoints', function () {\n      if (!self.didScroll || Waypoint.isTouch) {\n        self.didScroll = true\n        Waypoint.requestAnimationFrame(scrollHandler)\n      }\n    })\n  }\n\n  /* Private */\n  Context.prototype.handleResize = function () {\n    Waypoint.Context.refreshAll()\n  }\n\n  /* Private */\n  Context.prototype.handleScroll = function () {\n    var triggeredGroups = {}\n    var axes = {\n      horizontal: {\n        newScroll: this.adapter.scrollLeft(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left'\n      },\n      vertical: {\n        newScroll: this.adapter.scrollTop(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      var isForward = axis.newScroll > axis.oldScroll\n      var direction = isForward ? axis.forward : axis.backward\n\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        if (waypoint.triggerPoint === null) {\n          continue\n        }\n        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint\n        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint\n        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint\n        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint\n        if (crossedForward || crossedBackward) {\n          waypoint.queueTrigger(direction)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    for (var groupKey in triggeredGroups) {\n      triggeredGroups[groupKey].flushTriggers()\n    }\n\n    this.oldScroll = {\n      x: axes.horizontal.newScroll,\n      y: axes.vertical.newScroll\n    }\n  }\n\n  /* Private */\n  Context.prototype.innerHeight = function () {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportHeight()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerHeight()\n  }\n\n  /* Private */\n  Context.prototype.remove = function (waypoint) {\n    delete this.waypoints[waypoint.axis][waypoint.key]\n    this.checkEmpty()\n  }\n\n  /* Private */\n  Context.prototype.innerWidth = function () {\n    /*eslint-disable eqeqeq */\n    if (this.element == this.element.window) {\n      return Waypoint.viewportWidth()\n    }\n    /*eslint-enable eqeqeq */\n    return this.adapter.innerWidth()\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-destroy */\n  Context.prototype.destroy = function () {\n    var allWaypoints = []\n    for (var axis in this.waypoints) {\n      for (var waypointKey in this.waypoints[axis]) {\n        allWaypoints.push(this.waypoints[axis][waypointKey])\n      }\n    }\n    for (var i = 0, end = allWaypoints.length; i < end; i++) {\n      allWaypoints[i].destroy()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-refresh */\n  Context.prototype.refresh = function () {\n    /*eslint-disable eqeqeq */\n    var isWindow = this.element == this.element.window\n    /*eslint-enable eqeqeq */\n    var contextOffset = isWindow ? undefined : this.adapter.offset()\n    var triggeredGroups = {}\n    var axes\n\n    this.handleScroll()\n    axes = {\n      horizontal: {\n        contextOffset: isWindow ? 0 : contextOffset.left,\n        contextScroll: isWindow ? 0 : this.oldScroll.x,\n        contextDimension: this.innerWidth(),\n        oldScroll: this.oldScroll.x,\n        forward: 'right',\n        backward: 'left',\n        offsetProp: 'left'\n      },\n      vertical: {\n        contextOffset: isWindow ? 0 : contextOffset.top,\n        contextScroll: isWindow ? 0 : this.oldScroll.y,\n        contextDimension: this.innerHeight(),\n        oldScroll: this.oldScroll.y,\n        forward: 'down',\n        backward: 'up',\n        offsetProp: 'top'\n      }\n    }\n\n    for (var axisKey in axes) {\n      var axis = axes[axisKey]\n      for (var waypointKey in this.waypoints[axisKey]) {\n        var waypoint = this.waypoints[axisKey][waypointKey]\n        var adjustment = waypoint.options.offset\n        var oldTriggerPoint = waypoint.triggerPoint\n        var elementOffset = 0\n        var freshWaypoint = oldTriggerPoint == null\n        var contextModifier, wasBeforeScroll, nowAfterScroll\n        var triggeredBackward, triggeredForward\n\n        if (waypoint.element !== waypoint.element.window) {\n          elementOffset = waypoint.adapter.offset()[axis.offsetProp]\n        }\n\n        if (typeof adjustment === 'function') {\n          adjustment = adjustment.apply(waypoint)\n        } else if (typeof adjustment === 'string') {\n          adjustment = parseFloat(adjustment)\n          if (waypoint.options.offset.indexOf('%') > -1) {\n            adjustment = Math.ceil((axis.contextDimension * adjustment) / 100)\n          }\n        }\n\n        contextModifier = axis.contextScroll - axis.contextOffset\n        waypoint.triggerPoint = Math.floor(elementOffset + contextModifier - adjustment)\n        wasBeforeScroll = oldTriggerPoint < axis.oldScroll\n        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll\n        triggeredBackward = wasBeforeScroll && nowAfterScroll\n        triggeredForward = !wasBeforeScroll && !nowAfterScroll\n\n        if (!freshWaypoint && triggeredBackward) {\n          waypoint.queueTrigger(axis.backward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        } else if (!freshWaypoint && triggeredForward) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        } else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {\n          waypoint.queueTrigger(axis.forward)\n          triggeredGroups[waypoint.group.id] = waypoint.group\n        }\n      }\n    }\n\n    Waypoint.requestAnimationFrame(function () {\n      for (var groupKey in triggeredGroups) {\n        triggeredGroups[groupKey].flushTriggers()\n      }\n    })\n\n    return this\n  }\n\n  /* Private */\n  Context.findOrCreateByElement = function (element) {\n    return Context.findByElement(element) || new Context(element)\n  }\n\n  /* Private */\n  Context.refreshAll = function () {\n    for (var contextId in contexts) {\n      contexts[contextId].refresh()\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/context-find-by-element */\n  Context.findByElement = function (element) {\n    return contexts[element.waypointContextKey]\n  }\n\n  window.onload = function () {\n    if (oldWindowLoad) {\n      oldWindowLoad()\n    }\n    Context.refreshAll()\n  }\n\n  Waypoint.requestAnimationFrame = function (callback) {\n    var requestFn =\n      window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      requestAnimationFrameShim\n    requestFn.call(window, callback)\n  }\n  Waypoint.Context = Context\n})()\n;(function () {\n  'use strict'\n\n  function byTriggerPoint (a, b) {\n    return a.triggerPoint - b.triggerPoint\n  }\n\n  function byReverseTriggerPoint (a, b) {\n    return b.triggerPoint - a.triggerPoint\n  }\n\n  var groups = {\n    vertical: {},\n    horizontal: {}\n  }\n  var Waypoint = window.Waypoint\n\n  /* http://imakewebthings.com/waypoints/api/group */\n  function Group (options) {\n    this.name = options.name\n    this.axis = options.axis\n    this.id = this.name + '-' + this.axis\n    this.waypoints = []\n    this.clearTriggerQueues()\n    groups[this.axis][this.name] = this\n  }\n\n  /* Private */\n  Group.prototype.add = function (waypoint) {\n    this.waypoints.push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.clearTriggerQueues = function () {\n    this.triggerQueues = {\n      up: [],\n      down: [],\n      left: [],\n      right: []\n    }\n  }\n\n  /* Private */\n  Group.prototype.flushTriggers = function () {\n    for (var direction in this.triggerQueues) {\n      var waypoints = this.triggerQueues[direction]\n      var reverse = direction === 'up' || direction === 'left'\n      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)\n      for (var i = 0, end = waypoints.length; i < end; i += 1) {\n        var waypoint = waypoints[i]\n        if (waypoint.options.continuous || i === waypoints.length - 1) {\n          waypoint.trigger([direction])\n        }\n      }\n    }\n    this.clearTriggerQueues()\n  }\n\n  /* Private */\n  Group.prototype.next = function (waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    var isLast = index === this.waypoints.length - 1\n    return isLast ? null : this.waypoints[index + 1]\n  }\n\n  /* Private */\n  Group.prototype.previous = function (waypoint) {\n    this.waypoints.sort(byTriggerPoint)\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    return index ? this.waypoints[index - 1] : null\n  }\n\n  /* Private */\n  Group.prototype.queueTrigger = function (waypoint, direction) {\n    this.triggerQueues[direction].push(waypoint)\n  }\n\n  /* Private */\n  Group.prototype.remove = function (waypoint) {\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\n    if (index > -1) {\n      this.waypoints.splice(index, 1)\n    }\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/first */\n  Group.prototype.first = function () {\n    return this.waypoints[0]\n  }\n\n  /* Public */\n  /* http://imakewebthings.com/waypoints/api/last */\n  Group.prototype.last = function () {\n    return this.waypoints[this.waypoints.length - 1]\n  }\n\n  /* Private */\n  Group.findOrCreate = function (options) {\n    return groups[options.axis][options.name] || new Group(options)\n  }\n\n  Waypoint.Group = Group\n})()\n;(function () {\n  'use strict'\n\n  var $ = __webpack_provided_window_dot_jQuery\n  var Waypoint = window.Waypoint\n\n  function JQueryAdapter (element) {\n    this.$element = $(element)\n  }\n\n  $.each(\n    ['innerHeight', 'innerWidth', 'off', 'offset', 'on', 'outerHeight', 'outerWidth', 'scrollLeft', 'scrollTop'],\n    function (i, method) {\n      JQueryAdapter.prototype[method] = function () {\n        var args = Array.prototype.slice.call(arguments)\n        return this.$element[method].apply(this.$element, args)\n      }\n    }\n  )\n\n  $.each(['extend', 'inArray', 'isEmptyObject'], function (i, method) {\n    JQueryAdapter[method] = $[method]\n  })\n\n  Waypoint.adapters.push({\n    name: 'jquery',\n    Adapter: JQueryAdapter\n  })\n  Waypoint.Adapter = JQueryAdapter\n})()\n;(function () {\n  'use strict'\n\n  var Waypoint = window.Waypoint\n\n  function createExtension (framework) {\n    return function () {\n      var waypoints = []\n      var overrides = arguments[0]\n\n      if (framework.isFunction(arguments[0])) {\n        overrides = framework.extend({}, arguments[1])\n        overrides.handler = arguments[0]\n      }\n\n      this.each(function () {\n        var options = framework.extend({}, overrides, {\n          element: this\n        })\n        if (typeof options.context === 'string') {\n          options.context = framework(this).closest(options.context)[0]\n        }\n        waypoints.push(new Waypoint(options))\n      })\n\n      return waypoints\n    }\n  }\n\n  if (__webpack_provided_window_dot_jQuery) {\n    __webpack_provided_window_dot_jQuery.fn.waypoint = createExtension(__webpack_provided_window_dot_jQuery)\n  }\n  if (window.Zepto) {\n    window.Zepto.fn.waypoint = createExtension(window.Zepto)\n  }\n})()\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/waypoints/jquery.waypoints.js?");

/***/ }),
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */
/*!****************************************************************!*\
  !*** ./src/public/js/vendor/datatables/dataTables.scroller.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n Scroller 1.2.2\n Â©2011-2014 SpryMedia Ltd - datatables.net/license\n */\n;(function (m, n, k) {\n  var l = function (e) {\n    var g = function (a, b) {\n      !this instanceof g\n        ? alert(\"Scroller warning: Scroller must be initialised with the 'new' keyword.\")\n        : ('undefined' == typeof b && (b = {}),\n          (this.s = {\n            dt: a,\n            tableTop: 0,\n            tableBottom: 0,\n            redrawTop: 0,\n            redrawBottom: 0,\n            autoHeight: !0,\n            viewportRows: 0,\n            stateTO: null,\n            drawTO: null,\n            heights: { jump: null, page: null, virtual: null, scroll: null, row: null, viewport: null },\n            topRowFloat: 0,\n            scrollDrawDiff: null,\n            loaderVisible: !1\n          }),\n          (this.s = e.extend(this.s, g.oDefaults, b)),\n          (this.s.heights.row = this.s.rowHeight),\n          (this.dom = { force: n.createElement('div'), scroller: null, table: null, loader: null }),\n          (this.s.dt.oScroller = this),\n          this._fnConstruct())\n    }\n    g.prototype = {\n      fnRowToPixels: function (a, b, c) {\n        a = c\n          ? this._domain('virtualToPhysical', a * this.s.heights.row)\n          : this.s.baseScrollTop + (a - this.s.baseRowTop) * this.s.heights.row\n        return b || b === k ? parseInt(a, 10) : a\n      },\n      fnPixelsToRow: function (a, b, c) {\n        var d = a - this.s.baseScrollTop,\n          a = c ? this._domain('physicalToVirtual', a) / this.s.heights.row : d / this.s.heights.row + this.s.baseRowTop\n        return b || b === k ? parseInt(a, 10) : a\n      },\n      fnScrollToRow: function (a, b) {\n        var c = this,\n          d = !1,\n          f = this.fnRowToPixels(a),\n          h = a - ((this.s.displayBuffer - 1) / 2) * this.s.viewportRows\n        0 > h && (h = 0)\n        if ((f > this.s.redrawBottom || f < this.s.redrawTop) && this.s.dt._iDisplayStart !== h)\n          (d = !0), (f = this.fnRowToPixels(a, !1, !0))\n        'undefined' == typeof b || b\n          ? ((this.s.ani = d),\n            e(this.dom.scroller).animate({ scrollTop: f }, function () {\n              setTimeout(function () {\n                c.s.ani = !1\n              }, 25)\n            }))\n          : e(this.dom.scroller).scrollTop(f)\n      },\n      fnMeasure: function (a) {\n        this.s.autoHeight && this._fnCalcRowHeight()\n        var b = this.s.heights\n        b.viewport = e(this.dom.scroller).height()\n        this.s.viewportRows = parseInt(b.viewport / b.row, 10) + 1\n        this.s.dt._iDisplayLength = this.s.viewportRows * this.s.displayBuffer\n        ;(a === k || a) && this.s.dt.oInstance.fnDraw()\n      },\n      _fnConstruct: function () {\n        var a = this\n        if (this.s.dt.oFeatures.bPaginate) {\n          this.dom.force.style.position = 'absolute'\n          this.dom.force.style.top = '0px'\n          this.dom.force.style.left = '0px'\n          this.dom.force.style.width = '1px'\n          this.dom.scroller = e('div.' + this.s.dt.oClasses.sScrollBody, this.s.dt.nTableWrapper)[0]\n          this.dom.scroller.appendChild(this.dom.force)\n          this.dom.scroller.style.position = 'relative'\n          this.dom.table = e('>table', this.dom.scroller)[0]\n          this.dom.table.style.position = 'absolute'\n          this.dom.table.style.top = '0px'\n          this.dom.table.style.left = '0px'\n          e(this.s.dt.nTableWrapper).addClass('DTS')\n          this.s.loadingIndicator &&\n            ((this.dom.loader = e('<div class=\"DTS_Loading\">' + this.s.dt.oLanguage.sLoadingRecords + '</div>').css(\n              'display',\n              'none'\n            )),\n            e(this.dom.scroller.parentNode)\n              .css('position', 'relative')\n              .append(this.dom.loader))\n          this.s.heights.row && 'auto' != this.s.heights.row && (this.s.autoHeight = !1)\n          this.fnMeasure(!1)\n          this.s.ingnoreScroll = !0\n          this.s.stateSaveThrottle = this.s.dt.oApi._fnThrottle(function () {\n            a.s.dt.oApi._fnSaveState(a.s.dt)\n          }, 500)\n          e(this.dom.scroller).on('scroll.DTS', function () {\n            a._fnScroll.call(a)\n          })\n          e(this.dom.scroller).on('touchstart.DTS', function () {\n            a._fnScroll.call(a)\n          })\n          this.s.dt.aoDrawCallback.push({\n            fn: function () {\n              a.s.dt.bInitialised && a._fnDrawCallback.call(a)\n            },\n            sName: 'Scroller'\n          })\n          e(m).on('resize.DTS', function () {\n            a.fnMeasure(false)\n            a._fnInfo()\n          })\n          var b = !0\n          this.s.dt.oApi._fnCallbackReg(\n            this.s.dt,\n            'aoStateSaveParams',\n            function (c, d) {\n              if (b && a.s.dt.oLoadedState) {\n                d.iScroller = a.s.dt.oLoadedState.iScroller\n                d.iScrollerTopRow = a.s.dt.oLoadedState.iScrollerTopRow\n                b = false\n              } else {\n                d.iScroller = a.dom.scroller.scrollTop\n                d.iScrollerTopRow = a.s.topRowFloat\n              }\n            },\n            'Scroller_State'\n          )\n          this.s.dt.oLoadedState && (this.s.topRowFloat = this.s.dt.oLoadedState.iScrollerTopRow || 0)\n          this.s.dt.aoDestroyCallback.push({\n            sName: 'Scroller',\n            fn: function () {\n              e(m).off('resize.DTS')\n              e(a.dom.scroller).off('touchstart.DTS scroll.DTS')\n              e(a.s.dt.nTableWrapper).removeClass('DTS')\n              e('div.DTS_Loading', a.dom.scroller.parentNode).remove()\n              a.dom.table.style.position = ''\n              a.dom.table.style.top = ''\n              a.dom.table.style.left = ''\n            }\n          })\n        } else this.s.dt.oApi._fnLog(this.s.dt, 0, 'Pagination must be enabled for Scroller')\n      },\n      _fnScroll: function () {\n        var a = this,\n          b = this.s.heights,\n          c = this.dom.scroller.scrollTop,\n          d\n        if (!this.s.skip && !this.s.ingnoreScroll)\n          if (this.s.dt.bFiltered || this.s.dt.bSorted) this.s.lastScrollTop = 0\n          else {\n            this._fnInfo()\n            clearTimeout(this.s.stateTO)\n            this.s.stateTO = setTimeout(function () {\n              a.s.dt.oApi._fnSaveState(a.s.dt)\n            }, 250)\n            if (c < this.s.redrawTop || c > this.s.redrawBottom) {\n              var f = Math.ceil(((this.s.displayBuffer - 1) / 2) * this.s.viewportRows)\n              Math.abs(c - this.s.lastScrollTop) > b.viewport || this.s.ani\n                ? ((d = parseInt(this._domain('physicalToVirtual', c) / b.row, 10) - f),\n                  (this.s.topRowFloat = this._domain('physicalToVirtual', c) / b.row))\n                : ((d = this.fnPixelsToRow(c) - f), (this.s.topRowFloat = this.fnPixelsToRow(c, !1)))\n              0 >= d\n                ? (d = 0)\n                : d + this.s.dt._iDisplayLength > this.s.dt.fnRecordsDisplay()\n                ? ((d = this.s.dt.fnRecordsDisplay() - this.s.dt._iDisplayLength), 0 > d && (d = 0))\n                : 0 !== d % 2 && d++\n              if (\n                d != this.s.dt._iDisplayStart &&\n                ((this.s.tableTop = e(this.s.dt.nTable).offset().top),\n                (this.s.tableBottom = e(this.s.dt.nTable).height() + this.s.tableTop),\n                (b = function () {\n                  if (a.s.scrollDrawReq === null) a.s.scrollDrawReq = c\n                  a.s.dt._iDisplayStart = d\n                  a.s.dt.oApi._fnCalculateEnd && a.s.dt.oApi._fnCalculateEnd(a.s.dt)\n                  a.s.dt.oApi._fnDraw(a.s.dt)\n                }),\n                this.s.dt.oFeatures.bServerSide\n                  ? (clearTimeout(this.s.drawTO), (this.s.drawTO = setTimeout(b, this.s.serverWait)))\n                  : b(),\n                this.dom.loader && !this.s.loaderVisible)\n              )\n                this.dom.loader.css('display', 'block'), (this.s.loaderVisible = !0)\n            }\n            this.s.lastScrollTop = c\n            this.s.stateSaveThrottle()\n          }\n      },\n      _domain: function (a, b) {\n        var c = this.s.heights,\n          d\n        if (c.virtual === c.scroll) {\n          d = (c.virtual - c.viewport) / (c.scroll - c.viewport)\n          if ('virtualToPhysical' === a) return b / d\n          if ('physicalToVirtual' === a) return b * d\n        }\n        var e = (c.scroll - c.viewport) / 2,\n          h = (c.virtual - c.viewport) / 2\n        d = h / (e * e)\n        if ('virtualToPhysical' === a) {\n          if (b < h) return Math.pow(b / d, 0.5)\n          b = 2 * h - b\n          return 0 > b ? c.scroll : 2 * e - Math.pow(b / d, 0.5)\n        }\n        if ('physicalToVirtual' === a) {\n          if (b < e) return b * b * d\n          b = 2 * e - b\n          return 0 > b ? c.virtual : 2 * h - b * b * d\n        }\n      },\n      _fnDrawCallback: function () {\n        var a = this,\n          b = this.s.heights,\n          c = this.dom.scroller.scrollTop,\n          d = e(this.s.dt.nTable).height(),\n          f = this.s.dt._iDisplayStart,\n          h = this.s.dt._iDisplayLength,\n          g = this.s.dt.fnRecordsDisplay()\n        this.s.skip = !0\n        this._fnScrollForce()\n        c =\n          0 === f\n            ? this.s.topRowFloat * b.row\n            : f + h >= g\n            ? b.scroll - (g - this.s.topRowFloat) * b.row\n            : this._domain('virtualToPhysical', this.s.topRowFloat * b.row)\n        this.dom.scroller.scrollTop = c\n        this.s.baseScrollTop = c\n        this.s.baseRowTop = this.s.topRowFloat\n        var j = c - (this.s.topRowFloat - f) * b.row\n        0 === f ? (j = 0) : f + h >= g && (j = b.scroll - d)\n        this.dom.table.style.top = j + 'px'\n        this.s.tableTop = j\n        this.s.tableBottom = d + this.s.tableTop\n        d = (c - this.s.tableTop) * this.s.boundaryScale\n        this.s.redrawTop = c - d\n        this.s.redrawBottom = c + d\n        this.s.skip = !1\n        this.s.dt.oFeatures.bStateSave &&\n        null !== this.s.dt.oLoadedState &&\n        'undefined' != typeof this.s.dt.oLoadedState.iScroller\n          ? (((c = (this.s.dt.sAjaxSource || a.s.dt.ajax) && !this.s.dt.oFeatures.bServerSide ? !0 : !1) &&\n              2 == this.s.dt.iDraw) ||\n              (!c && 1 == this.s.dt.iDraw)) &&\n            setTimeout(function () {\n              e(a.dom.scroller).scrollTop(a.s.dt.oLoadedState.iScroller)\n              a.s.redrawTop = a.s.dt.oLoadedState.iScroller - b.viewport / 2\n              setTimeout(function () {\n                a.s.ingnoreScroll = !1\n              }, 0)\n            }, 0)\n          : (a.s.ingnoreScroll = !1)\n        setTimeout(function () {\n          a._fnInfo.call(a)\n        }, 0)\n        this.dom.loader && this.s.loaderVisible && (this.dom.loader.css('display', 'none'), (this.s.loaderVisible = !1))\n      },\n      _fnScrollForce: function () {\n        var a = this.s.heights\n        a.virtual = a.row * this.s.dt.fnRecordsDisplay()\n        a.scroll = a.virtual\n        1e6 < a.scroll && (a.scroll = 1e6)\n        this.dom.force.style.height = a.scroll + 'px'\n      },\n      _fnCalcRowHeight: function () {\n        var a = this.s.dt,\n          b = a.nTable,\n          c = b.cloneNode(!1),\n          d = e('<tbody/>').appendTo(c),\n          f = e(\n            '<div class=\"' +\n              a.oClasses.sWrapper +\n              ' DTS\"><div class=\"' +\n              a.oClasses.sScrollWrapper +\n              '\"><div class=\"' +\n              a.oClasses.sScrollBody +\n              '\"></div></div></div>'\n          )\n        for (\n          e('tbody tr:lt(4)', b)\n            .clone()\n            .appendTo(d);\n          3 > e('tr', d).length;\n\n        )\n          d.append('<tr><td>&nbsp;</td></tr>')\n        e('div.' + a.oClasses.sScrollBody, f).append(c)\n        a._bInitComplete\n          ? (a = b.parentNode)\n          : (this.s.dt.nHolding || (this.s.dt.nHolding = e('<div></div>').insertBefore(this.s.dt.nTable)),\n            (a = this.s.dt.nHolding))\n        f.appendTo(a)\n        this.s.heights.row = e('tr', d)\n          .eq(1)\n          .outerHeight()\n        f.remove()\n      },\n      _fnInfo: function () {\n        if (this.s.dt.oFeatures.bInfo) {\n          var a = this.s.dt,\n            b = a.oLanguage,\n            c = this.dom.scroller.scrollTop,\n            d = Math.floor(this.fnPixelsToRow(c, !1, this.s.ani) + 1),\n            f = a.fnRecordsTotal(),\n            h = a.fnRecordsDisplay(),\n            c = Math.ceil(this.fnPixelsToRow(c + this.s.heights.viewport, !1, this.s.ani)),\n            c = h < c ? h : c,\n            g = a.fnFormatNumber(d),\n            j = a.fnFormatNumber(c),\n            i = a.fnFormatNumber(f),\n            k = a.fnFormatNumber(h),\n            g =\n              0 === a.fnRecordsDisplay() && a.fnRecordsDisplay() == a.fnRecordsTotal()\n                ? b.sInfoEmpty + b.sInfoPostFix\n                : 0 === a.fnRecordsDisplay()\n                ? b.sInfoEmpty + ' ' + b.sInfoFiltered.replace('_MAX_', i) + b.sInfoPostFix\n                : a.fnRecordsDisplay() == a.fnRecordsTotal()\n                ? b.sInfo\n                    .replace('_START_', g)\n                    .replace('_END_', j)\n                    .replace('_MAX_', i)\n                    .replace('_TOTAL_', k) + b.sInfoPostFix\n                : b.sInfo\n                    .replace('_START_', g)\n                    .replace('_END_', j)\n                    .replace('_MAX_', i)\n                    .replace('_TOTAL_', k) +\n                  ' ' +\n                  b.sInfoFiltered.replace('_MAX_', a.fnFormatNumber(a.fnRecordsTotal())) +\n                  b.sInfoPostFix\n          ;(b = b.fnInfoCallback) && (g = b.call(a.oInstance, a, d, c, f, h, g))\n          a = a.aanFeatures.i\n          if ('undefined' != typeof a) {\n            d = 0\n            for (f = a.length; d < f; d++) e(a[d]).html(g)\n          }\n        }\n      }\n    }\n    g.defaults = {\n      trace: !1,\n      rowHeight: 'auto',\n      serverWait: 200,\n      displayBuffer: 9,\n      boundaryScale: 0.5,\n      loadingIndicator: !1\n    }\n    g.oDefaults = g.defaults\n    g.version = '1.2.2'\n    'function' == typeof e.fn.dataTable &&\n    'function' == typeof e.fn.dataTableExt.fnVersionCheck &&\n    e.fn.dataTableExt.fnVersionCheck('1.9.0')\n      ? e.fn.dataTableExt.aoFeatures.push({\n          fnInit: function (a) {\n            var b = a.oInit\n            return new g(a, b.scroller || b.oScroller || {}).dom.wrapper\n          },\n          cFeature: 'S',\n          sFeature: 'Scroller'\n        })\n      : alert('Warning: Scroller requires DataTables 1.9.0 or greater - www.datatables.net/download')\n    e.fn.dataTable.Scroller = g\n    e.fn.DataTable.Scroller = g\n    if (e.fn.dataTable.Api) {\n      var i = e.fn.dataTable.Api\n      i.register('scroller()', function () {\n        return this\n      })\n      i.register('scroller().rowToPixels()', function (a, b, c) {\n        var d = this.context\n        if (d.length && d[0].oScroller) return d[0].oScroller.fnRowToPixels(a, b, c)\n      })\n      i.register('scroller().pixelsToRow()', function (a, b, c) {\n        var d = this.context\n        if (d.length && d[0].oScroller) return d[0].oScroller.fnPixelsToRow(a, b, c)\n      })\n      i.register('scroller().scrollToRow()', function (a, b) {\n        this.iterator('table', function (c) {\n          c.oScroller && c.oScroller.fnScrollToRow(a, b)\n        })\n        return this\n      })\n      i.register('scroller().measure()', function (a) {\n        this.iterator('table', function (b) {\n          b.oScroller && b.oScroller.fnMeasure(a)\n        })\n        return this\n      })\n    }\n    return g\n  }\n   true\n    ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 1), __webpack_require__(/*! datatables */ 4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (l),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    : 0\n})(window, document)\n\n\n//# sourceURL=webpack://trudesk/./src/public/js/vendor/datatables/dataTables.scroller.js?");

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__(22);
/******/ 	
/******/ })()
;