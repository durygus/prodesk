#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Herzen Core –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./update-server.sh [server_user@server_ip] [deploy_path]

# set -e  # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö SSH

# –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
LOCKFILE="/tmp/update-server-$$.lock"
if ! mkdir "$LOCKFILE" 2>/dev/null; then
    echo "‚ùå –°–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω! –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ $LOCKFILE"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
trap 'rm -rf "$LOCKFILE"' EXIT

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SERVER=${1:-"user@your-server.com"}
DEPLOY_PATH=${2:-"/opt/herzen/core"}

echo -e "${GREEN}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Herzen Core –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ${NC}"
echo -e "${YELLOW}–°–µ—Ä–≤–µ—Ä: $SERVER${NC}"
echo -e "${YELLOW}–ü—É—Ç—å: $DEPLOY_PATH${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${YELLOW}üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...${NC}"
ssh -o ConnectTimeout=10 $SERVER "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'"

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏ –æ—á–∏—â–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
if ! ssh -o ConnectTimeout=15 $SERVER "cd $DEPLOY_PATH && docker-compose -f docker-compose.prod.yml down 2>/dev/null || true"; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã${NC}"
fi

echo -e "${BLUE}üßπ –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...${NC}"
if ! ssh -o ConnectTimeout=15 $SERVER "pkill -f 'docker-compose.*build.*herzen-core' 2>/dev/null || true"; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã${NC}"
fi

# –û—á–∏—â–∞–µ–º MongoDB –¥–∞–Ω–Ω—ã–µ
echo -e "${BLUE}üóÑÔ∏è –û—á–∏—â–∞–µ–º MongoDB –¥–∞–Ω–Ω—ã–µ...${NC}"
if ! ssh -o ConnectTimeout=15 $SERVER "cd $DEPLOY_PATH && docker run --rm -v \$(pwd)/data/mongo:/data alpine sh -c 'rm -rf /data/* /data/.* 2>/dev/null || true' 2>/dev/null || true"; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å MongoDB –¥–∞–Ω–Ω—ã–µ${NC}"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
echo -e "${BLUE}üì• –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥...${NC}"
ssh -o ConnectTimeout=30 $SERVER "
  cd $DEPLOY_PATH
  CURRENT_BRANCH=\$(git branch --show-current)
  echo \"–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: \$CURRENT_BRANCH\"
  git reset --hard HEAD 2>/dev/null || true
  git clean -fd 2>/dev/null || true
  echo 'data/mongo/' >> .gitignore 2>/dev/null || true
  git rm -r --cached data/mongo/ 2>/dev/null || true
  git fetch origin
  git reset --hard origin/\$CURRENT_BRANCH
  echo '–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'
"

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –∏ –æ—á–∏—â–∞–µ–º –∫—ç—à
echo -e "${BLUE}üíæ –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ...${NC}"
ssh -o BatchMode=yes -o ConnectTimeout=15 $SERVER "cd $DEPLOY_PATH && df -h / | tail -1"

echo -e "${BLUE}üßπ –û—á–∏—â–∞–µ–º Docker –∫—ç—à...${NC}"
ssh -o ConnectTimeout=30 $SERVER "cd $DEPLOY_PATH && docker system prune -f 2>/dev/null || true && docker volume prune -f 2>/dev/null || true"

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
echo -e "${BLUE}üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã...${NC}"
ssh -o ConnectTimeout=300 $SERVER "cd $DEPLOY_PATH && docker-compose -f docker-compose.prod.yml build --no-cache herzen-core"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${NC}"
ssh -o ConnectTimeout=60 $SERVER "cd $DEPLOY_PATH && docker-compose -f docker-compose.prod.yml up -d --remove-orphans"

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${YELLOW}‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (15 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
ssh -o ConnectTimeout=10 $SERVER "cd $DEPLOY_PATH && docker-compose -f docker-compose.prod.yml ps"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞
echo -e "${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞...${NC}"
ssh -o ConnectTimeout=10 $SERVER "cd $DEPLOY_PATH && git log --oneline -3"

echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${BLUE}üåê Web UI: http://$(echo $SERVER | cut -d'@' -f2)${NC}"
