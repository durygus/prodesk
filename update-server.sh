#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Herzen Core –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./update-server.sh [server_user@server_ip] [deploy_path]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SERVER=${1:-"user@your-server.com"}
DEPLOY_PATH=${2:-"/opt/herzen/core"}

echo -e "${GREEN}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Herzen Core –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ${NC}"
echo -e "${YELLOW}–°–µ—Ä–≤–µ—Ä: $SERVER${NC}"
echo -e "${YELLOW}–ü—É—Ç—å: $DEPLOY_PATH${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${YELLOW}üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...${NC}"
ssh -o ConnectTimeout=10 $SERVER "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'"

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
ssh $SERVER "
  cd $DEPLOY_PATH
  
  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
  CURRENT_BRANCH=\$(git branch --show-current)
  echo \"–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: \$CURRENT_BRANCH\"
  
  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  echo '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...'
  docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
  
  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º MongoDB –ø–∞–ø–∫—É —á–µ—Ä–µ–∑ Docker (–∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∞–≤–∞–º–∏)
  echo '–û—á–∏—â–∞–µ–º MongoDB –ø–∞–ø–∫—É —á–µ—Ä–µ–∑ Docker...'
  docker run --rm -v \$(pwd)/data/mongo:/data alpine sh -c 'rm -rf /data/* /data/.* 2>/dev/null || true' 2>/dev/null || true
  
  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  echo '–°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è...'
  git reset --hard HEAD 2>/dev/null || true
  git clean -fd 2>/dev/null || true
  
  # –ò—Å–∫–ª—é—á–∞–µ–º MongoDB –¥–∞–Ω–Ω—ã–µ –∏–∑ git (–æ–Ω–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ)
  echo '–ò—Å–∫–ª—é—á–∞–µ–º MongoDB –¥–∞–Ω–Ω—ã–µ –∏–∑ git...'
  echo 'data/mongo/' >> .gitignore 2>/dev/null || true
  git rm -r --cached data/mongo/ 2>/dev/null || true
  
  # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  echo '–ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...'
  git fetch origin
  git reset --hard origin/\$CURRENT_BRANCH
  
  echo '–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'
"

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
ssh $SERVER "
  cd $DEPLOY_PATH
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
  echo '–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ...'
  df -h / | tail -1
  
  # –û—á–∏—â–∞–µ–º Docker –∫—ç—à –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –º–µ—Å—Ç–∞
  echo '–û—á–∏—â–∞–µ–º Docker –∫—ç—à...'
  docker system prune -f 2>/dev/null || true
  docker volume prune -f 2>/dev/null || true
  
  # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
  echo '–ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã...'
  docker-compose -f docker-compose.prod.yml build --no-cache herzen-core
  
  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
  echo '–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...'
  timeout 60 docker-compose -f docker-compose.prod.yml up -d || echo '–¢–∞–π–º–∞—É—Ç –∑–∞–ø—É—Å–∫–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...'
  
  echo '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã'
"

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${YELLOW}‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (15 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
ssh $SERVER "cd $DEPLOY_PATH && docker-compose -f docker-compose.prod.yml ps"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞
echo -e "${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞...${NC}"
ssh $SERVER "cd $DEPLOY_PATH && git log --oneline -3"

echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${BLUE}üåê Web UI: http://$(echo $SERVER | cut -d'@' -f2)${NC}"
